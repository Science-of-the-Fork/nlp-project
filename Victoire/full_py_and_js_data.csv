,Unnamed: 0,repo_name,url,language,readme_content
0,0,jackfrued/Python-100-Days,https://github.com/jackfrued/Python-100-Days/blob/master/README.md,Python,"Python - 100天从新手到大师作者：骆昊说明：从项目上线到获得8w+星标以来，一直收到反馈说基础部分（前15天的内容）对新手来说是比较困难的，建议有配套视频进行讲解。最近把基础部分的内容重新制作了一个名为“Python-Core-50-Courses”的项目，用更为简单通俗的方式重写了这部分内容并附带了视频讲解，初学者可以关注下这个新项目。如果需要Python基础视频，可以在“B站”搜索《Python零基础快速上手》，这套视频是我讲课的时候录制的随堂视频，画质尚可、音质一般，但是对初学者应该会有些帮助，欢迎大家留言、评论、发弹幕。学习之后觉得有收获的小伙伴可以“一键三连”来支持UP主（千锋Python）。国内用户如果访问GitHub比较慢的话，可以关注我的知乎号Python-Jack，上面的“从零开始学Python”专栏比较适合初学者，其他的专栏也在持续创作和更新中，欢迎大家关注并点赞评论。创作不易，感谢大家的打赏支持，这些钱不会用于个人消费（例如：购买咖啡），而是通过腾讯公益、美团公益、水滴筹等平台捐赠给需要帮助的人（点击了解捐赠情况）。需要加入QQ学习群的可以扫描下面的二维码，三个群加一个即可，不要重复进群。学习群会为大家提供学习资源和问题解答，如果有Python体验课和行业公开课会提前在群里通知大家，欢迎大家加入。项目“Day80~90”部分目前仍在创作中，因为作者平时也挤不出太多时间来写文档，因此更新的速度比较缓慢，感谢大家的理解。Python应用领域和职业发展分析简单的说，Python是一个“优雅”、“明确”、“简单”的编程语言。学习曲线低，非专业人士也能上手开源系统，拥有强大的生态圈解释型语言，完美的平台可移植性动态类型语言，支持面向对象和函数式编程代码规范程度高，可读性强Python在以下领域都有用武之地。后端开发 - Python / Java / Go / PHPDevOps - Python / Shell / Ruby数据采集 - Python / C++ / Java量化交易 - Python / C++ / R数据科学 - Python / R / Julia / Matlab机器学习 - Python / R / C++ / Julia自动化测试 - Python / Shell作为一名Python开发者，根据个人的喜好和职业规划，可以选择的就业领域也非常多。Python后端开发工程师（服务器、云平台、数据接口）Python运维工程师（自动化运维、SRE、DevOps）Python数据分析师（数据分析、商业智能、数字化运营）Python数据挖掘工程师（机器学习、深度学习、算法专家）Python爬虫工程师Python测试工程师（自动化测试、测试开发）说明：目前，数据分析和数据挖掘是非常热门的方向，因为不管是互联网行业还是传统行业都已经积累了大量的数据，各行各业都需要数据分析师从已有的数据中发现更多的商业价值，从而为企业的决策提供数据的支撑，这就是所谓的数据驱动决策。给初学者的几个建议：Make English as your working language. （让英语成为你的工作语言）Practice makes perfect. （熟能生巧）All experience comes from mistakes. （所有的经验都源于你犯过的错误）Don't be one of the leeches. （不要当伸手党）Either outstanding or out. （要么出众，要么出局）Day01~15 - Python语言基础Day01 - 初识PythonPython简介 - Python的历史 / Python的优缺点 / Python的应用领域搭建编程环境 - Windows环境 / Linux环境 / MacOS环境从终端运行Python程序 - Hello, world / print函数 / 运行程序使用IDLE - 交互式环境(REPL) / 编写多行代码 / 运行程序 / 退出IDLE注释 - 注释的作用 / 单行注释 / 多行注释Day02 - 语言元素程序和进制 - 指令和程序 / 冯诺依曼机 / 二进制和十进制 / 八进制和十六进制变量和类型 - 变量的命名 / 变量的使用 / input函数 / 检查变量类型 / 类型转换数字和字符串 - 整数 / 浮点数 / 复数 / 字符串 / 字符串基本操作 / 字符编码运算符 - 数学运算符 / 赋值运算符 / 比较运算符 / 逻辑运算符 / 身份运算符 / 运算符的优先级应用案例 - 华氏温度转换成摄氏温度 / 输入圆的半径计算周长和面积 / 输入年份判断是否是闰年Day03 - 分支结构分支结构的应用场景 - 条件 / 缩进 / 代码块 / 流程图if语句 - 简单的if / if-else结构 / if-elif-else结构 / 嵌套的if应用案例 - 用户身份验证 / 英制单位与公制单位互换 / 掷骰子决定做什么 / 百分制成绩转等级制 / 分段函数求值 / 输入三条边的长度如果能构成三角形就计算周长和面积Day04 - 循环结构循环结构的应用场景 - 条件 / 缩进 / 代码块 / 流程图while循环 - 基本结构 / break语句 / continue语句for循环 - 基本结构 / range类型 / 循环中的分支结构 / 嵌套的循环 / 提前结束程序应用案例 - 1~100求和 / 判断素数 / 猜数字游戏 / 打印九九表 / 打印三角形图案 / 猴子吃桃 / 百钱百鸡Day05 - 构造程序逻辑经典案例：水仙花数 / 百钱百鸡 / Craps赌博游戏练习题目：斐波那契数列 / 完美数 / 素数Day06 - 函数和模块的使用函数的作用 - 代码的坏味道 / 用函数封装功能模块定义函数 - def关键字 / 函数名 / 参数列表 / return语句 / 调用自定义函数调用函数 - Python内置函数 /  导入模块和函数函数的参数 - 默认参数 / 可变参数 / 关键字参数 / 命名关键字参数函数的返回值 - 没有返回值  / 返回单个值 / 返回多个值作用域问题 - 局部作用域 / 嵌套作用域 / 全局作用域 / 内置作用域 / 和作用域相关的关键字用模块管理函数 - 模块的概念 / 用自定义模块管理函数 / 命名冲突的时候会怎样（同一个模块和不同的模块）Day07 - 字符串和常用数据结构字符串的使用 - 计算长度 / 下标运算 / 切片 / 常用方法列表基本用法 - 定义列表 / 用下表访问元素 / 下标越界 / 添加元素 / 删除元素 / 修改元素 / 切片 / 循环遍历列表常用操作 - 连接 / 复制(复制元素和复制数组) / 长度 / 排序 / 倒转 / 查找生成列表 - 使用range创建数字列表 / 生成表达式 / 生成器元组的使用 - 定义元组 / 使用元组中的值 / 修改元组变量 / 元组和列表转换集合基本用法 - 集合和列表的区别 /  创建集合 / 添加元素 / 删除元素 /  清空集合常用操作 - 交集 / 并集 / 差集 / 对称差 / 子集 / 超集字典的基本用法 - 字典的特点 / 创建字典 / 添加元素 / 删除元素 / 取值 / 清空字典常用操作 - keys方法 / values方法 / items方法 / setdefault方法基础练习 - 跑马灯效果 / 列表找最大元素 / 统计考试成绩的平均分 / Fibonacci数列 / 杨辉三角综合案例 - 双色球选号 / 井字棋Day08 - 面向对象编程基础类和对象 - 什么是类 / 什么是对象 / 面向对象其他相关概念定义类 - 基本结构 / 属性和方法 / 构造器 / 析构器 / __str__方法使用对象 - 创建对象 / 给对象发消息面向对象的四大支柱 - 抽象 / 封装 / 继承 / 多态基础练习 - 定义学生类 / 定义时钟类 / 定义图形类 / 定义汽车类Day09 - 面向对象进阶属性 - 类属性 / 实例属性 / 属性访问器 / 属性修改器 / 属性删除器 / 使用__slots__类中的方法 - 实例方法 / 类方法 / 静态方法运算符重载 - __add__ / __sub__ / __or__ /__getitem__ / __setitem__ / __len__ / __repr__ / __gt__ / __lt__ / __le__ / __ge__ / __eq__ / __ne__ / __contains__类(的对象)之间的关系 - 关联 / 继承 / 依赖继承和多态 - 什么是继承 / 继承的语法 / 调用父类方法 / 方法重写 / 类型判定 / 多重继承 / 菱形继承(钻石继承)和C3算法综合案例 - 工资结算系统 / 图书自动折扣系统 / 自定义分数类Day10 - 图形用户界面和游戏开发使用tkinter开发GUI程序使用pygame三方库开发游戏应用“大球吃小球”游戏Day11 - 文件和异常读文件 - 读取整个文件 / 逐行读取 / 文件路径写文件 - 覆盖写入 / 追加写入 / 文本文件 / 二进制文件异常处理 - 异常机制的重要性 / try-except代码块 / else代码块 / finally代码块 / 内置异常类型 / 异常栈 / raise语句数据持久化 - CSV文件概述 / csv模块的应用 / JSON数据格式 / json模块的应用Day12 - 字符串和正则表达式字符串高级操作 - 转义字符 / 原始字符串 / 多行字符串 / in和not in运算符 / is_xxx方法 / join和split方法 / strip相关方法 / pyperclip模块 / 不变字符串和可变字符串 / StringIO的使用正则表达式入门 - 正则表达式的作用 / 元字符 / 转义 / 量词 / 分组 / 零宽断言 /贪婪匹配与惰性匹配懒惰 / 使用re模块实现正则表达式操作（匹配、搜索、替换、捕获）使用正则表达式 - re模块 / compile函数 / group和groups方法 / match方法 / search方法 / findall和finditer方法 / sub和subn方法 / split方法应用案例 - 使用正则表达式验证输入的字符串Day13 - 进程和线程进程和线程的概念 - 什么是进程 / 什么是线程 / 多线程的应用场景使用进程 - fork函数 / multiprocessing模块 / 进程池 / 进程间通信使用线程 -  threading模块 / Thread类 / RLock类 / Condition类 / 线程池Day14 - 网络编程入门和网络应用开发计算机网络基础 - 计算机网络发展史 / “TCP-IP”模型 / IP地址 / 端口 / 协议 / 其他相关概念网络应用模式 - “客户端-服务器”模式 / “浏览器-服务器”模式基于HTTP协议访问网络资源 - 网络API概述 / 访问URL / requests三方库 / 解析JSON格式数据Python网络编程 - 套接字的概念 / socket模块 /  socket函数 / 创建TCP服务器 / 创建TCP客户端 / 创建UDP服务器 / 创建UDP客户端电子邮件 - SMTP协议 / POP3协议 / IMAP协议 / smtplib模块 / poplib模块 / imaplib模块短信服务 - 调用短信服务网关Day15 - 图像和文档处理用Pillow处理图片 - 图片读写 / 图片合成 / 几何变换 / 色彩转换 / 滤镜效果读写Word文档 - 文本内容的处理 / 段落 / 页眉和页脚 / 样式的处理读写Excel文件 - xlrd / xlwt / openpyxlDay16~Day20 - Python语言进阶 常用数据结构函数的高级用法 - “一等公民” / 高阶函数 / Lambda函数 / 作用域和闭包 / 装饰器面向对象高级知识 - “三大支柱” / 类与类之间的关系 / 垃圾回收 / 魔术属性和方法 / 混入 / 元类 / 面向对象设计原则 / GoF设计模式迭代器和生成器 - 相关魔术方法 / 创建生成器的两种方式 /并发和异步编程 - 多线程 / 多进程 / 异步IO / async和awaitDay21~30 - Web前端入门用HTML标签承载页面内容用CSS渲染页面用JavaScript处理交互式行为jQuery入门和提高Vue.js入门Element的使用Bootstrap的使用Day31~35 - 玩转Linux操作系统操作系统发展史和Linux概述Linux基础命令Linux中的实用程序Linux的文件系统Vim编辑器的应用环境变量和Shell编程软件的安装和服务的配置网络访问和管理其他相关内容Day36~40 - 数据库基础和进阶关系型数据库概述MySQL的安装和使用SQL的使用DDL - 数据定义语言 - create / drop / alterDML - 数据操作语言 - insert / delete / updateDQL - 数据查询语言 - selectDCL - 数据控制语言 - grant / revokeMySQL新特性窗口函数的应用JSON数据类型相关知识数据完整性和一致性视图、函数、过程、触发器事务和锁执行计划和索引范式理论和反范式设计在Python中操作MySQLDay41~55 - 实战DjangoDay41 - Django快速上手Web应用工作机制HTTP请求和响应Django框架概述5分钟快速上手Day42 - 深入模型关系型数据库配置使用ORM完成对模型的CRUD操作管理后台的使用Django模型最佳实践模型定义参考Day43 - 静态资源和Ajax请求加载静态资源Ajax概述用Ajax实现投票功能Day44 - Cookie和Session实现用户跟踪cookie和session的关系Django框架对session的支持视图函数中的cookie读写操作Day45 - 报表和日志通过HttpResponse修改响应头使用StreamingHttpResponse处理大文件使用xlwt生成Excel报表使用reportlab生成PDF报表使用ECharts生成前端图表Day46 - 日志和调试工具栏配置日志配置Django-Debug-Toolbar优化ORM代码Day47 - 中间件的应用什么是中间件Django框架内置的中间件自定义中间件及其应用场景Day48 - 前后端分离开发入门返回JSON格式的数据用Vue.js渲染页面Day49 - RESTful架构和DRF入门Day50 - RESTful架构和DRF进阶Day51 - 使用缓存网站优化第一定律在Django项目中使用Redis提供缓存服务在视图函数中读写缓存使用装饰器实现页面缓存为数据接口提供缓存服务Day52 - 接入三方平台文件上传表单控件和图片文件预览服务器端如何处理上传的文件Day53 - 异步任务和定时任务网站优化第二定律配置消息队列服务在项目中使用Celery实现任务异步化在项目中使用Celery实现定时任务Day54 - 单元测试Day55 - 项目上线Python中的单元测试Django框架对单元测试的支持使用版本控制系统配置和使用uWSGI动静分离和Nginx配置配置HTTPS配置域名解析Day56~60 - 用FastAPI开发数据接口FastAPI五分钟上手请求和响应接入关系型数据库依赖注入中间件异步化虚拟化部署（Docker）项目实战：车辆违章查询项目Day61~65 - 爬虫开发Day61 - 网络数据采集概述网络爬虫的概念及其应用领域网络爬虫的合法性探讨开发网络爬虫的相关工具一个爬虫程序的构成Day62 - 数据抓取和解析使用requests三方库实现数据抓取页面解析的三种方式正则表达式解析XPath解析CSS选择器解析Day63 - Python中的并发编程多线程多进程异步I/ODay64 - 使用Selenium抓取网页动态内容Day65 - 爬虫框架Scrapy简介Day66~80 - 数据分析Day66 - 数据分析概述Day67 - 环境准备Day68 - NumPy的应用-1Day69 - NumPy的应用-2Day70 - Pandas的应用-1Day71 - Pandas的应用-2Day72 - Pandas的应用-3Day73 - Pandas的应用-4Day74 - Pandas的应用-5Day75 - 数据可视化-1Day76 - 数据可视化-2Day77 - 概率统计基础Day78 - 方差分析和参数估计Day79 - 相关和回归Day80 - 数据分析方法论Day81~90 - 机器学习和深度学习Day81 - 机器学习基础Day82 - k最近邻分类Day83 - 决策树Day84 - 贝叶斯分类Day85 - 支持向量机Day86 - K-均值聚类Day87 - 回归分析Day88 - 深度学习入门Day89 - PyTorch概述Day90 - PyTorch实战Day91~100 - 团队项目开发第91天：团队项目开发的问题和解决方案软件过程模型经典过程模型（瀑布模型）可行性分析（研究做还是不做），输出《可行性分析报告》。需求分析（研究做什么），输出《需求规格说明书》和产品界面原型图。概要设计和详细设计，输出概念模型图（ER图）、物理模型图、类图、时序图等。编码 / 测试。上线 / 维护。瀑布模型最大的缺点是无法拥抱需求变化，整套流程结束后才能看到产品，团队士气低落。敏捷开发（Scrum）- 产品所有者、Scrum Master、研发人员 - Sprint产品的Backlog（用户故事、产品原型）。计划会议（评估和预算）。日常开发（站立会议、番茄工作法、结对编程、测试先行、代码重构……）。修复bug（问题描述、重现步骤、测试人员、被指派人）。发布版本。评审会议（Showcase，用户需要参与）。回顾会议（对当前迭代周期做一个总结）。补充：敏捷软件开发宣言个体和互动 高于 流程和工具工作的软件 高于 详尽的文档客户合作 高于 合同谈判响应变化 高于 遵循计划角色：产品所有者（决定做什么，能对需求拍板的人）、团队负责人（解决各种问题，专注如何更好的工作，屏蔽外部对开发团队的影响）、开发团队（项目执行人员，具体指开发人员和测试人员）。准备工作：商业案例和资金、合同、憧憬、初始产品需求、初始发布计划、入股、组建团队。敏捷团队通常人数为8-10人。工作量估算：将开发任务量化，包括原型、Logo设计、UI设计、前端开发等，尽量把每个工作分解到最小任务量，最小任务量标准为工作时间不能超过两天，然后估算总体项目时间。把每个任务都贴在看板上面，看板上分三部分：to do（待完成）、in progress（进行中）和done（已完成）。项目团队组建团队的构成和角色说明：谢谢付祥英女士帮助我绘制了下面这张精美的公司组织架构图。编程规范和代码审查（flake8、pylint）Python中的一些“惯例”（请参考《Python惯例-如何编写Pythonic的代码》）影响代码可读性的原因：代码注释太少或者没有注释代码破坏了语言的最佳实践反模式编程（意大利面代码、复制-黏贴编程、自负编程、……）团队开发工具介绍版本控制：Git、Mercury缺陷管理：Gitlab、Redmine敏捷闭环工具：禅道、JIRA持续集成：Jenkins、Travis-CI请参考《团队项目开发的问题和解决方案》。项目选题和理解业务选题范围设定CMS（用户端）：新闻聚合网站、问答/分享社区、影评/书评网站等。MIS（用户端+管理端）：KMS、KPI考核系统、HRS、CRM系统、供应链系统、仓储管理系统等。App后台（管理端+数据接口）：二手交易类、报刊杂志类、小众电商类、新闻资讯类、旅游类、社交类、阅读类等。其他类型：自身行业背景和工作经验、业务容易理解和把控。需求理解、模块划分和任务分配需求理解：头脑风暴和竞品分析。模块划分：画思维导图（XMind），每个模块是一个枝节点，每个具体的功能是一个叶节点（用动词表述），需要确保每个叶节点无法再生出新节点，确定每个叶子节点的重要性、优先级和工作量。任务分配：由项目负责人根据上面的指标为每个团队成员分配任务。制定项目进度表（每日更新）模块功能人员状态完成工时计划开始实际开始计划结束实际结束备注评论添加评论王大锤正在进行50%42018/8/72018/8/7删除评论王大锤等待0%22018/8/72018/8/7查看评论白元芳正在进行20%42018/8/72018/8/7需要进行代码审查评论投票白元芳等待0%42018/8/82018/8/8OOAD和数据库设计UML（统一建模语言）的类图通过模型创建表（正向工程），例如在Django项目中可以通过下面的命令创建二维表。python manage.py makemigrations apppython manage.py migrate使用PowerDesigner绘制物理模型图。通过数据表创建模型（反向工程），例如在Django项目中可以通过下面的命令生成模型。python manage.py inspectdb > app/models.py第92天：Docker容器详解Docker简介安装Docker使用Docker创建容器（Nginx、MySQL、Redis、Gitlab、Jenkins）构建Docker镜像（Dockerfile的编写和相关指令）容器编排（Docker-compose）集群管理（Kubernetes）第93天：MySQL性能优化第94天：网络API接口设计第95天：[使用Django开发商业项目](./Day91-100/95.使用Django开发商业项\t目.md)项目开发中的公共问题数据库的配置（多数据库、主从复制、数据库路由）缓存的配置（分区缓存、键设置、超时设置、主从复制、故障恢复（哨兵））日志的配置分析和调试（Django-Debug-ToolBar）好用的Python模块（日期计算、图像处理、数据加密、三方API）REST API设计RESTful架构理解RESTful架构RESTful API设计指南RESTful API最佳实践API接口文档的撰写RAP2YAPIdjango-REST-framework的应用项目中的重点难点剖析使用缓存缓解数据库压力 - Redis使用消息队列做解耦合和削峰 - Celery + RabbitMQ第96天：软件测试和自动化测试单元测试测试的种类编写单元测试（unittest、pytest、nose2、tox、ddt、……）测试覆盖率（coverage）Django项目部署部署前的准备工作关键设置（SECRET_KEY / DEBUG / ALLOWED_HOSTS / 缓存 / 数据库）HTTPS / CSRF_COOKIE_SECUR  / SESSION_COOKIE_SECURE日志相关配置Linux常用命令回顾Linux常用服务的安装和配置uWSGI/Gunicorn和Nginx的使用Gunicorn和uWSGI的比较对于不需要大量定制化的简单应用程序，Gunicorn是一个不错的选择，uWSGI的学习曲线比Gunicorn要陡峭得多，Gunicorn的默认参数就已经能够适应大多数应用程序。uWSGI支持异构部署。由于Nginx本身支持uWSGI，在线上一般都将Nginx和uWSGI捆绑在一起部署，而且uWSGI属于功能齐全且高度定制的WSGI中间件。在性能上，Gunicorn和uWSGI其实表现相当。使用虚拟化技术（Docker）部署测试环境和生产环境性能测试AB的使用SQLslap的使用sysbench的使用自动化测试使用Shell和Python进行自动化测试使用Selenium实现自动化测试Selenium IDESelenium WebDriverSelenium Remote Control测试工具Robot Framework介绍第97天：电商网站技术要点剖析第98天：项目部署上线和性能调优MySQL数据库调优Web服务器性能优化Nginx负载均衡配置Keepalived实现高可用代码性能调优多线程异步化静态资源访问优化云存储CDN第99天：面试中的公共问题第100天：Python面试题实录"
1,1,donnemartin/system-design-primer,https://github.com/donnemartin/system-design-primer/blob/master/README-ja.md,Python,"English ∙ 日本語 ∙ 简体中文 ∙ 繁體中文 | العَرَبِيَّة‎ ∙ বাংলা ∙ Português do Brasil ∙ Deutsch ∙ ελληνικά ∙ עברית ∙ Italiano ∙ 한국어 ∙ فارسی ∙ Polski ∙ русский язык ∙ Español ∙ ภาษาไทย ∙ Türkçe ∙ tiếng Việt ∙ Français | Add Translationシステム設計入門    動機・目的大規模システムのシステム設計を学ぶシステム設計面接課題に備える大規模システムの設計を学ぶスケーラブルなシステムのシステム設計を学ぶことは、より良いエンジニアになることに資するでしょう。システム設計はとても広範なトピックを含みます。システム設計原理については インターネット上には膨大な量の文献が散らばっています。このリポジトリは大規模システム構築に必要な知識を学ぶことができる 文献リストを体系的にまとめたもの です。オープンソースコミュニティから学ぶこのプロジェクトは、これからもずっと更新されていくオープンソースプロジェクトの初期段階にすぎません。Contributions は大歓迎です！システム設計面接課題に備えるコード技術面接に加えて、システム設計に関する知識は、多くのテック企業における 技術採用面接プロセス で 必要不可欠な要素 です。システム設計面接での頻出質問に備え、自分の解答と模範解答:ディスカッション、コードそして図表などを比較して学びましょう。面接準備に役立つその他のトピック:学習指針システム設計面接課題にどのように準備するかシステム設計課題例 とその解答オブジェクト指向設計課題例、 とその解答その他のシステム設計面接課題例暗記カード    このAnki用フラッシュカードデッキ は、間隔反復を活用して、システム設計のキーコンセプトの学習を支援します。システム設計デッキシステム設計練習課題デッキオブジェクト指向練習課題デッキ外出先や移動中の勉強に役立つでしょう。コーディング技術課題用の問題: 練習用インタラクティブアプリケーションコード技術面接用の問題を探している場合はこちら    姉妹リポジトリの Interactive Coding Challengesも見てみてください。追加の暗記デッキカードも入っています。Coding deckコントリビュートコミュニティから学ぶプルリクエスト等の貢献は積極的にお願いします:エラー修正セクション内容改善新規セクション追加翻訳する現在、内容の改善が必要な作業中のコンテンツはこちらです。コントリビュートの前にContributing Guidelinesを読みましょう。システム設計目次賛否も含めた様々なシステム設計の各トピックの概要。 全てはトレードオフの関係にあります。それぞれのセクションはより学びを深めるような他の文献へのリンクが貼られています。    システム設計トピック: まずはここからStep 1: スケーラビリティに関する動画を見るStep 2: スケーラビリティに関する記事を読む次のステップパフォーマンス vs スケーラビリティレイテンシー vs スループット可用性 vs 一貫性CAP理論CP - 一貫性(consistency)と分割性(partition)耐性AP - 可用性(availability)と分割性(partition)耐性一貫性 パターン弱い一貫性結果整合性強い一貫性可用性 パターンフェイルオーバーレプリケーションドメインネームシステム(DNS)コンテンツデリバリーネットワーク(CDN)プッシュCDNプルCDNロードバランサーアクティブ/パッシブ構成アクティブ/アクティブ構成Layer 4 ロードバランシングLayer 7 ロードバランシング水平スケーリングリバースプロキシ (WEBサーバー)ロードバランサー vs リバースプロキシアプリケーションレイヤーマイクロサービスサービスディスカバリーデータベースリレーショナルデータベースマネジメントシステム (RDBMS)マスター/スレーブ レプリケーションマスター/マスター レプリケーションフェデレーションシャーディングデノーマライゼーションSQL チューニングNoSQLキー/バリューストアドキュメントストアワイドカラムストアグラフ データベースSQL or NoSQLキャッシュクライアントキャッシングCDNキャッシングWebサーバーキャッシングデータベースキャッシングアプリケーションキャッシングデータベースクエリレベルでキャッシングするオブジェクトレベルでキャッシングするいつキャッシュを更新するのかキャッシュアサイドライトスルーライトビハインド (ライトバック)リフレッシュアヘッド非同期処理メッセージキュータスクキューバックプレッシャー通信伝送制御プロトコル (TCP)ユーザデータグラムプロトコル (UDP)遠隔手続呼出 (RPC)Representational state transfer (REST)セキュリティ補遺2の乗数表全てのプログラマーが知るべきレイテンシー値他のシステム設計面接例題実世界でのアーキテクチャ各企業のアーキテクチャ企業のエンジニアブログ作業中クレジット連絡情報ライセンス学習指針学習スパンに応じてみるべきトピックス (short, medium, long)Q: 面接のためには、ここにあるものすべてをやらないといけないのでしょうか？A: いえ、ここにあるすべてをやる必要はありません。面接で何を聞かれるかは以下の条件によって変わってきます:どれだけの技術経験があるかあなたの技術背景が何であるかどのポジションのために面接を受けているかどの企業の面接を受けているか運より経験のある候補者は一般的にシステム設計についてより深い知識を有していることを要求されるでしょう。システムアーキテクトやチームリーダーは各メンバーの持つような知識よりは深い見識を持っているべきでしょう。一流テック企業では複数回の設計面接を課されることが多いです。まずは広く始めて、そこからいくつかの分野に絞って深めていくのがいいでしょう。様々なシステム設計のトピックについて少しずつ知っておくことはいいことです。以下の学習ガイドを自分の学習に当てられる時間、技術経験、どの職位、どの会社に応募しているかなどを加味して自分用に調整して使うといいでしょう。短期間 - 幅広く システム設計トピックを学ぶ。いくつかの 面接課題を解くことで対策する。中期間 - 幅広く そして それなりに深くシステム設計トピックを学ぶ。多くの 面接課題を解くことで対策する。長期間 - 幅広く そして もっと深くシステム設計トピックを学ぶ。ほぼ全ての 面接課題を解くことで対策する。短期間中期間長期間システム設計トピック を読み、システム動作機序について広く知る👍👍👍次のリンク先のいくつかのページを読んで 各企業のエンジニアリングブログ 応募する会社について知る👍👍👍次のリンク先のいくつかのページを読む 実世界でのアーキテクチャ👍👍👍復習する システム設計面接課題にどのように準備するか👍👍👍とりあえず一周する システム設計課題例SomeManyMostとりあえず一周する オブジェクト指向設計問題と解答SomeManyMost復習する その他システム設計面接での質問例SomeManyMostシステム設計面接にどのようにして臨めばいいかシステム設計面接試験問題にどのように取り組むかシステム設計面接は open-ended conversation(Yes/Noでは答えられない口頭質問)です。 自分で会話を組み立てることを求められます。以下のステップに従って議論を組み立てることができるでしょう。この過程を確かなものにするために、次のセクションシステム設計課題例とその解答 を以下の指針に従って読み込むといいでしょう。ステップ 1: そのシステム使用例の概要、制約、推計値等を聞き出し、まとめるシステム仕様の要求事項を聞き出し、問題箇所を特定しましょう。使用例と制約を明確にするための質問を投げかけましょう。要求する推計値についても議論しておきましょう。誰がそのサービスを使うのか？どのように使うのか？何人のユーザーがいるのか？システムはどのような機能を果たすのか？システムへの入力と出力は？どれだけの容量のデータを捌く必要があるのか？一秒間に何リクエストの送信が想定されるか？読み書き比率の推定値はいくら程度か？ステップ 2: より高レベルのシステム設計を組み立てる重要なコンポーネントを全て考慮した高レベルのシステム設計概要を組み立てる。主要なコンポーネントと接続をスケッチして書き出す考えの裏付けをするステップ 3: 核となるコンポーネントを設計するそれぞれの主要なコンポーネントについての詳細を学ぶ。例えば、url短縮サービスの設計を問われた際には次のようにするといいでしょう:元のURLのハッシュ化したものを作り、それを保存するMD5 と Base62ハッシュ衝突SQL もしくは NoSQLデータベーススキーマハッシュ化されたURLを元のURLに再翻訳するデータベース参照API & オブジェクト指向の設計ステップ 4: システム設計のスケール与えられた制約条件からボトルネックとなりそうなところを割り出し、明確化する。  例えば、スケーラビリティの問題解決のために以下の要素を考慮する必要があるだろうか？ロードバランサー水平スケーリングキャッシングデータベースシャーディング取りうる解決策とそのトレードオフについて議論をしよう。全てのことはトレードオフの関係にある。ボトルネックについてはスケーラブルなシステム設計の原理を読むといいでしょう。ちょっとした暗算問題ちょっとした推計値を手計算ですることを求められることもあるかもしれません。補遺の以下の項目が役に立つでしょう:チラ裏計算でシステム設計する2の乗数表全てのプログラマーが知っておくべきレイテンシの参考値文献とその他の参考資料以下のリンク先ページを見てどのような質問を投げかけられるか概要を頭に入れておきましょう:システム設計面接で成功するには？システム設計面接アーキテクチャ、システム設計面接への導入システム設計課題例とその解答頻出のシステム設計面接課題と参考解答、コード及びダイアグラム解答は solutions/ フォルダ以下にリンクが貼られている問題Pastebin.com (もしくは Bit.ly) を設計する解答Twitterタイムライン (もしくはFacebookフィード)を設計するTwitter検索(もしくはFacebook検索)機能を設計する解答ウェブクローラーを設計する解答Mint.comを設計する解答SNSサービスのデータ構造を設計する解答検索エンジンのキー/バリュー構造を設計する解答Amazonのカテゴリ毎の売り上げランキングを設計する解答AWS上で100万人規模のユーザーを捌くサービスを設計する解答システム設計問題を追加するContributePastebin.com (もしくは Bit.ly) を設計する問題と解答を見るTwitterタイムライン&検索 (もしくはFacebookフィード&検索)を設計する問題と解答を見るウェブクローラーの設計問題と解答を見るMint.comの設計問題と解答を見るSNSサービスのデータ構造を設計する問題と解答を見る検索エンジンのキー/バリュー構造を設計する問題と解答を見るAmazonのカテゴリ毎の売り上げランキングを設計する問題と解答を見るAWS上で100万人規模のユーザーを捌くサービスを設計する問題と解答を見るオブジェクト指向設計問題と解答頻出のオブジェクト指向システム設計面接課題と参考解答、コード及びダイアグラム解答は solutions/ フォルダ以下にリンクが貼られている備考: このセクションは作業中です問題ハッシュマップの設計解答LRUキャッシュの設計解答コールセンターの設計解答カードのデッキの設計解答駐車場の設計解答チャットサーバーの設計解答円形配列の設計Contributeオブジェクト指向システム設計問題を追加するContributeシステム設計トピックス: まずはここからシステム設計の勉強は初めて？まず初めに、よく使われる設計原理について、それらが何であるか、どのように用いられるか、長所短所について基本的な知識を得る必要がありますステップ 1: スケーラビリティに関する動画を観て復習するHarvardでのスケーラビリティの講義ここで触れられているトピックス:垂直スケーリング水平スケーリングキャッシングロードバランシングデータベースレプリケーションデータベースパーティションステップ 2: スケーラビリティに関する資料を読んで復習するスケーラビリティここで触れられているトピックス:クローンデータベースキャッシュ非同期次のステップ次に、ハイレベルでのトレードオフについてみていく:パフォーマンス vs スケーラビリティレイテンシ vs スループット可用性 vs 一貫性全てはトレードオフの関係にあるというのを肝に命じておきましょう。それから、より深い内容、DNSやCDNそしてロードバランサーなどについて学習を進めていきましょう。パフォーマンス vs スケーラビリティリソースが追加されるのにつれて パフォーマンス が向上する場合そのサービスは スケーラブル であると言えるでしょう。一般的に、パフォーマンスを向上させるというのはすなわち計算処理を増やすことを意味しますが、データセットが増えた時などより大きな処理を捌けるようになることでもあります。1パフォーマンスvsスケーラビリティをとらえる他の考え方:パフォーマンス での問題を抱えている時、あなたのシステムは一人のユーザーにとって遅いと言えるでしょう。スケーラビリティ での問題を抱えているとき、一人のユーザーにとっては速いですが、多くのリクエストがある時には遅くなってしまうでしょう。その他の参考資料、ページスケーラビリティについてスケーラビリティ、可用性、安定性、パターンレイテンシー vs スループットレイテンシー とはなにがしかの動作を行う、もしくは結果を算出するのに要する時間スループット とはそのような動作や結果算出が単位時間に行われる回数一般的に、 最大限のスループット を 許容範囲内のレイテンシー で実現することを目指すのが普通だ。その他の参考資料、ページレイテンシー vs スループットを理解する可用性 vs 一貫性CAP 理論      Source: CAP theorem revisited分散型コンピュータシステムにおいては下の三つのうち二つまでしか同時に保証することはできない。:一貫性 - 全ての読み込みは最新の書き込みもしくはエラーを受け取る可用性 - 受け取る情報が最新のものだという保証はないが、全てのリクエストはレスポンスを必ず受け取る分断耐性 - ネットワーク問題によって順不同の分断が起きてもシステムが動作を続けるネットワークは信頼できないので、分断耐性は必ず保証しなければなりません。つまりソフトウェアシステムとしてのトレードオフは、一貫性を取るか、可用性を取るかを考えなければなりません。CP - 一貫性と分断耐性(consistency and partition tolerance)分断されたノードからのレスポンスを待ち続けているとタイムアウトエラーに陥る可能性があります。CPはあなたのサービスがアトミックな読み書き（不可分操作）を必要とする際にはいい選択肢でしょう。AP - 可用性と分断耐性(availability and partition tolerance)レスポンスはノード上にあるデータで最新のものを返します。つまり、最新版のデータが返されるとは限りません。分断が解消された後も、書き込みが反映されるのには時間がかかります。結果整合性　を求めるサービスの際にはAPを採用するのがいいでしょう。もしくは、外部エラーに関わらずシステムが稼働する必要がある際にも同様です。その他の参考資料、ページCAP 理論を振り返る平易な英語でのCAP 理論のイントロCAP FAQ一貫性パターン同じデータの複製が複数ある状態では、クライアントが一貫したデータ表示を受け取るために、どのようにそれらを同期すればいいのかという課題があります。 CAP 理論 における一貫性の定義を思い出してみましょう。全ての読み取りは最新の書き込みデータもしくはエラーを受け取るはずです。弱い一貫性書き込み後の読み取りでは、その最新の書き込みを読めたり読めなかったりする。ベストエフォート型のアプローチに基づく。このアプローチはmemcachedなどのシステムに見られます。弱い一貫性はリアルタイム性が必要なユースケース、例えばVoIP、ビデオチャット、リアルタイムマルチプレイヤーゲームなどと相性がいいでしょう。例えば、電話に出ているときに数秒間音声が受け取れなくなったとしたら、その後に接続が回復してもその接続が切断されていた間に話されていたことは聞き取れないというような感じです。結果整合性書き込みの後、読み取りは最終的にはその結果を読み取ることができる(ミリ秒ほど遅れてというのが一般的です)。データは非同期的に複製されます。このアプローチはDNSやメールシステムなどに採用されています。結果整合性は多くのリクエストを捌くサービスと相性がいいでしょう。強い一貫性書き込みの後、読み取りはそれを必ず読むことができます。データは同期的に複製されます。このアプローチはファイルシステムやRDBMSなどで採用されています。トランザクションを扱うサービスでは強い一貫性が必要でしょう。その他の参考資料、ページデータセンター間でのトランザクション可用性パターン高い可用性を担保するには主に次の二つのパターンがあります: フェイルオーバー と レプリケーション です。フェイルオーバーアクティブ・パッシブアクティブ・パッシブフェイルオーバーにおいては、周期信号はアクティブもしくはスタンバイ中のパッシブなサーバーに送られます。周期信号が中断された時には、パッシブだったサーバーがアクティブサーバーのIPアドレスを引き継いでサービスを再開します。起動までのダウンタイムはパッシブサーバーが「ホット」なスタンバイ状態にあるか、「コールド」なスタンバイ状態にあるかで変わります。アクティブなサーバーのみがトラフィックを捌きます。アクティブ・パッシブフェイルオーバーはマスター・スレーブフェイルオーバーと呼ばれることもあります。アクティブ・アクティブアクティブアクティブ構成では両方のサーバーがトラフィックを捌くことで負荷を分散します。これらのサーバーがパブリックなものの場合、DNSは両方のサーバーのパブリックIPを知っている必要があります。もし、プライベートなものな場合、アプリケーションロジックが両方のサーバーの情報について知っている必要があります。アクティブ・アクティブなフェイルオーバーはマスター・マスターフェイルオーバーと呼ばれることもあります。短所: フェイルオーバーフェイルオーバーではより多くのハードウェアを要し、複雑さが増します。最新の書き込みがパッシブサーバーに複製される前にアクティブが落ちると、データ欠損が起きる潜在可能性があります。レプリケーションマスター・スレーブ　と　マスター・マスターこのトピックは データベース セクションにおいてより詳細に解説されています:マスター・スレーブ レプリケーションマスター・マスター レプリケーションドメインネームシステム      Source: DNS security presentationドメインネームシステム (DNS) は www.example.com などのドメインネームをIPアドレスへと翻訳します。DNSは少数のオーソライズされたサーバーが上位に位置する階層的構造です。あなたのルーターもしくはISPは検索をする際にどのDNSサーバーに接続するかという情報を提供します。低い階層のDNSサーバーはその経路マップをキャッシュします。ただ、この情報は伝搬遅延によって陳腐化する可能性があります。DNSの結果はあなたのブラウザもしくはOSに一定期間（time to live (TTL)に設定された期間）キャッシュされます。NS record (name server) - あなたのドメイン・サブドメインでのDNSサーバーを特定します。MX record (mail exchange) - メッセージを受け取るメールサーバーを特定します。A record (address) - IPアドレスに名前をつけます。CNAME (canonical) - 他の名前もしくは　CNAME (example.com を www.example.com) もしくは A recordへと名前を指し示す。CloudFlare や Route 53 などのサービスはマネージドDNSサービスを提供しています。いくつかのDNSサービスでは様々な手法を使ってトラフィックを捌くことができます:加重ラウンドロビントラフィックがメンテナンス中のサーバーに行くのを防ぎます様々なクラスターサイズに応じて調整しますA/B テストレイテンシーベース地理ベース欠点: DNS上記で示されているようなキャッシングによって緩和されているとはいえ、DNSサーバーへの接続には少し遅延が生じる。DNSサーバーは、政府、ISP企業,そして大企業に管理されているが、それらの管理は複雑である。DNSサービスはDDoS attackの例で、IPアドレスなしにユーザーがTwitterなどにアクセスできなくなったように、攻撃を受ける可能性がある。その他の参考資料、ページDNS アーキテクチャWikipediaDNS 記事コンテンツデリバリーネットワーク(Content delivery network)      Source: Why use a CDNコンテンツデリバリーネットワーク(CDN)は世界中に配置されたプロキシサーバーのネットワークがユーザーに一番地理的に近いサーバーからコンテンツを配信するシステムのことです。AmazonのCloudFrontなどは例外的にダイナミックなコンテンツも配信しますが、一般的に、HTML/CSS/JS、写真、そして動画などの静的ファイルがCDNを通じて配信されます。そのサイトのDNSがクライアントにどのサーバーと交信するかという情報を伝えます。CDNを用いてコンテンツを配信することで以下の二つの理由でパフォーマンスが劇的に向上します:ユーザーは近くにあるデータセンターから受信できるバックエンドサーバーはCDNが処理してくれるリクエストに関しては処理する必要がなくなりますプッシュCDNプッシュCDNではサーバーデータに更新があった時には必ず、新しいコンテンツを受け取る方式です。コンテンツを用意し、CDNに直接アップロードし、URLをCDNを指すように指定するところまで、全て自分で責任を負う形です。コンテンツがいつ期限切れになるのか更新されるのかを設定することができます。コンテンツは新規作成時、更新時のみアップロードされることでトラフィックは最小化される一方、ストレージは最大限消費されてしまいます。トラフィックの少ない、もしくは頻繁にはコンテンツが更新されないサイトの場合にはプッシュCDNと相性がいいでしょう。コンテンツは定期的に再びプルされるのではなく、CDNに一度のみ配置されます。プルCDNプルCDNでは一人目のユーザーがリクエストした時に、新しいコンテンツをサービスのサーバーから取得します。コンテンツは自分のサーバーに保存して、CDNを指すURLを書き換えます。結果として、CDNにコンテンツがキャッシュされるまではリクエスト処理が遅くなります。time-to-live (TTL) はコンテンツがどれだけの期間キャッシュされるかを規定します。プルCDNはCDN 上でのストレージスペースを最小化しますが、有効期限が切れたファイルが更新前にプルされてしまうことで冗長なトラフィックに繋がってしまう可能性があります。大規模なトラフィックのあるサイトではプルCDNが相性がいいでしょう。というのも、トラフィックの大部分は最近リクエストされ、CDNに残っているコンテンツにアクセスするものであることが多いからです。欠点: CDNCDNのコストはトラフィック量によって変わります。もちろん、CDNを使わない場合のコストと比較するべきでしょう。TTLが切れる前にコンテンツが更新されると陳腐化する恐れがあります。CDNでは静的コンテンツがCDNを指すようにURLを更新する必要があります。その他の参考資料、ページグローバルに分散されたコンテンツデリバリーネットワークプッシュCDNとプルCDNの違いWikipediaロードバランサー      Source: Scalable system design patternsロードバランサーは入力されるクライアントのリクエストをアプリケーションサーバーやデータベースへと分散させる。どのケースでもロードバランサーはサーバー等計算リソースからのレスポンスを適切なクライアントに返す。ロードバランサーは以下のことに効果的です:リクエストが状態の良くないサーバーに行くのを防ぐリクエストを過剰に送るのを防ぐ特定箇所の欠陥でサービスが落ちることを防ぐロードバランサーは (費用の高い) ハードウェアもしくはHAProxyなどのソフトウェアで実現できる。他の利点としては:SSL termination - 入力されるリクエストを解読する、また、サーバーレスポンスを暗号化することでバックエンドのサーバーがこのコストが高くつきがちな処理を請け負わなくていいように肩代わりします。X.509 certificates をそれぞれのサーバーにインストールする必要をなくしますセッション管理 - クッキーを取り扱うウェブアプリがセッション情報を保持していない時などに、特定のクライアントのリクエストを同じインスタンスへと流します。障害に対応するために、アクティブ・パッシブ もしくは アクティブ・アクティブ モードのどちらにおいても、複数のロードバランサーを配置するのが一般的です。ロードバランサーは以下のような種々のメトリックを用いてトラフィックルーティングを行うことができます:ランダムLeast loadedセッション/クッキーラウンドロビンもしくは加重ラウンドロビンLayer 4Layer 7Layer 4 ロードバランシングLayer 4 ロードバランサーは トランスポートレイヤー を参照してどのようにリクエストを配分するか判断します。一般的に、トランスポートレイヤーとしては、ソース、送信先IPアドレス、ヘッダーに記述されたポート番号が含まれますが、パケットの中身のコンテンツは含みません。 Layer 4 ロードバランサーはネットワークパケットを上流サーバーへ届け、上流サーバーから配信することでネットワークアドレス変換 Network Address Translation (NAT) を実現します。Layer 7 ロードバランシングLayer 7 ロードバランサーは アプリケーションレイヤー を参照してどのようにリクエストを配分するか判断します。ヘッダー、メッセージ、クッキーなどのコンテンツのことです。Layer 7 ロードバランサーはネットワークトラフィックの終端を受け持ち メッセージを読み込み、ロードバランシングの判断をし、選択したサーバーとの接続を繋ぎます。例えば layer 7 ロードバランサーは動画のトラフィックを直接、そのデータをホストしているサーバーにつなぐと同時に、決済処理などのより繊細なトラフィックをセキュリティ強化されたサーバーに流すということもできる。柔軟性とのトレードオフになりますが、 layer 4 ロードバランサーではLayer 7ロードバランサーよりも所要時間、計算リソースを少なく済ませることができます。ただし、昨今の汎用ハードウェアではパフォーマンスは最小限のみしか発揮できないでしょう。水平スケーリングロードバランサーでは水平スケーリングによってパフォーマンスと可用性を向上させることができます。手頃な汎用マシンを追加することによってスケールアウトさせる方が、一つのサーバーをより高価なマシンにスケールアップする（垂直スケーリング）より費用対効果も高くなり、結果的に可用性も高くなります。また、汎用ハードウェアを扱える人材を雇う方が、特化型の商用ハードウェアを扱える人材を雇うよりも簡単でしょう。欠点: 水平スケーリング水平的にスケーリングしていくと、複雑さが増す上に、サーバーのクローニングが必要になる。サーバーはステートレスである必要がある: ユーザーに関連するセッションや、プロフィール写真などのデータを持ってはいけないセッションは一元的なデータベース (SQL、 NoSQL)などのデータストアにストアされるか キャッシュ (Redis、 Memcached)に残す必要があります。キャッシュやデータベースなどの下流サーバーは上流サーバーがスケールアウトするにつれてより多くの同時接続を保たなければなりません。欠点: ロードバランサーロードバランサーはリソースが不足していたり、設定が適切でない場合、システム全体のボトルネックになる可能性があります。単一障害点を除こうとしてロードバランサーを導入した結果、複雑さが増してしまうことになります。ロードバランサーが一つだけだとそこが単一障害点になってしまいます。一方で、ロードバランサーを複数にすると、さらに複雑さが増してしまいます。その他の参考資料、ページNGINX アーキテクチャHAProxy アーキテクチャガイドスケーラビリティWikipediaLayer 4 ロードバランシングLayer 7 ロードバランシングELB listener configリバースプロキシ(webサーバー)      Source: Wikipedia  リバースプロキシサーバーは内部サービスをまとめて外部に統一されたインターフェースを提供するウェブサーバーです。クライアントからのリクエストはそれに対応するサーバーに送られて、その後レスポンスをリバースプロキシがクライアントに返します。他には以下のような利点があります:より堅牢なセキュリティ - バックエンドサーバーの情報を隠したり、IPアドレスをブラックリスト化したり、クライアントごとの接続数を制限したりできます。スケーラビリティや柔軟性が増します - クライアントはリバースプロキシのIPしか見ないので、裏でサーバーをスケールしたり、設定を変えやすくなります。SSL termination - 入力されるリクエストを解読し、サーバーのレスポンスを暗号化することでサーバーがこのコストのかかりうる処理をしなくて済むようになります。X.509 証明書 を各サーバーにインストールする必要がなくなります。圧縮 - サーバーレスポンスを圧縮できますキャッシング - キャッシュされたリクエストに対して、レスポンスを返します静的コンテンツ - 静的コンテンツを直接送信することができます。HTML/CSS/JS写真動画などなどロードバランサー vs リバースプロキシ複数のサーバーがある時にはロードバランサーをデプロイすると役に立つでしょう。 しばしば、ロードバランサーは同じ機能を果たすサーバー群へのトラフィックを捌きます。リバースプロキシでは、上記に述べたような利点を、単一のウェブサーバーやアプリケーションレイヤーに対しても示すことができます。NGINX や HAProxy などの技術はlayer 7 リバースプロキシとロードバランサーの両方をサポートします。欠点: リバースプロキシリバースプロキシを導入するとシステムの複雑性が増します。単一のリバースプロキシは単一障害点になりえます。一方で、複数のリバースプロキシを導入すると(例: フェイルオーバー) 複雑性はより増します。その他の参考資料、ページリバースプロキシ vs ロードバランサーNGINX アーキテクチャHAProxy アーキテクチャ ガイドWikipediaアプリケーション層      Source: Intro to architecting systems for scaleウェブレイヤーをアプリケーション層 (プラットフォーム層とも言われる) と分離することでそれぞれの層を独立にスケール、設定することができるようになります。新しいAPIをアプリケーション層に追加する際に、不必要にウェブサーバーを追加する必要がなくなります。単一責任の原則 では、小さい自律的なサービスが協調して動くように提唱しています。小さいサービスの小さいチームが急成長のためにより積極的な計画を立てられるようにするためです。アプリケーション層は非同期処理もサポートします。マイクロサービス独立してデプロイできる、小規模なモジュール様式であるマイクロサービスもこの議論に関係してくる技術でしょう。それぞれのサービスは独自のプロセスを処理し、明確で軽量なメカニズムで通信して、その目的とする機能を実現します。1例えばPinterestでは以下のようなマイクロサービスに分かれています。ユーザープロフィール、フォロワー、フィード、検索、写真アップロードなどです。サービスディスカバリーConsul、 Etcd、 Zookeeper などのシステムでは、登録されているサービスの名前、アドレス、ポートの情報を監視することで、サービス同士が互いを見つけやすくしています。サービスの完全性の確認には Health checks が便利で、これには HTTP エンドポイントがよく使われます。 Consul と Etcd のいずれも組み込みの key-value store を持っており、設定データや共有データなどのデータを保存しておくことに使われます。欠点: アプリケーション層アーキテクチャ、運用、そしてプロセスを考慮すると、緩く結び付けられたアプリケーション層を追加するには、モノリシックなシステムとは異なるアプローチが必要です。マイクロサービスはデプロイと運用の点から見ると複雑性が増すことになります。その他の参考資料、ページスケールするシステムアーキテクチャを設計するためのイントロシステム設計インタビューを紐解くサービス指向アーキテクチャZookeeperのイントロダクションマイクロサービスを作るために知っておきたいことデータベース      Source: Scaling up to your first 10 million usersリレーショナルデータベースマネジメントシステム (RDBMS)SQLなどのリレーショナルデータベースはテーブルに整理されたデータの集合である。ACID はリレーショナルデータベースにおけるトランザクションのプロパティの集合である不可分性 - それぞれのトランザクションはあるかないかのいずれかである一貫性 - どんなトランザクションもデータベースをある確かな状態から次の状態に遷移させる。独立性 - 同時にトランザクションを処理することは、連続的にトランザクションを処理するのと同じ結果をもたらす。永続性 - トランザクションが処理されたら、そのように保存されるリレーショナルデータベースをスケールさせるためにはたくさんの技術がある: マスター・スレーブ レプリケーション、 マスター・マスター レプリケーション、 federation、 シャーディング、 非正規化、 そして SQL チューニングマスタースレーブ レプリケーションマスターデータベースが読み取りと書き込みを処理し、書き込みを一つ以上のスレーブデータベースに複製します。スレーブデータベースは読み取りのみを処理します。スレーブデータベースは木構造のように追加のスレーブにデータを複製することもできます。マスターデータベースがオフラインになった場合には、いずれかのスレーブがマスターに昇格するか、新しいマスターデータベースが追加されるまでは読み取り専用モードで稼働します。      Source: Scalability, availability, stability, patterns欠点: マスタースレーブ レプリケーションスレーブをマスターに昇格させるには追加のロジックが必要になる。マスタースレーブ レプリケーション、マスターマスター レプリケーションの 両方 の欠点は欠点: レプリケーションを参照マスターマスター レプリケーションいずれのマスターも読み取り書き込みの両方に対応する。書き込みに関してはそれぞれ協調する。いずれかのマスターが落ちても、システム全体としては読み書き両方に対応したまま運用できる。      Source: Scalability, availability, stability, patterns欠点: マスターマスター レプリケーションロードバランサーを導入するか、アプリケーションロジックを変更することでどこに書き込むかを指定しなければならない。大体のマスターマスターシステムは、一貫性が緩い（ACID原理を守っていない）もしくは、同期する時間がかかるために書き込みのレイテンシーが増加してしまっている。書き込みノードが追加され、レイテンシーが増加するにつれ書き込みの衝突の可能性が増える。マスタースレーブ レプリケーション、マスターマスター レプリケーションの 両方 の欠点は欠点: レプリケーション を参照欠点: レプリケーション新しいデータ書き込みを複製する前にマスターが落ちた場合にはそのデータが失われてしまう可能性がある。書き込みは読み取りレプリカにおいてリプレイされる。書き込みが多い場合、複製ノードが書き込みの処理のみで行き詰まって、読み取りの処理を満足に行えない可能性がある。読み取りスレーブノードの数が多ければ多いほど、複製しなければならない数も増え、複製時間が伸びてしまいます。システムによっては、マスターへの書き込みはマルチスレッドで並列処理できる一方、スレーブへの複製は単一スレッドで連続的に処理しなければならない場合があります。レプリケーションでは追加のハードウェアが必要になり、複雑性も増します。その他の参考資料、ページ: レプリケーションスケーラビリティ、 可用性、 スタビリティ パターンマルチマスター レプリケーションFederation      Source: Scaling up to your first 10 million usersフェデレーション (もしくは機能分割化とも言う) はデータベースを機能ごとに分割する。例えば、モノリシックな単一データベースの代わりに、データベースを フォーラム、 ユーザー、 プロダクト のように三つにすることで、データベース一つあたりの書き込み・読み取りのトラフィックが減り、その結果レプリケーションのラグも短くなります。データベースが小さくなることで、メモリーに収まるデータが増えます。キャッシュの局所性が高まるため、キャッシュヒット率も上がります。単一の中央マスターで書き込みを直列化したりしないため、並列で書き込みを処理することができ、スループットの向上が期待できます。欠点: federation大規模な処理やテーブルを要するスキーマの場合、フェデレーションは効果的とは言えないでしょう。どのデータベースに読み書きをするのかを指定するアプリケーションロジックを更新しなければなりません。server linkで二つのデータベースからのデータを連結するのはより複雑になるでしょう。フェデレーションでは追加のハードウェアが必要になり、複雑性も増します。その他の参考資料、ページ: federationScaling up to your first 10 million usersシャーディング      Source: Scalability, availability, stability, patternsシャーディングでは異なるデータベースにそれぞれがデータのサブセット断片のみを持つようにデータを分割します。ユーザーデータベースを例にとると、ユーザー数が増えるにつれてクラスターにはより多くの断片が加えられることになります。federationの利点に似ていて、シャーディングでは読み書きのトラフィックを減らし、レプリケーションを減らし、キャッシュヒットを増やすことができます。インデックスサイズも減らすことができます。一般的にはインデックスサイズを減らすと、パフォーマンスが向上しクエリ速度が速くなります。なにがしかのデータを複製する機能がなければデータロスにつながりますが、もし、一つのシャードが落ちても、他のシャードが動いていることになります。フェデレーションと同じく、単一の中央マスターが書き込みの処理をしなくても、並列で書き込みを処理することができ、スループットの向上が期待できます。ユーザーテーブルをシャードする一般的な方法は、ユーザーのラストネームイニシャルでシャードするか、ユーザーの地理的配置でシャードするなどです。欠点: シャーディングシャードに対応するようにアプリケーションロジックを変更しなければなりません。結果としてSQLクエリが複雑になります。シャードではデータ配分がいびつになってしまう可能性があります。例えば、標準ユーザーの集合を持つシャードがある場合、そのシャードが他のシャードよりも重い負荷を負うことになります。リバランシングをすると複雑性がより増します。consistent hashing に基づいたシャーディングでは、通信データを削減することもできます。複数のシャードからのデータを連結するのはより複雑です。シャーディングでは追加のハードウェアが必要になり、複雑性も増します。その他の参考資料、ページ: シャーディングシャードの登場シャードデータベースアーキテクチャConsistent hashing非正規化非正規化では、書き込みのパフォーマンスをいくらか犠牲にして読み込みのパフォーマンスを向上させようとします。計算的に重いテーブルの結合などをせずに、複数のテーブルに冗長なデータのコピーが書き込まれるのを許容します。いくつかのRDBMS例えば、PostgreSQL やOracleはこの冗長な情報を取り扱い、一貫性を保つためのmaterialized views という機能をサポートしています。フェデレーション や シャーディングなどのテクニックによってそれぞれのデータセンターに分配されたデータを合一させることはとても複雑な作業です。非正規化によってそのような複雑な処理をしなくて済むようになります。多くのシステムで、100対1あるいは1000対1くらいになるくらい読み取りの方が、書き込みのトラフィックよりも多いことでしょう。読み込みを行うために、複雑なデータベースのジョイン処理が含まれるものは計算的に高価につきますし、ディスクの処理時間で膨大な時間を費消してしまうことになります。欠点: 非正規化データが複製される。冗長なデータの複製が同期されるように制約が存在し、そのことでデータベース全体の設計が複雑化する。非正規化されたデータベースは過大な書き込みを処理しなければならない場合、正規化されているそれよりもパフォーマンスにおいて劣る可能性がある。その他の参考資料、ページ: 非正規化DenormalizationSQLチューニングSQLチューニングは広範な知識を必要とする分野で多くの 本 が書かれています。ボトルネックを明らかにし、シミュレートする上で、 ベンチマーク を定め、 プロファイル することはとても重要です。ベンチマーク - abなどのツールを用いて、高負荷の状況をシミュレーションしてみましょう。プロファイル - slow query log などのツールを用いて、パフォーマンス状況の確認をしましょう。ベンチマークとプロファイルをとることで以下のような効率化の選択肢をとることになるでしょう。スキーマを絞るMySQLはアクセス速度向上のため、ディスク上の連続したブロックへデータを格納しています。長さの決まったフィールドに対しては VARCHAR よりも CHAR を使うようにしましょう。CHAR の方が効率的に速くランダムにデータにアクセスできます。 一方、 VARCHAR では次のデータに移る前にデータの末尾を検知しなければならないために速度が犠牲になります。ブログの投稿など、大きなテキストには TEXT を使いましょう。 TEXT ではブーリアン型の検索も可能です。 TEXT フィールドには、テキストブロックが配置されている、ディスク上の場所へのポインターが保存されます。2の32乗や40億以下を超えない程度の大きな数には INT を使いましょう。通貨に関しては小数点表示上のエラーを避けるために DECIMAL を使いましょう。大きな BLOBS を保存するのは避けましょう。どこからそのオブジェクトを取ってくることができるかの情報を保存しましょう。VARCHAR(255) は8ビットで数えられる最大の文字数です。一部のDBMSでは、1バイトの利用効率を最大化するためにこの文字数がよく使われます。検索性能向上のため 、可能であれば NOT NULL 制約を設定しましょう。インデックスを効果的に用いるクエリ(SELECT、 GROUP BY、 ORDER BY、 JOIN) の対象となる列にインデックスを使うことで速度を向上できるかもしれません。インデックスは通常、平衡探索木であるB木の形で表されます。B木によりデータは常にソートされた状態になります。また検索、順次アクセス、挿入、削除を対数時間で行えます。インデックスを配置することはデータをメモリーに残すことにつながりより容量を必要とします。インデックスの更新も必要になるため書き込みも遅くなります。大量のデータをロードする際には、インデックスを切ってからデータをロードして再びインデックスをビルドした方が速いことがあります。高負荷なジョインを避けるパフォーマンス上必要なところには非正規化を適用するテーブルのパーティションテーブルを分割し、ホットスポットを独立したテーブルに分離してメモリーに乗せられるようにする。クエリキャッシュを調整する場合によってはクエリキャッシュ がパフォーマンス問題 を引き起こす可能性があるその他の参考資料、ページ: SQLチューニングMySQLクエリを最適化するためのTipsVARCHAR(255)をやたらよく見かけるのはなんで？null値はどのようにパフォーマンスに影響するのか？Slow query logNoSQLNoSQL は key-value store、 document-store、 wide column store、 もしくは graph databaseによって表現されるデータアイテムの集合です。データは一般的に正規化されておらず、アプリケーション側でジョインが行われます。大部分のNoSQLは真のACIDトランザクションを持たず、 結果整合性 的な振る舞いの方を好みます。BASE はしばしばNoSQLデータベースのプロパティを説明するために用いられます。CAP Theorem と対照的に、BASEは一貫性よりも可用性を優先します。Basically available - システムは可用性を保証します。Soft state - システムの状態は入力がなくても時間経過とともに変化する可能性があります。結果整合性 - システム全体は時間経過とともにその間に入力がないという前提のもと、一貫性が達成されます。SQLか？NoSQLか？ を選択するのに加えて、どのタイプのNoSQLがどの使用例に最も適するかを理解するのはとても有益です。このセクションでは キーバリューストア、 ドキュメントストア、 ワイドカラムストア、 と グラフデータベース について触れていきます。キーバリューストア概要: ハッシュテーブルキーバリューストアでは一般的にO(1)の読み書きができ、それらはメモリないしSSDで裏付けられています。データストアはキーを 辞書的順序 で保持することでキーの効率的な取得を可能にしています。キーバリューストアではメタデータを値とともに保持することが可能です。キーバリューストアはハイパフォーマンスな挙動が可能で、単純なデータモデルやインメモリーキャッシュレイヤーなどのデータが急速に変わる場合などに使われます。単純な処理のみに機能が制限されているので、追加の処理機能が必要な場合にはその複雑性はアプリケーション層に載せることになります。キーバリューストアはもっと複雑なドキュメントストアや、グラフデータベースなどの基本です。その他の参考資料、ページ: キーバリューストアキーバリューデータベースキーバリューストアの欠点Redisアーキテクチャメムキャッシュアーキテクチャドキュメントストア概要: ドキュメントがバリューとして保存されたキーバリューストアドキュメントストアはオブジェクトに関する全ての情報を持つドキュメント(XML、 JSON、 binaryなど)を中心に据えたシステムです。ドキュメントストアでは、ドキュメント自身の内部構造に基づいた、APIもしくはクエリ言語を提供します。 メモ：多くのキーバリューストアでは、値のメタデータを扱う機能を含んでいますが、そのことによって二つドキュメントストアとの境界線が曖昧になってしまっています。以上のことを実現するために、ドキュメントはコレクション、タグ、メタデータやディレクトリなどとして整理されています。ドキュメント同士はまとめてグループにできるものの、それぞれで全く異なるフィールドを持つ可能性があります。MongoDB や CouchDB などのドキュメントストアも、複雑なクエリを処理するためのSQLのような言語を提供しています。DynamoDB はキーバリューとドキュメントの両方をサポートしています。ドキュメントストアは高い柔軟性を担保するので、頻繁に変化するデータを扱う時に用いられます。その他の参考資料、ページ:  ドキュメントストアドキュメント指向 データベースMongoDB アーキテクチャCouchDB アーキテクチャElasticsearch アーキテクチャワイドカラムストア      Source: SQL & NoSQL, a brief history概要: ネストされたマップ カラムファミリー<行キー、 カラム<ColKey、 Value、 Timestamp>>ワイドカラムストアのデータの基本単位はカラム（ネーム・バリューのペア）です。それぞれのカラムはカラムファミリーとして（SQLテーブルのように）グループ化することができます。スーパーカラムファミリーはカラムファミリーの集合です。それぞれのカラムには行キーでアクセスすることができます。同じ行キーを持つカラムは同じ行として認識されます。それぞれの値は、バージョン管理とコンフリクトが起きた時のために、タイムスタンプを含みます。GoogleはBigtableを初のワイドカラムストアとして発表しました。それがオープンソースでHadoopなどでよく使われるHBase やFacebookによるCassandra などのプロジェクトに影響を与えました。BigTable、HBaseやCassandraなどのストアはキーを辞書形式で保持することで選択したキーレンジでのデータ取得を効率的にします。ワイドカラムストアは高い可用性とスケーラビリティを担保します。これらはとても大規模なデータセットを扱うことによく使われます。その他の参考資料、ページ:  ワイドカラムストアSQL & NoSQL簡単に歴史をさらうBigtable アーキテクチャHBase アーキテクチャCassandra アーキテクチャグラフデータベース      Source: Graph database概要: グラフグラフデータベースでは、それぞれのノードがレコードで、それぞれのアークは二つのノードを繋ぐ関係性として定義されます。グラフデータベースは多数の外部キーや多対多などの複雑な関係性を表すのに最適です。グラフデータベースはSNSなどのサービスの複雑な関係性モデルなどについて高いパフォーマンスを発揮します。比較的新しく、まだ一般的には用いられていないので、開発ツールやリソースを探すのが他の方法に比べて難しいかもしれません。多くのグラフはREST APIsを通じてのみアクセスできます。その他の参考資料、ページ:  グラフGraphデータベースNeo4jFlockDBその他の参考資料、ページ:  NoSQL基本用語の説明NoSQLデータベースについて調査と選択ガイドスケーラビリティNoSQLのイントロダクションNoSQLパターンSQLか？NoSQLか？      Source: Transitioning from RDBMS to NoSQLSQL を選ぶ理由:構造化されたデータ厳格なスキーマリレーショナルデータ複雑なジョインをする必要性トランザクションスケールする際のパターンが明確なとき開発者の数、コミュニティ、コード等がより充実しているインデックスによるデータ探索はとても速いNoSQL を選ぶ理由:準構造化されたデータダイナミックないし、フレキシブルなスキーマノンリレーショナルなデータ複雑なジョインをする必要がないデータの多くのTB (もしくは PB) を保存する集中的、大規模なデータ負荷に耐えられるIOPSについては極めて高いスループットを示すNoSQLに適するサンプルデータ:急激なクリックストリームやログデータの収集リーダーボードやスコアリングデータショッピングカートなどの一時的情報頻繁にアクセスされる ('ホットな') テーブルメタデータやルックアップテーブルその他の参考資料、ページ:  　SQLもしくはNoSQL最初の1000万ユーザーにスケールアップするためにSQLとNoSQLの違いキャッシュ      Source: Scalable system design patternsキャッシュはページの読み込み時間を削減し、サーバーやデータベースへの負荷を低減することができます。このモデルでは、実際の処理を保存するために、ディスパッチャーがまず以前にリクエストが送信されたかどうかを確認し、直前の結果を受け取ります。データベースはそのパーティションに渡って統合された読み取り書き込みの分配を要求しますが、人気アイテムはその分配を歪めてシステム全体のボトルネックになってしまうことがあります。データベースの前にキャッシュを差し込むことでこのように、均一でない負荷やトラフィックの急激な増加を吸収することができます。クライアントキャッシングキャッシュはOSやブラウザーなどのクライアントサイド、サーバーサイド もしくは独立のキャッシュレイヤーに設置することができます。CDNキャッシングCDN もキャッシュの一つとして考えることができます。Webサーバーキャッシングリバースプロキシ や Varnish などのキャッシュは静的そして動的なコンテンツを直接配信することができます。 webサーバーもリクエストをキャッシュしてアプリケーションサーバーに接続することなしにレスポンスを返すことができます。データベースキャッシングデータベースは普通、一般的な使用状況に適するようなキャッシングの設定を初期状態で持っています。この設定を特定の仕様に合わせて調整することでパフォーマンスを向上させることができます。アプリケーションキャッシングメムキャッシュなどのIn-memoryキャッシュやRedisはアプリケーションとデータストレージの間のキーバリューストアです。データはRAMで保持されるため、データがディスクで保存される一般的なデータベースよりもだいぶ速いです。RAM容量はディスクよりも限られているので、least recently used (LRU)などのcache invalidation アルゴリズムが 'コールド' なエントリを弾き、'ホット' なデータをRAMに保存します。Redisはさらに以下のような機能を備えています:パージステンス設定ソート済みセット、リストなどの組み込みデータ構造キャッシュには様々なレベルのものがありますが、いずれも大きく二つのカテゴリーのいずれかに分類することができます: データベースクエリ と オブジェクト です:行レベルクエリレベルFully-formed serializable objectsFully-rendered HTML一般的に、ファイルベースキャッシングはクローンを作り出してオートスケーリングを難しくしてしまうので避けるべきです。データベースクエリレベルでのキャッシングデータベースをクエリする際には必ずクエリをキーとしてハッシュして結果をキャッシュに保存しましょう。この手法はキャッシュ期限切れ問題に悩むことになります:複雑なクエリによりキャッシュされた結果を削除することが困難テーブルセルなどのデータ断片が変化した時に、その変化したセルを含むかもしれない全てのキャッシュされたクエリを削除する必要がある。オブジェクトレベルでのキャッシングデータをアプリケーションコードでそうするように、オブジェクトとして捉えてみましょう。アプリケーションに、データベースからのデータセットをクラスインスタンスやデータ構造として組み立てさせます。:そのデータが変更されたら、オブジェクトをキャッシュから削除すること非同期処理を許容します: ワーカーがキャッシュされたオブジェクトの中で最新のものを集めてきます何をキャッシュするか:ユーザーのセッション完全にレンダーされたウェブページアクテビティストリームユーザーグラフデータいつキャッシュを更新するかキャッシュに保存できる容量は限られているため、自分のケースではどのキャッシュ手法が一番いいかは検討する必要があります。キャッシュアサイド      Source: From cache to in-memory data gridアプリケーションはストレージへの読み書きの処理をします。キャッシュはストレージとは直接やりとりをしません。アプリケーションは以下のことをします:キャッシュの中のエントリを参照しますが、結果としてキャッシュミスになりますデータベースからエントリを取得しますエントリをキャッシュに追加しますエントリを返しますdef get_user(self, user_id):    user = cache.get(\""user.{0}\"", user_id)    if user is None:        user = db.query(\""SELECT * FROM users WHERE user_id = {0}\"", user_id)        if user is not None:            key = \""user.{0}\"".format(user_id)            cache.set(key, json.dumps(user))    return userMemcached は通常このように使われる。その後のキャッシュデータ読み込みは速いです。キャッシュアサイドはレージーローディングであるとも言われます。リクエストされたデータのみがキャッシュされ、リクエストされていないデータでキャッシュが溢れるのを防止します。欠点: キャッシュアサイド各キャッシュミスは三つのトリップを呼び出すことになり、体感できるほどの遅延が起きてしまいます。データベースのデータが更新されるとキャッシュデータは古いものになってしまいます。time-to-live (TTL)を設定することでキャッシュエントリの更新を強制的に行う、もしくはライトスルーを採用することでこの問題は緩和できます。ノードが落ちると、新規の空のノードで代替されることでレイテンシーが増加することになります。ライトスルー      Source: Scalability, availability, stability, patternsアプリケーションはキャッシュをメインのデータストアとして使い、そこにデータの読み書きを行います。一方、キャッシュはデータベースへの読み書きを担当します。アプリケーションはキャッシュにあるエントリを追加・更新しますキャッシュは同期的にデータストアに書き込みを行いますエントリを返しますアプリケーションコード:set_user(12345, {\""foo\"":\""bar\""})キャッシュコード:def set_user(user_id, values):    user = db.query(\""UPDATE Users WHERE id = {0}\"", user_id, values)    cache.set(user_id, user)ライトスルーは書き込み処理のせいで全体としては遅いオペレーションですが、書き込まれたばかりのデータに関する読み込みは速いです。ユーザー側は一般的にデータ更新時の方が読み込み時よりもレイテンシーに許容的です。キャッシュ内のデータは最新版で保たれます。欠点: ライトスルーノードが落ちたこと、もしくはスケーリングによって新しいノードが作成された時に、新しいノードはデータベース内のエントリーが更新されるまではエントリーをキャッシュしません。キャッシュアサイドとライトスルーを併用することでこの問題を緩和できます。書き込まれたデータの大部分は一度も読み込まれることはありません。このデータはTTLによって圧縮することができます。ライトビハインド (ライトバック)      Source: Scalability, availability, stability, patternsライトビハインドではアプリケーションは以下のことをします:キャッシュのエントリーを追加・更新しますデータストアへの書き込みを非同期的に行うことで、書き込みパフォーマンスを向上させます。欠点: ライトビハインドキャッシュがデータストア内のコンテンツにヒットする前にキャッシュが落ちるとデータ欠損が起きる可能性があります。キャッシュアサイドやライトスルーよりも実装が複雑になります。リフレッシュアヘッド      Source: From cache to in-memory data grid期限切れよりも前に、直近でアクセスされた全てのキャッシュエントリを自動的に更新するように設定することができます。もしどのアイテムが将来必要になるのかを正確に予測することができるのならば、リードスルーよりもレイテンシーを削減することができます。欠点: リフレッシュアヘッドどのアイテムが必要になるかの予測が正確でない場合にはリフレッシュアヘッドがない方がレイテンシーは良いという結果になってしまいます。欠点: キャッシュcache invalidationなどを用いて、データベースなどの真のデータとキャッシュの間の一貫性を保つ必要があります。Redisやmemcachedを追加することでアプリケーション構成を変更する必要があります。Cache invalidationも難しいですがそれに加えて、いつキャッシュを更新するかという複雑な問題にも悩まされることになります。その他の参考資料、ページFrom cache to in-memory data gridスケーラブルなシステムデザインパターンスケールできるシステムを設計するためのイントロダクションスケーラビリティ、可用性、安定性、パターンスケーラビリティAWS ElastiCacheのストラテジーWikipedia非同期処理      Source: Intro to architecting systems for scale非同期のワークフローはもし、連続的に行われるとリクエスト時間を圧迫してしまうような重い処理を別で処理する手法です。また、定期的にデータを集合させるなどの時間がかかるような処理を前もって処理しておくことにも役立ちます。メッセージキューメッセージキューはメッセージを受け取り、保存し、配信します。もし、処理がインラインで行うには遅すぎる場合、以下のようなワークフローでメッセージキューを用いるといいでしょう:アプリケーションはジョブをキューに配信し、ユーザーにジョブステータスを伝えます。ワーカーがジョブキューから受け取って、処理を行い、終了したらそのシグナルを返します。ユーザーの処理が止まることはなく、ジョブはバックグラウンドで処理されます。この間に、クライアントはオプションとして、タスクが完了したかのように見せるために小規模の処理を行います。例えば、ツイートを投稿するときに、ツイートはすぐにあなたのタイムラインに反映されたように見えますが、そのツイートが実際に全てのフォロワーに配信されるまでにはもう少し時間がかかっているでしょう。Redis はシンプルなメッセージ仲介としてはいいですが、メッセージが失われてしまう可能性があります。RabbitMQ はよく使われていますが、'AMQP'プロトコルに対応して、自前のノードを立てる必要があります。Amazon SQS という選択肢もありますが、レイテンシーが高く、メッセージが重複して配信されてしまう可能性があります。タスクキュータスクキューはタスクとその関連するデータを受け取り、処理した上でその結果を返します。スケジュール管理をできるほか、バックグラウンドでとても重いジョブをこなすこともできます。Celery はスケジューリングとpythonのサポートがあります。バックプレッシャーもし、キューが拡大しすぎると、メモリーよりもキューの方が大きくなりキャッシュミスが起こり、ディスク読み出しにつながり、パフォーマンスが低下することにつながります。バックプレッシャーはキューサイズを制限することで回避することができ、高いスループットを確保しキューにすでにあるジョブについてのレスポンス時間を短縮できます。キューがいっぱいになると、クライアントはサーバービジーもしくはHTTP 503をレスポンスとして受け取りまた後で時間をおいてアクセスするようにメッセージを受け取ります。クライアントはexponential backoffなどによって後ほど再度時間を置いてリクエストすることができます。欠点: 非同期処理キューを用いることで遅延が起こり、複雑さも増すため、あまり重くない計算処理やリアルタイムワークフローにおいては同期処理の方がいいでしょう。その他の参考資料、ページIt's all a numbers gameオーバーロードした時にバックプレッシャーを適用するLittle's lawメッセージキューとタスクキューの違いとは？通信      Source: OSI 7 layer modelHypertext transfer protocol (HTTP)HTTP はクライアントとサーバー間でのデータをエンコードして転送するための手法です。リクエスト・レスポンスに関わるプロトコルです。クライアントがリクエストをサーバーに投げ、サーバーがリクエストに関係するコンテンツと完了ステータス情報をレスポンスとして返します。HTTPは自己完結するので、間にロードバランサー、キャッシュ、エンクリプション、圧縮などのどんな中間ルーターが入っても動くようにできています。基本的なHTTPリクエストはHTTP動詞(メソッド)とリソース(エンドポイント)で成り立っています。以下がよくあるHTTP動詞です。:動詞詳細冪等性*セーフキャッシュできるかGETリソースを読み取るYesYesYesPOSTリソースを作成するもしくはデータを処理するトリガーNoNoYes レスポンスが新しい情報を含む場合PUTリソースを作成もしくは入れ替えるYesNoNoPATCHリソースを部分的に更新するNoNoYes レスポンスが新しい情報を含む場合DELETEリソースを削除するYesNoNo何度呼んでも同じ結果が返ってくることHTTPはTCP や UDP などの低級プロトコルに依存しているアプリケーションレイヤーのプロトコルである。その他の参考資料、ページ: HTTPHTTPってなに?HTTP と TCPの違いPUT と PATCHの違い伝送制御プロトコル (TCP)      Source: How to make a multiplayer gameTCPはIP networkの上で成り立つ接続プロトコルです。接続はhandshakeによって開始、解除されます。全ての送信されたパケットは欠損なしで送信先に送信された順番で到達するように以下の方法で保証されています:シーケンス番号とchecksum fieldsが全てのパケットに用意されているAcknowledgementパケットと自動再送信もし送信者が正しいレスポンスを受け取らなかったとき、パケットを再送信します。複数のタイムアウトがあったとき、接続は解除されます。TCP はフロー制御 と 輻輳制御も実装しています。これらの機能によって速度は低下し、一般的にUDPよりも非効率な転送手段になっています。ハイスループットを実現するために、ウェブサーバーはかなり大きな数のTCP接続を開いておくことがあり、そのことでメモリー使用が圧迫されます。ウェブサーバスレッドと例えばmemcached サーバーの間で多数のコネクションを保っておくことは高くつくかもしれません。可能なところではUDPに切り替えるだけでなくコネクションプーリングなども役立つかもしれません。TCPは高い依存性を要し、時間制約が厳しくないものに適しているでしょう。ウェブサーバー、データベース情報、SMTP、FTPやSSHなどの例に適用されます。以下の時にUDPよりもTCPを使うといいでしょう:全てのデータが欠損することなしに届いてほしいネットワークスループットの最適な自動推測をしてオペレーションしたいユーザデータグラムプロトコル (UDP)      Source: How to make a multiplayer gameUDPはコネクションレスです。データグラム（パケットのようなもの）はデータグラムレベルでの保証しかされません。データグラムは順不同で受け取り先に到着したりそもそも着かなかったりします。UDPは輻輳制御をサポートしません。TCPにおいてはサポートされているこれらの保証がないため、UDPは一般的に、TCPよりも効率的です。UDPはサブネット上のすべての機器にデータグラムを送信することができます。これはDHCP において役に立ちます。というのも、クライアントはまだIPアドレスを取得していないので、IPアドレスを必要とするTCPによるストリームができないからです。UDPは信頼性の面では劣りますが、VoIP、ビデオチャット、ストリーミングや同時通信マルチプレイヤーゲームなどのリアルタイム性が重視される時にはとても効果的です。TCPよりもUDPを使うのは:レイテンシーを最低限に抑えたい時データ欠損よりも、データ遅延を重視するときエラー修正を自前で実装したいときその他の参考資料、ページ: TCP と UDPゲームプログラミングのためのネットワークTCP と UDP プロトコルの主な違いTCP と UDPの違いTransmission control protocolUser datagram protocolFacebookのメムキャッシュスケーリング遠隔手続呼出 (RPC)      Source: Crack the system design interviewRPCではクライアントがリモートサーバーなどの異なるアドレス空間でプロシージャーが処理されるようにします。プロシージャーはローカルでのコールのように、クライアントからサーバーにどのように通信するかという詳細を省いた状態でコードが書かれます。リモートのコールは普通、ローカルのコールよりも遅く、信頼性に欠けるため、RPCコールをローカルコールと区別させておくことが好ましいでしょう。人気のRPCフレームワークは以下です。Protobuf、 Thrift、AvroRPC は リクエストレスポンスプロトコル:クライアントプログラム - クライアントスタブプロシージャーを呼び出します。パラメータはローカルでのプロシージャーコールのようにスタックへとプッシュされていきます。クライアントスタブプロシージャー - プロシージャIDとアーギュメントをパックしてリクエストメッセージにします。クライアント通信モジュール - OSがクライアントからサーバーへとメッセージを送ります。サーバー通信モジュール - OSが受け取ったパケットをサーバースタブプロシージャーに受け渡します。サーバースタブプロシージャー -  結果を展開し、プロシージャーIDにマッチするサーバープロシージャーを呼び出し、結果を返します。サーバーレスポンスは上記のステップを逆順で繰り返します。Sample RPC calls:GET /someoperation?data=anIdPOST /anotheroperation{  \""data\"":\""anId\"";  \""anotherdata\"": \""another value\""}RPCは振る舞いを公開することに焦点を当てています。RPCは内部通信パフォーマンスを理由として使われることが多いです。というのも、使用する状況に合わせてネイティブコールを自作することができるからです。ネイティブライブラリー (aka SDK) を呼ぶのは以下の時:ターゲットのプラットフォームを知っている時ロジックがどのようにアクセスされるのかを管理したいときライブラリー外でエラーがどのようにコントロールされるかを管理したい時パフォーマンスとエンドユーザーエクスペリエンスが最優先の時REST プロトコルに従うHTTP APIはパブリックAPIにおいてよく用いられます。欠点: RPCRPCクライアントとはサービス実装により厳密に左右されることになります。新しいオペレーション、使用例があるたびに新しくAPIが定義されなければなりません。RPCをデバッグするのは難しい可能性があります。既存のテクノロジーをそのまま使ってサービスを構築することはできないかもしれません。例えば、SquidなどのサーバーにRPCコールが正しくキャッシュ されるように追加で骨を折る必要があるかもしれません。Representational state transfer (REST)RESTは、クライアントがサーバーによってマネージされるリソースに対して処理を行うクライアント・サーバーモデルを支持するアーキテキチャスタイルです。サーバーは操作できるもしくは新しいリソースレプレゼンテーションを受け取ることができるようなリソースやアクションのレプレゼンテーションを提供します。すべての通信はステートレスでキャッシュ可能でなければなりません。RESTful なインターフェースには次の四つの特徴があります:特徴的なリソース (URI in HTTP) - どのオペレーションであっても同じURIを使う。HTTP動詞によって変わる (Verbs in HTTP) - 動詞、ヘッダー、ボディを使う自己説明的なエラーメッセージ (status response in HTTP) - ステータスコードを使い、新しく作ったりしないこと。HATEOAS (HTML interface for HTTP) - 自分のwebサービスがブラウザで完全にアクセスできること。サンプル REST コール:GET /someresources/anIdPUT /someresources/anId{\""anotherdata\"": \""another value\""}RESTはデータを公開することに焦点を当てています。クライアントとサーバーのカップリングを最小限にするもので、パブリックAPIなどによく用いられます。RESTはURI、 representation through headers、そして、GET、POST、PUT、 DELETE、PATCHなどのHTTP動詞等のよりジェネリックで統一されたメソッドを用います。ステートレスであるのでRESTは水平スケーリングやパーティショニングに最適です。欠点: RESTRESTはデータ公開に焦点を当てているので、リソースが自然に整理されていなかったり、シンプルなヒエラルキーで表せられない時にはよい選択肢とは言えないかもしれません。例えば、とあるイベントのセットにマッチするすべての更新情報を返すと言った処理は簡単にはパスで表現することができません。RESTでは、URIパス、クエリパラメータ、そして場合によってはリクエストボディなどによって実装されることが多いでしょう。RESTは少数の動詞に依存しています(GET、POST、PUT、DELETE、そして PATCH) が時には使いたい事例に合わないことがあります。例えば、期限の切れたドキュメントをアーカイブに移したい場合などはこれらの動詞の中には綺麗にはフィットしません。ネストされたヒエラルキーの中にあるリソースをとってくるのはシングルビューを描画するのにクライアントとサーバー間で数回やりとりしなければなりません。例として、ブログエントリーのコンテンツとそれに対するコメントを表示する場合などです。様々なネットワーク環境で動作する可能性が考えられるモバイルアプリケーションにおいてはこのような複数のやり取りは好ましくありません。時が経つにつれて、APIレスポンスにより多くのフィールドが与えられて、古いクライアントはすでにいらないものも含めてすべてのデータフィールドを受け取ることになります。そのことで、ペイロードが大きくなりすぎて、レイテンシーも拡大することになります。RPCとREST比較OperationRPCRESTサインアップPOST /signupPOST /personsリザインPOST /resign{\""personid\"": \""1234\""}DELETE /persons/1234Person読み込みGET /readPerson?personid=1234GET /persons/1234Personのアイテムリスト読み込みGET /readUsersItemsList?personid=1234GET /persons/1234/itemsPersonのアイテムへのアイテム追加POST /addItemToUsersItemsList{\""personid\"": \""1234\"";\""itemid\"": \""456\""}POST /persons/1234/items{\""itemid\"": \""456\""}アイテム更新POST /modifyItem{\""itemid\"": \""456\"";\""key\"": \""value\""}PUT /items/456{\""key\"": \""value\""}アイテム削除POST /removeItem{\""itemid\"": \""456\""}DELETE /items/456  Source: Do you really know why you prefer REST over RPCその他の参考資料、ページ: REST と RPCDo you really know why you prefer REST over RPCWhen are RPC-ish approaches more appropriate than REST?REST vs JSON-RPCDebunking the myths of RPC and RESTWhat are the drawbacks of using RESTCrack the system design interviewThriftWhy REST for internal use and not RPCセキュリティこのセクションは更新が必要です。contributingしてください！セキュリティは幅広いトピックです。十分な経験、セキュリティ分野のバックグラウンドがなくても、セキュリティの知識を要する職に応募するのでない限り、基本以上のことを知る必要はないでしょう。情報伝達、保存における暗号化XSS や SQL injectionを防ぐために、全てのユーザー入力もしくはユーザーに露出される入力パラメーターをサニタイズするSQL injectionを防ぐためにパラメータ化されたクエリを用いる。least privilegeの原理を用いるその他の参考資料、ページ:開発者のためのセキュリティガイドOWASP top ten補遺暗算で、推計値を求める必要があることも時にはあります。例えば、ディスクから100枚イメージ分のサムネイルを作る時間を求めたり、その時にどれだけディスクメモリーが消費されるかなどの値です。2の乗数表 と 全てのプログラマーが知るべきレイテンシー値 は良い参考になるでしょう。2の乗数表乗数           厳密な値         約        Bytes---------------------------------------------------------------7                             1288                             25610                           1024   1 thousand           1 KB16                         65,536                       64 KB20                      1,048,576   1 million            1 MB30                  1,073,741,824   1 billion            1 GB32                  4,294,967,296                        4 GB40              1,099,511,627,776   1 trillion           1 TBその他の参考資料、ページ:2の乗数表全てのプログラマーが知るべきレイテンシー値Latency Comparison Numbers--------------------------L1 cache reference                           0.5 nsBranch mispredict                            5   nsL2 cache reference                           7   ns                      14x L1 cacheMutex lock/unlock                           25   nsMain memory reference                      100   ns                      20x L2 cache, 200x L1 cacheCompress 1K bytes with Zippy            10,000   ns       10 usSend 1 KB bytes over 1 Gbps network     10,000   ns       10 usRead 4 KB randomly from SSD*           150,000   ns      150 us          ~1GB/sec SSDRead 1 MB sequentially from memory     250,000   ns      250 usRound trip within same datacenter      500,000   ns      500 usRead 1 MB sequentially from SSD*     1,000,000   ns    1,000 us    1 ms  ~1GB/sec SSD, 4X memoryDisk seek                           10,000,000   ns   10,000 us   10 ms  20x datacenter roundtripRead 1 MB sequentially from 1 Gbps  10,000,000   ns   10,000 us   10 ms  40x memory, 10X SSDRead 1 MB sequentially from disk    30,000,000   ns   30,000 us   30 ms 120x memory, 30X SSDSend packet CA->Netherlands->CA    150,000,000   ns  150,000 us  150 msNotes-----1 ns = 10^-9 seconds1 us = 10^-6 seconds = 1,000 ns1 ms = 10^-3 seconds = 1,000 us = 1,000,000 ns上記表に基づいた役に立つ数値:ディスクからの連続読み取り速度 30 MB/s1 Gbps Ethernetからの連続読み取り速度　100 MB/sSSDからの連続読み取り速度 1 GB/smain memoryからの連続読み取り速度 4 GB/s1秒で地球6-7周できる1秒でデータセンターと2000周やりとりできるレイテンシーの視覚的表その他の参考資料、ページ:全てのプログラマーが知るべきレイテンシー値 - 1全てのプログラマーが知るべきレイテンシー値 - 2Designs, lessons, and advice from building large distributed systemsSoftware Engineering Advice from Building Large-Scale Distributed Systems他のシステム設計面接例題頻出のシステム設計面接課題とその解答へのリンク質問解答Dropboxのようなファイル同期サービスを設計するyoutube.comGoogleのような検索エンジンの設計queue.acm.orgstackexchange.comardendertat.comstanford.eduGoogleのようなスケーラブルなwebクローラーの設計quora.comGoogle docsの設計code.google.comneil.fraser.nameRedisのようなキーバリューストアの設計slideshare.netMemcachedのようなキャッシュシステムの設計slideshare.netAmazonのようなレコメンデーションシステムの設計hulu.comijcai13.orgBitlyのようなURL短縮サービスの設計n00tc0d3r.blogspot.comWhatsAppのようなチャットアプリの設計highscalability.comInstagramのような写真共有サービスの設計highscalability.comhighscalability.comFacebookニュースフィードの設計quora.comquora.comslideshare.netFacebookタイムラインの設計facebook.comhighscalability.comFacebookチャットの設計erlang-factory.comfacebook.comFacebookのようなgraph検索の設計facebook.comfacebook.comfacebook.comCloudFlareのようなCDNの設計cmu.eduTwitterのトレンド機能の設計michael-noll.comsnikolov .wordpress.comランダムID発行システムの設計blog.twitter.comgithub.com一定のインターバル時間での上位k件を返すucsb.eduwpi.edu複数のデータセンターからデータを配信するサービスの設計highscalability.comオンラインの複数プレイヤーカードゲームの設計indieflashblog.combuildnewgames.comガーベッジコレクションシステムの設計stuffwithstuff.comwashington.eduシステム設計例題を追加するContribute実世界のアーキテクチャ世の中のシステムがどのように設計されているかについての記事      Source: Twitter timelines at scale以下の記事の重箱の隅をつつくような細かい詳細にこだわらないこと。むしろ共通の原理、技術、パターンを探ることそれぞれのコンポーネントでどんな問題が解決され、コンポーネントはどこでうまく使えもしくは使えないかを知ること学んだことを復習すること種類システム参考ページデータ処理MapReduce - Googleの分散データ処理システムresearch.google.comデータ処理Spark - Databricksの分散データ処理システムslideshare.netデータ処理Storm - Twitterの分散データ処理システムslideshare.netデータストアBigtable - Googleのカラム指向分散データベースharvard.eduデータストアHBase - Bigtableのオープンソース実装slideshare.netデータストアCassandra - Facebookのカラム指向分散データベースslideshare.netデータストアDynamoDB - Amazonのドキュメント指向分散データベースharvard.eduデータストアMongoDB - ドキュメント指向分散データベースslideshare.netデータストアSpanner - Googleのグローバル分散データベースresearch.google.comデータストアMemcached - 分散メモリーキャッシングシステムslideshare.netデータストアRedis - 永続性とバリュータイプを兼ね備えた分散メモリーキャッシングシステムslideshare.netファイルシステムGoogle File System (GFS) - 分散ファイルシステムresearch.google.comファイルシステムHadoop File System (HDFS) - GFSのオープンソース実装apache.orgMiscChubby - 疎結合の分散システムをロックするGoogleのサービスresearch.google.comMiscDapper - 分散システムを追跡するインフラresearch.google.comMiscKafka - LinkedInによるPub/subメッセージキューslideshare.netMiscZookeeper - 同期を可能にする中央集権インフラとサービスslideshare.netアーキテクチャを追加するContribute各企業のアーキテクチャ企業参考ページAmazonAmazon architectureCinchcastProducing 1,500 hours of audio every dayDataSiftRealtime datamining At 120,000 tweets per secondDropBoxHow we've scaled DropboxESPNOperating At 100,000 duh nuh nuhs per secondGoogleGoogle architectureInstagram14 million users, terabytes of photosWhat powers InstagramJustin.tvJustin.Tv's live video broadcasting architectureFacebookScaling memcached at FacebookTAO: Facebook’s distributed data store for the social graphFacebook’s photo storageFlickrFlickr architectureMailboxFrom 0 to one million users in 6 weeksPinterestFrom 0 To 10s of billions of page views a month18 million visitors, 10x growth, 12 employeesPlayfish50 million monthly users and growingPlentyOfFishPlentyOfFish architectureSalesforceHow they handle 1.3 billion transactions a dayStack OverflowStack Overflow architectureTripAdvisor40M visitors, 200M dynamic page views, 30TB dataTumblr15 billion page views a monthTwitterMaking Twitter 10000 percent fasterStoring 250 million tweets a day using MySQL150M active users, 300K QPS, a 22 MB/S firehoseTimelines at scaleBig and small data at TwitterOperations at Twitter: scaling beyond 100 million usersUberHow Uber scales their real-time market platformWhatsAppThe WhatsApp architecture Facebook bought for $19 billionYouTubeYouTube scalabilityYouTube architecture企業のエンジニアブログ面接を受ける企業のアーキテクチャ投げられる質問は同じ分野から来ることもあるでしょうAirbnb EngineeringAtlassian DevelopersAutodesk EngineeringAWS BlogBitly Engineering BlogBox BlogsCloudera Developer BlogDropbox Tech BlogEngineering at QuoraEbay Tech BlogEvernote Tech BlogEtsy Code as CraftFacebook EngineeringFlickr CodeFoursquare Engineering BlogGitHub Engineering BlogGoogle Research BlogGroupon Engineering BlogHeroku Engineering BlogHubspot Engineering BlogHigh ScalabilityInstagram EngineeringIntel Software BlogJane Street Tech BlogLinkedIn EngineeringMicrosoft EngineeringMicrosoft Python EngineeringNetflix Tech BlogPaypal Developer BlogPinterest Engineering BlogQuora EngineeringReddit BlogSalesforce Engineering BlogSlack Engineering BlogSpotify LabsTwilio Engineering BlogTwitter EngineeringUber Engineering BlogYahoo Engineering BlogYelp Engineering BlogZynga Engineering Blogその他の参考資料、ページ:kilimchoi/engineering-blogsここにあるリストは比較的小規模なものにとどめ、kilimchoi/engineering-blogsにより詳細に記すことで重複しないようにしておくことにする。エンジニアブログへのリンクを追加する場合はここではなく、engineering-blogsレボジトリに追加することを検討してください。進行中の作業セクションの追加や、進行中の作業を手伝っていただける場合はこちら!MapReduceによる分散コンピューティングConsistent hashingScatter gatherContributeクレジットクレジット及び、参照ページは適時このリポジトリ内に記載してありますSpecial thanks to:Hired in techCracking the coding interviewHigh scalabilitycheckcheckzz/system-design-interviewshashank88/system_designmmcgrana/services-engineeringSystem design cheat sheetA distributed systems reading listCracking the system design interviewContact infoFeel free to contact me to discuss any issues, questions, or comments.My contact info can be found on my GitHub page.LicenseI am providing code and resources in this repository to you under an open source license.  Because this is my personal repository, the license you receive to my code and resources is from me and not my employer (Facebook).Copyright 2017 Donne MartinCreative Commons Attribution 4.0 International License (CC BY 4.0)http://creativecommons.org/licenses/by/4.0/"
2,2,Significant-Gravitas/Auto-GPT,https://github.com/Significant-Gravitas/Auto-GPT/blob/master/README.md,Python,"Auto-GPT: An Autonomous GPT-4 Experiment💡 Get help - Q&A or Discord 💬🔴 USE stable not master 🔴Download the latest stable release from here: https://github.com/Significant-Gravitas/Auto-GPT/releases/latest.The master branch is under heavy development and may often be in a broken state.Auto-GPT is an experimental open-source application showcasing the capabilities of the GPT-4 language model. This program, driven by GPT-4, chains together LLM \""thoughts\"", to autonomously achieve whatever goal you set. As one of the first examples of GPT-4 running fully autonomously, Auto-GPT pushes the boundaries of what is possible with AI. Demo April 16th 2023               AutoGPTDemo_Subs_WithoutFinalScreen.mp4          Demo made by Blake Werlinger🚀 Features🌐 Internet access for searches and information gathering💾 Long-term and short-term memory management🧠 GPT-4 instances for text generation🔗 Access to popular websites and platforms🗃️ File storage and summarization with GPT-3.5🔌 Extensibility with PluginsQuickstartCheck out the wikiGet an OpenAI API KeyDownload the latest releaseFollow the installation instructionsConfigure any additional features you want, or install some pluginsRun the appPlease see the documentation for full setup instructions and configuration options.📖 Documentation⚙️ Setup💻 Usage🔌 PluginsConfiguration🔍 Web Search🧠 Memory🗣️ Voice (TTS)🖼️ Image Generation 💖 Help Fund Auto-GPT's Development 💖If you can spare a coffee, you can help to cover the costs of developing Auto-GPT and help to push the boundaries of fully autonomous AI!Your support is greatly appreciated. Development of this free, open-source project is made possible by all the contributors and sponsors. If you'd like to sponsor this project and have your avatar or company logo appear below click here.                                                                                                                                                                                                                                                                                                                                          ⚠️ LimitationsThis experiment aims to showcase the potential of GPT-4 but comes with some limitations:Not a polished application or product, just an experimentMay not perform well in complex, real-world business scenarios. In fact, if it actually does, please share your results!Quite expensive to run, so set and monitor your API key limits with OpenAI!🛡 DisclaimerThis project, Auto-GPT, is an experimental application and is provided \""as-is\"" without any warranty, express or implied. By using this software, you agree to assume all risks associated with its use, including but not limited to data loss, system failure, or any other issues that may arise.The developers and contributors of this project do not accept any responsibility or liability for any losses, damages, or other consequences that may occur as a result of using this software. You are solely responsible for any decisions and actions taken based on the information provided by Auto-GPT.Please note that the use of the GPT-4 language model can be expensive due to its token usage. By utilizing this project, you acknowledge that you are responsible for monitoring and managing your own token usage and the associated costs. It is highly recommended to check your OpenAI API usage regularly and set up any necessary limits or alerts to prevent unexpected charges.As an autonomous experiment, Auto-GPT may generate content or take actions that are not in line with real-world business practices or legal requirements. It is your responsibility to ensure that any actions or decisions made based on the output of this software comply with all applicable laws, regulations, and ethical standards. The developers and contributors of this project shall not be held responsible for any consequences arising from the use of this software.By using Auto-GPT, you agree to indemnify, defend, and hold harmless the developers, contributors, and any affiliated parties from and against any and all claims, damages, losses, liabilities, costs, and expenses (including reasonable attorneys' fees) arising from your use of this software or your violation of these terms.🐦 Connect with Us on TwitterStay up-to-date with the latest news, updates, and insights about Auto-GPT by following our Twitter accounts. Engage with the developer and the AI's own account for interesting discussions, project updates, and more.Developer: Follow @siggravitas for insights into the development process, project updates, and related topics from the creator of Entrepreneur-GPT.We look forward to connecting with you and hearing your thoughts, ideas, and experiences with Auto-GPT. Join us on Twitter and let's explore the future of AI together!        "
3,3,AUTOMATIC1111/stable-diffusion-webui,https://github.com/AUTOMATIC1111/stable-diffusion-webui/blob/master/README.md,Python,"Stable Diffusion web UIA browser interface based on Gradio library for Stable Diffusion.FeaturesDetailed feature showcase with images:Original txt2img and img2img modesOne click install and run script (but you still must install python and git)OutpaintingInpaintingColor SketchPrompt MatrixStable Diffusion UpscaleAttention, specify parts of text that the model should pay more attention toa man in a ((tuxedo)) - will pay more attention to tuxedoa man in a (tuxedo:1.21) - alternative syntaxselect text and press Ctrl+Up or Ctrl+Down (or Command+Up or Command+Down if you're on a MacOS) to automatically adjust attention to selected text (code contributed by anonymous user)Loopback, run img2img processing multiple timesX/Y/Z plot, a way to draw a 3 dimensional plot of images with different parametersTextual Inversionhave as many embeddings as you want and use any names you like for themuse multiple embeddings with different numbers of vectors per tokenworks with half precision floating point numberstrain embeddings on 8GB (also reports of 6GB working)Extras tab with:GFPGAN, neural network that fixes facesCodeFormer, face restoration tool as an alternative to GFPGANRealESRGAN, neural network upscalerESRGAN, neural network upscaler with a lot of third party modelsSwinIR and Swin2SR (see here), neural network upscalersLDSR, Latent diffusion super resolution upscalingResizing aspect ratio optionsSampling method selectionAdjust sampler eta values (noise multiplier)More advanced noise setting optionsInterrupt processing at any time4GB video card support (also reports of 2GB working)Correct seeds for batchesLive prompt token length validationGeneration parametersparameters you used to generate images are saved with that imagein PNG chunks for PNG, in EXIF for JPEGcan drag the image to PNG info tab to restore generation parameters and automatically copy them into UIcan be disabled in settingsdrag and drop an image/text-parameters to promptboxRead Generation Parameters Button, loads parameters in promptbox to UISettings pageRunning arbitrary python code from UI (must run with --allow-code to enable)Mouseover hints for most UI elementsPossible to change defaults/mix/max/step values for UI elements via text configTiling support, a checkbox to create images that can be tiled like texturesProgress bar and live image generation previewCan use a separate neural network to produce previews with almost none VRAM or compute requirementNegative prompt, an extra text field that allows you to list what you don't want to see in generated imageStyles, a way to save part of prompt and easily apply them via dropdown laterVariations, a way to generate same image but with tiny differencesSeed resizing, a way to generate same image but at slightly different resolutionCLIP interrogator, a button that tries to guess prompt from an imagePrompt Editing, a way to change prompt mid-generation, say to start making a watermelon and switch to anime girl midwayBatch Processing, process a group of files using img2imgImg2img Alternative, reverse Euler method of cross attention controlHighres Fix, a convenience option to produce high resolution pictures in one click without usual distortionsReloading checkpoints on the flyCheckpoint Merger, a tab that allows you to merge up to 3 checkpoints into oneCustom scripts with many extensions from communityComposable-Diffusion, a way to use multiple prompts at onceseparate prompts using uppercase ANDalso supports weights for prompts: a cat :1.2 AND a dog AND a penguin :2.2No token limit for prompts (original stable diffusion lets you use up to 75 tokens)DeepDanbooru integration, creates danbooru style tags for anime promptsxformers, major speed increase for select cards: (add --xformers to commandline args)via extension: History tab: view, direct and delete images conveniently within the UIGenerate forever optionTraining tabhypernetworks and embeddings optionsPreprocessing images: cropping, mirroring, autotagging using BLIP or deepdanbooru (for anime)Clip skipHypernetworksLoras (same as Hypernetworks but more pretty)A sparate UI where you can choose, with preview, which embeddings, hypernetworks or Loras to add to your promptCan select to load a different VAE from settings screenEstimated completion time in progress barAPISupport for dedicated inpainting model by RunwayMLvia extension: Aesthetic Gradients, a way to generate images with a specific aesthetic by using clip images embeds (implementation of https://github.com/vicgalle/stable-diffusion-aesthetic-gradients)Stable Diffusion 2.0 support - see wiki for instructionsAlt-Diffusion support - see wiki for instructionsNow without any bad letters!Load checkpoints in safetensors formatEased resolution restriction: generated image's domension must be a multiple of 8 rather than 64Now with a license!Reorder elements in the UI from settings screenInstallation and RunningMake sure the required dependencies are met and follow the instructions available for both NVidia (recommended) and AMD GPUs.Alternatively, use online services (like Google Colab):List of Online ServicesInstallation on Windows 10/11 with NVidia-GPUs using release packageDownload sd.webui.zip from v1.0.0-pre and extract it's contents.Run update.bat.Run run.bat.For more details see Install-and-Run-on-NVidia-GPUsAutomatic Installation on WindowsInstall Python 3.10.6 (Newer version of Python does not support torch), checking \""Add Python to PATH\"".Install git.Download the stable-diffusion-webui repository, for example by running git clone https://github.com/AUTOMATIC1111/stable-diffusion-webui.git.Run webui-user.bat from Windows Explorer as normal, non-administrator, user.Automatic Installation on LinuxInstall the dependencies:# Debian-based:sudo apt install wget git python3 python3-venv# Red Hat-based:sudo dnf install wget git python3# Arch-based:sudo pacman -S wget git python3Navigate to the directory you would like the webui to be installed and execute the following command:bash <(wget -qO- https://raw.githubusercontent.com/AUTOMATIC1111/stable-diffusion-webui/master/webui.sh)Run webui.sh.Check webui-user.sh for options.Installation on Apple SiliconFind the instructions here.ContributingHere's how to add code to this repo: ContributingDocumentationThe documentation was moved from this README over to the project's wiki.For the purposes of getting Google and other search engines to crawl the wiki, here's a link to the (not for humans) crawlable wiki.CreditsLicenses for borrowed code can be found in Settings -> Licenses screen, and also in html/licenses.html file.Stable Diffusion - https://github.com/CompVis/stable-diffusion, https://github.com/CompVis/taming-transformersk-diffusion - https://github.com/crowsonkb/k-diffusion.gitGFPGAN - https://github.com/TencentARC/GFPGAN.gitCodeFormer - https://github.com/sczhou/CodeFormerESRGAN - https://github.com/xinntao/ESRGANSwinIR - https://github.com/JingyunLiang/SwinIRSwin2SR - https://github.com/mv-lab/swin2srLDSR - https://github.com/Hafiidz/latent-diffusionMiDaS - https://github.com/isl-org/MiDaSIdeas for optimizations - https://github.com/basujindal/stable-diffusionCross Attention layer optimization - Doggettx - https://github.com/Doggettx/stable-diffusion, original idea for prompt editing.Cross Attention layer optimization - InvokeAI, lstein - https://github.com/invoke-ai/InvokeAI (originally http://github.com/lstein/stable-diffusion)Sub-quadratic Cross Attention layer optimization - Alex Birch (Birch-san/diffusers#1), Amin Rezaei (https://github.com/AminRezaei0x443/memory-efficient-attention)Textual Inversion - Rinon Gal - https://github.com/rinongal/textual_inversion (we're not using his code, but we are using his ideas).Idea for SD upscale - https://github.com/jquesnelle/txt2imghdNoise generation for outpainting mk2 - https://github.com/parlance-zz/g-diffuser-botCLIP interrogator idea and borrowing some code - https://github.com/pharmapsychotic/clip-interrogatorIdea for Composable Diffusion - https://github.com/energy-based-model/Compositional-Visual-Generation-with-Composable-Diffusion-Models-PyTorchxformers - https://github.com/facebookresearch/xformersDeepDanbooru - interrogator for anime diffusers https://github.com/KichangKim/DeepDanbooruSampling in float32 precision from a float16 UNet - marunine for the idea, Birch-san for the example Diffusers implementation (https://github.com/Birch-san/diffusers-play/tree/92feee6)Instruct pix2pix - Tim Brooks (star), Aleksander Holynski (star), Alexei A. Efros (no star) - https://github.com/timothybrooks/instruct-pix2pixSecurity advice - RyotaKUniPC sampler - Wenliang Zhao - https://github.com/wl-zhao/UniPCTAESD - Ollin Boer Bohan - https://github.com/madebyollin/taesdLyCORIS - KohakuBlueleafInitial Gradio script - posted on 4chan by an Anonymous user. Thank you Anonymous user.(You)"
4,4,yandex-praktikum/backend_test_homework,https://github.com/yandex-praktikum/backend_test_homework/blob/master/README.md,Python,backend_test_homework
5,5,geekcomputers/Python,https://github.com/geekcomputers/Python/blob/master/README.md,Python,"My Python Eggs 🐍 😄I do not consider myself as a programmer. I create these little programs as experiments to play with Python, or to solve problems for myself. I would gladly accept pointers from others to improve, simplify, or make the code more efficient. If you would like to make any comments then please feel free to email me: craig@geekcomputers.co.uk.This repository contains a collection of Python scripts that are designed to reduce human workload and serve as educational examples for beginners to get started with Python. The code documentation is aligned correctly for viewing in Notepad++ 🗒️Feel free to explore the scripts and use them for your learning and automation needs!List of Scripts:batch_file_rename.py - Batch rename a group of files in a specified directory, changing their extensions.create_dir_if_not_there.py - Check if a directory exists in the user's home directory. Create it if it doesn't exist.Fast Youtube Downloader - Download YouTube videos quickly with parallel threads using aria2c.Google Image Downloader - Query a given term and retrieve images from the Google Image database.dir_test.py - Test if the directory testdir exists. If not, create it.env_check.py - Check if all the required environment variables are set.blackjack.py - Casino Blackjack-21 game in Python.fileinfo.py - Show file information for a given file.folder_size.py - Scan the current directory and all subdirectories and display their sizes.logs.py - Search for all *.log files in a directory, zip them using the specified program, and date stamp them.move_files_over_x_days.py - Move all files over a specified age (in days) from the source directory to the destination directory.nslookup_check.py - Open the file server_list.txt and perform nslookup for each server to check the DNS entry.osinfo.py - Display information about the operating system on which the script is running.ping_servers.py - Ping the servers associated with the specified application group.ping_subnet.py - Scan the final range of a given IP subnet for available addresses.powerdown_startup.py - Ping machines in the server list. Load the putty session if the machine is up, or notify if it is not.puttylogs.py - Zip all the logs in the given directory.script_count.py - Scan the scripts directory and count the different types of scripts.get_youtube_view.py - Get more views for YouTube videos and repeat songs on YouTube.script_listing.py - List all files in a given directory and its subdirectories.testlines.py - Open a file and print out 100 lines of the set line variable.tweeter.py - Tweet text or a picture from the terminal.serial_scanner.py - List available serial ports in use on Linux and Windows systems.get_youtube_view.py - Get more views for YouTube videos and repeat songs on YouTube.CountMillionCharacter.py and CountMillionCharacter2.0 - Get character count of a text file.xkcd_downloader.py - Download the latest XKCD comic and place them in a new folder called \""comics\"".timymodule.py - An alternative to Python's 'timeit' module and easier to use.calculator.py - Implement a calculator using Python's eval() function.Google_News.py - Use BeautifulSoup to provide latest news headlines along with news links.cricket_live_score - Use BeautifulSoup to provide live cricket scores.youtube.py - Take a song name as input and fetch the YouTube URL of the best matching song and play it.site_health.py - Check the health of a remote server.SimpleStopWatch.py - Simple stop watch implementation using Python's time module.Changemac.py - Change your MAC address, generate a random MAC address, or enter input as a new MAC address on Linux (Successfully Tested in Ubuntu 18.04).whatsapp-monitor.py - Use Selenium to give online status updates about your contacts in WhatsApp on the terminal.whatsapp-chat-analyzer.py - WhatsApp group/individual chat analyzer that visualizes chat activity using matplotlib.JARVIS.py - Control Windows programs with your voice.Images Downloader - Download images from webpages on Unix-based systems.space_invader.py.py - Classical 2D space invader game to recall your childhood memories.Test Case Generator - Generate different types of test cases with a clean and friendly UI, used in competitive programming and software testing.Note: The content in this repository belongs to the respective authors and creators. I'm just providing a formatted README.md for better presentation."
6,6,scrapy/scrapy,https://github.com/scrapy/scrapy/blob/master/README.rst,Python,"ScrapyOverviewScrapy is a fast high-level web crawling and web scraping framework, used tocrawl websites and extract structured data from their pages. It can be used fora wide range of purposes, from data mining to monitoring and automated testing.Scrapy is maintained by Zyte (formerly Scrapinghub) and many othercontributors.Check the Scrapy homepage at https://scrapy.org for more information,including a list of features.RequirementsPython 3.8+Works on Linux, Windows, macOS, BSDInstallThe quick way:pip install scrapySee the install section in the documentation athttps://docs.scrapy.org/en/latest/intro/install.html for more details.DocumentationDocumentation is available online at https://docs.scrapy.org/ and in the docsdirectory.ReleasesYou can check https://docs.scrapy.org/en/latest/news.html for the release notes.Community (blog, twitter, mail list, IRC)See https://scrapy.org/community/ for details.ContributingSee https://docs.scrapy.org/en/master/contributing.html for details.Code of ConductPlease note that this project is released with a Contributor Code of Conduct.By participating in this project you agree to abide by its terms.Please report unacceptable behavior to opensource@zyte.com.Companies using ScrapySee https://scrapy.org/companies/ for a list.Commercial SupportSee https://scrapy.org/support/ for details."
7,7,pytorch/examples,https://github.com/pytorch/examples/blob/main/README.md,Python,"PyTorch Exampleshttps://pytorch.org/examples/pytorch/examples is a repository showcasing examples of using PyTorch. The goal is to have curated, short, few/no dependencies high quality examples that are substantially different from each other that can be emulated in your existing work.For tutorials: https://github.com/pytorch/tutorialsFor changes to pytorch.org: https://github.com/pytorch/pytorch.github.ioFor a general model hub: https://pytorch.org/hub/ or https://huggingface.co/modelsFor recipes on how to run PyTorch in production: https://github.com/facebookresearch/recipesFor general Q&A and support: https://discuss.pytorch.org/Available modelsImage classification (MNIST) using ConvnetsWord-level Language Modeling using RNN and TransformerTraining Imagenet Classifiers with Popular NetworksGenerative Adversarial Networks (DCGAN)Variational Auto-EncodersSuperresolution using an efficient sub-pixel convolutional neural networkHogwild training of shared ConvNets across multiple processes on MNISTTraining a CartPole to balance in OpenAI Gym with actor-criticNatural Language Inference (SNLI) with GloVe vectors, LSTMs, and torchtextTime sequence prediction - use an LSTM to learn Sine wavesImplement the Neural Style Transfer algorithm on imagesReinforcement Learning with Actor Critic and REINFORCE algorithms on OpenAI gymPyTorch Module Transformations using fxDistributed PyTorch examples with Distributed Data Parallel and RPCSeveral examples illustrating the C++ FrontendImage Classification Using Forward-Forward Additionally, a list of good examples hosted in their own repositories:Neural Machine Translation using sequence-to-sequence RNN with attention (OpenNMT)ContributingIf you'd like to contribute your own example or fix a bug please make sure to take a look at CONTRIBUTING.md."
8,8,hankcs/HanLP,https://github.com/hankcs/HanLP/blob/doc-zh/README.md,Python,"HanLP: Han Language Processing                                                                                   English |    日本語 |    文档 |    论文 |    论坛 |    docker |    ▶️在线运行面向生产环境的多语种自然语言处理工具包，基于PyTorch和TensorFlow 2.x双引擎，目标是普及落地最前沿的NLP技术。HanLP具备功能完善、精度准确、性能高效、语料时新、架构清晰、可自定义的特点。借助世界上最大的多语种语料库，HanLP2.1支持包括简繁中英日俄法德在内的130种语言上的10种联合任务以及多种单任务。HanLP预训练了十几种任务上的数十个模型并且正在持续迭代语料库与模型：功能RESTful多任务单任务模型标注标准分词教程教程教程tok粗分、细分词性标注教程教程教程posCTB、PKU、863命名实体识别教程教程教程nerPKU、MSRA、OntoNotes依存句法分析教程教程教程depSD、UD、PMT成分句法分析教程教程教程conChinese Tree Bank语义依存分析教程教程教程sdpCSDP语义角色标注教程教程教程srlChinese Proposition Bank抽象意义表示教程暂无教程amrCAMR指代消解教程暂无暂无暂无OntoNotes语义文本相似度教程暂无教程sts暂无文本风格转换教程暂无暂无暂无暂无关键词短语提取教程暂无暂无暂无暂无抽取式自动摘要教程暂无暂无暂无暂无生成式自动摘要教程暂无暂无暂无暂无文本语法纠错教程暂无暂无暂无暂无文本分类教程暂无暂无暂无暂无情感分析教程暂无暂无暂无[-1,+1]语种检测教程暂无教程暂无ISO 639-1编码词干提取、词法语法特征提取请参考英文教程；词向量和完形填空请参考相应文档。简繁转换、拼音、新词发现、文本聚类请参考1.x教程。量体裁衣，HanLP提供RESTful和native两种API，分别面向轻量级和海量级两种场景。无论何种API何种语言，HanLP接口在语义上保持一致，在代码上坚持开源。如果您在研究中使用了HanLP，请引用我们的EMNLP论文。轻量级RESTful API仅数KB，适合敏捷开发、移动APP等场景。简单易用，无需GPU配环境，秒速安装。语料更多、模型更大、精度更高，强烈推荐。服务器GPU算力有限，匿名用户配额较少，建议申请免费公益API秘钥auth。Pythonpip install hanlp_restful创建客户端，填入服务器地址和秘钥：from hanlp_restful import HanLPClientHanLP = HanLPClient('https://www.hanlp.com/api', auth=None, language='zh') # auth不填则匿名，zh中文，mul多语种Golang安装 go get -u github.com/hankcs/gohanlp@main ，创建客户端，填入服务器地址和秘钥：HanLP := hanlp.HanLPClient(hanlp.WithAuth(\""\""),hanlp.WithLanguage(\""zh\"")) // auth不填则匿名，zh中文，mul多语种Java在pom.xml中添加依赖：<dependency>    <groupId>com.hankcs.hanlp.restful</groupId>    <artifactId>hanlp-restful</artifactId>    <version>0.0.12</version></dependency>创建客户端，填入服务器地址和秘钥：HanLPClient HanLP = new HanLPClient(\""https://www.hanlp.com/api\"", null, \""zh\""); // auth不填则匿名，zh中文，mul多语种快速上手无论何种开发语言，调用parse接口，传入一篇文章，得到HanLP精准的分析结果。HanLP.parse(\""2021年HanLPv2.1为生产环境带来次世代最先进的多语种NLP技术。阿婆主来到北京立方庭参观自然语义科技公司。\"")更多功能包括语义相似度、风格转换、指代消解等，请参考文档和测试用例。海量级native API依赖PyTorch、TensorFlow等深度学习技术，适合专业NLP工程师、研究者以及本地海量数据场景。要求Python 3.6至3.10，支持Windows，推荐*nix。可以在CPU上运行，推荐GPU/TPU。安装PyTorch版：pip install hanlpHanLP每次发布都通过了Linux、macOS和Windows上Python3.6至3.10的单元测试，不存在安装问题。HanLP发布的模型分为多任务和单任务两种，多任务速度快省显存，单任务精度高更灵活。多任务模型HanLP的工作流程为加载模型然后将其当作函数调用，例如下列联合多任务模型：import hanlpHanLP = hanlp.load(hanlp.pretrained.mtl.CLOSE_TOK_POS_NER_SRL_DEP_SDP_CON_ELECTRA_SMALL_ZH) # 世界最大中文语料库HanLP(['2021年HanLPv2.1为生产环境带来次世代最先进的多语种NLP技术。', '阿婆主来到北京立方庭参观自然语义科技公司。'])Native API的输入单位为句子，需使用多语种分句模型或基于规则的分句函数先行分句。RESTful和native两种API的语义设计完全一致，用户可以无缝互换。简洁的接口也支持灵活的参数，常用的技巧有：灵活的tasks任务调度，任务越少，速度越快，详见教程。在内存有限的场景下，用户还可以删除不需要的任务达到模型瘦身的效果。高效的trie树自定义词典，以及强制、合并、校正3种规则，请参考demo和文档。规则系统的效果将无缝应用到后续统计模型，从而快速适应新领域。单任务模型根据我们的最新研究，多任务学习的优势在于速度和显存，然而精度往往不如单任务模型。所以，HanLP预训练了许多单任务模型并设计了优雅的流水线模式将其组装起来。import hanlpHanLP = hanlp.pipeline() \\    .append(hanlp.utils.rules.split_sentence, output_key='sentences') \\    .append(hanlp.load('FINE_ELECTRA_SMALL_ZH'), output_key='tok') \\    .append(hanlp.load('CTB9_POS_ELECTRA_SMALL'), output_key='pos') \\    .append(hanlp.load('MSRA_NER_ELECTRA_SMALL_ZH'), output_key='ner', input_key='tok') \\    .append(hanlp.load('CTB9_DEP_ELECTRA_SMALL', conll=0), output_key='dep', input_key='tok')\\    .append(hanlp.load('CTB9_CON_ELECTRA_SMALL'), output_key='con', input_key='tok')HanLP('2021年HanLPv2.1为生产环境带来次世代最先进的多语种NLP技术。阿婆主来到北京立方庭参观自然语义科技公司。')更多功能，请参考demo和文档了解更多模型与用法。输出格式无论何种API何种开发语言何种自然语言，HanLP的输出统一为json格式兼容dict的Document:{  \""tok/fine\"": [    [\""2021年\"", \""HanLPv2.1\"", \""为\"", \""生产\"", \""环境\"", \""带来\"", \""次\"", \""世代\"", \""最\"", \""先进\"", \""的\"", \""多\"", \""语种\"", \""NLP\"", \""技术\"", \""。\""],    [\""阿婆主\"", \""来到\"", \""北京\"", \""立方庭\"", \""参观\"", \""自然\"", \""语义\"", \""科技\"", \""公司\"", \""。\""]  ],  \""tok/coarse\"": [    [\""2021年\"", \""HanLPv2.1\"", \""为\"", \""生产\"", \""环境\"", \""带来\"", \""次世代\"", \""最\"", \""先进\"", \""的\"", \""多语种\"", \""NLP\"", \""技术\"", \""。\""],    [\""阿婆主\"", \""来到\"", \""北京立方庭\"", \""参观\"", \""自然语义科技公司\"", \""。\""]  ],  \""pos/ctb\"": [    [\""NT\"", \""NR\"", \""P\"", \""NN\"", \""NN\"", \""VV\"", \""JJ\"", \""NN\"", \""AD\"", \""JJ\"", \""DEG\"", \""CD\"", \""NN\"", \""NR\"", \""NN\"", \""PU\""],    [\""NN\"", \""VV\"", \""NR\"", \""NR\"", \""VV\"", \""NN\"", \""NN\"", \""NN\"", \""NN\"", \""PU\""]  ],  \""pos/pku\"": [    [\""t\"", \""nx\"", \""p\"", \""vn\"", \""n\"", \""v\"", \""b\"", \""n\"", \""d\"", \""a\"", \""u\"", \""a\"", \""n\"", \""nx\"", \""n\"", \""w\""],    [\""n\"", \""v\"", \""ns\"", \""ns\"", \""v\"", \""n\"", \""n\"", \""n\"", \""n\"", \""w\""]  ],  \""pos/863\"": [    [\""nt\"", \""w\"", \""p\"", \""v\"", \""n\"", \""v\"", \""a\"", \""nt\"", \""d\"", \""a\"", \""u\"", \""a\"", \""n\"", \""ws\"", \""n\"", \""w\""],    [\""n\"", \""v\"", \""ns\"", \""n\"", \""v\"", \""n\"", \""n\"", \""n\"", \""n\"", \""w\""]  ],  \""ner/pku\"": [    [],    [[\""北京立方庭\"", \""ns\"", 2, 4], [\""自然语义科技公司\"", \""nt\"", 5, 9]]  ],  \""ner/msra\"": [    [[\""2021年\"", \""DATE\"", 0, 1], [\""HanLPv2.1\"", \""ORGANIZATION\"", 1, 2]],    [[\""北京\"", \""LOCATION\"", 2, 3], [\""立方庭\"", \""LOCATION\"", 3, 4], [\""自然语义科技公司\"", \""ORGANIZATION\"", 5, 9]]  ],  \""ner/ontonotes\"": [    [[\""2021年\"", \""DATE\"", 0, 1], [\""HanLPv2.1\"", \""ORG\"", 1, 2]],    [[\""北京立方庭\"", \""FAC\"", 2, 4], [\""自然语义科技公司\"", \""ORG\"", 5, 9]]  ],  \""srl\"": [    [[[\""2021年\"", \""ARGM-TMP\"", 0, 1], [\""HanLPv2.1\"", \""ARG0\"", 1, 2], [\""为生产环境\"", \""ARG2\"", 2, 5], [\""带来\"", \""PRED\"", 5, 6], [\""次世代最先进的多语种NLP技术\"", \""ARG1\"", 6, 15]], [[\""最\"", \""ARGM-ADV\"", 8, 9], [\""先进\"", \""PRED\"", 9, 10], [\""技术\"", \""ARG0\"", 14, 15]]],    [[[\""阿婆主\"", \""ARG0\"", 0, 1], [\""来到\"", \""PRED\"", 1, 2], [\""北京立方庭\"", \""ARG1\"", 2, 4]], [[\""阿婆主\"", \""ARG0\"", 0, 1], [\""参观\"", \""PRED\"", 4, 5], [\""自然语义科技公司\"", \""ARG1\"", 5, 9]]]  ],  \""dep\"": [    [[6, \""tmod\""], [6, \""nsubj\""], [6, \""prep\""], [5, \""nn\""], [3, \""pobj\""], [0, \""root\""], [8, \""amod\""], [15, \""nn\""], [10, \""advmod\""], [15, \""rcmod\""], [10, \""assm\""], [13, \""nummod\""], [15, \""nn\""], [15, \""nn\""], [6, \""dobj\""], [6, \""punct\""]],    [[2, \""nsubj\""], [0, \""root\""], [4, \""nn\""], [2, \""dobj\""], [2, \""conj\""], [9, \""nn\""], [9, \""nn\""], [9, \""nn\""], [5, \""dobj\""], [2, \""punct\""]]  ],  \""sdp\"": [    [[[6, \""Time\""]], [[6, \""Exp\""]], [[5, \""mPrep\""]], [[5, \""Desc\""]], [[6, \""Datv\""]], [[13, \""dDesc\""]], [[0, \""Root\""], [8, \""Desc\""], [13, \""Desc\""]], [[15, \""Time\""]], [[10, \""mDegr\""]], [[15, \""Desc\""]], [[10, \""mAux\""]], [[8, \""Quan\""], [13, \""Quan\""]], [[15, \""Desc\""]], [[15, \""Nmod\""]], [[6, \""Pat\""]], [[6, \""mPunc\""]]],    [[[2, \""Agt\""], [5, \""Agt\""]], [[0, \""Root\""]], [[4, \""Loc\""]], [[2, \""Lfin\""]], [[2, \""ePurp\""]], [[8, \""Nmod\""]], [[9, \""Nmod\""]], [[9, \""Nmod\""]], [[5, \""Datv\""]], [[5, \""mPunc\""]]]  ],  \""con\"": [    [\""TOP\"", [[\""IP\"", [[\""NP\"", [[\""NT\"", [\""2021年\""]]]], [\""NP\"", [[\""NR\"", [\""HanLPv2.1\""]]]], [\""VP\"", [[\""PP\"", [[\""P\"", [\""为\""]], [\""NP\"", [[\""NN\"", [\""生产\""]], [\""NN\"", [\""环境\""]]]]]], [\""VP\"", [[\""VV\"", [\""带来\""]], [\""NP\"", [[\""ADJP\"", [[\""NP\"", [[\""ADJP\"", [[\""JJ\"", [\""次\""]]]], [\""NP\"", [[\""NN\"", [\""世代\""]]]]]], [\""ADVP\"", [[\""AD\"", [\""最\""]]]], [\""VP\"", [[\""JJ\"", [\""先进\""]]]]]], [\""DEG\"", [\""的\""]], [\""NP\"", [[\""QP\"", [[\""CD\"", [\""多\""]]]], [\""NP\"", [[\""NN\"", [\""语种\""]]]]]], [\""NP\"", [[\""NR\"", [\""NLP\""]], [\""NN\"", [\""技术\""]]]]]]]]]], [\""PU\"", [\""。\""]]]]]],    [\""TOP\"", [[\""IP\"", [[\""NP\"", [[\""NN\"", [\""阿婆主\""]]]], [\""VP\"", [[\""VP\"", [[\""VV\"", [\""来到\""]], [\""NP\"", [[\""NR\"", [\""北京\""]], [\""NR\"", [\""立方庭\""]]]]]], [\""VP\"", [[\""VV\"", [\""参观\""]], [\""NP\"", [[\""NN\"", [\""自然\""]], [\""NN\"", [\""语义\""]], [\""NN\"", [\""科技\""]], [\""NN\"", [\""公司\""]]]]]]]], [\""PU\"", [\""。\""]]]]]]  ]}特别地，Python RESTful和native API支持基于等宽字体的可视化，能够直接将语言学结构在控制台内可视化出来：HanLP(['2021年HanLPv2.1为生产环境带来次世代最先进的多语种NLP技术。', '阿婆主来到北京立方庭参观自然语义科技公司。']).pretty_print()Dep Tree    \tToken    \tRelati\tPoS\tTok      \tNER Type        \tTok      \tSRL PA1     \tTok      \tSRL PA2     \tTok      \tPoS    3       4       5       6       7       8       9 ────────────\t─────────\t──────\t───\t─────────\t────────────────\t─────────\t────────────\t─────────\t────────────\t─────────\t───────────────────────────────────────────────────────── ┌─────────►\t2021年    \ttmod  \tNT \t2021年    \t───►DATE        \t2021年    \t───►ARGM-TMP\t2021年    \t            \t2021年    \tNT ───────────────────────────────────────────►NP ───┐    │┌────────►\tHanLPv2.1\tnsubj \tNR \tHanLPv2.1\t───►ORGANIZATION\tHanLPv2.1\t───►ARG0    \tHanLPv2.1\t            \tHanLPv2.1\tNR ───────────────────────────────────────────►NP────┤    ││┌─►┌─────\t为        \tprep  \tP  \t为        \t                \t为        \t◄─┐         \t为        \t            \t为        \tP ───────────┐                                       │    │││  │  ┌─►\t生产       \tnn    \tNN \t生产       \t                \t生产       \t  ├►ARG2    \t生产       \t            \t生产       \tNN ──┐       ├────────────────────────►PP ───┐       │    │││  └─►└──\t环境       \tpobj  \tNN \t环境       \t                \t环境       \t◄─┘         \t环境       \t            \t环境       \tNN ──┴►NP ───┘                               │       │   ┌┼┴┴────────\t带来       \troot  \tVV \t带来       \t                \t带来       \t╟──►PRED    \t带来       \t            \t带来       \tVV ──────────────────────────────────┐       │       │   ││       ┌─►\t次        \tamod  \tJJ \t次        \t                \t次        \t◄─┐         \t次        \t            \t次        \tJJ ───►ADJP──┐                       │       ├►VP────┤   ││  ┌───►└──\t世代       \tnn    \tNN \t世代       \t                \t世代       \t  │         \t世代       \t            \t世代       \tNN ───►NP ───┴►NP ───┐               │       │       │   ││  │    ┌─►\t最        \tadvmod\tAD \t最        \t                \t最        \t  │         \t最        \t───►ARGM-ADV\t最        \tAD ───────────►ADVP──┼►ADJP──┐       ├►VP ───┘       ├►IP││  │┌──►├──\t先进       \trcmod \tJJ \t先进       \t                \t先进       \t  │         \t先进       \t╟──►PRED    \t先进       \tJJ ───────────►VP ───┘       │       │               │   ││  ││   └─►\t的        \tassm  \tDEG\t的        \t                \t的        \t  ├►ARG1    \t的        \t            \t的        \tDEG──────────────────────────┤       │               │   ││  ││   ┌─►\t多        \tnummod\tCD \t多        \t                \t多        \t  │         \t多        \t            \t多        \tCD ───►QP ───┐               ├►NP ───┘               │   ││  ││┌─►└──\t语种       \tnn    \tNN \t语种       \t                \t语种       \t  │         \t语种       \t            \t语种       \tNN ───►NP ───┴────────►NP────┤                       │   ││  │││  ┌─►\tNLP      \tnn    \tNR \tNLP      \t                \tNLP      \t  │         \tNLP      \t            \tNLP      \tNR ──┐                       │                       │   │└─►└┴┴──┴──\t技术       \tdobj  \tNN \t技术       \t                \t技术       \t◄─┘         \t技术       \t───►ARG0    \t技术       \tNN ──┴────────────────►NP ───┘                       │   └──────────►\t。        \tpunct \tPU \t。        \t                \t。        \t            \t。        \t            \t。        \tPU ──────────────────────────────────────────────────┘   Dep Tree    \tTok\tRelat\tPo\tTok\tNER Type        \tTok\tSRL PA1 \tTok\tSRL PA2 \tTok\tPo    3       4       5       6 ────────────\t───\t─────\t──\t───\t────────────────\t───\t────────\t───\t────────\t───\t────────────────────────────────         ┌─►\t阿婆主\tnsubj\tNN\t阿婆主\t                \t阿婆主\t───►ARG0\t阿婆主\t───►ARG0\t阿婆主\tNN───────────────────►NP ───┐   ┌┬────┬──┴──\t来到 \troot \tVV\t来到 \t                \t来到 \t╟──►PRED\t来到 \t        \t来到 \tVV──────────┐               │   ││    │  ┌─►\t北京 \tnn   \tNR\t北京 \t───►LOCATION    \t北京 \t◄─┐     \t北京 \t        \t北京 \tNR──┐       ├►VP ───┐       │   ││    └─►└──\t立方庭\tdobj \tNR\t立方庭\t───►LOCATION    \t立方庭\t◄─┴►ARG1\t立方庭\t        \t立方庭\tNR──┴►NP ───┘       │       │   │└─►┌───────\t参观 \tconj \tVV\t参观 \t                \t参观 \t        \t参观 \t╟──►PRED\t参观 \tVV──────────┐       ├►VP────┤   │   │  ┌───►\t自然 \tnn   \tNN\t自然 \t◄─┐             \t自然 \t        \t自然 \t◄─┐     \t自然 \tNN──┐       │       │       ├►IP│   │  │┌──►\t语义 \tnn   \tNN\t语义 \t  │             \t语义 \t        \t语义 \t  │     \t语义 \tNN  │       ├►VP ───┘       │   │   │  ││┌─►\t科技 \tnn   \tNN\t科技 \t  ├►ORGANIZATION\t科技 \t        \t科技 \t  ├►ARG1\t科技 \tNN  ├►NP ───┘               │   │   └─►└┴┴──\t公司 \tdobj \tNN\t公司 \t◄─┘             \t公司 \t        \t公司 \t◄─┘     \t公司 \tNN──┘                       │   └──────────►\t。  \tpunct\tPU\t。  \t                \t。  \t        \t。  \t        \t。  \tPU──────────────────────────┘   关于标注集含义，请参考《语言学标注规范》及《格式规范》。我们购买、标注或采用了世界上量级最大、种类最多的语料库用于联合多语种多任务学习，所以HanLP的标注集也是覆盖面最广的。训练你自己的领域模型写深度学习模型一点都不难，难的是复现较高的准确率。下列代码展示了如何在sighan2005 PKU语料库上花6分钟训练一个超越学术界state-of-the-art的中文分词模型。tokenizer = TransformerTaggingTokenizer()save_dir = 'data/model/cws/sighan2005_pku_bert_base_96.73'tokenizer.fit(    SIGHAN2005_PKU_TRAIN_ALL,    SIGHAN2005_PKU_TEST,  # Conventionally, no devset is used. See Tian et al. (2020).    save_dir,    'bert-base-chinese',    max_seq_len=300,    char_level=True,    hard_constraint=True,    sampler_builder=SortingSamplerBuilder(batch_size=32),    epochs=3,    adam_epsilon=1e-6,    warmup_steps=0.1,    weight_decay=0.01,    word_dropout=0.1,    seed=1660853059,)tokenizer.evaluate(SIGHAN2005_PKU_TEST, save_dir)其中，由于指定了随机数种子，结果一定是96.73。不同于那些虚假宣传的学术论文或商业项目，HanLP保证所有结果可复现。如果你有任何质疑，我们将当作最高优先级的致命性bug第一时间排查问题。请参考demo了解更多训练脚本。性能langcorporamodeltokposnerdepconsrlsdplemfeaamrfinecoarsectbpku863udpkumsraontonotesSemEval16DMPASPSDmulUD2.7OntoNotes5small98.62----93.23--74.4279.1076.8570.63-91.1993.6785.3487.7184.51-base98.97----90.32--80.3278.7471.2373.63-92.6096.0481.1985.0882.13-zhopensmall97.25-96.66-----95.0084.5787.6273.4084.57------base97.50-97.07-----96.0487.1189.8477.7887.11------closesmall96.7095.9396.8797.5695.05-96.2295.7476.7984.4488.1375.8174.28------base97.5296.4496.9997.5995.29-96.4895.7277.7785.2988.5776.5273.76------ernie96.9597.2996.7697.6495.22-97.3196.4777.9585.6789.1778.5174.10------根据我们的最新研究，单任务学习的性能往往优于多任务学习。在乎精度甚于速度的话，建议使用单任务模型。HanLP采用的数据预处理与拆分比例与流行方法未必相同，比如HanLP采用了完整版的MSRA命名实体识别语料，而非大众使用的阉割版；HanLP使用了语法覆盖更广的Stanford Dependencies标准，而非学术界沿用的Zhang and Clark (2008)标准；HanLP提出了均匀分割CTB的方法，而不采用学术界不均匀且遗漏了51个黄金文件的方法。HanLP开源了一整套语料预处理脚本与相应语料库，力图推动中文NLP的透明化。总之，HanLP只做我们认为正确、先进的事情，而不一定是流行、权威的事情。引用如果你在研究中使用了HanLP，请按如下格式引用：@inproceedings{he-choi-2021-stem,    title = \""The Stem Cell Hypothesis: Dilemma behind Multi-Task Learning with Transformer Encoders\"",    author = \""He, Han and Choi, Jinho D.\"",    booktitle = \""Proceedings of the 2021 Conference on Empirical Methods in Natural Language Processing\"",    month = nov,    year = \""2021\"",    address = \""Online and Punta Cana, Dominican Republic\"",    publisher = \""Association for Computational Linguistics\"",    url = \""https://aclanthology.org/2021.emnlp-main.451\"",    pages = \""5555--5577\"",    abstract = \""Multi-task learning with transformer encoders (MTL) has emerged as a powerful technique to improve performance on closely-related tasks for both accuracy and efficiency while a question still remains whether or not it would perform as well on tasks that are distinct in nature. We first present MTL results on five NLP tasks, POS, NER, DEP, CON, and SRL, and depict its deficiency over single-task learning. We then conduct an extensive pruning analysis to show that a certain set of attention heads get claimed by most tasks during MTL, who interfere with one another to fine-tune those heads for their own objectives. Based on this finding, we propose the Stem Cell Hypothesis to reveal the existence of attention heads naturally talented for many tasks that cannot be jointly trained to create adequate embeddings for all of those tasks. Finally, we design novel parameter-free probes to justify our hypothesis and demonstrate how attention heads are transformed across the five tasks during MTL through label analysis.\"",}License源代码HanLP源代码的授权协议为 Apache License 2.0，可免费用做商业用途。请在产品说明中附加HanLP的链接和授权协议。HanLP受版权法保护，侵权必究。自然语义（青岛）科技有限公司HanLP从v1.7版起独立运作，由自然语义（青岛）科技有限公司作为项目主体，主导后续版本的开发，并拥有后续版本的版权。大快搜索HanLP v1.3~v1.65版由大快搜索主导开发，继续完全开源，大快搜索拥有相关版权。上海林原公司HanLP 早期得到了上海林原公司的大力支持，并拥有1.28及前序版本的版权，相关版本也曾在上海林原公司网站发布。预训练模型机器学习模型的授权在法律上没有定论，但本着尊重开源语料库原始授权的精神，如不特别说明，HanLP的多语种模型授权沿用CC BY-NC-SA 4.0，中文模型授权为仅供研究与教学使用。Referenceshttps://hanlp.hankcs.com/docs/references.html"
9,9,XX-net/XX-Net,https://github.com/XX-net/XX-Net/blob/master/README.md,Python,"🚀 XX-Net (翻墙VPN)这是一个可靠的翻墙系统，已经连续运行 8 年！我们不去研究墙有什么缺陷，因为所有的缺陷都会被慢慢的补上。我们的策略是化身为普通流量，完全无法区分，最终隐身在茫茫的网络连接中。。。🔌 功能特性支持多平台： Android/iOS/Windows/Mac/Linux采用独特的混淆算法，让您的流量在网络中无法被识别开源绿色软件，无需安装，可以支持多台设备同时连接模拟Chrome浏览器行为，完全无法识别，稳定翻墙内置 ChatGPT，每个套餐赠送 ChatGPT-3.5 一百万token官网下载: https://xx-net.comTelegram: https://t.me/xxnetshareTwitter: https://twitter.com/XXNetDev中文帮助文档      English Document      فارسی صفحه اصلی最新公告：2023-08-15新版 5.5.0, 提升连接性能5.1.0，内置ChatGPT原来是4.x.x 老版本的，需要重新下载新版安装，不能应用内升级。提示：有问题请先看Wiki文档提问 前，请先看最近讨论主题 ，避免重复发问。"
10,10,donnemartin/system-design-primer,https://github.com/donnemartin/system-design-primer/blob/master/README-ja.md,Python,"English ∙ 日本語 ∙ 简体中文 ∙ 繁體中文 | العَرَبِيَّة‎ ∙ বাংলা ∙ Português do Brasil ∙ Deutsch ∙ ελληνικά ∙ עברית ∙ Italiano ∙ 한국어 ∙ فارسی ∙ Polski ∙ русский язык ∙ Español ∙ ภาษาไทย ∙ Türkçe ∙ tiếng Việt ∙ Français | Add Translationシステム設計入門    動機・目的大規模システムのシステム設計を学ぶシステム設計面接課題に備える大規模システムの設計を学ぶスケーラブルなシステムのシステム設計を学ぶことは、より良いエンジニアになることに資するでしょう。システム設計はとても広範なトピックを含みます。システム設計原理については インターネット上には膨大な量の文献が散らばっています。このリポジトリは大規模システム構築に必要な知識を学ぶことができる 文献リストを体系的にまとめたもの です。オープンソースコミュニティから学ぶこのプロジェクトは、これからもずっと更新されていくオープンソースプロジェクトの初期段階にすぎません。Contributions は大歓迎です！システム設計面接課題に備えるコード技術面接に加えて、システム設計に関する知識は、多くのテック企業における 技術採用面接プロセス で 必要不可欠な要素 です。システム設計面接での頻出質問に備え、自分の解答と模範解答:ディスカッション、コードそして図表などを比較して学びましょう。面接準備に役立つその他のトピック:学習指針システム設計面接課題にどのように準備するかシステム設計課題例 とその解答オブジェクト指向設計課題例、 とその解答その他のシステム設計面接課題例暗記カード    このAnki用フラッシュカードデッキ は、間隔反復を活用して、システム設計のキーコンセプトの学習を支援します。システム設計デッキシステム設計練習課題デッキオブジェクト指向練習課題デッキ外出先や移動中の勉強に役立つでしょう。コーディング技術課題用の問題: 練習用インタラクティブアプリケーションコード技術面接用の問題を探している場合はこちら    姉妹リポジトリの Interactive Coding Challengesも見てみてください。追加の暗記デッキカードも入っています。Coding deckコントリビュートコミュニティから学ぶプルリクエスト等の貢献は積極的にお願いします:エラー修正セクション内容改善新規セクション追加翻訳する現在、内容の改善が必要な作業中のコンテンツはこちらです。コントリビュートの前にContributing Guidelinesを読みましょう。システム設計目次賛否も含めた様々なシステム設計の各トピックの概要。 全てはトレードオフの関係にあります。それぞれのセクションはより学びを深めるような他の文献へのリンクが貼られています。    システム設計トピック: まずはここからStep 1: スケーラビリティに関する動画を見るStep 2: スケーラビリティに関する記事を読む次のステップパフォーマンス vs スケーラビリティレイテンシー vs スループット可用性 vs 一貫性CAP理論CP - 一貫性(consistency)と分割性(partition)耐性AP - 可用性(availability)と分割性(partition)耐性一貫性 パターン弱い一貫性結果整合性強い一貫性可用性 パターンフェイルオーバーレプリケーションドメインネームシステム(DNS)コンテンツデリバリーネットワーク(CDN)プッシュCDNプルCDNロードバランサーアクティブ/パッシブ構成アクティブ/アクティブ構成Layer 4 ロードバランシングLayer 7 ロードバランシング水平スケーリングリバースプロキシ (WEBサーバー)ロードバランサー vs リバースプロキシアプリケーションレイヤーマイクロサービスサービスディスカバリーデータベースリレーショナルデータベースマネジメントシステム (RDBMS)マスター/スレーブ レプリケーションマスター/マスター レプリケーションフェデレーションシャーディングデノーマライゼーションSQL チューニングNoSQLキー/バリューストアドキュメントストアワイドカラムストアグラフ データベースSQL or NoSQLキャッシュクライアントキャッシングCDNキャッシングWebサーバーキャッシングデータベースキャッシングアプリケーションキャッシングデータベースクエリレベルでキャッシングするオブジェクトレベルでキャッシングするいつキャッシュを更新するのかキャッシュアサイドライトスルーライトビハインド (ライトバック)リフレッシュアヘッド非同期処理メッセージキュータスクキューバックプレッシャー通信伝送制御プロトコル (TCP)ユーザデータグラムプロトコル (UDP)遠隔手続呼出 (RPC)Representational state transfer (REST)セキュリティ補遺2の乗数表全てのプログラマーが知るべきレイテンシー値他のシステム設計面接例題実世界でのアーキテクチャ各企業のアーキテクチャ企業のエンジニアブログ作業中クレジット連絡情報ライセンス学習指針学習スパンに応じてみるべきトピックス (short, medium, long)Q: 面接のためには、ここにあるものすべてをやらないといけないのでしょうか？A: いえ、ここにあるすべてをやる必要はありません。面接で何を聞かれるかは以下の条件によって変わってきます:どれだけの技術経験があるかあなたの技術背景が何であるかどのポジションのために面接を受けているかどの企業の面接を受けているか運より経験のある候補者は一般的にシステム設計についてより深い知識を有していることを要求されるでしょう。システムアーキテクトやチームリーダーは各メンバーの持つような知識よりは深い見識を持っているべきでしょう。一流テック企業では複数回の設計面接を課されることが多いです。まずは広く始めて、そこからいくつかの分野に絞って深めていくのがいいでしょう。様々なシステム設計のトピックについて少しずつ知っておくことはいいことです。以下の学習ガイドを自分の学習に当てられる時間、技術経験、どの職位、どの会社に応募しているかなどを加味して自分用に調整して使うといいでしょう。短期間 - 幅広く システム設計トピックを学ぶ。いくつかの 面接課題を解くことで対策する。中期間 - 幅広く そして それなりに深くシステム設計トピックを学ぶ。多くの 面接課題を解くことで対策する。長期間 - 幅広く そして もっと深くシステム設計トピックを学ぶ。ほぼ全ての 面接課題を解くことで対策する。短期間中期間長期間システム設計トピック を読み、システム動作機序について広く知る👍👍👍次のリンク先のいくつかのページを読んで 各企業のエンジニアリングブログ 応募する会社について知る👍👍👍次のリンク先のいくつかのページを読む 実世界でのアーキテクチャ👍👍👍復習する システム設計面接課題にどのように準備するか👍👍👍とりあえず一周する システム設計課題例SomeManyMostとりあえず一周する オブジェクト指向設計問題と解答SomeManyMost復習する その他システム設計面接での質問例SomeManyMostシステム設計面接にどのようにして臨めばいいかシステム設計面接試験問題にどのように取り組むかシステム設計面接は open-ended conversation(Yes/Noでは答えられない口頭質問)です。 自分で会話を組み立てることを求められます。以下のステップに従って議論を組み立てることができるでしょう。この過程を確かなものにするために、次のセクションシステム設計課題例とその解答 を以下の指針に従って読み込むといいでしょう。ステップ 1: そのシステム使用例の概要、制約、推計値等を聞き出し、まとめるシステム仕様の要求事項を聞き出し、問題箇所を特定しましょう。使用例と制約を明確にするための質問を投げかけましょう。要求する推計値についても議論しておきましょう。誰がそのサービスを使うのか？どのように使うのか？何人のユーザーがいるのか？システムはどのような機能を果たすのか？システムへの入力と出力は？どれだけの容量のデータを捌く必要があるのか？一秒間に何リクエストの送信が想定されるか？読み書き比率の推定値はいくら程度か？ステップ 2: より高レベルのシステム設計を組み立てる重要なコンポーネントを全て考慮した高レベルのシステム設計概要を組み立てる。主要なコンポーネントと接続をスケッチして書き出す考えの裏付けをするステップ 3: 核となるコンポーネントを設計するそれぞれの主要なコンポーネントについての詳細を学ぶ。例えば、url短縮サービスの設計を問われた際には次のようにするといいでしょう:元のURLのハッシュ化したものを作り、それを保存するMD5 と Base62ハッシュ衝突SQL もしくは NoSQLデータベーススキーマハッシュ化されたURLを元のURLに再翻訳するデータベース参照API & オブジェクト指向の設計ステップ 4: システム設計のスケール与えられた制約条件からボトルネックとなりそうなところを割り出し、明確化する。  例えば、スケーラビリティの問題解決のために以下の要素を考慮する必要があるだろうか？ロードバランサー水平スケーリングキャッシングデータベースシャーディング取りうる解決策とそのトレードオフについて議論をしよう。全てのことはトレードオフの関係にある。ボトルネックについてはスケーラブルなシステム設計の原理を読むといいでしょう。ちょっとした暗算問題ちょっとした推計値を手計算ですることを求められることもあるかもしれません。補遺の以下の項目が役に立つでしょう:チラ裏計算でシステム設計する2の乗数表全てのプログラマーが知っておくべきレイテンシの参考値文献とその他の参考資料以下のリンク先ページを見てどのような質問を投げかけられるか概要を頭に入れておきましょう:システム設計面接で成功するには？システム設計面接アーキテクチャ、システム設計面接への導入システム設計課題例とその解答頻出のシステム設計面接課題と参考解答、コード及びダイアグラム解答は solutions/ フォルダ以下にリンクが貼られている問題Pastebin.com (もしくは Bit.ly) を設計する解答Twitterタイムライン (もしくはFacebookフィード)を設計するTwitter検索(もしくはFacebook検索)機能を設計する解答ウェブクローラーを設計する解答Mint.comを設計する解答SNSサービスのデータ構造を設計する解答検索エンジンのキー/バリュー構造を設計する解答Amazonのカテゴリ毎の売り上げランキングを設計する解答AWS上で100万人規模のユーザーを捌くサービスを設計する解答システム設計問題を追加するContributePastebin.com (もしくは Bit.ly) を設計する問題と解答を見るTwitterタイムライン&検索 (もしくはFacebookフィード&検索)を設計する問題と解答を見るウェブクローラーの設計問題と解答を見るMint.comの設計問題と解答を見るSNSサービスのデータ構造を設計する問題と解答を見る検索エンジンのキー/バリュー構造を設計する問題と解答を見るAmazonのカテゴリ毎の売り上げランキングを設計する問題と解答を見るAWS上で100万人規模のユーザーを捌くサービスを設計する問題と解答を見るオブジェクト指向設計問題と解答頻出のオブジェクト指向システム設計面接課題と参考解答、コード及びダイアグラム解答は solutions/ フォルダ以下にリンクが貼られている備考: このセクションは作業中です問題ハッシュマップの設計解答LRUキャッシュの設計解答コールセンターの設計解答カードのデッキの設計解答駐車場の設計解答チャットサーバーの設計解答円形配列の設計Contributeオブジェクト指向システム設計問題を追加するContributeシステム設計トピックス: まずはここからシステム設計の勉強は初めて？まず初めに、よく使われる設計原理について、それらが何であるか、どのように用いられるか、長所短所について基本的な知識を得る必要がありますステップ 1: スケーラビリティに関する動画を観て復習するHarvardでのスケーラビリティの講義ここで触れられているトピックス:垂直スケーリング水平スケーリングキャッシングロードバランシングデータベースレプリケーションデータベースパーティションステップ 2: スケーラビリティに関する資料を読んで復習するスケーラビリティここで触れられているトピックス:クローンデータベースキャッシュ非同期次のステップ次に、ハイレベルでのトレードオフについてみていく:パフォーマンス vs スケーラビリティレイテンシ vs スループット可用性 vs 一貫性全てはトレードオフの関係にあるというのを肝に命じておきましょう。それから、より深い内容、DNSやCDNそしてロードバランサーなどについて学習を進めていきましょう。パフォーマンス vs スケーラビリティリソースが追加されるのにつれて パフォーマンス が向上する場合そのサービスは スケーラブル であると言えるでしょう。一般的に、パフォーマンスを向上させるというのはすなわち計算処理を増やすことを意味しますが、データセットが増えた時などより大きな処理を捌けるようになることでもあります。1パフォーマンスvsスケーラビリティをとらえる他の考え方:パフォーマンス での問題を抱えている時、あなたのシステムは一人のユーザーにとって遅いと言えるでしょう。スケーラビリティ での問題を抱えているとき、一人のユーザーにとっては速いですが、多くのリクエストがある時には遅くなってしまうでしょう。その他の参考資料、ページスケーラビリティについてスケーラビリティ、可用性、安定性、パターンレイテンシー vs スループットレイテンシー とはなにがしかの動作を行う、もしくは結果を算出するのに要する時間スループット とはそのような動作や結果算出が単位時間に行われる回数一般的に、 最大限のスループット を 許容範囲内のレイテンシー で実現することを目指すのが普通だ。その他の参考資料、ページレイテンシー vs スループットを理解する可用性 vs 一貫性CAP 理論      Source: CAP theorem revisited分散型コンピュータシステムにおいては下の三つのうち二つまでしか同時に保証することはできない。:一貫性 - 全ての読み込みは最新の書き込みもしくはエラーを受け取る可用性 - 受け取る情報が最新のものだという保証はないが、全てのリクエストはレスポンスを必ず受け取る分断耐性 - ネットワーク問題によって順不同の分断が起きてもシステムが動作を続けるネットワークは信頼できないので、分断耐性は必ず保証しなければなりません。つまりソフトウェアシステムとしてのトレードオフは、一貫性を取るか、可用性を取るかを考えなければなりません。CP - 一貫性と分断耐性(consistency and partition tolerance)分断されたノードからのレスポンスを待ち続けているとタイムアウトエラーに陥る可能性があります。CPはあなたのサービスがアトミックな読み書き（不可分操作）を必要とする際にはいい選択肢でしょう。AP - 可用性と分断耐性(availability and partition tolerance)レスポンスはノード上にあるデータで最新のものを返します。つまり、最新版のデータが返されるとは限りません。分断が解消された後も、書き込みが反映されるのには時間がかかります。結果整合性　を求めるサービスの際にはAPを採用するのがいいでしょう。もしくは、外部エラーに関わらずシステムが稼働する必要がある際にも同様です。その他の参考資料、ページCAP 理論を振り返る平易な英語でのCAP 理論のイントロCAP FAQ一貫性パターン同じデータの複製が複数ある状態では、クライアントが一貫したデータ表示を受け取るために、どのようにそれらを同期すればいいのかという課題があります。 CAP 理論 における一貫性の定義を思い出してみましょう。全ての読み取りは最新の書き込みデータもしくはエラーを受け取るはずです。弱い一貫性書き込み後の読み取りでは、その最新の書き込みを読めたり読めなかったりする。ベストエフォート型のアプローチに基づく。このアプローチはmemcachedなどのシステムに見られます。弱い一貫性はリアルタイム性が必要なユースケース、例えばVoIP、ビデオチャット、リアルタイムマルチプレイヤーゲームなどと相性がいいでしょう。例えば、電話に出ているときに数秒間音声が受け取れなくなったとしたら、その後に接続が回復してもその接続が切断されていた間に話されていたことは聞き取れないというような感じです。結果整合性書き込みの後、読み取りは最終的にはその結果を読み取ることができる(ミリ秒ほど遅れてというのが一般的です)。データは非同期的に複製されます。このアプローチはDNSやメールシステムなどに採用されています。結果整合性は多くのリクエストを捌くサービスと相性がいいでしょう。強い一貫性書き込みの後、読み取りはそれを必ず読むことができます。データは同期的に複製されます。このアプローチはファイルシステムやRDBMSなどで採用されています。トランザクションを扱うサービスでは強い一貫性が必要でしょう。その他の参考資料、ページデータセンター間でのトランザクション可用性パターン高い可用性を担保するには主に次の二つのパターンがあります: フェイルオーバー と レプリケーション です。フェイルオーバーアクティブ・パッシブアクティブ・パッシブフェイルオーバーにおいては、周期信号はアクティブもしくはスタンバイ中のパッシブなサーバーに送られます。周期信号が中断された時には、パッシブだったサーバーがアクティブサーバーのIPアドレスを引き継いでサービスを再開します。起動までのダウンタイムはパッシブサーバーが「ホット」なスタンバイ状態にあるか、「コールド」なスタンバイ状態にあるかで変わります。アクティブなサーバーのみがトラフィックを捌きます。アクティブ・パッシブフェイルオーバーはマスター・スレーブフェイルオーバーと呼ばれることもあります。アクティブ・アクティブアクティブアクティブ構成では両方のサーバーがトラフィックを捌くことで負荷を分散します。これらのサーバーがパブリックなものの場合、DNSは両方のサーバーのパブリックIPを知っている必要があります。もし、プライベートなものな場合、アプリケーションロジックが両方のサーバーの情報について知っている必要があります。アクティブ・アクティブなフェイルオーバーはマスター・マスターフェイルオーバーと呼ばれることもあります。短所: フェイルオーバーフェイルオーバーではより多くのハードウェアを要し、複雑さが増します。最新の書き込みがパッシブサーバーに複製される前にアクティブが落ちると、データ欠損が起きる潜在可能性があります。レプリケーションマスター・スレーブ　と　マスター・マスターこのトピックは データベース セクションにおいてより詳細に解説されています:マスター・スレーブ レプリケーションマスター・マスター レプリケーションドメインネームシステム      Source: DNS security presentationドメインネームシステム (DNS) は www.example.com などのドメインネームをIPアドレスへと翻訳します。DNSは少数のオーソライズされたサーバーが上位に位置する階層的構造です。あなたのルーターもしくはISPは検索をする際にどのDNSサーバーに接続するかという情報を提供します。低い階層のDNSサーバーはその経路マップをキャッシュします。ただ、この情報は伝搬遅延によって陳腐化する可能性があります。DNSの結果はあなたのブラウザもしくはOSに一定期間（time to live (TTL)に設定された期間）キャッシュされます。NS record (name server) - あなたのドメイン・サブドメインでのDNSサーバーを特定します。MX record (mail exchange) - メッセージを受け取るメールサーバーを特定します。A record (address) - IPアドレスに名前をつけます。CNAME (canonical) - 他の名前もしくは　CNAME (example.com を www.example.com) もしくは A recordへと名前を指し示す。CloudFlare や Route 53 などのサービスはマネージドDNSサービスを提供しています。いくつかのDNSサービスでは様々な手法を使ってトラフィックを捌くことができます:加重ラウンドロビントラフィックがメンテナンス中のサーバーに行くのを防ぎます様々なクラスターサイズに応じて調整しますA/B テストレイテンシーベース地理ベース欠点: DNS上記で示されているようなキャッシングによって緩和されているとはいえ、DNSサーバーへの接続には少し遅延が生じる。DNSサーバーは、政府、ISP企業,そして大企業に管理されているが、それらの管理は複雑である。DNSサービスはDDoS attackの例で、IPアドレスなしにユーザーがTwitterなどにアクセスできなくなったように、攻撃を受ける可能性がある。その他の参考資料、ページDNS アーキテクチャWikipediaDNS 記事コンテンツデリバリーネットワーク(Content delivery network)      Source: Why use a CDNコンテンツデリバリーネットワーク(CDN)は世界中に配置されたプロキシサーバーのネットワークがユーザーに一番地理的に近いサーバーからコンテンツを配信するシステムのことです。AmazonのCloudFrontなどは例外的にダイナミックなコンテンツも配信しますが、一般的に、HTML/CSS/JS、写真、そして動画などの静的ファイルがCDNを通じて配信されます。そのサイトのDNSがクライアントにどのサーバーと交信するかという情報を伝えます。CDNを用いてコンテンツを配信することで以下の二つの理由でパフォーマンスが劇的に向上します:ユーザーは近くにあるデータセンターから受信できるバックエンドサーバーはCDNが処理してくれるリクエストに関しては処理する必要がなくなりますプッシュCDNプッシュCDNではサーバーデータに更新があった時には必ず、新しいコンテンツを受け取る方式です。コンテンツを用意し、CDNに直接アップロードし、URLをCDNを指すように指定するところまで、全て自分で責任を負う形です。コンテンツがいつ期限切れになるのか更新されるのかを設定することができます。コンテンツは新規作成時、更新時のみアップロードされることでトラフィックは最小化される一方、ストレージは最大限消費されてしまいます。トラフィックの少ない、もしくは頻繁にはコンテンツが更新されないサイトの場合にはプッシュCDNと相性がいいでしょう。コンテンツは定期的に再びプルされるのではなく、CDNに一度のみ配置されます。プルCDNプルCDNでは一人目のユーザーがリクエストした時に、新しいコンテンツをサービスのサーバーから取得します。コンテンツは自分のサーバーに保存して、CDNを指すURLを書き換えます。結果として、CDNにコンテンツがキャッシュされるまではリクエスト処理が遅くなります。time-to-live (TTL) はコンテンツがどれだけの期間キャッシュされるかを規定します。プルCDNはCDN 上でのストレージスペースを最小化しますが、有効期限が切れたファイルが更新前にプルされてしまうことで冗長なトラフィックに繋がってしまう可能性があります。大規模なトラフィックのあるサイトではプルCDNが相性がいいでしょう。というのも、トラフィックの大部分は最近リクエストされ、CDNに残っているコンテンツにアクセスするものであることが多いからです。欠点: CDNCDNのコストはトラフィック量によって変わります。もちろん、CDNを使わない場合のコストと比較するべきでしょう。TTLが切れる前にコンテンツが更新されると陳腐化する恐れがあります。CDNでは静的コンテンツがCDNを指すようにURLを更新する必要があります。その他の参考資料、ページグローバルに分散されたコンテンツデリバリーネットワークプッシュCDNとプルCDNの違いWikipediaロードバランサー      Source: Scalable system design patternsロードバランサーは入力されるクライアントのリクエストをアプリケーションサーバーやデータベースへと分散させる。どのケースでもロードバランサーはサーバー等計算リソースからのレスポンスを適切なクライアントに返す。ロードバランサーは以下のことに効果的です:リクエストが状態の良くないサーバーに行くのを防ぐリクエストを過剰に送るのを防ぐ特定箇所の欠陥でサービスが落ちることを防ぐロードバランサーは (費用の高い) ハードウェアもしくはHAProxyなどのソフトウェアで実現できる。他の利点としては:SSL termination - 入力されるリクエストを解読する、また、サーバーレスポンスを暗号化することでバックエンドのサーバーがこのコストが高くつきがちな処理を請け負わなくていいように肩代わりします。X.509 certificates をそれぞれのサーバーにインストールする必要をなくしますセッション管理 - クッキーを取り扱うウェブアプリがセッション情報を保持していない時などに、特定のクライアントのリクエストを同じインスタンスへと流します。障害に対応するために、アクティブ・パッシブ もしくは アクティブ・アクティブ モードのどちらにおいても、複数のロードバランサーを配置するのが一般的です。ロードバランサーは以下のような種々のメトリックを用いてトラフィックルーティングを行うことができます:ランダムLeast loadedセッション/クッキーラウンドロビンもしくは加重ラウンドロビンLayer 4Layer 7Layer 4 ロードバランシングLayer 4 ロードバランサーは トランスポートレイヤー を参照してどのようにリクエストを配分するか判断します。一般的に、トランスポートレイヤーとしては、ソース、送信先IPアドレス、ヘッダーに記述されたポート番号が含まれますが、パケットの中身のコンテンツは含みません。 Layer 4 ロードバランサーはネットワークパケットを上流サーバーへ届け、上流サーバーから配信することでネットワークアドレス変換 Network Address Translation (NAT) を実現します。Layer 7 ロードバランシングLayer 7 ロードバランサーは アプリケーションレイヤー を参照してどのようにリクエストを配分するか判断します。ヘッダー、メッセージ、クッキーなどのコンテンツのことです。Layer 7 ロードバランサーはネットワークトラフィックの終端を受け持ち メッセージを読み込み、ロードバランシングの判断をし、選択したサーバーとの接続を繋ぎます。例えば layer 7 ロードバランサーは動画のトラフィックを直接、そのデータをホストしているサーバーにつなぐと同時に、決済処理などのより繊細なトラフィックをセキュリティ強化されたサーバーに流すということもできる。柔軟性とのトレードオフになりますが、 layer 4 ロードバランサーではLayer 7ロードバランサーよりも所要時間、計算リソースを少なく済ませることができます。ただし、昨今の汎用ハードウェアではパフォーマンスは最小限のみしか発揮できないでしょう。水平スケーリングロードバランサーでは水平スケーリングによってパフォーマンスと可用性を向上させることができます。手頃な汎用マシンを追加することによってスケールアウトさせる方が、一つのサーバーをより高価なマシンにスケールアップする（垂直スケーリング）より費用対効果も高くなり、結果的に可用性も高くなります。また、汎用ハードウェアを扱える人材を雇う方が、特化型の商用ハードウェアを扱える人材を雇うよりも簡単でしょう。欠点: 水平スケーリング水平的にスケーリングしていくと、複雑さが増す上に、サーバーのクローニングが必要になる。サーバーはステートレスである必要がある: ユーザーに関連するセッションや、プロフィール写真などのデータを持ってはいけないセッションは一元的なデータベース (SQL、 NoSQL)などのデータストアにストアされるか キャッシュ (Redis、 Memcached)に残す必要があります。キャッシュやデータベースなどの下流サーバーは上流サーバーがスケールアウトするにつれてより多くの同時接続を保たなければなりません。欠点: ロードバランサーロードバランサーはリソースが不足していたり、設定が適切でない場合、システム全体のボトルネックになる可能性があります。単一障害点を除こうとしてロードバランサーを導入した結果、複雑さが増してしまうことになります。ロードバランサーが一つだけだとそこが単一障害点になってしまいます。一方で、ロードバランサーを複数にすると、さらに複雑さが増してしまいます。その他の参考資料、ページNGINX アーキテクチャHAProxy アーキテクチャガイドスケーラビリティWikipediaLayer 4 ロードバランシングLayer 7 ロードバランシングELB listener configリバースプロキシ(webサーバー)      Source: Wikipedia  リバースプロキシサーバーは内部サービスをまとめて外部に統一されたインターフェースを提供するウェブサーバーです。クライアントからのリクエストはそれに対応するサーバーに送られて、その後レスポンスをリバースプロキシがクライアントに返します。他には以下のような利点があります:より堅牢なセキュリティ - バックエンドサーバーの情報を隠したり、IPアドレスをブラックリスト化したり、クライアントごとの接続数を制限したりできます。スケーラビリティや柔軟性が増します - クライアントはリバースプロキシのIPしか見ないので、裏でサーバーをスケールしたり、設定を変えやすくなります。SSL termination - 入力されるリクエストを解読し、サーバーのレスポンスを暗号化することでサーバーがこのコストのかかりうる処理をしなくて済むようになります。X.509 証明書 を各サーバーにインストールする必要がなくなります。圧縮 - サーバーレスポンスを圧縮できますキャッシング - キャッシュされたリクエストに対して、レスポンスを返します静的コンテンツ - 静的コンテンツを直接送信することができます。HTML/CSS/JS写真動画などなどロードバランサー vs リバースプロキシ複数のサーバーがある時にはロードバランサーをデプロイすると役に立つでしょう。 しばしば、ロードバランサーは同じ機能を果たすサーバー群へのトラフィックを捌きます。リバースプロキシでは、上記に述べたような利点を、単一のウェブサーバーやアプリケーションレイヤーに対しても示すことができます。NGINX や HAProxy などの技術はlayer 7 リバースプロキシとロードバランサーの両方をサポートします。欠点: リバースプロキシリバースプロキシを導入するとシステムの複雑性が増します。単一のリバースプロキシは単一障害点になりえます。一方で、複数のリバースプロキシを導入すると(例: フェイルオーバー) 複雑性はより増します。その他の参考資料、ページリバースプロキシ vs ロードバランサーNGINX アーキテクチャHAProxy アーキテクチャ ガイドWikipediaアプリケーション層      Source: Intro to architecting systems for scaleウェブレイヤーをアプリケーション層 (プラットフォーム層とも言われる) と分離することでそれぞれの層を独立にスケール、設定することができるようになります。新しいAPIをアプリケーション層に追加する際に、不必要にウェブサーバーを追加する必要がなくなります。単一責任の原則 では、小さい自律的なサービスが協調して動くように提唱しています。小さいサービスの小さいチームが急成長のためにより積極的な計画を立てられるようにするためです。アプリケーション層は非同期処理もサポートします。マイクロサービス独立してデプロイできる、小規模なモジュール様式であるマイクロサービスもこの議論に関係してくる技術でしょう。それぞれのサービスは独自のプロセスを処理し、明確で軽量なメカニズムで通信して、その目的とする機能を実現します。1例えばPinterestでは以下のようなマイクロサービスに分かれています。ユーザープロフィール、フォロワー、フィード、検索、写真アップロードなどです。サービスディスカバリーConsul、 Etcd、 Zookeeper などのシステムでは、登録されているサービスの名前、アドレス、ポートの情報を監視することで、サービス同士が互いを見つけやすくしています。サービスの完全性の確認には Health checks が便利で、これには HTTP エンドポイントがよく使われます。 Consul と Etcd のいずれも組み込みの key-value store を持っており、設定データや共有データなどのデータを保存しておくことに使われます。欠点: アプリケーション層アーキテクチャ、運用、そしてプロセスを考慮すると、緩く結び付けられたアプリケーション層を追加するには、モノリシックなシステムとは異なるアプローチが必要です。マイクロサービスはデプロイと運用の点から見ると複雑性が増すことになります。その他の参考資料、ページスケールするシステムアーキテクチャを設計するためのイントロシステム設計インタビューを紐解くサービス指向アーキテクチャZookeeperのイントロダクションマイクロサービスを作るために知っておきたいことデータベース      Source: Scaling up to your first 10 million usersリレーショナルデータベースマネジメントシステム (RDBMS)SQLなどのリレーショナルデータベースはテーブルに整理されたデータの集合である。ACID はリレーショナルデータベースにおけるトランザクションのプロパティの集合である不可分性 - それぞれのトランザクションはあるかないかのいずれかである一貫性 - どんなトランザクションもデータベースをある確かな状態から次の状態に遷移させる。独立性 - 同時にトランザクションを処理することは、連続的にトランザクションを処理するのと同じ結果をもたらす。永続性 - トランザクションが処理されたら、そのように保存されるリレーショナルデータベースをスケールさせるためにはたくさんの技術がある: マスター・スレーブ レプリケーション、 マスター・マスター レプリケーション、 federation、 シャーディング、 非正規化、 そして SQL チューニングマスタースレーブ レプリケーションマスターデータベースが読み取りと書き込みを処理し、書き込みを一つ以上のスレーブデータベースに複製します。スレーブデータベースは読み取りのみを処理します。スレーブデータベースは木構造のように追加のスレーブにデータを複製することもできます。マスターデータベースがオフラインになった場合には、いずれかのスレーブがマスターに昇格するか、新しいマスターデータベースが追加されるまでは読み取り専用モードで稼働します。      Source: Scalability, availability, stability, patterns欠点: マスタースレーブ レプリケーションスレーブをマスターに昇格させるには追加のロジックが必要になる。マスタースレーブ レプリケーション、マスターマスター レプリケーションの 両方 の欠点は欠点: レプリケーションを参照マスターマスター レプリケーションいずれのマスターも読み取り書き込みの両方に対応する。書き込みに関してはそれぞれ協調する。いずれかのマスターが落ちても、システム全体としては読み書き両方に対応したまま運用できる。      Source: Scalability, availability, stability, patterns欠点: マスターマスター レプリケーションロードバランサーを導入するか、アプリケーションロジックを変更することでどこに書き込むかを指定しなければならない。大体のマスターマスターシステムは、一貫性が緩い（ACID原理を守っていない）もしくは、同期する時間がかかるために書き込みのレイテンシーが増加してしまっている。書き込みノードが追加され、レイテンシーが増加するにつれ書き込みの衝突の可能性が増える。マスタースレーブ レプリケーション、マスターマスター レプリケーションの 両方 の欠点は欠点: レプリケーション を参照欠点: レプリケーション新しいデータ書き込みを複製する前にマスターが落ちた場合にはそのデータが失われてしまう可能性がある。書き込みは読み取りレプリカにおいてリプレイされる。書き込みが多い場合、複製ノードが書き込みの処理のみで行き詰まって、読み取りの処理を満足に行えない可能性がある。読み取りスレーブノードの数が多ければ多いほど、複製しなければならない数も増え、複製時間が伸びてしまいます。システムによっては、マスターへの書き込みはマルチスレッドで並列処理できる一方、スレーブへの複製は単一スレッドで連続的に処理しなければならない場合があります。レプリケーションでは追加のハードウェアが必要になり、複雑性も増します。その他の参考資料、ページ: レプリケーションスケーラビリティ、 可用性、 スタビリティ パターンマルチマスター レプリケーションFederation      Source: Scaling up to your first 10 million usersフェデレーション (もしくは機能分割化とも言う) はデータベースを機能ごとに分割する。例えば、モノリシックな単一データベースの代わりに、データベースを フォーラム、 ユーザー、 プロダクト のように三つにすることで、データベース一つあたりの書き込み・読み取りのトラフィックが減り、その結果レプリケーションのラグも短くなります。データベースが小さくなることで、メモリーに収まるデータが増えます。キャッシュの局所性が高まるため、キャッシュヒット率も上がります。単一の中央マスターで書き込みを直列化したりしないため、並列で書き込みを処理することができ、スループットの向上が期待できます。欠点: federation大規模な処理やテーブルを要するスキーマの場合、フェデレーションは効果的とは言えないでしょう。どのデータベースに読み書きをするのかを指定するアプリケーションロジックを更新しなければなりません。server linkで二つのデータベースからのデータを連結するのはより複雑になるでしょう。フェデレーションでは追加のハードウェアが必要になり、複雑性も増します。その他の参考資料、ページ: federationScaling up to your first 10 million usersシャーディング      Source: Scalability, availability, stability, patternsシャーディングでは異なるデータベースにそれぞれがデータのサブセット断片のみを持つようにデータを分割します。ユーザーデータベースを例にとると、ユーザー数が増えるにつれてクラスターにはより多くの断片が加えられることになります。federationの利点に似ていて、シャーディングでは読み書きのトラフィックを減らし、レプリケーションを減らし、キャッシュヒットを増やすことができます。インデックスサイズも減らすことができます。一般的にはインデックスサイズを減らすと、パフォーマンスが向上しクエリ速度が速くなります。なにがしかのデータを複製する機能がなければデータロスにつながりますが、もし、一つのシャードが落ちても、他のシャードが動いていることになります。フェデレーションと同じく、単一の中央マスターが書き込みの処理をしなくても、並列で書き込みを処理することができ、スループットの向上が期待できます。ユーザーテーブルをシャードする一般的な方法は、ユーザーのラストネームイニシャルでシャードするか、ユーザーの地理的配置でシャードするなどです。欠点: シャーディングシャードに対応するようにアプリケーションロジックを変更しなければなりません。結果としてSQLクエリが複雑になります。シャードではデータ配分がいびつになってしまう可能性があります。例えば、標準ユーザーの集合を持つシャードがある場合、そのシャードが他のシャードよりも重い負荷を負うことになります。リバランシングをすると複雑性がより増します。consistent hashing に基づいたシャーディングでは、通信データを削減することもできます。複数のシャードからのデータを連結するのはより複雑です。シャーディングでは追加のハードウェアが必要になり、複雑性も増します。その他の参考資料、ページ: シャーディングシャードの登場シャードデータベースアーキテクチャConsistent hashing非正規化非正規化では、書き込みのパフォーマンスをいくらか犠牲にして読み込みのパフォーマンスを向上させようとします。計算的に重いテーブルの結合などをせずに、複数のテーブルに冗長なデータのコピーが書き込まれるのを許容します。いくつかのRDBMS例えば、PostgreSQL やOracleはこの冗長な情報を取り扱い、一貫性を保つためのmaterialized views という機能をサポートしています。フェデレーション や シャーディングなどのテクニックによってそれぞれのデータセンターに分配されたデータを合一させることはとても複雑な作業です。非正規化によってそのような複雑な処理をしなくて済むようになります。多くのシステムで、100対1あるいは1000対1くらいになるくらい読み取りの方が、書き込みのトラフィックよりも多いことでしょう。読み込みを行うために、複雑なデータベースのジョイン処理が含まれるものは計算的に高価につきますし、ディスクの処理時間で膨大な時間を費消してしまうことになります。欠点: 非正規化データが複製される。冗長なデータの複製が同期されるように制約が存在し、そのことでデータベース全体の設計が複雑化する。非正規化されたデータベースは過大な書き込みを処理しなければならない場合、正規化されているそれよりもパフォーマンスにおいて劣る可能性がある。その他の参考資料、ページ: 非正規化DenormalizationSQLチューニングSQLチューニングは広範な知識を必要とする分野で多くの 本 が書かれています。ボトルネックを明らかにし、シミュレートする上で、 ベンチマーク を定め、 プロファイル することはとても重要です。ベンチマーク - abなどのツールを用いて、高負荷の状況をシミュレーションしてみましょう。プロファイル - slow query log などのツールを用いて、パフォーマンス状況の確認をしましょう。ベンチマークとプロファイルをとることで以下のような効率化の選択肢をとることになるでしょう。スキーマを絞るMySQLはアクセス速度向上のため、ディスク上の連続したブロックへデータを格納しています。長さの決まったフィールドに対しては VARCHAR よりも CHAR を使うようにしましょう。CHAR の方が効率的に速くランダムにデータにアクセスできます。 一方、 VARCHAR では次のデータに移る前にデータの末尾を検知しなければならないために速度が犠牲になります。ブログの投稿など、大きなテキストには TEXT を使いましょう。 TEXT ではブーリアン型の検索も可能です。 TEXT フィールドには、テキストブロックが配置されている、ディスク上の場所へのポインターが保存されます。2の32乗や40億以下を超えない程度の大きな数には INT を使いましょう。通貨に関しては小数点表示上のエラーを避けるために DECIMAL を使いましょう。大きな BLOBS を保存するのは避けましょう。どこからそのオブジェクトを取ってくることができるかの情報を保存しましょう。VARCHAR(255) は8ビットで数えられる最大の文字数です。一部のDBMSでは、1バイトの利用効率を最大化するためにこの文字数がよく使われます。検索性能向上のため 、可能であれば NOT NULL 制約を設定しましょう。インデックスを効果的に用いるクエリ(SELECT、 GROUP BY、 ORDER BY、 JOIN) の対象となる列にインデックスを使うことで速度を向上できるかもしれません。インデックスは通常、平衡探索木であるB木の形で表されます。B木によりデータは常にソートされた状態になります。また検索、順次アクセス、挿入、削除を対数時間で行えます。インデックスを配置することはデータをメモリーに残すことにつながりより容量を必要とします。インデックスの更新も必要になるため書き込みも遅くなります。大量のデータをロードする際には、インデックスを切ってからデータをロードして再びインデックスをビルドした方が速いことがあります。高負荷なジョインを避けるパフォーマンス上必要なところには非正規化を適用するテーブルのパーティションテーブルを分割し、ホットスポットを独立したテーブルに分離してメモリーに乗せられるようにする。クエリキャッシュを調整する場合によってはクエリキャッシュ がパフォーマンス問題 を引き起こす可能性があるその他の参考資料、ページ: SQLチューニングMySQLクエリを最適化するためのTipsVARCHAR(255)をやたらよく見かけるのはなんで？null値はどのようにパフォーマンスに影響するのか？Slow query logNoSQLNoSQL は key-value store、 document-store、 wide column store、 もしくは graph databaseによって表現されるデータアイテムの集合です。データは一般的に正規化されておらず、アプリケーション側でジョインが行われます。大部分のNoSQLは真のACIDトランザクションを持たず、 結果整合性 的な振る舞いの方を好みます。BASE はしばしばNoSQLデータベースのプロパティを説明するために用いられます。CAP Theorem と対照的に、BASEは一貫性よりも可用性を優先します。Basically available - システムは可用性を保証します。Soft state - システムの状態は入力がなくても時間経過とともに変化する可能性があります。結果整合性 - システム全体は時間経過とともにその間に入力がないという前提のもと、一貫性が達成されます。SQLか？NoSQLか？ を選択するのに加えて、どのタイプのNoSQLがどの使用例に最も適するかを理解するのはとても有益です。このセクションでは キーバリューストア、 ドキュメントストア、 ワイドカラムストア、 と グラフデータベース について触れていきます。キーバリューストア概要: ハッシュテーブルキーバリューストアでは一般的にO(1)の読み書きができ、それらはメモリないしSSDで裏付けられています。データストアはキーを 辞書的順序 で保持することでキーの効率的な取得を可能にしています。キーバリューストアではメタデータを値とともに保持することが可能です。キーバリューストアはハイパフォーマンスな挙動が可能で、単純なデータモデルやインメモリーキャッシュレイヤーなどのデータが急速に変わる場合などに使われます。単純な処理のみに機能が制限されているので、追加の処理機能が必要な場合にはその複雑性はアプリケーション層に載せることになります。キーバリューストアはもっと複雑なドキュメントストアや、グラフデータベースなどの基本です。その他の参考資料、ページ: キーバリューストアキーバリューデータベースキーバリューストアの欠点Redisアーキテクチャメムキャッシュアーキテクチャドキュメントストア概要: ドキュメントがバリューとして保存されたキーバリューストアドキュメントストアはオブジェクトに関する全ての情報を持つドキュメント(XML、 JSON、 binaryなど)を中心に据えたシステムです。ドキュメントストアでは、ドキュメント自身の内部構造に基づいた、APIもしくはクエリ言語を提供します。 メモ：多くのキーバリューストアでは、値のメタデータを扱う機能を含んでいますが、そのことによって二つドキュメントストアとの境界線が曖昧になってしまっています。以上のことを実現するために、ドキュメントはコレクション、タグ、メタデータやディレクトリなどとして整理されています。ドキュメント同士はまとめてグループにできるものの、それぞれで全く異なるフィールドを持つ可能性があります。MongoDB や CouchDB などのドキュメントストアも、複雑なクエリを処理するためのSQLのような言語を提供しています。DynamoDB はキーバリューとドキュメントの両方をサポートしています。ドキュメントストアは高い柔軟性を担保するので、頻繁に変化するデータを扱う時に用いられます。その他の参考資料、ページ:  ドキュメントストアドキュメント指向 データベースMongoDB アーキテクチャCouchDB アーキテクチャElasticsearch アーキテクチャワイドカラムストア      Source: SQL & NoSQL, a brief history概要: ネストされたマップ カラムファミリー<行キー、 カラム<ColKey、 Value、 Timestamp>>ワイドカラムストアのデータの基本単位はカラム（ネーム・バリューのペア）です。それぞれのカラムはカラムファミリーとして（SQLテーブルのように）グループ化することができます。スーパーカラムファミリーはカラムファミリーの集合です。それぞれのカラムには行キーでアクセスすることができます。同じ行キーを持つカラムは同じ行として認識されます。それぞれの値は、バージョン管理とコンフリクトが起きた時のために、タイムスタンプを含みます。GoogleはBigtableを初のワイドカラムストアとして発表しました。それがオープンソースでHadoopなどでよく使われるHBase やFacebookによるCassandra などのプロジェクトに影響を与えました。BigTable、HBaseやCassandraなどのストアはキーを辞書形式で保持することで選択したキーレンジでのデータ取得を効率的にします。ワイドカラムストアは高い可用性とスケーラビリティを担保します。これらはとても大規模なデータセットを扱うことによく使われます。その他の参考資料、ページ:  ワイドカラムストアSQL & NoSQL簡単に歴史をさらうBigtable アーキテクチャHBase アーキテクチャCassandra アーキテクチャグラフデータベース      Source: Graph database概要: グラフグラフデータベースでは、それぞれのノードがレコードで、それぞれのアークは二つのノードを繋ぐ関係性として定義されます。グラフデータベースは多数の外部キーや多対多などの複雑な関係性を表すのに最適です。グラフデータベースはSNSなどのサービスの複雑な関係性モデルなどについて高いパフォーマンスを発揮します。比較的新しく、まだ一般的には用いられていないので、開発ツールやリソースを探すのが他の方法に比べて難しいかもしれません。多くのグラフはREST APIsを通じてのみアクセスできます。その他の参考資料、ページ:  グラフGraphデータベースNeo4jFlockDBその他の参考資料、ページ:  NoSQL基本用語の説明NoSQLデータベースについて調査と選択ガイドスケーラビリティNoSQLのイントロダクションNoSQLパターンSQLか？NoSQLか？      Source: Transitioning from RDBMS to NoSQLSQL を選ぶ理由:構造化されたデータ厳格なスキーマリレーショナルデータ複雑なジョインをする必要性トランザクションスケールする際のパターンが明確なとき開発者の数、コミュニティ、コード等がより充実しているインデックスによるデータ探索はとても速いNoSQL を選ぶ理由:準構造化されたデータダイナミックないし、フレキシブルなスキーマノンリレーショナルなデータ複雑なジョインをする必要がないデータの多くのTB (もしくは PB) を保存する集中的、大規模なデータ負荷に耐えられるIOPSについては極めて高いスループットを示すNoSQLに適するサンプルデータ:急激なクリックストリームやログデータの収集リーダーボードやスコアリングデータショッピングカートなどの一時的情報頻繁にアクセスされる ('ホットな') テーブルメタデータやルックアップテーブルその他の参考資料、ページ:  　SQLもしくはNoSQL最初の1000万ユーザーにスケールアップするためにSQLとNoSQLの違いキャッシュ      Source: Scalable system design patternsキャッシュはページの読み込み時間を削減し、サーバーやデータベースへの負荷を低減することができます。このモデルでは、実際の処理を保存するために、ディスパッチャーがまず以前にリクエストが送信されたかどうかを確認し、直前の結果を受け取ります。データベースはそのパーティションに渡って統合された読み取り書き込みの分配を要求しますが、人気アイテムはその分配を歪めてシステム全体のボトルネックになってしまうことがあります。データベースの前にキャッシュを差し込むことでこのように、均一でない負荷やトラフィックの急激な増加を吸収することができます。クライアントキャッシングキャッシュはOSやブラウザーなどのクライアントサイド、サーバーサイド もしくは独立のキャッシュレイヤーに設置することができます。CDNキャッシングCDN もキャッシュの一つとして考えることができます。Webサーバーキャッシングリバースプロキシ や Varnish などのキャッシュは静的そして動的なコンテンツを直接配信することができます。 webサーバーもリクエストをキャッシュしてアプリケーションサーバーに接続することなしにレスポンスを返すことができます。データベースキャッシングデータベースは普通、一般的な使用状況に適するようなキャッシングの設定を初期状態で持っています。この設定を特定の仕様に合わせて調整することでパフォーマンスを向上させることができます。アプリケーションキャッシングメムキャッシュなどのIn-memoryキャッシュやRedisはアプリケーションとデータストレージの間のキーバリューストアです。データはRAMで保持されるため、データがディスクで保存される一般的なデータベースよりもだいぶ速いです。RAM容量はディスクよりも限られているので、least recently used (LRU)などのcache invalidation アルゴリズムが 'コールド' なエントリを弾き、'ホット' なデータをRAMに保存します。Redisはさらに以下のような機能を備えています:パージステンス設定ソート済みセット、リストなどの組み込みデータ構造キャッシュには様々なレベルのものがありますが、いずれも大きく二つのカテゴリーのいずれかに分類することができます: データベースクエリ と オブジェクト です:行レベルクエリレベルFully-formed serializable objectsFully-rendered HTML一般的に、ファイルベースキャッシングはクローンを作り出してオートスケーリングを難しくしてしまうので避けるべきです。データベースクエリレベルでのキャッシングデータベースをクエリする際には必ずクエリをキーとしてハッシュして結果をキャッシュに保存しましょう。この手法はキャッシュ期限切れ問題に悩むことになります:複雑なクエリによりキャッシュされた結果を削除することが困難テーブルセルなどのデータ断片が変化した時に、その変化したセルを含むかもしれない全てのキャッシュされたクエリを削除する必要がある。オブジェクトレベルでのキャッシングデータをアプリケーションコードでそうするように、オブジェクトとして捉えてみましょう。アプリケーションに、データベースからのデータセットをクラスインスタンスやデータ構造として組み立てさせます。:そのデータが変更されたら、オブジェクトをキャッシュから削除すること非同期処理を許容します: ワーカーがキャッシュされたオブジェクトの中で最新のものを集めてきます何をキャッシュするか:ユーザーのセッション完全にレンダーされたウェブページアクテビティストリームユーザーグラフデータいつキャッシュを更新するかキャッシュに保存できる容量は限られているため、自分のケースではどのキャッシュ手法が一番いいかは検討する必要があります。キャッシュアサイド      Source: From cache to in-memory data gridアプリケーションはストレージへの読み書きの処理をします。キャッシュはストレージとは直接やりとりをしません。アプリケーションは以下のことをします:キャッシュの中のエントリを参照しますが、結果としてキャッシュミスになりますデータベースからエントリを取得しますエントリをキャッシュに追加しますエントリを返しますdef get_user(self, user_id):    user = cache.get(\""user.{0}\"", user_id)    if user is None:        user = db.query(\""SELECT * FROM users WHERE user_id = {0}\"", user_id)        if user is not None:            key = \""user.{0}\"".format(user_id)            cache.set(key, json.dumps(user))    return userMemcached は通常このように使われる。その後のキャッシュデータ読み込みは速いです。キャッシュアサイドはレージーローディングであるとも言われます。リクエストされたデータのみがキャッシュされ、リクエストされていないデータでキャッシュが溢れるのを防止します。欠点: キャッシュアサイド各キャッシュミスは三つのトリップを呼び出すことになり、体感できるほどの遅延が起きてしまいます。データベースのデータが更新されるとキャッシュデータは古いものになってしまいます。time-to-live (TTL)を設定することでキャッシュエントリの更新を強制的に行う、もしくはライトスルーを採用することでこの問題は緩和できます。ノードが落ちると、新規の空のノードで代替されることでレイテンシーが増加することになります。ライトスルー      Source: Scalability, availability, stability, patternsアプリケーションはキャッシュをメインのデータストアとして使い、そこにデータの読み書きを行います。一方、キャッシュはデータベースへの読み書きを担当します。アプリケーションはキャッシュにあるエントリを追加・更新しますキャッシュは同期的にデータストアに書き込みを行いますエントリを返しますアプリケーションコード:set_user(12345, {\""foo\"":\""bar\""})キャッシュコード:def set_user(user_id, values):    user = db.query(\""UPDATE Users WHERE id = {0}\"", user_id, values)    cache.set(user_id, user)ライトスルーは書き込み処理のせいで全体としては遅いオペレーションですが、書き込まれたばかりのデータに関する読み込みは速いです。ユーザー側は一般的にデータ更新時の方が読み込み時よりもレイテンシーに許容的です。キャッシュ内のデータは最新版で保たれます。欠点: ライトスルーノードが落ちたこと、もしくはスケーリングによって新しいノードが作成された時に、新しいノードはデータベース内のエントリーが更新されるまではエントリーをキャッシュしません。キャッシュアサイドとライトスルーを併用することでこの問題を緩和できます。書き込まれたデータの大部分は一度も読み込まれることはありません。このデータはTTLによって圧縮することができます。ライトビハインド (ライトバック)      Source: Scalability, availability, stability, patternsライトビハインドではアプリケーションは以下のことをします:キャッシュのエントリーを追加・更新しますデータストアへの書き込みを非同期的に行うことで、書き込みパフォーマンスを向上させます。欠点: ライトビハインドキャッシュがデータストア内のコンテンツにヒットする前にキャッシュが落ちるとデータ欠損が起きる可能性があります。キャッシュアサイドやライトスルーよりも実装が複雑になります。リフレッシュアヘッド      Source: From cache to in-memory data grid期限切れよりも前に、直近でアクセスされた全てのキャッシュエントリを自動的に更新するように設定することができます。もしどのアイテムが将来必要になるのかを正確に予測することができるのならば、リードスルーよりもレイテンシーを削減することができます。欠点: リフレッシュアヘッドどのアイテムが必要になるかの予測が正確でない場合にはリフレッシュアヘッドがない方がレイテンシーは良いという結果になってしまいます。欠点: キャッシュcache invalidationなどを用いて、データベースなどの真のデータとキャッシュの間の一貫性を保つ必要があります。Redisやmemcachedを追加することでアプリケーション構成を変更する必要があります。Cache invalidationも難しいですがそれに加えて、いつキャッシュを更新するかという複雑な問題にも悩まされることになります。その他の参考資料、ページFrom cache to in-memory data gridスケーラブルなシステムデザインパターンスケールできるシステムを設計するためのイントロダクションスケーラビリティ、可用性、安定性、パターンスケーラビリティAWS ElastiCacheのストラテジーWikipedia非同期処理      Source: Intro to architecting systems for scale非同期のワークフローはもし、連続的に行われるとリクエスト時間を圧迫してしまうような重い処理を別で処理する手法です。また、定期的にデータを集合させるなどの時間がかかるような処理を前もって処理しておくことにも役立ちます。メッセージキューメッセージキューはメッセージを受け取り、保存し、配信します。もし、処理がインラインで行うには遅すぎる場合、以下のようなワークフローでメッセージキューを用いるといいでしょう:アプリケーションはジョブをキューに配信し、ユーザーにジョブステータスを伝えます。ワーカーがジョブキューから受け取って、処理を行い、終了したらそのシグナルを返します。ユーザーの処理が止まることはなく、ジョブはバックグラウンドで処理されます。この間に、クライアントはオプションとして、タスクが完了したかのように見せるために小規模の処理を行います。例えば、ツイートを投稿するときに、ツイートはすぐにあなたのタイムラインに反映されたように見えますが、そのツイートが実際に全てのフォロワーに配信されるまでにはもう少し時間がかかっているでしょう。Redis はシンプルなメッセージ仲介としてはいいですが、メッセージが失われてしまう可能性があります。RabbitMQ はよく使われていますが、'AMQP'プロトコルに対応して、自前のノードを立てる必要があります。Amazon SQS という選択肢もありますが、レイテンシーが高く、メッセージが重複して配信されてしまう可能性があります。タスクキュータスクキューはタスクとその関連するデータを受け取り、処理した上でその結果を返します。スケジュール管理をできるほか、バックグラウンドでとても重いジョブをこなすこともできます。Celery はスケジューリングとpythonのサポートがあります。バックプレッシャーもし、キューが拡大しすぎると、メモリーよりもキューの方が大きくなりキャッシュミスが起こり、ディスク読み出しにつながり、パフォーマンスが低下することにつながります。バックプレッシャーはキューサイズを制限することで回避することができ、高いスループットを確保しキューにすでにあるジョブについてのレスポンス時間を短縮できます。キューがいっぱいになると、クライアントはサーバービジーもしくはHTTP 503をレスポンスとして受け取りまた後で時間をおいてアクセスするようにメッセージを受け取ります。クライアントはexponential backoffなどによって後ほど再度時間を置いてリクエストすることができます。欠点: 非同期処理キューを用いることで遅延が起こり、複雑さも増すため、あまり重くない計算処理やリアルタイムワークフローにおいては同期処理の方がいいでしょう。その他の参考資料、ページIt's all a numbers gameオーバーロードした時にバックプレッシャーを適用するLittle's lawメッセージキューとタスクキューの違いとは？通信      Source: OSI 7 layer modelHypertext transfer protocol (HTTP)HTTP はクライアントとサーバー間でのデータをエンコードして転送するための手法です。リクエスト・レスポンスに関わるプロトコルです。クライアントがリクエストをサーバーに投げ、サーバーがリクエストに関係するコンテンツと完了ステータス情報をレスポンスとして返します。HTTPは自己完結するので、間にロードバランサー、キャッシュ、エンクリプション、圧縮などのどんな中間ルーターが入っても動くようにできています。基本的なHTTPリクエストはHTTP動詞(メソッド)とリソース(エンドポイント)で成り立っています。以下がよくあるHTTP動詞です。:動詞詳細冪等性*セーフキャッシュできるかGETリソースを読み取るYesYesYesPOSTリソースを作成するもしくはデータを処理するトリガーNoNoYes レスポンスが新しい情報を含む場合PUTリソースを作成もしくは入れ替えるYesNoNoPATCHリソースを部分的に更新するNoNoYes レスポンスが新しい情報を含む場合DELETEリソースを削除するYesNoNo何度呼んでも同じ結果が返ってくることHTTPはTCP や UDP などの低級プロトコルに依存しているアプリケーションレイヤーのプロトコルである。その他の参考資料、ページ: HTTPHTTPってなに?HTTP と TCPの違いPUT と PATCHの違い伝送制御プロトコル (TCP)      Source: How to make a multiplayer gameTCPはIP networkの上で成り立つ接続プロトコルです。接続はhandshakeによって開始、解除されます。全ての送信されたパケットは欠損なしで送信先に送信された順番で到達するように以下の方法で保証されています:シーケンス番号とchecksum fieldsが全てのパケットに用意されているAcknowledgementパケットと自動再送信もし送信者が正しいレスポンスを受け取らなかったとき、パケットを再送信します。複数のタイムアウトがあったとき、接続は解除されます。TCP はフロー制御 と 輻輳制御も実装しています。これらの機能によって速度は低下し、一般的にUDPよりも非効率な転送手段になっています。ハイスループットを実現するために、ウェブサーバーはかなり大きな数のTCP接続を開いておくことがあり、そのことでメモリー使用が圧迫されます。ウェブサーバスレッドと例えばmemcached サーバーの間で多数のコネクションを保っておくことは高くつくかもしれません。可能なところではUDPに切り替えるだけでなくコネクションプーリングなども役立つかもしれません。TCPは高い依存性を要し、時間制約が厳しくないものに適しているでしょう。ウェブサーバー、データベース情報、SMTP、FTPやSSHなどの例に適用されます。以下の時にUDPよりもTCPを使うといいでしょう:全てのデータが欠損することなしに届いてほしいネットワークスループットの最適な自動推測をしてオペレーションしたいユーザデータグラムプロトコル (UDP)      Source: How to make a multiplayer gameUDPはコネクションレスです。データグラム（パケットのようなもの）はデータグラムレベルでの保証しかされません。データグラムは順不同で受け取り先に到着したりそもそも着かなかったりします。UDPは輻輳制御をサポートしません。TCPにおいてはサポートされているこれらの保証がないため、UDPは一般的に、TCPよりも効率的です。UDPはサブネット上のすべての機器にデータグラムを送信することができます。これはDHCP において役に立ちます。というのも、クライアントはまだIPアドレスを取得していないので、IPアドレスを必要とするTCPによるストリームができないからです。UDPは信頼性の面では劣りますが、VoIP、ビデオチャット、ストリーミングや同時通信マルチプレイヤーゲームなどのリアルタイム性が重視される時にはとても効果的です。TCPよりもUDPを使うのは:レイテンシーを最低限に抑えたい時データ欠損よりも、データ遅延を重視するときエラー修正を自前で実装したいときその他の参考資料、ページ: TCP と UDPゲームプログラミングのためのネットワークTCP と UDP プロトコルの主な違いTCP と UDPの違いTransmission control protocolUser datagram protocolFacebookのメムキャッシュスケーリング遠隔手続呼出 (RPC)      Source: Crack the system design interviewRPCではクライアントがリモートサーバーなどの異なるアドレス空間でプロシージャーが処理されるようにします。プロシージャーはローカルでのコールのように、クライアントからサーバーにどのように通信するかという詳細を省いた状態でコードが書かれます。リモートのコールは普通、ローカルのコールよりも遅く、信頼性に欠けるため、RPCコールをローカルコールと区別させておくことが好ましいでしょう。人気のRPCフレームワークは以下です。Protobuf、 Thrift、AvroRPC は リクエストレスポンスプロトコル:クライアントプログラム - クライアントスタブプロシージャーを呼び出します。パラメータはローカルでのプロシージャーコールのようにスタックへとプッシュされていきます。クライアントスタブプロシージャー - プロシージャIDとアーギュメントをパックしてリクエストメッセージにします。クライアント通信モジュール - OSがクライアントからサーバーへとメッセージを送ります。サーバー通信モジュール - OSが受け取ったパケットをサーバースタブプロシージャーに受け渡します。サーバースタブプロシージャー -  結果を展開し、プロシージャーIDにマッチするサーバープロシージャーを呼び出し、結果を返します。サーバーレスポンスは上記のステップを逆順で繰り返します。Sample RPC calls:GET /someoperation?data=anIdPOST /anotheroperation{  \""data\"":\""anId\"";  \""anotherdata\"": \""another value\""}RPCは振る舞いを公開することに焦点を当てています。RPCは内部通信パフォーマンスを理由として使われることが多いです。というのも、使用する状況に合わせてネイティブコールを自作することができるからです。ネイティブライブラリー (aka SDK) を呼ぶのは以下の時:ターゲットのプラットフォームを知っている時ロジックがどのようにアクセスされるのかを管理したいときライブラリー外でエラーがどのようにコントロールされるかを管理したい時パフォーマンスとエンドユーザーエクスペリエンスが最優先の時REST プロトコルに従うHTTP APIはパブリックAPIにおいてよく用いられます。欠点: RPCRPCクライアントとはサービス実装により厳密に左右されることになります。新しいオペレーション、使用例があるたびに新しくAPIが定義されなければなりません。RPCをデバッグするのは難しい可能性があります。既存のテクノロジーをそのまま使ってサービスを構築することはできないかもしれません。例えば、SquidなどのサーバーにRPCコールが正しくキャッシュ されるように追加で骨を折る必要があるかもしれません。Representational state transfer (REST)RESTは、クライアントがサーバーによってマネージされるリソースに対して処理を行うクライアント・サーバーモデルを支持するアーキテキチャスタイルです。サーバーは操作できるもしくは新しいリソースレプレゼンテーションを受け取ることができるようなリソースやアクションのレプレゼンテーションを提供します。すべての通信はステートレスでキャッシュ可能でなければなりません。RESTful なインターフェースには次の四つの特徴があります:特徴的なリソース (URI in HTTP) - どのオペレーションであっても同じURIを使う。HTTP動詞によって変わる (Verbs in HTTP) - 動詞、ヘッダー、ボディを使う自己説明的なエラーメッセージ (status response in HTTP) - ステータスコードを使い、新しく作ったりしないこと。HATEOAS (HTML interface for HTTP) - 自分のwebサービスがブラウザで完全にアクセスできること。サンプル REST コール:GET /someresources/anIdPUT /someresources/anId{\""anotherdata\"": \""another value\""}RESTはデータを公開することに焦点を当てています。クライアントとサーバーのカップリングを最小限にするもので、パブリックAPIなどによく用いられます。RESTはURI、 representation through headers、そして、GET、POST、PUT、 DELETE、PATCHなどのHTTP動詞等のよりジェネリックで統一されたメソッドを用います。ステートレスであるのでRESTは水平スケーリングやパーティショニングに最適です。欠点: RESTRESTはデータ公開に焦点を当てているので、リソースが自然に整理されていなかったり、シンプルなヒエラルキーで表せられない時にはよい選択肢とは言えないかもしれません。例えば、とあるイベントのセットにマッチするすべての更新情報を返すと言った処理は簡単にはパスで表現することができません。RESTでは、URIパス、クエリパラメータ、そして場合によってはリクエストボディなどによって実装されることが多いでしょう。RESTは少数の動詞に依存しています(GET、POST、PUT、DELETE、そして PATCH) が時には使いたい事例に合わないことがあります。例えば、期限の切れたドキュメントをアーカイブに移したい場合などはこれらの動詞の中には綺麗にはフィットしません。ネストされたヒエラルキーの中にあるリソースをとってくるのはシングルビューを描画するのにクライアントとサーバー間で数回やりとりしなければなりません。例として、ブログエントリーのコンテンツとそれに対するコメントを表示する場合などです。様々なネットワーク環境で動作する可能性が考えられるモバイルアプリケーションにおいてはこのような複数のやり取りは好ましくありません。時が経つにつれて、APIレスポンスにより多くのフィールドが与えられて、古いクライアントはすでにいらないものも含めてすべてのデータフィールドを受け取ることになります。そのことで、ペイロードが大きくなりすぎて、レイテンシーも拡大することになります。RPCとREST比較OperationRPCRESTサインアップPOST /signupPOST /personsリザインPOST /resign{\""personid\"": \""1234\""}DELETE /persons/1234Person読み込みGET /readPerson?personid=1234GET /persons/1234Personのアイテムリスト読み込みGET /readUsersItemsList?personid=1234GET /persons/1234/itemsPersonのアイテムへのアイテム追加POST /addItemToUsersItemsList{\""personid\"": \""1234\"";\""itemid\"": \""456\""}POST /persons/1234/items{\""itemid\"": \""456\""}アイテム更新POST /modifyItem{\""itemid\"": \""456\"";\""key\"": \""value\""}PUT /items/456{\""key\"": \""value\""}アイテム削除POST /removeItem{\""itemid\"": \""456\""}DELETE /items/456  Source: Do you really know why you prefer REST over RPCその他の参考資料、ページ: REST と RPCDo you really know why you prefer REST over RPCWhen are RPC-ish approaches more appropriate than REST?REST vs JSON-RPCDebunking the myths of RPC and RESTWhat are the drawbacks of using RESTCrack the system design interviewThriftWhy REST for internal use and not RPCセキュリティこのセクションは更新が必要です。contributingしてください！セキュリティは幅広いトピックです。十分な経験、セキュリティ分野のバックグラウンドがなくても、セキュリティの知識を要する職に応募するのでない限り、基本以上のことを知る必要はないでしょう。情報伝達、保存における暗号化XSS や SQL injectionを防ぐために、全てのユーザー入力もしくはユーザーに露出される入力パラメーターをサニタイズするSQL injectionを防ぐためにパラメータ化されたクエリを用いる。least privilegeの原理を用いるその他の参考資料、ページ:開発者のためのセキュリティガイドOWASP top ten補遺暗算で、推計値を求める必要があることも時にはあります。例えば、ディスクから100枚イメージ分のサムネイルを作る時間を求めたり、その時にどれだけディスクメモリーが消費されるかなどの値です。2の乗数表 と 全てのプログラマーが知るべきレイテンシー値 は良い参考になるでしょう。2の乗数表乗数           厳密な値         約        Bytes---------------------------------------------------------------7                             1288                             25610                           1024   1 thousand           1 KB16                         65,536                       64 KB20                      1,048,576   1 million            1 MB30                  1,073,741,824   1 billion            1 GB32                  4,294,967,296                        4 GB40              1,099,511,627,776   1 trillion           1 TBその他の参考資料、ページ:2の乗数表全てのプログラマーが知るべきレイテンシー値Latency Comparison Numbers--------------------------L1 cache reference                           0.5 nsBranch mispredict                            5   nsL2 cache reference                           7   ns                      14x L1 cacheMutex lock/unlock                           25   nsMain memory reference                      100   ns                      20x L2 cache, 200x L1 cacheCompress 1K bytes with Zippy            10,000   ns       10 usSend 1 KB bytes over 1 Gbps network     10,000   ns       10 usRead 4 KB randomly from SSD*           150,000   ns      150 us          ~1GB/sec SSDRead 1 MB sequentially from memory     250,000   ns      250 usRound trip within same datacenter      500,000   ns      500 usRead 1 MB sequentially from SSD*     1,000,000   ns    1,000 us    1 ms  ~1GB/sec SSD, 4X memoryDisk seek                           10,000,000   ns   10,000 us   10 ms  20x datacenter roundtripRead 1 MB sequentially from 1 Gbps  10,000,000   ns   10,000 us   10 ms  40x memory, 10X SSDRead 1 MB sequentially from disk    30,000,000   ns   30,000 us   30 ms 120x memory, 30X SSDSend packet CA->Netherlands->CA    150,000,000   ns  150,000 us  150 msNotes-----1 ns = 10^-9 seconds1 us = 10^-6 seconds = 1,000 ns1 ms = 10^-3 seconds = 1,000 us = 1,000,000 ns上記表に基づいた役に立つ数値:ディスクからの連続読み取り速度 30 MB/s1 Gbps Ethernetからの連続読み取り速度　100 MB/sSSDからの連続読み取り速度 1 GB/smain memoryからの連続読み取り速度 4 GB/s1秒で地球6-7周できる1秒でデータセンターと2000周やりとりできるレイテンシーの視覚的表その他の参考資料、ページ:全てのプログラマーが知るべきレイテンシー値 - 1全てのプログラマーが知るべきレイテンシー値 - 2Designs, lessons, and advice from building large distributed systemsSoftware Engineering Advice from Building Large-Scale Distributed Systems他のシステム設計面接例題頻出のシステム設計面接課題とその解答へのリンク質問解答Dropboxのようなファイル同期サービスを設計するyoutube.comGoogleのような検索エンジンの設計queue.acm.orgstackexchange.comardendertat.comstanford.eduGoogleのようなスケーラブルなwebクローラーの設計quora.comGoogle docsの設計code.google.comneil.fraser.nameRedisのようなキーバリューストアの設計slideshare.netMemcachedのようなキャッシュシステムの設計slideshare.netAmazonのようなレコメンデーションシステムの設計hulu.comijcai13.orgBitlyのようなURL短縮サービスの設計n00tc0d3r.blogspot.comWhatsAppのようなチャットアプリの設計highscalability.comInstagramのような写真共有サービスの設計highscalability.comhighscalability.comFacebookニュースフィードの設計quora.comquora.comslideshare.netFacebookタイムラインの設計facebook.comhighscalability.comFacebookチャットの設計erlang-factory.comfacebook.comFacebookのようなgraph検索の設計facebook.comfacebook.comfacebook.comCloudFlareのようなCDNの設計cmu.eduTwitterのトレンド機能の設計michael-noll.comsnikolov .wordpress.comランダムID発行システムの設計blog.twitter.comgithub.com一定のインターバル時間での上位k件を返すucsb.eduwpi.edu複数のデータセンターからデータを配信するサービスの設計highscalability.comオンラインの複数プレイヤーカードゲームの設計indieflashblog.combuildnewgames.comガーベッジコレクションシステムの設計stuffwithstuff.comwashington.eduシステム設計例題を追加するContribute実世界のアーキテクチャ世の中のシステムがどのように設計されているかについての記事      Source: Twitter timelines at scale以下の記事の重箱の隅をつつくような細かい詳細にこだわらないこと。むしろ共通の原理、技術、パターンを探ることそれぞれのコンポーネントでどんな問題が解決され、コンポーネントはどこでうまく使えもしくは使えないかを知ること学んだことを復習すること種類システム参考ページデータ処理MapReduce - Googleの分散データ処理システムresearch.google.comデータ処理Spark - Databricksの分散データ処理システムslideshare.netデータ処理Storm - Twitterの分散データ処理システムslideshare.netデータストアBigtable - Googleのカラム指向分散データベースharvard.eduデータストアHBase - Bigtableのオープンソース実装slideshare.netデータストアCassandra - Facebookのカラム指向分散データベースslideshare.netデータストアDynamoDB - Amazonのドキュメント指向分散データベースharvard.eduデータストアMongoDB - ドキュメント指向分散データベースslideshare.netデータストアSpanner - Googleのグローバル分散データベースresearch.google.comデータストアMemcached - 分散メモリーキャッシングシステムslideshare.netデータストアRedis - 永続性とバリュータイプを兼ね備えた分散メモリーキャッシングシステムslideshare.netファイルシステムGoogle File System (GFS) - 分散ファイルシステムresearch.google.comファイルシステムHadoop File System (HDFS) - GFSのオープンソース実装apache.orgMiscChubby - 疎結合の分散システムをロックするGoogleのサービスresearch.google.comMiscDapper - 分散システムを追跡するインフラresearch.google.comMiscKafka - LinkedInによるPub/subメッセージキューslideshare.netMiscZookeeper - 同期を可能にする中央集権インフラとサービスslideshare.netアーキテクチャを追加するContribute各企業のアーキテクチャ企業参考ページAmazonAmazon architectureCinchcastProducing 1,500 hours of audio every dayDataSiftRealtime datamining At 120,000 tweets per secondDropBoxHow we've scaled DropboxESPNOperating At 100,000 duh nuh nuhs per secondGoogleGoogle architectureInstagram14 million users, terabytes of photosWhat powers InstagramJustin.tvJustin.Tv's live video broadcasting architectureFacebookScaling memcached at FacebookTAO: Facebook’s distributed data store for the social graphFacebook’s photo storageFlickrFlickr architectureMailboxFrom 0 to one million users in 6 weeksPinterestFrom 0 To 10s of billions of page views a month18 million visitors, 10x growth, 12 employeesPlayfish50 million monthly users and growingPlentyOfFishPlentyOfFish architectureSalesforceHow they handle 1.3 billion transactions a dayStack OverflowStack Overflow architectureTripAdvisor40M visitors, 200M dynamic page views, 30TB dataTumblr15 billion page views a monthTwitterMaking Twitter 10000 percent fasterStoring 250 million tweets a day using MySQL150M active users, 300K QPS, a 22 MB/S firehoseTimelines at scaleBig and small data at TwitterOperations at Twitter: scaling beyond 100 million usersUberHow Uber scales their real-time market platformWhatsAppThe WhatsApp architecture Facebook bought for $19 billionYouTubeYouTube scalabilityYouTube architecture企業のエンジニアブログ面接を受ける企業のアーキテクチャ投げられる質問は同じ分野から来ることもあるでしょうAirbnb EngineeringAtlassian DevelopersAutodesk EngineeringAWS BlogBitly Engineering BlogBox BlogsCloudera Developer BlogDropbox Tech BlogEngineering at QuoraEbay Tech BlogEvernote Tech BlogEtsy Code as CraftFacebook EngineeringFlickr CodeFoursquare Engineering BlogGitHub Engineering BlogGoogle Research BlogGroupon Engineering BlogHeroku Engineering BlogHubspot Engineering BlogHigh ScalabilityInstagram EngineeringIntel Software BlogJane Street Tech BlogLinkedIn EngineeringMicrosoft EngineeringMicrosoft Python EngineeringNetflix Tech BlogPaypal Developer BlogPinterest Engineering BlogQuora EngineeringReddit BlogSalesforce Engineering BlogSlack Engineering BlogSpotify LabsTwilio Engineering BlogTwitter EngineeringUber Engineering BlogYahoo Engineering BlogYelp Engineering BlogZynga Engineering Blogその他の参考資料、ページ:kilimchoi/engineering-blogsここにあるリストは比較的小規模なものにとどめ、kilimchoi/engineering-blogsにより詳細に記すことで重複しないようにしておくことにする。エンジニアブログへのリンクを追加する場合はここではなく、engineering-blogsレボジトリに追加することを検討してください。進行中の作業セクションの追加や、進行中の作業を手伝っていただける場合はこちら!MapReduceによる分散コンピューティングConsistent hashingScatter gatherContributeクレジットクレジット及び、参照ページは適時このリポジトリ内に記載してありますSpecial thanks to:Hired in techCracking the coding interviewHigh scalabilitycheckcheckzz/system-design-interviewshashank88/system_designmmcgrana/services-engineeringSystem design cheat sheetA distributed systems reading listCracking the system design interviewContact infoFeel free to contact me to discuss any issues, questions, or comments.My contact info can be found on my GitHub page.LicenseI am providing code and resources in this repository to you under an open source license.  Because this is my personal repository, the license you receive to my code and resources is from me and not my employer (Facebook).Copyright 2017 Donne MartinCreative Commons Attribution 4.0 International License (CC BY 4.0)http://creativecommons.org/licenses/by/4.0/"
11,11,AUTOMATIC1111/stable-diffusion-webui,https://github.com/AUTOMATIC1111/stable-diffusion-webui/blob/master/README.md,Python,"Stable Diffusion web UIA browser interface based on Gradio library for Stable Diffusion.FeaturesDetailed feature showcase with images:Original txt2img and img2img modesOne click install and run script (but you still must install python and git)OutpaintingInpaintingColor SketchPrompt MatrixStable Diffusion UpscaleAttention, specify parts of text that the model should pay more attention toa man in a ((tuxedo)) - will pay more attention to tuxedoa man in a (tuxedo:1.21) - alternative syntaxselect text and press Ctrl+Up or Ctrl+Down (or Command+Up or Command+Down if you're on a MacOS) to automatically adjust attention to selected text (code contributed by anonymous user)Loopback, run img2img processing multiple timesX/Y/Z plot, a way to draw a 3 dimensional plot of images with different parametersTextual Inversionhave as many embeddings as you want and use any names you like for themuse multiple embeddings with different numbers of vectors per tokenworks with half precision floating point numberstrain embeddings on 8GB (also reports of 6GB working)Extras tab with:GFPGAN, neural network that fixes facesCodeFormer, face restoration tool as an alternative to GFPGANRealESRGAN, neural network upscalerESRGAN, neural network upscaler with a lot of third party modelsSwinIR and Swin2SR (see here), neural network upscalersLDSR, Latent diffusion super resolution upscalingResizing aspect ratio optionsSampling method selectionAdjust sampler eta values (noise multiplier)More advanced noise setting optionsInterrupt processing at any time4GB video card support (also reports of 2GB working)Correct seeds for batchesLive prompt token length validationGeneration parametersparameters you used to generate images are saved with that imagein PNG chunks for PNG, in EXIF for JPEGcan drag the image to PNG info tab to restore generation parameters and automatically copy them into UIcan be disabled in settingsdrag and drop an image/text-parameters to promptboxRead Generation Parameters Button, loads parameters in promptbox to UISettings pageRunning arbitrary python code from UI (must run with --allow-code to enable)Mouseover hints for most UI elementsPossible to change defaults/mix/max/step values for UI elements via text configTiling support, a checkbox to create images that can be tiled like texturesProgress bar and live image generation previewCan use a separate neural network to produce previews with almost none VRAM or compute requirementNegative prompt, an extra text field that allows you to list what you don't want to see in generated imageStyles, a way to save part of prompt and easily apply them via dropdown laterVariations, a way to generate same image but with tiny differencesSeed resizing, a way to generate same image but at slightly different resolutionCLIP interrogator, a button that tries to guess prompt from an imagePrompt Editing, a way to change prompt mid-generation, say to start making a watermelon and switch to anime girl midwayBatch Processing, process a group of files using img2imgImg2img Alternative, reverse Euler method of cross attention controlHighres Fix, a convenience option to produce high resolution pictures in one click without usual distortionsReloading checkpoints on the flyCheckpoint Merger, a tab that allows you to merge up to 3 checkpoints into oneCustom scripts with many extensions from communityComposable-Diffusion, a way to use multiple prompts at onceseparate prompts using uppercase ANDalso supports weights for prompts: a cat :1.2 AND a dog AND a penguin :2.2No token limit for prompts (original stable diffusion lets you use up to 75 tokens)DeepDanbooru integration, creates danbooru style tags for anime promptsxformers, major speed increase for select cards: (add --xformers to commandline args)via extension: History tab: view, direct and delete images conveniently within the UIGenerate forever optionTraining tabhypernetworks and embeddings optionsPreprocessing images: cropping, mirroring, autotagging using BLIP or deepdanbooru (for anime)Clip skipHypernetworksLoras (same as Hypernetworks but more pretty)A sparate UI where you can choose, with preview, which embeddings, hypernetworks or Loras to add to your promptCan select to load a different VAE from settings screenEstimated completion time in progress barAPISupport for dedicated inpainting model by RunwayMLvia extension: Aesthetic Gradients, a way to generate images with a specific aesthetic by using clip images embeds (implementation of https://github.com/vicgalle/stable-diffusion-aesthetic-gradients)Stable Diffusion 2.0 support - see wiki for instructionsAlt-Diffusion support - see wiki for instructionsNow without any bad letters!Load checkpoints in safetensors formatEased resolution restriction: generated image's domension must be a multiple of 8 rather than 64Now with a license!Reorder elements in the UI from settings screenInstallation and RunningMake sure the required dependencies are met and follow the instructions available for both NVidia (recommended) and AMD GPUs.Alternatively, use online services (like Google Colab):List of Online ServicesInstallation on Windows 10/11 with NVidia-GPUs using release packageDownload sd.webui.zip from v1.0.0-pre and extract it's contents.Run update.bat.Run run.bat.For more details see Install-and-Run-on-NVidia-GPUsAutomatic Installation on WindowsInstall Python 3.10.6 (Newer version of Python does not support torch), checking \""Add Python to PATH\"".Install git.Download the stable-diffusion-webui repository, for example by running git clone https://github.com/AUTOMATIC1111/stable-diffusion-webui.git.Run webui-user.bat from Windows Explorer as normal, non-administrator, user.Automatic Installation on LinuxInstall the dependencies:# Debian-based:sudo apt install wget git python3 python3-venv# Red Hat-based:sudo dnf install wget git python3# Arch-based:sudo pacman -S wget git python3Navigate to the directory you would like the webui to be installed and execute the following command:bash <(wget -qO- https://raw.githubusercontent.com/AUTOMATIC1111/stable-diffusion-webui/master/webui.sh)Run webui.sh.Check webui-user.sh for options.Installation on Apple SiliconFind the instructions here.ContributingHere's how to add code to this repo: ContributingDocumentationThe documentation was moved from this README over to the project's wiki.For the purposes of getting Google and other search engines to crawl the wiki, here's a link to the (not for humans) crawlable wiki.CreditsLicenses for borrowed code can be found in Settings -> Licenses screen, and also in html/licenses.html file.Stable Diffusion - https://github.com/CompVis/stable-diffusion, https://github.com/CompVis/taming-transformersk-diffusion - https://github.com/crowsonkb/k-diffusion.gitGFPGAN - https://github.com/TencentARC/GFPGAN.gitCodeFormer - https://github.com/sczhou/CodeFormerESRGAN - https://github.com/xinntao/ESRGANSwinIR - https://github.com/JingyunLiang/SwinIRSwin2SR - https://github.com/mv-lab/swin2srLDSR - https://github.com/Hafiidz/latent-diffusionMiDaS - https://github.com/isl-org/MiDaSIdeas for optimizations - https://github.com/basujindal/stable-diffusionCross Attention layer optimization - Doggettx - https://github.com/Doggettx/stable-diffusion, original idea for prompt editing.Cross Attention layer optimization - InvokeAI, lstein - https://github.com/invoke-ai/InvokeAI (originally http://github.com/lstein/stable-diffusion)Sub-quadratic Cross Attention layer optimization - Alex Birch (Birch-san/diffusers#1), Amin Rezaei (https://github.com/AminRezaei0x443/memory-efficient-attention)Textual Inversion - Rinon Gal - https://github.com/rinongal/textual_inversion (we're not using his code, but we are using his ideas).Idea for SD upscale - https://github.com/jquesnelle/txt2imghdNoise generation for outpainting mk2 - https://github.com/parlance-zz/g-diffuser-botCLIP interrogator idea and borrowing some code - https://github.com/pharmapsychotic/clip-interrogatorIdea for Composable Diffusion - https://github.com/energy-based-model/Compositional-Visual-Generation-with-Composable-Diffusion-Models-PyTorchxformers - https://github.com/facebookresearch/xformersDeepDanbooru - interrogator for anime diffusers https://github.com/KichangKim/DeepDanbooruSampling in float32 precision from a float16 UNet - marunine for the idea, Birch-san for the example Diffusers implementation (https://github.com/Birch-san/diffusers-play/tree/92feee6)Instruct pix2pix - Tim Brooks (star), Aleksander Holynski (star), Alexei A. Efros (no star) - https://github.com/timothybrooks/instruct-pix2pixSecurity advice - RyotaKUniPC sampler - Wenliang Zhao - https://github.com/wl-zhao/UniPCTAESD - Ollin Boer Bohan - https://github.com/madebyollin/taesdLyCORIS - KohakuBlueleafInitial Gradio script - posted on 4chan by an Anonymous user. Thank you Anonymous user.(You)"
12,12,geekcomputers/Python,https://github.com/geekcomputers/Python/blob/master/README.md,Python,"My Python Eggs 🐍 😄I do not consider myself as a programmer. I create these little programs as experiments to play with Python, or to solve problems for myself. I would gladly accept pointers from others to improve, simplify, or make the code more efficient. If you would like to make any comments then please feel free to email me: craig@geekcomputers.co.uk.This repository contains a collection of Python scripts that are designed to reduce human workload and serve as educational examples for beginners to get started with Python. The code documentation is aligned correctly for viewing in Notepad++ 🗒️Feel free to explore the scripts and use them for your learning and automation needs!List of Scripts:batch_file_rename.py - Batch rename a group of files in a specified directory, changing their extensions.create_dir_if_not_there.py - Check if a directory exists in the user's home directory. Create it if it doesn't exist.Fast Youtube Downloader - Download YouTube videos quickly with parallel threads using aria2c.Google Image Downloader - Query a given term and retrieve images from the Google Image database.dir_test.py - Test if the directory testdir exists. If not, create it.env_check.py - Check if all the required environment variables are set.blackjack.py - Casino Blackjack-21 game in Python.fileinfo.py - Show file information for a given file.folder_size.py - Scan the current directory and all subdirectories and display their sizes.logs.py - Search for all *.log files in a directory, zip them using the specified program, and date stamp them.move_files_over_x_days.py - Move all files over a specified age (in days) from the source directory to the destination directory.nslookup_check.py - Open the file server_list.txt and perform nslookup for each server to check the DNS entry.osinfo.py - Display information about the operating system on which the script is running.ping_servers.py - Ping the servers associated with the specified application group.ping_subnet.py - Scan the final range of a given IP subnet for available addresses.powerdown_startup.py - Ping machines in the server list. Load the putty session if the machine is up, or notify if it is not.puttylogs.py - Zip all the logs in the given directory.script_count.py - Scan the scripts directory and count the different types of scripts.get_youtube_view.py - Get more views for YouTube videos and repeat songs on YouTube.script_listing.py - List all files in a given directory and its subdirectories.testlines.py - Open a file and print out 100 lines of the set line variable.tweeter.py - Tweet text or a picture from the terminal.serial_scanner.py - List available serial ports in use on Linux and Windows systems.get_youtube_view.py - Get more views for YouTube videos and repeat songs on YouTube.CountMillionCharacter.py and CountMillionCharacter2.0 - Get character count of a text file.xkcd_downloader.py - Download the latest XKCD comic and place them in a new folder called \""comics\"".timymodule.py - An alternative to Python's 'timeit' module and easier to use.calculator.py - Implement a calculator using Python's eval() function.Google_News.py - Use BeautifulSoup to provide latest news headlines along with news links.cricket_live_score - Use BeautifulSoup to provide live cricket scores.youtube.py - Take a song name as input and fetch the YouTube URL of the best matching song and play it.site_health.py - Check the health of a remote server.SimpleStopWatch.py - Simple stop watch implementation using Python's time module.Changemac.py - Change your MAC address, generate a random MAC address, or enter input as a new MAC address on Linux (Successfully Tested in Ubuntu 18.04).whatsapp-monitor.py - Use Selenium to give online status updates about your contacts in WhatsApp on the terminal.whatsapp-chat-analyzer.py - WhatsApp group/individual chat analyzer that visualizes chat activity using matplotlib.JARVIS.py - Control Windows programs with your voice.Images Downloader - Download images from webpages on Unix-based systems.space_invader.py.py - Classical 2D space invader game to recall your childhood memories.Test Case Generator - Generate different types of test cases with a clean and friendly UI, used in competitive programming and software testing.Note: The content in this repository belongs to the respective authors and creators. I'm just providing a formatted README.md for better presentation."
13,13,udacity/fullstack-nanodegree-vm,https://github.com/udacity/fullstack-nanodegree-vm/blob/master/README.md,Python,"Full Stack Web Developer Nanodegree program virtual machine  Virtual machine for the Relational Databases and Full Stack Foundations courses in the Full Stack Web Developer Nanodegree programTable of ContentsTable of ContentsIntroInstallationInstructionsTroubleshootingSupporting MaterialsIntroIn the next part of this course, you'll use a virtual machine (VM) to run an SQL database server and a web app that uses it. The VM is a Linux server system that runs on top of your own computer. You can share files easily between your computer and the VM; and you'll be running a web service inside the VM which you'll be able to access from your regular browser.We're using tools called Vagrant and VirtualBox to install and manage the VM. You'll need to install these to do some of the exercises. The instructions on this page will help you do this.Conceptual overviewThis video offers a conceptual overview of virtual machines and Vagrant. You don't need to watch it to proceed, but you may find it informative.Use a terminalYou'll be doing these exercises using a Unix-style terminal on your computer. If you are using a Mac or Linux system, your regular terminal program will do just fine. On Windows, we recommend using the Git Bash terminal that comes with the Git software. If you don't already have Git installed, download Git from git-scm.com.For a refresher on using the Unix shell, look back at our Shell Workshop.If you'd like to learn more about Git, take a look at our course about Git.InstallationInstall VirtualBoxVirtualBox is the software that actually runs the virtual machine. You can download it from virtualbox.org, here. Install the platform package for your operating system. You do not need the extension pack or the SDK. You do not need to launch VirtualBox after installing it; Vagrant will do that.Currently (October 2017), the supported version of VirtualBox to install is version 5.1. Newer versions do not work with the current release of Vagrant.Ubuntu users: If you are running Ubuntu 14.04, install VirtualBox using the Ubuntu Software Center instead. Due to a reported bug, installing VirtualBox from the site may uninstall other software you need.Install VagrantVagrant is the software that configures the VM and lets you share files between your host computer and the VM's filesystem. Download it from vagrantup.com. Install the version for your operating system.Windows users: The Installer may ask you to grant network permissions to Vagrant or make a firewall exception. Be sure to allow this.If Vagrant is successfully installed, you will be able to run vagrant --versionin your terminal to see the version number.The shell prompt in your terminal may differ. Here, the $ sign is the shell prompt.Download the VM configurationUse Github to fork and clone, or download, the repository https://github.com/udacity/fullstack-nanodegree-vm.You will end up with a new directory containing the VM files. Change to this directory in your terminal with cd. Inside, you will find another directory called vagrant. Change directory to the vagrant directory:Navigating to the FSND-Virtual-Machine directory and listing the files in it.This picture was taken on a Mac, but the commands will look the same on Git Bash on Windows.InstructionsStart the virtual machineFrom your terminal, inside the vagrant subdirectory, run the command vagrant up. This will cause Vagrant to download the Linux operating system and install it. This may take quite a while (many minutes) depending on how fast your Internet connection is.Starting the Ubuntu Linux installation with vagrant up.This screenshot shows just the beginning of many, many pages of output in a lot of colors.When vagrant up is finished running, you will get your shell prompt back. At this point, you can run vagrant ssh to log in to your newly installed Linux VM!Logging into the Linux VM with vagrant ssh.Logged inIf you are now looking at a shell prompt that starts with the word vagrant (as in the above screenshot), congratulations — you've gotten logged into your Linux VM.If not, take a look at the Troubleshooting section below.The files for this courseInside the VM, change directory to /vagrant and look around with ls.The files you see here are the same as the ones in the vagrant subdirectory on your computer (where you started Vagrant from). Any file you create in one will be automatically shared to the other. This means that you can edit code in your favorite text editor, and run it inside the VM.Files in the VM's /vagrant directory are shared with the vagrant folder on your computer. But other data inside the VM is not. For instance, the PostgreSQL database itself lives only inside the VM.Running the databaseThe PostgreSQL database server will automatically be started inside the VM. You can use the psql command-line tool to access it and run SQL statements:Running psql, the PostgreSQL command interface, inside the VM.Logging out and inIf you type exit (or Ctrl-D) at the shell prompt inside the VM, you will be logged out, and put back into your host computer's shell. To log back in, make sure you're in the same directory and type vagrant ssh again.If you reboot your computer, you will need to run vagrant up to restart the VM.TroubleshootingI'm not sure if it workedIf you can type vagrant ssh and log into your VM, then it worked! It's normal for the vagrant up process to display a lot of text in many colors, including sometimes scary-looking messages in red, green, and purple. If you get your shell prompt back at the end, and you can log in, it should be OK.vagrant up is taking a long timeBecause it's downloading a whole Linux operating system from the Internet.I'm on Windows, and when I run vagrant ssh, I don't get a shell promptSome versions of Windows and Vagrant have a problem communicating the right settings for the terminal. There is a workaround: Instead of vagrant ssh, run the command winpty vagrant ssh instead.I'm on Windows and getting an error about virtualizationSometimes other virtualization programs such as Docker or Hyper-V can interfere with VirtualBox. Try shutting these other programs down first.In addition, some Windows PCs have settings in the BIOS or UEFI (firmware) or in the operating system that disable the use of virtualization. To change this, you may need to reboot your computer and access the firmware settings. A web search can help you find the settings for your computer and operating system. Unfortunately there are so many different versions of Windows and PCs that we can't offer a simple guide to doing this.Why are we using a VM, it seems complicatedIt is complicated. In this case, the point of it is to be able to offer the same software (Linux and PostgreSQL) regardless of what kind of computer you're running on.I got some other error messageIf you're getting a specific textual error message, try looking it up on your favorite search engine. If that doesn't help, take a screenshot and post it to the discussion forums, along with as much detail as you can provide about the process you went through to get there.If all else fails, try an older versionUdacity mentors have noticed that some newer versions of Vagrant don't work on all operating systems. Version 1.9.2 is reported to be stabler on some systems, and version 1.9.1 is the supported version on Ubuntu 17.04. You can download older versions of Vagrant from the Vagrant releases index.Supporting MaterialsVirtual machine repository on GitHub(Back to TOC)"
14,14,AntonOsika/gpt-engineer,https://github.com/AntonOsika/gpt-engineer/blob/main/README.md,Python,"GPT EngineerSpecify what you want it to build, the AI asks for clarification, and then builds it.GPT Engineer is made to be easy to adapt, extend, and make your agent learn how you want your code to look. It generates an entire codebase based on a prompt.DemoProject philosophySimple to get valueFlexible and easy to add new own \""AI steps\"". See steps.py.Incrementally build towards a user experience of:high level promptinggiving feedback to the AI that it will remember over timeFast handovers back and forth between AI and humanSimplicity, all computation is \""resumable\"" and persisted to the filesystemUsageChoose either stable or development.For stable release:python -m pip install gpt-engineerFor development:git clone https://github.com/AntonOsika/gpt-engineer.gitcd gpt-engineerpython -m pip install -e .(or: make install && source venv/bin/activate for a venv)API KeyEither just:export OPENAI_API_KEY=[your api key]Or:Create a copy of .env.template named .envAdd your OPENAI_API_KEY in .envCheck the Windows README for windows usage.RunningCreate an empty folder. If inside the repo, you can run:cp -r projects/example/ projects/my-new-projectFill in the prompt file in your new foldergpt-engineer projects/my-new-project(Note, gpt-engineer --help lets you see all available options. For example --steps use_feedback lets you improve/fix code in a project)By running gpt-engineer you agree to our terms.ResultsCheck the generated files in projects/my-new-project/workspaceAlternativesYou can check Docker instructions to use Docker, or simplydo everything in your browser:FeaturesYou can specify the \""identity\"" of the AI agent by editing the files in the preprompts folder.Editing the preprompts, and evolving how you write the project prompt, is how you make the agent remember things between projects.Each step in steps.py will have its communication history with GPT4 stored in the logs folder, and can be rerun with scripts/rerun_edited_message_logs.py.VisionThe gpt-engineer community is building the open platform for devs to tinker with and build their personal code-generation toolbox.If you are interested in contributing to this, we would be interested in having you.If you want to see our broader ambitions, check out the roadmap, and joindiscordto get input on how you can contribute to it.We are currently looking for more maintainers and community organizers. Email anton.osika@gmail.com if you are interested in an official role.Example              Demo.mov          "
15,15,facebookresearch/Detectron,https://github.com/facebookresearch/Detectron/blob/main/README.md,Python,"Detectron is deprecated. Please see detectron2, a ground-up rewrite of Detectron in PyTorch.DetectronDetectron is Facebook AI Research's software system that implements state-of-the-art object detection algorithms, including Mask R-CNN. It is written in Python and powered by the Caffe2 deep learning framework.At FAIR, Detectron has enabled numerous research projects, including: Feature Pyramid Networks for Object Detection, Mask R-CNN, Detecting and Recognizing Human-Object Interactions, Focal Loss for Dense Object Detection, Non-local Neural Networks, Learning to Segment Every Thing, Data Distillation: Towards Omni-Supervised Learning, DensePose: Dense Human Pose Estimation In The Wild, and Group Normalization.    Example Mask R-CNN output.IntroductionThe goal of Detectron is to provide a high-quality, high-performancecodebase for object detection research. It is designed to be flexible in orderto support rapid implementation and evaluation of novel research. Detectronincludes implementations of the following object detection algorithms:Mask R-CNN -- Marr Prize at ICCV 2017RetinaNet -- Best Student Paper Award at ICCV 2017Faster R-CNNRPNFast R-CNNR-FCNusing the following backbone network architectures:ResNeXt{50,101,152}ResNet{50,101,152}Feature Pyramid Networks (with ResNet/ResNeXt)VGG16Additional backbone architectures may be easily implemented. For more details about these models, please see References below.Update4/2018: Support Group Normalization - see GN/README.mdLicenseDetectron is released under the Apache 2.0 license. See the NOTICE file for additional details.Citing DetectronIf you use Detectron in your research or wish to refer to the baseline results published in the Model Zoo, please use the following BibTeX entry.@misc{Detectron2018,  author =       {Ross Girshick and Ilija Radosavovic and Georgia Gkioxari and                  Piotr Doll\\'{a}r and Kaiming He},  title =        {Detectron},  howpublished = {\\url{https://github.com/facebookresearch/detectron}},  year =         {2018}}Model Zoo and BaselinesWe provide a large set of baseline results and trained models available for download in the Detectron Model Zoo.InstallationPlease find installation instructions for Caffe2 and Detectron in INSTALL.md.Quick Start: Using DetectronAfter installation, please see GETTING_STARTED.md for brief tutorials covering inference and training with Detectron.Getting HelpTo start, please check the troubleshooting section of our installation instructions as well as our FAQ. If you couldn't find help there, try searching our GitHub issues. We intend the issues page to be a forum in which the community collectively troubleshoots problems.If bugs are found, we appreciate pull requests (including adding Q&A's to FAQ.md and improving our installation instructions and troubleshooting documents). Please see CONTRIBUTING.md for more information about contributing to Detectron.ReferencesData Distillation: Towards Omni-Supervised Learning.Ilija Radosavovic, Piotr Dollár, Ross Girshick, Georgia Gkioxari, and Kaiming He.Tech report, arXiv, Dec. 2017.Learning to Segment Every Thing.Ronghang Hu, Piotr Dollár, Kaiming He, Trevor Darrell, and Ross Girshick.Tech report, arXiv, Nov. 2017.Non-Local Neural Networks.Xiaolong Wang, Ross Girshick, Abhinav Gupta, and Kaiming He.Tech report, arXiv, Nov. 2017.Mask R-CNN.Kaiming He, Georgia Gkioxari, Piotr Dollár, and Ross Girshick.IEEE International Conference on Computer Vision (ICCV), 2017.Focal Loss for Dense Object Detection.Tsung-Yi Lin, Priya Goyal, Ross Girshick, Kaiming He, and Piotr Dollár.IEEE International Conference on Computer Vision (ICCV), 2017.Accurate, Large Minibatch SGD: Training ImageNet in 1 Hour.Priya Goyal, Piotr Dollár, Ross Girshick, Pieter Noordhuis, Lukasz Wesolowski, Aapo Kyrola, Andrew Tulloch, Yangqing Jia, and Kaiming He.Tech report, arXiv, June 2017.Detecting and Recognizing Human-Object Interactions.Georgia Gkioxari, Ross Girshick, Piotr Dollár, and Kaiming He.Tech report, arXiv, Apr. 2017.Feature Pyramid Networks for Object Detection.Tsung-Yi Lin, Piotr Dollár, Ross Girshick, Kaiming He, Bharath Hariharan, and Serge Belongie.IEEE Conference on Computer Vision and Pattern Recognition (CVPR), 2017.Aggregated Residual Transformations for Deep Neural Networks.Saining Xie, Ross Girshick, Piotr Dollár, Zhuowen Tu, and Kaiming He.IEEE Conference on Computer Vision and Pattern Recognition (CVPR), 2017.R-FCN: Object Detection via Region-based Fully Convolutional Networks.Jifeng Dai, Yi Li, Kaiming He, and Jian Sun.Conference on Neural Information Processing Systems (NIPS), 2016.Deep Residual Learning for Image Recognition.Kaiming He, Xiangyu Zhang, Shaoqing Ren, and Jian Sun.IEEE Conference on Computer Vision and Pattern Recognition (CVPR), 2016.Faster R-CNN: Towards Real-Time Object Detection with Region Proposal NetworksShaoqing Ren, Kaiming He, Ross Girshick, and Jian Sun.Conference on Neural Information Processing Systems (NIPS), 2015.Fast R-CNN.Ross Girshick.IEEE International Conference on Computer Vision (ICCV), 2015."
16,16,Jack-Cherish/Machine-Learning,https://github.com/Jack-Cherish/Machine-Learning/blob/master/README-eng.md,Python,"Machine-Learning中文（简体）Rome was not built in a dayBlogMachine-Learning in Practice (Detailed Comments + Training Datasets), Keep updating!Welcome to my[CSDN Column]Follow me on[Zhihu Column]QQ Group for Communication[328127489]My Website: http://cuijiahua.com/Article DebutDebut articles on my website and forward on orther platforms, click here to get the latest development: http://cuijiahua.com/Chapt. 2: K-Nearest Neighbors AlgorithmArticlePersonal WebsiteCSDNZhihuPython3  study notes (I): K-Nearest Neighbors Algorithm (Gorgeous and Splendid Tutorial)Personal WebsiteCSDNZhihuCode1. Entry Level k-NN2. Miss Helen Dating History3. Digits RecognitionChapt. 3: Decision TreeArticlePersonal WebsiteCSDNZhihuPython3  study notes (II): Decision Tree (Basic Concepts): Let's Start from DatingPersonal WebsiteCSDNZhihuPython3  study notes (III): Decision Tree (In Practice): I'm Looking for a Pair of Contact LensesPersonal WebsiteCSDNZhihuCode1. Loan Prediction2. Contact LensesChapt. 4: Navie BayesArticlePersonal WebsiteCSDNZhihuPython3 Python3  study notes (IV): Navie Bayes (Basic Concepts): Comment FilterPersonal WebsiteCSDNZhihuPython3 Python3  study notes (V): Navie Bayes (In Practice): Catalogues of Sina NewsPersonal WebsiteCSDNZhihuCode1. Comment Filter2. Spam Filter3. News CataloguesChapt. 5: Logistic RegressionArticlePersonal WebsiteCSDNZhihuPython3  study notes (VI): Logistic Regression (Basic Concepts): Gradient Ascent AlgorithmPersonal WebsiteCSDNZhihuPython3  study notes (VII): Logistic Regression (In Practice): Prediction of Horse MortalityPersonal WebsiteCSDNZhihuCode1. Entry Level Exercise for Logistic Regression2. Improved Random Gradient Ascent Algorithm3. Prediction of Horse MortalityChapt. 6: SVM (Support Vector Machine)ArticlePersonal WebsiteCSDNZhihuPython3  study notes (VIII): SVM (Basic Concepts): a Handcraft on Linear SVMPersonal WebsiteCSDNZhihuPython3  study notes (IX): SVM (In Practice): Another Handcraft on Nonlinear SVMPersonal WebsiteCSDNZhihuCode1. Simplified SMO Alogrithm2. Complete SMO Alogrithm3. Nonlinear SVM Alogrithm4. Sklearn SVCChapt. 7: AdaBoostArticlePersonal WebsiteCSDNZhihuPython3  study notes (X): Classifier Sharpener -- AdaBoostPersonal WebsiteCSDNZhihuCode1. Training Process of AdaBoost Based On Decision Stump2. AdaBoost on Hard Datasets3. Implement AdaBoost by sklearn4. ROC Curve PlotChapt. 8: Linear RegressionArticlePersonal WebsiteCSDNZhihuPython3  study notes (XI):Personal WebsiteCSDNZhihuPython3  study notes (XII):Personal WebsitenonoCode1. Linear Regression(Ordinary LR + Locally Weighted LR)2. Predicting the Age of Abalones(Ormers)3. Stepwise Regression4. Predicting the Price of Second Hand LegoChapt. 9: Regression TreeArticlePersonal WebsiteCSDNZhihuPython3  study notes (XIII): Regression Tree (Basic Concepts): CART Alogrithm and PruningPersonal WebsitenonoCode1. Regression Tree"
17,17,yandex-praktikum/calc_and_win,https://github.com/yandex-praktikum/calc_and_win/blob/master/README.md,Python,"calc_and_winРепозиторий игры \""Рассчитай и победи!\"""
18,18,huggingface/pytorch-image-models,https://github.com/huggingface/pytorch-image-models/blob/main/README.md,Python,"PyTorch Image ModelsSponsorsWhat's NewIntroductionModelsFeaturesResultsGetting Started (Documentation)Train, Validation, Inference ScriptsAwesome PyTorch ResourcesLicensesCitingSponsorsThanks to the following for hardware support:TPU Research Cloud (TRC) (https://sites.research.google/trc/about/)Nvidia (https://www.nvidia.com/en-us/)And a big thanks to all GitHub sponsors who helped with some of my costs before I joined Hugging Face.What's New❗Updates after Oct 10, 2022 are available in version >= 0.9❗Many changes since the last 0.6.x stable releases. They were previewed in 0.8.x dev releases but not everyone transitioned.timm.models.layers moved to timm.layers:from timm.models.layers import name will still work via deprecation mapping (but please transition to timm.layers).import timm.models.layers.module or from timm.models.layers.module import name needs to be changed now.Builder, helper, non-model modules in timm.models have a _ prefix added, ie timm.models.helpers -> timm.models._helpers, there are temporary deprecation mapping files but those will be removed.All models now support architecture.pretrained_tag naming (ex resnet50.rsb_a1).The pretrained_tag is the specific weight variant (different head) for the architecture.Using only architecture defaults to the first weights in the default_cfgs for that model architecture.In adding pretrained tags, many model names that existed to differentiate were renamed to use the tag  (ex: vit_base_patch16_224_in21k -> vit_base_patch16_224.augreg_in21k). There are deprecation mappings for these.A number of models had their checkpoints remaped to match architecture changes needed to better support features_only=True, there are checkpoint_filter_fn methods in any model module that was remapped. These can be passed to timm.models.load_checkpoint(..., filter_fn=timm.models.swin_transformer_v2.checkpoint_filter_fn) to remap your existing checkpoint.The Hugging Face Hub (https://huggingface.co/timm) is now the primary source for timm weights. Model cards include link to papers, original source, license.Previous 0.6.x can be cloned from 0.6.x branch or installed via pip with version.Aug 3, 2023Add GluonCV weights for HRNet w18_small and w18_small_v2. Converted by SeeFunFix selecsls* model naming regressionPatch and position embedding for ViT/EVA works for bfloat16/float16 weights on load (or activations for on-the-fly resize)v0.9.5 release prepJuly 27, 2023Added timm trained seresnextaa201d_32x8d.sw_in12k_ft_in1k_384 weights (and .sw_in12k pretrain) with 87.3% top-1 on ImageNet-1k, best ImageNet ResNet family model I'm aware of.RepViT model and weights (https://arxiv.org/abs/2307.09283) added by wangaoI-JEPA ViT feature weights (no classifier) added by SeeFunSAM-ViT (segment anything) feature weights (no classifier) added by SeeFunAdd support for alternative feat extraction methods and -ve indices to EfficientNetAdd NAdamW optimizerMisc fixesMay 11, 2023timm 0.9 released, transition from 0.8.xdev releasesMay 10, 2023Hugging Face Hub downloading is now default, 1132 models on https://huggingface.co/timm, 1163 weights in timmDINOv2 vit feature backbone weights added thanks to Leng YueFB MAE vit feature backbone weights addedOpenCLIP DataComp-XL L/14 feat backbone weights addedMetaFormer (poolformer-v2, caformer, convformer, updated poolformer (v1)) w/ weights added by Fredo GuanExperimental get_intermediate_layers function on vit/deit models for grabbing hidden states (inspired by DINO impl). This is WIP and may change significantly... feedback welcome.Model creation throws error if pretrained=True and no weights exist (instead of continuing with random initialization)Fix regression with inception / nasnet TF sourced weights with 1001 classes in original classifiersbitsandbytes (https://github.com/TimDettmers/bitsandbytes) optimizers added to factory, use bnb prefix, ie bnbadam8bitMisc cleanup and fixesFinal testing before switching to a 0.9 and bringing timm out of pre-release stateApril 27, 202397% of timm models uploaded to HF Hub and almost all updated to support multi-weight pretrained configsMinor cleanup and refactoring of another batch of models as multi-weight added. More fused_attn (F.sdpa) and features_only support, and torchscript fixes.April 21, 2023Gradient accumulation support added to train script and tested (--grad-accum-steps), thanks Taeksang KimMore weights on HF Hub (cspnet, cait, volo, xcit, tresnet, hardcorenas, densenet, dpn, vovnet, xception_aligned)Added --head-init-scale and --head-init-bias to train.py to scale classiifer head and set fixed bias for fine-tuneRemove all InplaceABN (inplace_abn) use, replaced use in tresnet with standard BatchNorm (modified weights accordingly).April 12, 2023Add ONNX export script, validate script, helpers that I've had kicking around for along time. Tweak 'same' padding for better export w/ recent ONNX + pytorch.Refactor dropout args for vit and vit-like models, separate drop_rate into drop_rate (classifier dropout), proj_drop_rate (block mlp / out projections), pos_drop_rate (position embedding drop), attn_drop_rate (attention dropout). Also add patch dropout (FLIP) to vit and eva models.fused F.scaled_dot_product_attention support to more vit models, add env var (TIMM_FUSED_ATTN) to control, and config interface to enable/disableAdd EVA-CLIP backbones w/ image tower weights, all the way up to 4B param 'enormous' model, and 336x336 OpenAI ViT mode that was missed.April 5, 2023ALL ResNet models pushed to Hugging Face Hub with multi-weight supportAll past timm trained weights added with recipe based tags to differentiateAll ResNet strikes back A1/A2/A3 (seed 0) and R50 example B/C1/C2/D weights availableAdd torchvision v2 recipe weights to existing torchvision originalsSee comparison table in https://huggingface.co/timm/seresnextaa101d_32x8d.sw_in12k_ft_in1k_288#model-comparisonNew ImageNet-12k + ImageNet-1k fine-tunes available for a few anti-aliased ResNet modelsresnetaa50d.sw_in12k_ft_in1k - 81.7 @ 224, 82.6 @ 288resnetaa101d.sw_in12k_ft_in1k - 83.5 @ 224, 84.1 @ 288seresnextaa101d_32x8d.sw_in12k_ft_in1k - 86.0 @ 224, 86.5 @ 288seresnextaa101d_32x8d.sw_in12k_ft_in1k_288 - 86.5 @ 288, 86.7 @ 320March 31, 2023Add first ConvNext-XXLarge CLIP -> IN-1k fine-tune and IN-12k intermediate fine-tunes for convnext-base/large CLIP models.modeltop1top5img_sizeparam_countgmacsmactsconvnext_xxlarge.clip_laion2b_soup_ft_in1k88.61298.704256846.47198.09124.45convnext_large_mlp.clip_laion2b_soup_ft_in12k_in1k_38488.31298.578384200.13101.11126.74convnext_large_mlp.clip_laion2b_soup_ft_in12k_in1k_32087.96898.47320200.1370.2188.02convnext_base.clip_laion2b_augreg_ft_in12k_in1k_38487.13898.21238488.5945.2184.49convnext_base.clip_laion2b_augreg_ft_in12k_in1k86.34497.9725688.5920.0937.55Add EVA-02 MIM pretrained and fine-tuned weights, push to HF hub and update model cards for all EVA models. First model over 90% top-1 (99% top-5)! Check out the original code & weights at https://github.com/baaivision/EVA for more details on their work blending MIM, CLIP w/ many model, dataset, and train recipe tweaks.modeltop1top5param_countimg_sizeeva02_large_patch14_448.mim_m38m_ft_in22k_in1k90.05499.042305.08448eva02_large_patch14_448.mim_in22k_ft_in22k_in1k89.94699.01305.08448eva_giant_patch14_560.m30m_ft_in22k_in1k89.79298.9921014.45560eva02_large_patch14_448.mim_in22k_ft_in1k89.62698.954305.08448eva02_large_patch14_448.mim_m38m_ft_in1k89.5798.918305.08448eva_giant_patch14_336.m30m_ft_in22k_in1k89.5698.9561013.01336eva_giant_patch14_336.clip_ft_in1k89.46698.821013.01336eva_large_patch14_336.in22k_ft_in22k_in1k89.21498.854304.53336eva_giant_patch14_224.clip_ft_in1k88.88298.6781012.56224eva02_base_patch14_448.mim_in22k_ft_in22k_in1k88.69298.72287.12448eva_large_patch14_336.in22k_ft_in1k88.65298.722304.53336eva_large_patch14_196.in22k_ft_in22k_in1k88.59298.656304.14196eva02_base_patch14_448.mim_in22k_ft_in1k88.2398.56487.12448eva_large_patch14_196.in22k_ft_in1k87.93498.504304.14196eva02_small_patch14_336.mim_in22k_ft_in1k85.7497.61422.13336eva02_tiny_patch14_336.mim_in22k_ft_in1k80.65895.5245.76336Multi-weight and HF hub for DeiT and MLP-Mixer based modelsMarch 22, 2023More weights pushed to HF hub along with multi-weight support, including: regnet.py, rexnet.py, byobnet.py, resnetv2.py, swin_transformer.py, swin_transformer_v2.py, swin_transformer_v2_cr.pySwin Transformer models support feature extraction (NCHW feat maps for swinv2_cr_*, and NHWC for all others) and spatial embedding outputs.FocalNet (from https://github.com/microsoft/FocalNet) models and weights added with significant refactoring, feature extraction, no fixed resolution / sizing constraintRegNet weights increased with HF hub push, SWAG, SEER, and torchvision v2 weights. SEER is pretty poor wrt to performance for model size, but possibly useful.More ImageNet-12k pretrained and 1k fine-tuned timm weights:rexnetr_200.sw_in12k_ft_in1k - 82.6 @ 224, 83.2 @ 288rexnetr_300.sw_in12k_ft_in1k - 84.0 @ 224, 84.5 @ 288regnety_120.sw_in12k_ft_in1k - 85.0 @ 224, 85.4 @ 288regnety_160.lion_in12k_ft_in1k - 85.6 @ 224, 86.0 @ 288regnety_160.sw_in12k_ft_in1k - 85.6 @ 224, 86.0 @ 288  (compare to SWAG PT + 1k FT this is same BUT much lower res, blows SEER FT away)Model name deprecation + remapping functionality added (a milestone for bringing 0.8.x out of pre-release). Mappings being added...Minor bug fixes and improvements.Feb 26, 2023Add ConvNeXt-XXLarge CLIP pretrained image tower weights for fine-tune & features (fine-tuning TBD) -- see model cardUpdate convnext_xxlarge default LayerNorm eps to 1e-5 (for CLIP weights, improved stability)0.8.15dev0Feb 20, 2023Add 320x320 convnext_large_mlp.clip_laion2b_ft_320 and convnext_lage_mlp.clip_laion2b_ft_soup_320 CLIP image tower weights for features & fine-tune0.8.13dev0 pypi release for latest changes w/ move to huggingface orgFeb 16, 2023safetensor checkpoint support addedAdd ideas from 'Scaling Vision Transformers to 22 B. Params' (https://arxiv.org/abs/2302.05442) -- qk norm, RmsNorm, parallel blockAdd F.scaled_dot_product_attention support (PyTorch 2.0 only) to vit_*, vit_relpos*, coatnet / maxxvit (to start)Lion optimizer (w/ multi-tensor option) added (https://arxiv.org/abs/2302.06675)gradient checkpointing works with features_only=TrueFeb 7, 2023New inference benchmark numbers added in results folder.Add convnext LAION CLIP trained weights and initial set of in1k fine-tunesconvnext_base.clip_laion2b_augreg_ft_in1k - 86.2% @ 256x256convnext_base.clip_laiona_augreg_ft_in1k_384 - 86.5% @ 384x384convnext_large_mlp.clip_laion2b_augreg_ft_in1k - 87.3% @ 256x256convnext_large_mlp.clip_laion2b_augreg_ft_in1k_384 - 87.9% @ 384x384Add DaViT models. Supports features_only=True. Adapted from https://github.com/dingmyu/davit by Fredo.Use a common NormMlpClassifierHead across MaxViT, ConvNeXt, DaViTAdd EfficientFormer-V2 model, update EfficientFormer, and refactor LeViT (closely related architectures). Weights on HF hub.New EfficientFormer-V2 arch, significant refactor from original at (https://github.com/snap-research/EfficientFormer). Supports features_only=True.Minor updates to EfficientFormer.Refactor LeViT models to stages, add features_only=True support to new conv variants, weight remap required.Move ImageNet meta-data (synsets, indices) from /results to timm/data/_info.Add ImageNetInfo / DatasetInfo classes to provide labelling for various ImageNet classifier layouts in timmUpdate inference.py to use, try: python inference.py /folder/to/images --model convnext_small.in12k --label-type detail --topk 5Ready for 0.8.10 pypi pre-release (final testing).Jan 20, 2023Add two convnext 12k -> 1k fine-tunes at 384x384convnext_tiny.in12k_ft_in1k_384 - 85.1 @ 384convnext_small.in12k_ft_in1k_384 - 86.2 @ 384Push all MaxxViT weights to HF hub, and add new ImageNet-12k -> 1k fine-tunes for rw base MaxViT and CoAtNet 1/2 modelsmodeltop1top5samples / secParams (M)GMACAct (M)maxvit_xlarge_tf_512.in21k_ft_in1k88.5398.6421.76475.77534.141413.22maxvit_xlarge_tf_384.in21k_ft_in1k88.3298.5442.53475.32292.78668.76maxvit_base_tf_512.in21k_ft_in1k88.2098.5350.87119.88138.02703.99maxvit_large_tf_512.in21k_ft_in1k88.0498.4036.42212.33244.75942.15maxvit_large_tf_384.in21k_ft_in1k87.9898.5671.75212.03132.55445.84maxvit_base_tf_384.in21k_ft_in1k87.9298.54104.71119.6573.80332.90maxvit_rmlp_base_rw_384.sw_in12k_ft_in1k87.8198.37106.55116.1470.97318.95maxxvitv2_rmlp_base_rw_384.sw_in12k_ft_in1k87.4798.37149.49116.0972.98213.74coatnet_rmlp_2_rw_384.sw_in12k_ft_in1k87.3998.31160.8073.8847.69209.43maxvit_rmlp_base_rw_224.sw_in12k_ft_in1k86.8998.02375.86116.1423.1592.64maxxvitv2_rmlp_base_rw_224.sw_in12k_ft_in1k86.6498.02501.03116.0924.2062.77maxvit_base_tf_512.in1k86.6097.9250.75119.88138.02703.99coatnet_2_rw_224.sw_in12k_ft_in1k86.5797.89631.8873.8715.0949.22maxvit_large_tf_512.in1k86.5297.8836.04212.33244.75942.15coatnet_rmlp_2_rw_224.sw_in12k_ft_in1k86.4997.90620.5873.8815.1854.78maxvit_base_tf_384.in1k86.2997.80101.09119.6573.80332.90maxvit_large_tf_384.in1k86.2397.6970.56212.03132.55445.84maxvit_small_tf_512.in1k86.1097.7688.6369.1367.26383.77maxvit_tiny_tf_512.in1k85.6797.58144.2531.0533.49257.59maxvit_small_tf_384.in1k85.5497.46188.3569.0235.87183.65maxvit_tiny_tf_384.in1k85.1197.38293.4630.9817.53123.42maxvit_large_tf_224.in1k84.9396.97247.71211.7943.68127.35coatnet_rmlp_1_rw2_224.sw_in12k_ft_in1k84.9096.961025.4541.728.1140.13maxvit_base_tf_224.in1k84.8596.99358.25119.4724.0495.01maxxvit_rmlp_small_rw_256.sw_in1k84.6397.06575.5366.0114.6758.38coatnet_rmlp_2_rw_224.sw_in1k84.6196.74625.8173.8815.1854.78maxvit_rmlp_small_rw_224.sw_in1k84.4996.76693.8264.9010.7549.30maxvit_small_tf_224.in1k84.4396.83647.9668.9311.6653.17maxvit_rmlp_tiny_rw_256.sw_in1k84.2396.78807.2129.156.7746.92coatnet_1_rw_224.sw_in1k83.6296.38989.5941.728.0434.60maxvit_tiny_rw_224.sw_in1k83.5096.501100.5329.065.1133.11maxvit_tiny_tf_224.in1k83.4196.591004.9430.925.6035.78coatnet_rmlp_1_rw_224.sw_in1k83.3696.451093.0341.697.8535.47maxxvitv2_nano_rw_256.sw_in1k83.1196.331276.8823.706.2623.05maxxvit_rmlp_nano_rw_256.sw_in1k83.0396.341341.2416.784.3726.05maxvit_rmlp_nano_rw_256.sw_in1k82.9696.261283.2415.504.4731.92maxvit_nano_rw_256.sw_in1k82.9396.231218.1715.454.4630.28coatnet_bn_0_rw_224.sw_in1k82.3996.191600.1427.444.6722.04coatnet_0_rw_224.sw_in1k82.3995.841831.2127.444.4318.73coatnet_rmlp_nano_rw_224.sw_in1k82.0595.872109.0915.152.6220.34coatnext_nano_rw_224.sw_in1k81.9595.922525.5214.702.4712.80coatnet_nano_rw_224.sw_in1k81.7095.642344.5215.142.4115.41maxvit_rmlp_pico_rw_256.sw_in1k80.5395.211594.717.521.8524.86Jan 11, 2023Update ConvNeXt ImageNet-12k pretrain series w/ two new fine-tuned weights (and pre FT .in12k tags)convnext_nano.in12k_ft_in1k - 82.3 @ 224, 82.9 @ 288  (previously released)convnext_tiny.in12k_ft_in1k - 84.2 @ 224, 84.5 @ 288convnext_small.in12k_ft_in1k - 85.2 @ 224, 85.3 @ 288Jan 6, 2023Finally got around to adding --model-kwargs and --opt-kwargs to scripts to pass through rare args directly to model classes from cmd linetrain.py /imagenet --model resnet50 --amp --model-kwargs output_stride=16 act_layer=silutrain.py /imagenet --model vit_base_patch16_clip_224 --img-size 240 --amp --model-kwargs img_size=240 patch_size=12Cleanup some popular models to better support arg passthrough / merge with model configs, more to go.Jan 5, 2023ConvNeXt-V2 models and weights added to existing convnext.pyPaper: ConvNeXt V2: Co-designing and Scaling ConvNets with Masked AutoencodersReference impl: https://github.com/facebookresearch/ConvNeXt-V2 (NOTE: weights currently CC-BY-NC)Dec 23, 2022 🎄☃Add FlexiViT models and weights from https://github.com/google-research/big_vision (check out paper at https://arxiv.org/abs/2212.08013)NOTE currently resizing is static on model creation, on-the-fly dynamic / train patch size sampling is a WIPMany more models updated to multi-weight and downloadable via HF hub now (convnext, efficientnet, mobilenet, vision_transformer*, beit)More model pretrained tag and adjustments, some model names changed (working on deprecation translations, consider main branch DEV branch right now, use 0.6.x for stable use)More ImageNet-12k (subset of 22k) pretrain models popping up:efficientnet_b5.in12k_ft_in1k - 85.9 @ 448x448vit_medium_patch16_gap_384.in12k_ft_in1k - 85.5 @ 384x384vit_medium_patch16_gap_256.in12k_ft_in1k - 84.5 @ 256x256convnext_nano.in12k_ft_in1k - 82.9 @ 288x288Dec 8, 2022Add 'EVA l' to vision_transformer.py, MAE style ViT-L/14 MIM pretrain w/ EVA-CLIP targets, FT on ImageNet-1k (w/ ImageNet-22k intermediate for some)original source: https://github.com/baaivision/EVAmodeltop1param_countgmacmactshubeva_large_patch14_336.in22k_ft_in22k_in1k89.2304.5191.1270.2linkeva_large_patch14_336.in22k_ft_in1k88.7304.5191.1270.2linkeva_large_patch14_196.in22k_ft_in22k_in1k88.6304.161.663.5linkeva_large_patch14_196.in22k_ft_in1k87.9304.161.663.5linkDec 6, 2022Add 'EVA g', BEiT style ViT-g/14 model weights w/ both MIM pretrain and CLIP pretrain to beit.py.original source: https://github.com/baaivision/EVApaper: https://arxiv.org/abs/2211.07636modeltop1param_countgmacmactshubeva_giant_patch14_560.m30m_ft_in22k_in1k89.81014.41906.82577.2linkeva_giant_patch14_336.m30m_ft_in22k_in1k89.61013620.6550.7linkeva_giant_patch14_336.clip_ft_in1k89.41013620.6550.7linkeva_giant_patch14_224.clip_ft_in1k89.11012.6267.2192.6linkDec 5, 2022Pre-release (0.8.0dev0) of multi-weight support (model_arch.pretrained_tag). Install with pip install --pre timmvision_transformer, maxvit, convnext are the first three model impl w/ supportmodel names are changing with this (previous _21k, etc. fn will merge), still sorting out deprecation handlingbugs are likely, but I need feedback so please try it outif stability is needed, please use 0.6.x pypi releases or clone from 0.6.x branchSupport for PyTorch 2.0 compile is added in train/validate/inference/benchmark, use --torchcompile argumentInference script allows more control over output, select k for top-class index + prob json, csv or parquet outputAdd a full set of fine-tuned CLIP image tower weights from both LAION-2B and original OpenAI CLIP modelsmodeltop1param_countgmacmactshubvit_huge_patch14_clip_336.laion2b_ft_in12k_in1k88.6632.5391407.5linkvit_large_patch14_clip_336.openai_ft_in12k_in1k88.3304.5191.1270.2linkvit_huge_patch14_clip_224.laion2b_ft_in12k_in1k88.2632167.4139.4linkvit_large_patch14_clip_336.laion2b_ft_in12k_in1k88.2304.5191.1270.2linkvit_large_patch14_clip_224.openai_ft_in12k_in1k88.2304.281.188.8linkvit_large_patch14_clip_224.laion2b_ft_in12k_in1k87.9304.281.188.8linkvit_large_patch14_clip_224.openai_ft_in1k87.9304.281.188.8linkvit_large_patch14_clip_336.laion2b_ft_in1k87.9304.5191.1270.2linkvit_huge_patch14_clip_224.laion2b_ft_in1k87.6632167.4139.4linkvit_large_patch14_clip_224.laion2b_ft_in1k87.3304.281.188.8linkvit_base_patch16_clip_384.laion2b_ft_in12k_in1k87.286.955.5101.6linkvit_base_patch16_clip_384.openai_ft_in12k_in1k8786.955.5101.6linkvit_base_patch16_clip_384.laion2b_ft_in1k86.686.955.5101.6linkvit_base_patch16_clip_384.openai_ft_in1k86.286.955.5101.6linkvit_base_patch16_clip_224.laion2b_ft_in12k_in1k86.286.617.623.9linkvit_base_patch16_clip_224.openai_ft_in12k_in1k85.986.617.623.9linkvit_base_patch32_clip_448.laion2b_ft_in12k_in1k85.888.317.923.9linkvit_base_patch16_clip_224.laion2b_ft_in1k85.586.617.623.9linkvit_base_patch32_clip_384.laion2b_ft_in12k_in1k85.488.313.116.5linkvit_base_patch16_clip_224.openai_ft_in1k85.386.617.623.9linkvit_base_patch32_clip_384.openai_ft_in12k_in1k85.288.313.116.5linkvit_base_patch32_clip_224.laion2b_ft_in12k_in1k83.388.24.45linkvit_base_patch32_clip_224.laion2b_ft_in1k82.688.24.45linkvit_base_patch32_clip_224.openai_ft_in1k81.988.24.45linkPort of MaxViT Tensorflow Weights from official impl at https://github.com/google-research/maxvitThere was larger than expected drops for the upscaled 384/512 in21k fine-tune weights, possible detail missing, but the 21k FT did seem sensitive to small preprocessingmodeltop1param_countgmacmactshubmaxvit_xlarge_tf_512.in21k_ft_in1k88.5475.8534.11413.2linkmaxvit_xlarge_tf_384.in21k_ft_in1k88.3475.3292.8668.8linkmaxvit_base_tf_512.in21k_ft_in1k88.2119.9138704linkmaxvit_large_tf_512.in21k_ft_in1k88212.3244.8942.2linkmaxvit_large_tf_384.in21k_ft_in1k88212132.6445.8linkmaxvit_base_tf_384.in21k_ft_in1k87.9119.673.8332.9linkmaxvit_base_tf_512.in1k86.6119.9138704linkmaxvit_large_tf_512.in1k86.5212.3244.8942.2linkmaxvit_base_tf_384.in1k86.3119.673.8332.9linkmaxvit_large_tf_384.in1k86.2212132.6445.8linkmaxvit_small_tf_512.in1k86.169.167.3383.8linkmaxvit_tiny_tf_512.in1k85.73133.5257.6linkmaxvit_small_tf_384.in1k85.56935.9183.6linkmaxvit_tiny_tf_384.in1k85.13117.5123.4linkmaxvit_large_tf_224.in1k84.9211.843.7127.4linkmaxvit_base_tf_224.in1k84.9119.52495linkmaxvit_small_tf_224.in1k84.468.911.753.2linkmaxvit_tiny_tf_224.in1k83.430.95.635.8linkOct 15, 2022Train and validation script enhancementsNon-GPU (ie CPU) device supportSLURM compatibility for train scriptHF datasets support (via ReaderHfds)TFDS/WDS dataloading improvements (sample padding/wrap for distributed use fixed wrt sample count estimate)in_chans !=3 support for scripts / loaderAdan optimizerCan enable per-step LR scheduling via argsDataset 'parsers' renamed to 'readers', more descriptive of purposeAMP args changed, APEX via --amp-impl apex, bfloat16 supportedf via --amp-dtype bfloat16main branch switched to 0.7.x version, 0.6x forked for stable release of weight only addsmaster -> main branch renameOct 10, 2022More weights in maxxvit series, incl first ConvNeXt block based coatnext and maxxvit experiments:coatnext_nano_rw_224 - 82.0 @ 224 (G) -- (uses ConvNeXt conv block, no BatchNorm)maxxvit_rmlp_nano_rw_256 - 83.0 @ 256, 83.7 @ 320  (G) (uses ConvNeXt conv block, no BN)maxvit_rmlp_small_rw_224 - 84.5 @ 224, 85.1 @ 320 (G)maxxvit_rmlp_small_rw_256 - 84.6 @ 256, 84.9 @ 288 (G) -- could be trained better, hparams need tuning (uses ConvNeXt block, no BN)coatnet_rmlp_2_rw_224 - 84.6 @ 224, 85 @ 320  (T)NOTE: official MaxVit weights (in1k) have been released at https://github.com/google-research/maxvit -- some extra work is needed to port and adapt since my impl was created independently of theirs and has a few small differences + the whole TF same padding fun.Sept 23, 2022LAION-2B CLIP image towers supported as pretrained backbones for fine-tune or features (no classifier)vit_base_patch32_224_clip_laion2bvit_large_patch14_224_clip_laion2bvit_huge_patch14_224_clip_laion2bvit_giant_patch14_224_clip_laion2bSept 7, 2022Hugging Face timm docs home now exists, look for more here in the futureAdd BEiT-v2 weights for base and large 224x224 models from https://github.com/microsoft/unilm/tree/master/beit2Add more weights in maxxvit series incl a pico (7.5M params, 1.9 GMACs), two tiny variants:maxvit_rmlp_pico_rw_256 - 80.5 @ 256, 81.3 @ 320  (T)maxvit_tiny_rw_224 - 83.5 @ 224 (G)maxvit_rmlp_tiny_rw_256 - 84.2 @ 256, 84.8 @ 320 (T)Aug 29, 2022MaxVit window size scales with img_size by default. Add new RelPosMlp MaxViT weight that leverages this:maxvit_rmlp_nano_rw_256 - 83.0 @ 256, 83.6 @ 320  (T)Aug 26, 2022CoAtNet (https://arxiv.org/abs/2106.04803) and MaxVit (https://arxiv.org/abs/2204.01697) timm original modelsboth found in maxxvit.py model def, contains numerous experiments outside scope of original papersan unfinished Tensorflow version from MaxVit authors can be found https://github.com/google-research/maxvitInitial CoAtNet and MaxVit timm pretrained weights (working on more):coatnet_nano_rw_224 - 81.7 @ 224  (T)coatnet_rmlp_nano_rw_224 - 82.0 @ 224, 82.8 @ 320 (T)coatnet_0_rw_224 - 82.4  (T)  -- NOTE timm '0' coatnets have 2 more 3rd stage blockscoatnet_bn_0_rw_224 - 82.4  (T)maxvit_nano_rw_256 - 82.9 @ 256  (T)coatnet_rmlp_1_rw_224 - 83.4 @ 224, 84 @ 320  (T)coatnet_1_rw_224 - 83.6 @ 224 (G)(T) = TPU trained with bits_and_tpu branch training code, (G) = GPU trainedGCVit (weights adapted from https://github.com/NVlabs/GCVit, code 100% timm re-write for license purposes)MViT-V2 (multi-scale vit, adapted from https://github.com/facebookresearch/mvit)EfficientFormer (adapted from https://github.com/snap-research/EfficientFormer)PyramidVisionTransformer-V2 (adapted from https://github.com/whai362/PVT)'Fast Norm' support for LayerNorm and GroupNorm that avoids float32 upcast w/ AMP (uses APEX LN if available for further boost)Aug 15, 2022ConvNeXt atto weights addedconvnext_atto - 75.7 @ 224, 77.0 @ 288convnext_atto_ols - 75.9  @ 224, 77.2 @ 288Aug 5, 2022More custom ConvNeXt smaller model defs with weightsconvnext_femto - 77.5 @ 224, 78.7 @ 288convnext_femto_ols - 77.9  @ 224, 78.9 @ 288convnext_pico - 79.5 @ 224, 80.4 @ 288convnext_pico_ols - 79.5 @ 224, 80.5 @ 288convnext_nano_ols - 80.9 @ 224, 81.6 @ 288Updated EdgeNeXt to improve ONNX export, add new base variant and weights from original (https://github.com/mmaaz60/EdgeNeXt)July 28, 2022Add freshly minted DeiT-III Medium (width=512, depth=12, num_heads=8) model weights. Thanks Hugo Touvron!July 27, 2022All runtime benchmark and validation result csv files are finally up-to-date!A few more weights & model defs added:darknetaa53 -  79.8 @ 256, 80.5 @ 288convnext_nano - 80.8 @ 224, 81.5 @ 288cs3sedarknet_l - 81.2 @ 256, 81.8 @ 288cs3darknet_x - 81.8 @ 256, 82.2 @ 288cs3sedarknet_x - 82.2 @ 256, 82.7 @ 288cs3edgenet_x - 82.2 @ 256, 82.7 @ 288cs3se_edgenet_x - 82.8 @ 256, 83.5 @ 320cs3* weights above all trained on TPU w/ bits_and_tpu branch. Thanks to TRC program!Add output_stride=8 and 16 support to ConvNeXt (dilation)deit3 models not being able to resize pos_emb fixedVersion 0.6.7 PyPi release (/w above bug fixes and new weighs since 0.6.5)July 8, 2022More models, more fixesOfficial research models (w/ weights) added:EdgeNeXt from (https://github.com/mmaaz60/EdgeNeXt)MobileViT-V2 from (https://github.com/apple/ml-cvnets)DeiT III (Revenge of the ViT) from (https://github.com/facebookresearch/deit)My own models:Small ResNet defs added by request with 1 block repeats for both basic and bottleneck (resnet10 and resnet14)CspNet refactored with dataclass config, simplified CrossStage3 (cs3) option. These are closer to YOLO-v5+ backbone defs.More relative position vit fiddling. Two srelpos (shared relative position) models trained, and a medium w/ class token.Add an alternate downsample mode to EdgeNeXt and train a small model. Better than original small, but not their new USI trained weights.My own model weight results (all ImageNet-1k training)resnet10t - 66.5 @ 176, 68.3 @ 224resnet14t - 71.3 @ 176, 72.3 @ 224resnetaa50 - 80.6 @ 224 , 81.6 @ 288darknet53 -  80.0 @ 256, 80.5 @ 288cs3darknet_m - 77.0 @ 256, 77.6 @ 288cs3darknet_focus_m - 76.7 @ 256, 77.3 @ 288cs3darknet_l - 80.4 @ 256, 80.9 @ 288cs3darknet_focus_l - 80.3 @ 256, 80.9 @ 288vit_srelpos_small_patch16_224 - 81.1 @ 224, 82.1 @ 320vit_srelpos_medium_patch16_224 - 82.3 @ 224, 83.1 @ 320vit_relpos_small_patch16_cls_224 - 82.6 @ 224, 83.6 @ 320edgnext_small_rw - 79.6 @ 224, 80.4 @ 320cs3, darknet, and vit_*relpos weights above all trained on TPU thanks to TRC program! Rest trained on overheating GPUs.Hugging Face Hub support fixes verified, demo notebook TBAPretrained weights / configs can be loaded externally (ie from local disk) w/ support for head adaptation.Add support to change image extensions scanned by timm datasets/readers. See (#1274 (comment))Default ConvNeXt LayerNorm impl to use F.layer_norm(x.permute(0, 2, 3, 1), ...).permute(0, 3, 1, 2) via LayerNorm2d in all cases.a bit slower than previous custom impl on some hardware (ie Ampere w/ CL), but overall fewer regressions across wider HW / PyTorch version ranges.previous impl exists as LayerNormExp2d in models/layers/norm.pyNumerous bug fixesCurrently testing for imminent PyPi 0.6.x releaseLeViT pretraining of larger models still a WIP, they don't train well / easily without distillation. Time to add distill support (finally)?ImageNet-22k weight training + finetune ongoing, work on multi-weight support (slowly) chugging along (there are a LOT of weights, sigh) ...May 13, 2022Official Swin-V2 models and weights added from (https://github.com/microsoft/Swin-Transformer). Cleaned up to support torchscript.Some refactoring for existing timm Swin-V2-CR impl, will likely do a bit more to bring parts closer to official and decide whether to merge some aspects.More Vision Transformer relative position / residual post-norm experiments (all trained on TPU thanks to TRC program)vit_relpos_small_patch16_224 - 81.5 @ 224, 82.5 @ 320 -- rel pos, layer scale, no class token, avg poolvit_relpos_medium_patch16_rpn_224 - 82.3 @ 224, 83.1 @ 320 -- rel pos + res-post-norm, no class token, avg poolvit_relpos_medium_patch16_224 - 82.5 @ 224, 83.3 @ 320 -- rel pos, layer scale, no class token, avg poolvit_relpos_base_patch16_gapcls_224 - 82.8 @ 224, 83.9 @ 320 -- rel pos, layer scale, class token, avg pool (by mistake)Bring 512 dim, 8-head 'medium' ViT model variant back to life (after using in a pre DeiT 'small' model for first ViT impl back in 2020)Add ViT relative position support for switching btw existing impl and some additions in official Swin-V2 impl for future trialsSequencer2D impl (https://arxiv.org/abs/2205.01972), added via PR from author (https://github.com/okojoalg)May 2, 2022Vision Transformer experiments adding Relative Position (Swin-V2 log-coord) (vision_transformer_relpos.py) and Residual Post-Norm branches (from Swin-V2) (vision_transformer*.py)vit_relpos_base_patch32_plus_rpn_256 - 79.5 @ 256, 80.6 @ 320 -- rel pos + extended width + res-post-norm, no class token, avg poolvit_relpos_base_patch16_224 - 82.5 @ 224, 83.6 @ 320 -- rel pos, layer scale, no class token, avg poolvit_base_patch16_rpn_224 - 82.3 @ 224 -- rel pos + res-post-norm, no class token, avg poolVision Transformer refactor to remove representation layer that was only used in initial vit and rarely used since with newer pretrain (ie How to Train Your ViT)vit_* models support removal of class token, use of global average pool, use of fc_norm (ala beit, mae).April 22, 2022timm models are now officially supported in fast.ai! Just in time for the new Practical Deep Learning course. timmdocs documentation link updated to timm.fast.ai.Two more model weights added in the TPU trained series. Some In22k pretrain still in progress.seresnext101d_32x8d - 83.69 @ 224, 84.35 @ 288seresnextaa101d_32x8d (anti-aliased w/ AvgPool2d) - 83.85 @ 224, 84.57 @ 288March 23, 2022Add ParallelBlock and LayerScale option to base vit models to support model configs in Three things everyone should know about ViTconvnext_tiny_hnf (head norm first) weights trained with (close to) A2 recipe, 82.2% top-1, could do better with more epochs.March 21, 2022Merge norm_norm_norm. IMPORTANT this update for a coming 0.6.x release will likely de-stabilize the master branch for a while. Branch 0.5.x or a previous 0.5.x release can be used if stability is required.Significant weights update (all TPU trained) as described in this releaseregnety_040 - 82.3 @ 224, 82.96 @ 288regnety_064 - 83.0 @ 224, 83.65 @ 288regnety_080 - 83.17 @ 224, 83.86 @ 288regnetv_040 - 82.44 @ 224, 83.18 @ 288   (timm pre-act)regnetv_064 - 83.1 @ 224, 83.71 @ 288   (timm pre-act)regnetz_040 - 83.67 @ 256, 84.25 @ 320regnetz_040h - 83.77 @ 256, 84.5 @ 320 (w/ extra fc in head)resnetv2_50d_gn - 80.8 @ 224, 81.96 @ 288 (pre-act GroupNorm)resnetv2_50d_evos 80.77 @ 224, 82.04 @ 288 (pre-act EvoNormS)regnetz_c16_evos  - 81.9 @ 256, 82.64 @ 320 (EvoNormS)regnetz_d8_evos  - 83.42 @ 256, 84.04 @ 320 (EvoNormS)xception41p - 82 @ 299   (timm pre-act)xception65 -  83.17 @ 299xception65p -  83.14 @ 299   (timm pre-act)resnext101_64x4d - 82.46 @ 224, 83.16 @ 288seresnext101_32x8d - 83.57 @ 224, 84.270 @ 288resnetrs200 - 83.85 @ 256, 84.44 @ 320HuggingFace hub support fixed w/ initial groundwork for allowing alternative 'config sources' for pretrained model definitions and weights (generic local file / remote url support soon)SwinTransformer-V2 implementation added. Submitted by Christoph Reich. Training experiments and model changes by myself are ongoing so expect compat breaks.Swin-S3 (AutoFormerV2) models / weights added from https://github.com/microsoft/Cream/tree/main/AutoFormerV2MobileViT models w/ weights adapted from https://github.com/apple/ml-cvnetsPoolFormer models w/ weights adapted from https://github.com/sail-sg/poolformerVOLO models w/ weights adapted from https://github.com/sail-sg/voloSignificant work experimenting with non-BatchNorm norm layers such as EvoNorm, FilterResponseNorm, GroupNorm, etcEnhance support for alternate norm + act ('NormAct') layers added to a number of models, esp EfficientNet/MobileNetV3, RegNet, and aligned XceptionGrouped conv support added to EfficientNet familyAdd 'group matching' API to all models to allow grouping model parameters for application of 'layer-wise' LR decay, lr scale added to LR schedulerGradient checkpointing support added to many modelsforward_head(x, pre_logits=False) fn added to all models to allow separate calls of forward_features + forward_headAll vision transformer and vision MLP models update to return non-pooled / non-token selected features from foward_features, for consistency with CNN models, token selection or pooling now applied in forward_headFeb 2, 2022Chris Hughes posted an exhaustive run through of timm on his blog yesterday. Well worth a read. Getting Started with PyTorch Image Models (timm): A Practitioner’s GuideI'm currently prepping to merge the norm_norm_norm branch back to master (ver 0.6.x) in next week or so.The changes are more extensive than usual and may destabilize and break some model API use (aiming for full backwards compat). So, beware pip install git+https://github.com/rwightman/pytorch-image-models installs!0.5.x releases and a 0.5.x branch will remain stable with a cherry pick or two until dust clears. Recommend sticking to pypi install for a bit if you want stable.Jan 14, 2022Version 0.5.4 w/ release to be pushed to pypi. It's been a while since last pypi update and riskier changes will be merged to main branch soon....Add ConvNeXT models /w weights from official impl (https://github.com/facebookresearch/ConvNeXt), a few perf tweaks, compatible with timm featuresTried training a few small (~1.8-3M param) / mobile optimized models, a few are good so far, more on the way...mnasnet_small - 65.6 top-1mobilenetv2_050 - 65.9lcnet_100/075/050 - 72.1 / 68.8 / 63.1semnasnet_075 - 73fbnetv3_b/d/g - 79.1 / 79.7 / 82.0TinyNet models added by rsomani95LCNet added via MobileNetV3 architectureIntroductionPyTorch Image Models (timm) is a collection of image models, layers, utilities, optimizers, schedulers, data-loaders / augmentations, and reference training / validation scripts that aim to pull together a wide variety of SOTA models with ability to reproduce ImageNet training results.The work of many others is present here. I've tried to make sure all source material is acknowledged via links to github, arxiv papers, etc in the README, documentation, and code docstrings. Please let me know if I missed anything.ModelsAll model architecture families include variants with pretrained weights. There are specific model variants without any weights, it is NOT a bug. Help training new or better weights is always appreciated.Aggregating Nested Transformers - https://arxiv.org/abs/2105.12723BEiT - https://arxiv.org/abs/2106.08254Big Transfer ResNetV2 (BiT) - https://arxiv.org/abs/1912.11370Bottleneck Transformers - https://arxiv.org/abs/2101.11605CaiT (Class-Attention in Image Transformers) - https://arxiv.org/abs/2103.17239CoaT (Co-Scale Conv-Attentional Image Transformers) - https://arxiv.org/abs/2104.06399CoAtNet (Convolution and Attention) - https://arxiv.org/abs/2106.04803ConvNeXt - https://arxiv.org/abs/2201.03545ConvNeXt-V2 - http://arxiv.org/abs/2301.00808ConViT (Soft Convolutional Inductive Biases Vision Transformers)- https://arxiv.org/abs/2103.10697CspNet (Cross-Stage Partial Networks) - https://arxiv.org/abs/1911.11929DeiT - https://arxiv.org/abs/2012.12877DeiT-III - https://arxiv.org/pdf/2204.07118.pdfDenseNet - https://arxiv.org/abs/1608.06993DLA - https://arxiv.org/abs/1707.06484DPN (Dual-Path Network) - https://arxiv.org/abs/1707.01629EdgeNeXt - https://arxiv.org/abs/2206.10589EfficientFormer - https://arxiv.org/abs/2206.01191EfficientNet (MBConvNet Family)EfficientNet NoisyStudent (B0-B7, L2) - https://arxiv.org/abs/1911.04252EfficientNet AdvProp (B0-B8) - https://arxiv.org/abs/1911.09665EfficientNet (B0-B7) - https://arxiv.org/abs/1905.11946EfficientNet-EdgeTPU (S, M, L) - https://ai.googleblog.com/2019/08/efficientnet-edgetpu-creating.htmlEfficientNet V2 - https://arxiv.org/abs/2104.00298FBNet-C - https://arxiv.org/abs/1812.03443MixNet - https://arxiv.org/abs/1907.09595MNASNet B1, A1 (Squeeze-Excite), and Small - https://arxiv.org/abs/1807.11626MobileNet-V2 - https://arxiv.org/abs/1801.04381Single-Path NAS - https://arxiv.org/abs/1904.02877TinyNet - https://arxiv.org/abs/2010.14819EVA - https://arxiv.org/abs/2211.07636EVA-02 - https://arxiv.org/abs/2303.11331FlexiViT - https://arxiv.org/abs/2212.08013FocalNet (Focal Modulation Networks) - https://arxiv.org/abs/2203.11926GCViT (Global Context Vision Transformer) - https://arxiv.org/abs/2206.09959GhostNet - https://arxiv.org/abs/1911.11907gMLP - https://arxiv.org/abs/2105.08050GPU-Efficient Networks - https://arxiv.org/abs/2006.14090Halo Nets - https://arxiv.org/abs/2103.12731HRNet - https://arxiv.org/abs/1908.07919Inception-V3 - https://arxiv.org/abs/1512.00567Inception-ResNet-V2 and Inception-V4 - https://arxiv.org/abs/1602.07261Lambda Networks - https://arxiv.org/abs/2102.08602LeViT (Vision Transformer in ConvNet's Clothing) - https://arxiv.org/abs/2104.01136MaxViT (Multi-Axis Vision Transformer) - https://arxiv.org/abs/2204.01697MLP-Mixer - https://arxiv.org/abs/2105.01601MobileNet-V3 (MBConvNet w/ Efficient Head) - https://arxiv.org/abs/1905.02244FBNet-V3 - https://arxiv.org/abs/2006.02049HardCoRe-NAS - https://arxiv.org/abs/2102.11646LCNet - https://arxiv.org/abs/2109.15099MobileViT - https://arxiv.org/abs/2110.02178MobileViT-V2 - https://arxiv.org/abs/2206.02680MViT-V2 (Improved Multiscale Vision Transformer) - https://arxiv.org/abs/2112.01526NASNet-A - https://arxiv.org/abs/1707.07012NesT - https://arxiv.org/abs/2105.12723NFNet-F - https://arxiv.org/abs/2102.06171NF-RegNet / NF-ResNet - https://arxiv.org/abs/2101.08692PNasNet - https://arxiv.org/abs/1712.00559PoolFormer (MetaFormer) - https://arxiv.org/abs/2111.11418Pooling-based Vision Transformer (PiT) - https://arxiv.org/abs/2103.16302PVT-V2 (Improved Pyramid Vision Transformer) - https://arxiv.org/abs/2106.13797RegNet - https://arxiv.org/abs/2003.13678RegNetZ - https://arxiv.org/abs/2103.06877RepVGG - https://arxiv.org/abs/2101.03697ResMLP - https://arxiv.org/abs/2105.03404ResNet/ResNeXtResNet (v1b/v1.5) - https://arxiv.org/abs/1512.03385ResNeXt - https://arxiv.org/abs/1611.05431'Bag of Tricks' / Gluon C, D, E, S variations - https://arxiv.org/abs/1812.01187Weakly-supervised (WSL) Instagram pretrained / ImageNet tuned ResNeXt101 - https://arxiv.org/abs/1805.00932Semi-supervised (SSL) / Semi-weakly Supervised (SWSL) ResNet/ResNeXts - https://arxiv.org/abs/1905.00546ECA-Net (ECAResNet) - https://arxiv.org/abs/1910.03151v4Squeeze-and-Excitation Networks (SEResNet) - https://arxiv.org/abs/1709.01507ResNet-RS - https://arxiv.org/abs/2103.07579Res2Net - https://arxiv.org/abs/1904.01169ResNeSt - https://arxiv.org/abs/2004.08955ReXNet - https://arxiv.org/abs/2007.00992SelecSLS - https://arxiv.org/abs/1907.00837Selective Kernel Networks - https://arxiv.org/abs/1903.06586Sequencer2D - https://arxiv.org/abs/2205.01972Swin S3 (AutoFormerV2) - https://arxiv.org/abs/2111.14725Swin Transformer - https://arxiv.org/abs/2103.14030Swin Transformer V2 - https://arxiv.org/abs/2111.09883Transformer-iN-Transformer (TNT) - https://arxiv.org/abs/2103.00112TResNet - https://arxiv.org/abs/2003.13630Twins (Spatial Attention in Vision Transformers) - https://arxiv.org/pdf/2104.13840.pdfVisformer - https://arxiv.org/abs/2104.12533Vision Transformer - https://arxiv.org/abs/2010.11929VOLO (Vision Outlooker) - https://arxiv.org/abs/2106.13112VovNet V2 and V1 - https://arxiv.org/abs/1911.06667Xception - https://arxiv.org/abs/1610.02357Xception (Modified Aligned, Gluon) - https://arxiv.org/abs/1802.02611Xception (Modified Aligned, TF) - https://arxiv.org/abs/1802.02611XCiT (Cross-Covariance Image Transformers) - https://arxiv.org/abs/2106.09681FeaturesSeveral (less common) features that I often utilize in my projects are included. Many of their additions are the reason why I maintain my own set of models, instead of using others' via PIP:All models have a common default configuration interface and API foraccessing/changing the classifier - get_classifier and reset_classifierdoing a forward pass on just the features - forward_features (see documentation)these makes it easy to write consistent network wrappers that work with any of the modelsAll models support multi-scale feature map extraction (feature pyramids) via create_model (see documentation)create_model(name, features_only=True, out_indices=..., output_stride=...)out_indices creation arg specifies which feature maps to return, these indices are 0 based and generally correspond to the C(i + 1) feature level.output_stride creation arg controls output stride of the network by using dilated convolutions. Most networks are stride 32 by default. Not all networks support this.feature map channel counts, reduction level (stride) can be queried AFTER model creation via the .feature_info memberAll models have a consistent pretrained weight loader that adapts last linear if necessary, and from 3 to 1 channel input if desiredHigh performance reference training, validation, and inference scripts that work in several process/GPU modes:NVIDIA DDP w/ a single GPU per process, multiple processes with APEX present (AMP mixed-precision optional)PyTorch DistributedDataParallel w/ multi-gpu, single process (AMP disabled as it crashes when enabled)PyTorch w/ single GPU single process (AMP optional)A dynamic global pool implementation that allows selecting from average pooling, max pooling, average + max, or concat([average, max]) at model creation. All global pooling is adaptive average by default and compatible with pretrained weights.A 'Test Time Pool' wrapper that can wrap any of the included models and usually provides improved performance doing inference with input images larger than the training size. Idea adapted from original DPN implementation when I ported (https://github.com/cypw/DPNs)Learning rate schedulersIdeas adopted fromAllenNLP schedulersFAIRseq lr_schedulerSGDR: Stochastic Gradient Descent with Warm Restarts (https://arxiv.org/abs/1608.03983)Schedulers include step, cosine w/ restarts, tanh w/ restarts, plateauOptimizers:rmsprop_tf adapted from PyTorch RMSProp by myself. Reproduces much improved Tensorflow RMSProp behaviour.radam by Liyuan Liu (https://arxiv.org/abs/1908.03265)novograd by Masashi Kimura (https://arxiv.org/abs/1905.11286)lookahead adapted from impl by Liam (https://arxiv.org/abs/1907.08610)fused<name> optimizers by name with NVIDIA Apex installedadamp and sgdp by Naver ClovAI (https://arxiv.org/abs/2006.08217)adafactor adapted from FAIRSeq impl (https://arxiv.org/abs/1804.04235)adahessian by David Samuel (https://arxiv.org/abs/2006.00719)Random Erasing from Zhun Zhong  (https://arxiv.org/abs/1708.04896)Mixup (https://arxiv.org/abs/1710.09412)CutMix (https://arxiv.org/abs/1905.04899)AutoAugment (https://arxiv.org/abs/1805.09501) and RandAugment (https://arxiv.org/abs/1909.13719) ImageNet configurations modeled after impl for EfficientNet training (https://github.com/tensorflow/tpu/blob/master/models/official/efficientnet/autoaugment.py)AugMix w/ JSD loss (https://arxiv.org/abs/1912.02781), JSD w/ clean + augmented mixing support works with AutoAugment and RandAugment as wellSplitBachNorm - allows splitting batch norm layers between clean and augmented (auxiliary batch norm) dataDropPath aka \""Stochastic Depth\"" (https://arxiv.org/abs/1603.09382)DropBlock (https://arxiv.org/abs/1810.12890)Blur Pooling (https://arxiv.org/abs/1904.11486)Space-to-Depth by mrT23 (https://arxiv.org/abs/1801.04590) -- original paper?Adaptive Gradient Clipping (https://arxiv.org/abs/2102.06171, https://github.com/deepmind/deepmind-research/tree/master/nfnets)An extensive selection of channel and/or spatial attention modules:Bottleneck Transformer - https://arxiv.org/abs/2101.11605CBAM - https://arxiv.org/abs/1807.06521Effective Squeeze-Excitation (ESE) - https://arxiv.org/abs/1911.06667Efficient Channel Attention (ECA) - https://arxiv.org/abs/1910.03151Gather-Excite (GE) - https://arxiv.org/abs/1810.12348Global Context (GC) - https://arxiv.org/abs/1904.11492Halo - https://arxiv.org/abs/2103.12731Involution - https://arxiv.org/abs/2103.06255Lambda Layer - https://arxiv.org/abs/2102.08602Non-Local (NL) -  https://arxiv.org/abs/1711.07971Squeeze-and-Excitation (SE) - https://arxiv.org/abs/1709.01507Selective Kernel (SK) - (https://arxiv.org/abs/1903.06586Split (SPLAT) - https://arxiv.org/abs/2004.08955Shifted Window (SWIN) - https://arxiv.org/abs/2103.14030ResultsModel validation results can be found in the results tablesGetting Started (Documentation)The official documentation can be found at https://huggingface.co/docs/hub/timm. Documentation contributions are welcome.Getting Started with PyTorch Image Models (timm): A Practitioner’s Guide by Chris Hughes is an extensive blog post covering many aspects of timm in detail.timmdocs is an alternate set of documentation for timm. A big thanks to Aman Arora for his efforts creating timmdocs.paperswithcode is a good resource for browsing the models within timm.Train, Validation, Inference ScriptsThe root folder of the repository contains reference train, validation, and inference scripts that work with the included models and other features of this repository. They are adaptable for other datasets and use cases with a little hacking. See documentation.Awesome PyTorch ResourcesOne of the greatest assets of PyTorch is the community and their contributions. A few of my favourite resources that pair well with the models and components here are listed below.Object Detection, Instance and Semantic SegmentationDetectron2 - https://github.com/facebookresearch/detectron2Segmentation Models (Semantic) - https://github.com/qubvel/segmentation_models.pytorchEfficientDet (Obj Det, Semantic soon) - https://github.com/rwightman/efficientdet-pytorchComputer Vision / Image AugmentationAlbumentations - https://github.com/albumentations-team/albumentationsKornia - https://github.com/kornia/korniaKnowledge DistillationRepDistiller - https://github.com/HobbitLong/RepDistillertorchdistill - https://github.com/yoshitomo-matsubara/torchdistillMetric LearningPyTorch Metric Learning - https://github.com/KevinMusgrave/pytorch-metric-learningTraining / Frameworksfastai - https://github.com/fastai/fastaiLicensesCodeThe code here is licensed Apache 2.0. I've taken care to make sure any third party code included or adapted has compatible (permissive) licenses such as MIT, BSD, etc. I've made an effort to avoid any GPL / LGPL conflicts. That said, it is your responsibility to ensure you comply with licenses here and conditions of any dependent licenses. Where applicable, I've linked the sources/references for various components in docstrings. If you think I've missed anything please create an issue.Pretrained WeightsSo far all of the pretrained weights available here are pretrained on ImageNet with a select few that have some additional pretraining (see extra note below). ImageNet was released for non-commercial research purposes only (https://image-net.org/download). It's not clear what the implications of that are for the use of pretrained weights from that dataset. Any models I have trained with ImageNet are done for research purposes and one should assume that the original dataset license applies to the weights. It's best to seek legal advice if you intend to use the pretrained weights in a commercial product.Pretrained on more than ImageNetSeveral weights included or references here were pretrained with proprietary datasets that I do not have access to. These include the Facebook WSL, SSL, SWSL ResNe(Xt) and the Google Noisy Student EfficientNet models. The Facebook models have an explicit non-commercial license (CC-BY-NC 4.0, https://github.com/facebookresearch/semi-supervised-ImageNet1K-models, https://github.com/facebookresearch/WSL-Images). The Google models do not appear to have any restriction beyond the Apache 2.0 license (and ImageNet concerns). In either case, you should contact Facebook or Google with any questions.CitingBibTeX@misc{rw2019timm,  author = {Ross Wightman},  title = {PyTorch Image Models},  year = {2019},  publisher = {GitHub},  journal = {GitHub repository},  doi = {10.5281/zenodo.4414861},  howpublished = {\\url{https://github.com/rwightman/pytorch-image-models}}}Latest DOI"
19,19,Stability-AI/stablediffusion,https://github.com/Stability-AI/stablediffusion/blob/main/README.md,Python,"Stable Diffusion Version 2This repository contains Stable Diffusion models trained from scratch and will be continuously updated withnew checkpoints. The following list provides an overview of all currently available models. More coming soon.NewsMarch 24, 2023Stable UnCLIP 2.1New stable diffusion finetune (Stable unCLIP 2.1, Hugging Face) at 768x768 resolution,  based on SD2.1-768. This model allows for image variations and mixing operations as described in Hierarchical Text-Conditional Image Generation with CLIP Latents, and, thanks to its modularity, can be combined with other models such as KARLO. Comes in two variants: Stable unCLIP-L and Stable unCLIP-H, which are conditioned on CLIP ViT-L and ViT-H image embeddings, respectively. Instructions are available here.A public demo of SD-unCLIP is already available at clipdrop.co/stable-diffusion-reimagineDecember 7, 2022Version 2.1New stable diffusion model (Stable Diffusion 2.1-v, Hugging Face) at 768x768 resolution and (Stable Diffusion 2.1-base, HuggingFace) at 512x512 resolution, both based on the same number of parameters and architecture as 2.0 and fine-tuned on 2.0, on a less restrictive NSFW filtering of the LAION-5B dataset.Per default, the attention operation of the model is evaluated at full precision when xformers is not installed. To enable fp16 (which can cause numerical instabilities with the vanilla attention module on the v2.1 model) , run your script with ATTN_PRECISION=fp16 python <thescript.py>November 24, 2022Version 2.0New stable diffusion model (Stable Diffusion 2.0-v) at 768x768 resolution. Same number of parameters in the U-Net as 1.5, but uses OpenCLIP-ViT/H as the text encoder and is trained from scratch. SD 2.0-v is a so-called v-prediction model.The above model is finetuned from SD 2.0-base, which was trained as a standard noise-prediction model on 512x512 images and is also made available.Added a x4 upscaling latent text-guided diffusion model.New depth-guided stable diffusion model, finetuned from SD 2.0-base. The model is conditioned on monocular depth estimates inferred via MiDaS and can be used for structure-preserving img2img and shape-conditional synthesis.A text-guided inpainting model, finetuned from SD 2.0-base.We follow the original repository and provide basic inference scripts to sample from the models.The original Stable Diffusion model was created in a collaboration with CompVis and RunwayML and builds upon the work:High-Resolution Image Synthesis with Latent Diffusion ModelsRobin Rombach*,Andreas Blattmann*,Dominik Lorenz,Patrick Esser,Björn OmmerCVPR '22 Oral |GitHub | arXiv | Project pageand many others.Stable Diffusion is a latent text-to-image diffusion model.RequirementsYou can update an existing latent diffusion environment by runningconda install pytorch==1.12.1 torchvision==0.13.1 -c pytorchpip install transformers==4.19.2 diffusers invisible-watermarkpip install -e .xformers efficient attentionFor more efficiency and speed on GPUs,we highly recommended installing the xformerslibrary.Tested on A100 with CUDA 11.4.Installation needs a somewhat recent version of nvcc and gcc/g++, obtain those, e.g., viaexport CUDA_HOME=/usr/local/cuda-11.4conda install -c nvidia/label/cuda-11.4.0 cuda-nvccconda install -c conda-forge gccconda install -c conda-forge gxx_linux-64==9.5.0Then, run the following (compiling takes up to 30 min).cd ..git clone https://github.com/facebookresearch/xformers.gitcd xformersgit submodule update --init --recursivepip install -r requirements.txtpip install -e .cd ../stablediffusionUpon successful installation, the code will automatically default to memory efficient attentionfor the self- and cross-attention layers in the U-Net and autoencoder.General DisclaimerStable Diffusion models are general text-to-image diffusion models and therefore mirror biases and (mis-)conceptions that are presentin their training data. Although efforts were made to reduce the inclusion of explicit pornographic material, we do not recommend using the provided weights for services or products without additional safety mechanisms and considerations.The weights are research artifacts and should be treated as such.Details on the training procedure and data, as well as the intended use of the model can be found in the corresponding model card.The weights are available via the StabilityAI organization at Hugging Face under the CreativeML Open RAIL++-M License.Stable Diffusion v2Stable Diffusion v2 refers to a specific configuration of the modelarchitecture that uses a downsampling-factor 8 autoencoder with an 865M UNetand OpenCLIP ViT-H/14 text encoder for the diffusion model. The SD 2-v model produces 768x768 px outputs.Evaluations with different classifier-free guidance scales (1.5, 2.0, 3.0, 4.0,5.0, 6.0, 7.0, 8.0) and 50 DDIM sampling steps show the relative improvements of the checkpoints:Text-to-ImageStable Diffusion 2 is a latent diffusion model conditioned on the penultimate text embeddings of a CLIP ViT-H/14 text encoder.We provide a reference script for sampling.Reference Sampling ScriptThis script incorporates an invisible watermarking of the outputs, to help viewers identify the images as machine-generated.We provide the configs for the SD2-v (768px) and SD2-base (512px) model.First, download the weights for SD2.1-v and SD2.1-base.To sample from the SD2.1-v model, run the following:python scripts/txt2img.py --prompt \""a professional photograph of an astronaut riding a horse\"" --ckpt <path/to/768model.ckpt/> --config configs/stable-diffusion/v2-inference-v.yaml --H 768 --W 768  or try out the Web Demo: .To sample from the base model, usepython scripts/txt2img.py --prompt \""a professional photograph of an astronaut riding a horse\"" --ckpt <path/to/model.ckpt/> --config <path/to/config.yaml/>  By default, this uses the DDIM sampler, and renders images of size 768x768 (which it was trained on) in 50 steps.Empirically, the v-models can be sampled with higher guidance scales.Note: The inference config for all model versions is designed to be used with EMA-only checkpoints.For this reason use_ema=False is set in the configuration, otherwise the code will try to switch fromnon-EMA to EMA weights.Enable Intel® Extension for PyTorch* optimizations in Text-to-Image scriptIf you're planning on running Text-to-Image on Intel® CPU, try to sample an image with TorchScript and Intel® Extension for PyTorch* optimizations. Intel® Extension for PyTorch* extends PyTorch by enabling up-to-date features optimizations for an extra performance boost on Intel® hardware. It can optimize memory layout of the operators to Channel Last memory format, which is generally beneficial for Intel CPUs, take advantage of the most advanced instruction set available on a machine, optimize operators and many more.PrerequisitesBefore running the script, make sure you have all needed libraries installed. (the optimization was checked on Ubuntu 20.04). Install jemalloc, numactl, Intel® OpenMP and Intel® Extension for PyTorch*.apt-get install numactl libjemalloc-devpip install intel-openmppip install intel_extension_for_pytorch -f https://software.intel.com/ipex-whl-stableTo sample from the SD2.1-v model with TorchScript+IPEX optimizations, run the following. Remember to specify desired number of instances you want to run the program on (more).MALLOC_CONF=oversize_threshold:1,background_thread:true,metadata_thp:auto,dirty_decay_ms:9000000000,muzzy_decay_ms:9000000000 python -m intel_extension_for_pytorch.cpu.launch --ninstance <number of an instance> --enable_jemalloc scripts/txt2img.py --prompt \\\""a corgi is playing guitar, oil on canvas\\\"" --ckpt <path/to/768model.ckpt/> --config configs/stable-diffusion/intel/v2-inference-v-fp32.yaml  --H 768 --W 768 --precision full --device cpu --torchscript --ipexTo sample from the base model with IPEX optimizations, useMALLOC_CONF=oversize_threshold:1,background_thread:true,metadata_thp:auto,dirty_decay_ms:9000000000,muzzy_decay_ms:9000000000 python -m intel_extension_for_pytorch.cpu.launch --ninstance <number of an instance> --enable_jemalloc scripts/txt2img.py --prompt \\\""a corgi is playing guitar, oil on canvas\\\"" --ckpt <path/to/model.ckpt/> --config configs/stable-diffusion/intel/v2-inference-fp32.yaml  --n_samples 1 --n_iter 4 --precision full --device cpu --torchscript --ipexIf you're using a CPU that supports bfloat16, consider sample from the model with bfloat16 enabled for a performance boost, like so# SD2.1-vMALLOC_CONF=oversize_threshold:1,background_thread:true,metadata_thp:auto,dirty_decay_ms:9000000000,muzzy_decay_ms:9000000000 python -m intel_extension_for_pytorch.cpu.launch --ninstance <number of an instance> --enable_jemalloc scripts/txt2img.py --prompt \\\""a corgi is playing guitar, oil on canvas\\\"" --ckpt <path/to/768model.ckpt/> --config configs/stable-diffusion/intel/v2-inference-v-bf16.yaml --H 768 --W 768 --precision full --device cpu --torchscript --ipex --bf16# SD2.1-baseMALLOC_CONF=oversize_threshold:1,background_thread:true,metadata_thp:auto,dirty_decay_ms:9000000000,muzzy_decay_ms:9000000000 python -m intel_extension_for_pytorch.cpu.launch --ninstance <number of an instance> --enable_jemalloc scripts/txt2img.py --prompt \\\""a corgi is playing guitar, oil on canvas\\\"" --ckpt <path/to/model.ckpt/> --config configs/stable-diffusion/intel/v2-inference-bf16.yaml --precision full --device cpu --torchscript --ipex --bf16Image Modification with Stable DiffusionDepth-Conditional Stable DiffusionTo augment the well-established img2img functionality of Stable Diffusion, we provide a shape-preserving stable diffusion model.Note that the original method for image modification introduces significant semantic changes w.r.t. the initial image.If that is not desired, download our depth-conditional stable diffusion model and the dpt_hybrid MiDaS model weights, place the latter in a folder midas_models and sample viapython scripts/gradio/depth2img.py configs/stable-diffusion/v2-midas-inference.yaml <path-to-ckpt>orstreamlit run scripts/streamlit/depth2img.py configs/stable-diffusion/v2-midas-inference.yaml <path-to-ckpt>This method can be used on the samples of the base model itself.For example, take this sample generated by an anonymous discord user.Using the gradio or streamlit script depth2img.py, the MiDaS model first infers a monocular depth estimate given this input,and the diffusion model is then conditioned on the (relative) depth output. depth2image This model is particularly useful for a photorealistic style; see the examples.For a maximum strength of 1.0, the model removes all pixel-based information and only relies on the text prompt and the inferred monocular depth estimate.Classic Img2ImgFor running the \""classic\"" img2img, usepython scripts/img2img.py --prompt \""A fantasy landscape, trending on artstation\"" --init-img <path-to-img.jpg> --strength 0.8 --ckpt <path/to/model.ckpt>and adapt the checkpoint and config paths accordingly.Image Upscaling with Stable DiffusionAfter downloading the weights, runpython scripts/gradio/superresolution.py configs/stable-diffusion/x4-upscaling.yaml <path-to-checkpoint>orstreamlit run scripts/streamlit/superresolution.py -- configs/stable-diffusion/x4-upscaling.yaml <path-to-checkpoint>for a Gradio or Streamlit demo of the text-guided x4 superresolution model.This model can be used both on real inputs and on synthesized examples. For the latter, we recommend setting a highernoise_level, e.g. noise_level=100.Image Inpainting with Stable DiffusionDownload the SD 2.0-inpainting checkpoint and runpython scripts/gradio/inpainting.py configs/stable-diffusion/v2-inpainting-inference.yaml <path-to-checkpoint>orstreamlit run scripts/streamlit/inpainting.py -- configs/stable-diffusion/v2-inpainting-inference.yaml <path-to-checkpoint>for a Gradio or Streamlit demo of the inpainting model.This scripts adds invisible watermarking to the demo in the RunwayML repository, but both should work interchangeably with the checkpoints/configs.Shout-OutsThanks to Hugging Face and in particular Apolinário  for support with our model releases!Stable Diffusion would not be possible without LAION and their efforts to create open, large-scale datasets.The DeepFloyd team at Stability AI, for creating the subset of LAION-5B dataset used to train the model.Stable Diffusion 2.0 uses OpenCLIP, trained by Romain Beaumont.Our codebase for the diffusion models builds heavily on OpenAI's ADM codebaseand https://github.com/lucidrains/denoising-diffusion-pytorch.Thanks for open-sourcing!CompVis initial stable diffusion releasePatrick's implementation of the streamlit demo for inpainting.img2img is an application of SDEdit by Chenlin Meng from the Stanford AI Lab.Kat's implementation of the PLMS sampler, and more.DPMSolver integration by Cheng Lu.Facebook's xformers for efficient attention computation.MiDaS for monocular depth estimation.LicenseThe code in this repository is released under the MIT License.The weights are available via the StabilityAI organization at Hugging Face, and released under the CreativeML Open RAIL++-M License License.BibTeX@misc{rombach2021highresolution,      title={High-Resolution Image Synthesis with Latent Diffusion Models},       author={Robin Rombach and Andreas Blattmann and Dominik Lorenz and Patrick Esser and Björn Ommer},      year={2021},      eprint={2112.10752},      archivePrefix={arXiv},      primaryClass={cs.CV}}"
20,20,donnemartin/system-design-primer,https://github.com/donnemartin/system-design-primer/blob/master/README-ja.md,Python,"English ∙ 日本語 ∙ 简体中文 ∙ 繁體中文 | العَرَبِيَّة‎ ∙ বাংলা ∙ Português do Brasil ∙ Deutsch ∙ ελληνικά ∙ עברית ∙ Italiano ∙ 한국어 ∙ فارسی ∙ Polski ∙ русский язык ∙ Español ∙ ภาษาไทย ∙ Türkçe ∙ tiếng Việt ∙ Français | Add Translationシステム設計入門    動機・目的大規模システムのシステム設計を学ぶシステム設計面接課題に備える大規模システムの設計を学ぶスケーラブルなシステムのシステム設計を学ぶことは、より良いエンジニアになることに資するでしょう。システム設計はとても広範なトピックを含みます。システム設計原理については インターネット上には膨大な量の文献が散らばっています。このリポジトリは大規模システム構築に必要な知識を学ぶことができる 文献リストを体系的にまとめたもの です。オープンソースコミュニティから学ぶこのプロジェクトは、これからもずっと更新されていくオープンソースプロジェクトの初期段階にすぎません。Contributions は大歓迎です！システム設計面接課題に備えるコード技術面接に加えて、システム設計に関する知識は、多くのテック企業における 技術採用面接プロセス で 必要不可欠な要素 です。システム設計面接での頻出質問に備え、自分の解答と模範解答:ディスカッション、コードそして図表などを比較して学びましょう。面接準備に役立つその他のトピック:学習指針システム設計面接課題にどのように準備するかシステム設計課題例 とその解答オブジェクト指向設計課題例、 とその解答その他のシステム設計面接課題例暗記カード    このAnki用フラッシュカードデッキ は、間隔反復を活用して、システム設計のキーコンセプトの学習を支援します。システム設計デッキシステム設計練習課題デッキオブジェクト指向練習課題デッキ外出先や移動中の勉強に役立つでしょう。コーディング技術課題用の問題: 練習用インタラクティブアプリケーションコード技術面接用の問題を探している場合はこちら    姉妹リポジトリの Interactive Coding Challengesも見てみてください。追加の暗記デッキカードも入っています。Coding deckコントリビュートコミュニティから学ぶプルリクエスト等の貢献は積極的にお願いします:エラー修正セクション内容改善新規セクション追加翻訳する現在、内容の改善が必要な作業中のコンテンツはこちらです。コントリビュートの前にContributing Guidelinesを読みましょう。システム設計目次賛否も含めた様々なシステム設計の各トピックの概要。 全てはトレードオフの関係にあります。それぞれのセクションはより学びを深めるような他の文献へのリンクが貼られています。    システム設計トピック: まずはここからStep 1: スケーラビリティに関する動画を見るStep 2: スケーラビリティに関する記事を読む次のステップパフォーマンス vs スケーラビリティレイテンシー vs スループット可用性 vs 一貫性CAP理論CP - 一貫性(consistency)と分割性(partition)耐性AP - 可用性(availability)と分割性(partition)耐性一貫性 パターン弱い一貫性結果整合性強い一貫性可用性 パターンフェイルオーバーレプリケーションドメインネームシステム(DNS)コンテンツデリバリーネットワーク(CDN)プッシュCDNプルCDNロードバランサーアクティブ/パッシブ構成アクティブ/アクティブ構成Layer 4 ロードバランシングLayer 7 ロードバランシング水平スケーリングリバースプロキシ (WEBサーバー)ロードバランサー vs リバースプロキシアプリケーションレイヤーマイクロサービスサービスディスカバリーデータベースリレーショナルデータベースマネジメントシステム (RDBMS)マスター/スレーブ レプリケーションマスター/マスター レプリケーションフェデレーションシャーディングデノーマライゼーションSQL チューニングNoSQLキー/バリューストアドキュメントストアワイドカラムストアグラフ データベースSQL or NoSQLキャッシュクライアントキャッシングCDNキャッシングWebサーバーキャッシングデータベースキャッシングアプリケーションキャッシングデータベースクエリレベルでキャッシングするオブジェクトレベルでキャッシングするいつキャッシュを更新するのかキャッシュアサイドライトスルーライトビハインド (ライトバック)リフレッシュアヘッド非同期処理メッセージキュータスクキューバックプレッシャー通信伝送制御プロトコル (TCP)ユーザデータグラムプロトコル (UDP)遠隔手続呼出 (RPC)Representational state transfer (REST)セキュリティ補遺2の乗数表全てのプログラマーが知るべきレイテンシー値他のシステム設計面接例題実世界でのアーキテクチャ各企業のアーキテクチャ企業のエンジニアブログ作業中クレジット連絡情報ライセンス学習指針学習スパンに応じてみるべきトピックス (short, medium, long)Q: 面接のためには、ここにあるものすべてをやらないといけないのでしょうか？A: いえ、ここにあるすべてをやる必要はありません。面接で何を聞かれるかは以下の条件によって変わってきます:どれだけの技術経験があるかあなたの技術背景が何であるかどのポジションのために面接を受けているかどの企業の面接を受けているか運より経験のある候補者は一般的にシステム設計についてより深い知識を有していることを要求されるでしょう。システムアーキテクトやチームリーダーは各メンバーの持つような知識よりは深い見識を持っているべきでしょう。一流テック企業では複数回の設計面接を課されることが多いです。まずは広く始めて、そこからいくつかの分野に絞って深めていくのがいいでしょう。様々なシステム設計のトピックについて少しずつ知っておくことはいいことです。以下の学習ガイドを自分の学習に当てられる時間、技術経験、どの職位、どの会社に応募しているかなどを加味して自分用に調整して使うといいでしょう。短期間 - 幅広く システム設計トピックを学ぶ。いくつかの 面接課題を解くことで対策する。中期間 - 幅広く そして それなりに深くシステム設計トピックを学ぶ。多くの 面接課題を解くことで対策する。長期間 - 幅広く そして もっと深くシステム設計トピックを学ぶ。ほぼ全ての 面接課題を解くことで対策する。短期間中期間長期間システム設計トピック を読み、システム動作機序について広く知る👍👍👍次のリンク先のいくつかのページを読んで 各企業のエンジニアリングブログ 応募する会社について知る👍👍👍次のリンク先のいくつかのページを読む 実世界でのアーキテクチャ👍👍👍復習する システム設計面接課題にどのように準備するか👍👍👍とりあえず一周する システム設計課題例SomeManyMostとりあえず一周する オブジェクト指向設計問題と解答SomeManyMost復習する その他システム設計面接での質問例SomeManyMostシステム設計面接にどのようにして臨めばいいかシステム設計面接試験問題にどのように取り組むかシステム設計面接は open-ended conversation(Yes/Noでは答えられない口頭質問)です。 自分で会話を組み立てることを求められます。以下のステップに従って議論を組み立てることができるでしょう。この過程を確かなものにするために、次のセクションシステム設計課題例とその解答 を以下の指針に従って読み込むといいでしょう。ステップ 1: そのシステム使用例の概要、制約、推計値等を聞き出し、まとめるシステム仕様の要求事項を聞き出し、問題箇所を特定しましょう。使用例と制約を明確にするための質問を投げかけましょう。要求する推計値についても議論しておきましょう。誰がそのサービスを使うのか？どのように使うのか？何人のユーザーがいるのか？システムはどのような機能を果たすのか？システムへの入力と出力は？どれだけの容量のデータを捌く必要があるのか？一秒間に何リクエストの送信が想定されるか？読み書き比率の推定値はいくら程度か？ステップ 2: より高レベルのシステム設計を組み立てる重要なコンポーネントを全て考慮した高レベルのシステム設計概要を組み立てる。主要なコンポーネントと接続をスケッチして書き出す考えの裏付けをするステップ 3: 核となるコンポーネントを設計するそれぞれの主要なコンポーネントについての詳細を学ぶ。例えば、url短縮サービスの設計を問われた際には次のようにするといいでしょう:元のURLのハッシュ化したものを作り、それを保存するMD5 と Base62ハッシュ衝突SQL もしくは NoSQLデータベーススキーマハッシュ化されたURLを元のURLに再翻訳するデータベース参照API & オブジェクト指向の設計ステップ 4: システム設計のスケール与えられた制約条件からボトルネックとなりそうなところを割り出し、明確化する。  例えば、スケーラビリティの問題解決のために以下の要素を考慮する必要があるだろうか？ロードバランサー水平スケーリングキャッシングデータベースシャーディング取りうる解決策とそのトレードオフについて議論をしよう。全てのことはトレードオフの関係にある。ボトルネックについてはスケーラブルなシステム設計の原理を読むといいでしょう。ちょっとした暗算問題ちょっとした推計値を手計算ですることを求められることもあるかもしれません。補遺の以下の項目が役に立つでしょう:チラ裏計算でシステム設計する2の乗数表全てのプログラマーが知っておくべきレイテンシの参考値文献とその他の参考資料以下のリンク先ページを見てどのような質問を投げかけられるか概要を頭に入れておきましょう:システム設計面接で成功するには？システム設計面接アーキテクチャ、システム設計面接への導入システム設計課題例とその解答頻出のシステム設計面接課題と参考解答、コード及びダイアグラム解答は solutions/ フォルダ以下にリンクが貼られている問題Pastebin.com (もしくは Bit.ly) を設計する解答Twitterタイムライン (もしくはFacebookフィード)を設計するTwitter検索(もしくはFacebook検索)機能を設計する解答ウェブクローラーを設計する解答Mint.comを設計する解答SNSサービスのデータ構造を設計する解答検索エンジンのキー/バリュー構造を設計する解答Amazonのカテゴリ毎の売り上げランキングを設計する解答AWS上で100万人規模のユーザーを捌くサービスを設計する解答システム設計問題を追加するContributePastebin.com (もしくは Bit.ly) を設計する問題と解答を見るTwitterタイムライン&検索 (もしくはFacebookフィード&検索)を設計する問題と解答を見るウェブクローラーの設計問題と解答を見るMint.comの設計問題と解答を見るSNSサービスのデータ構造を設計する問題と解答を見る検索エンジンのキー/バリュー構造を設計する問題と解答を見るAmazonのカテゴリ毎の売り上げランキングを設計する問題と解答を見るAWS上で100万人規模のユーザーを捌くサービスを設計する問題と解答を見るオブジェクト指向設計問題と解答頻出のオブジェクト指向システム設計面接課題と参考解答、コード及びダイアグラム解答は solutions/ フォルダ以下にリンクが貼られている備考: このセクションは作業中です問題ハッシュマップの設計解答LRUキャッシュの設計解答コールセンターの設計解答カードのデッキの設計解答駐車場の設計解答チャットサーバーの設計解答円形配列の設計Contributeオブジェクト指向システム設計問題を追加するContributeシステム設計トピックス: まずはここからシステム設計の勉強は初めて？まず初めに、よく使われる設計原理について、それらが何であるか、どのように用いられるか、長所短所について基本的な知識を得る必要がありますステップ 1: スケーラビリティに関する動画を観て復習するHarvardでのスケーラビリティの講義ここで触れられているトピックス:垂直スケーリング水平スケーリングキャッシングロードバランシングデータベースレプリケーションデータベースパーティションステップ 2: スケーラビリティに関する資料を読んで復習するスケーラビリティここで触れられているトピックス:クローンデータベースキャッシュ非同期次のステップ次に、ハイレベルでのトレードオフについてみていく:パフォーマンス vs スケーラビリティレイテンシ vs スループット可用性 vs 一貫性全てはトレードオフの関係にあるというのを肝に命じておきましょう。それから、より深い内容、DNSやCDNそしてロードバランサーなどについて学習を進めていきましょう。パフォーマンス vs スケーラビリティリソースが追加されるのにつれて パフォーマンス が向上する場合そのサービスは スケーラブル であると言えるでしょう。一般的に、パフォーマンスを向上させるというのはすなわち計算処理を増やすことを意味しますが、データセットが増えた時などより大きな処理を捌けるようになることでもあります。1パフォーマンスvsスケーラビリティをとらえる他の考え方:パフォーマンス での問題を抱えている時、あなたのシステムは一人のユーザーにとって遅いと言えるでしょう。スケーラビリティ での問題を抱えているとき、一人のユーザーにとっては速いですが、多くのリクエストがある時には遅くなってしまうでしょう。その他の参考資料、ページスケーラビリティについてスケーラビリティ、可用性、安定性、パターンレイテンシー vs スループットレイテンシー とはなにがしかの動作を行う、もしくは結果を算出するのに要する時間スループット とはそのような動作や結果算出が単位時間に行われる回数一般的に、 最大限のスループット を 許容範囲内のレイテンシー で実現することを目指すのが普通だ。その他の参考資料、ページレイテンシー vs スループットを理解する可用性 vs 一貫性CAP 理論      Source: CAP theorem revisited分散型コンピュータシステムにおいては下の三つのうち二つまでしか同時に保証することはできない。:一貫性 - 全ての読み込みは最新の書き込みもしくはエラーを受け取る可用性 - 受け取る情報が最新のものだという保証はないが、全てのリクエストはレスポンスを必ず受け取る分断耐性 - ネットワーク問題によって順不同の分断が起きてもシステムが動作を続けるネットワークは信頼できないので、分断耐性は必ず保証しなければなりません。つまりソフトウェアシステムとしてのトレードオフは、一貫性を取るか、可用性を取るかを考えなければなりません。CP - 一貫性と分断耐性(consistency and partition tolerance)分断されたノードからのレスポンスを待ち続けているとタイムアウトエラーに陥る可能性があります。CPはあなたのサービスがアトミックな読み書き（不可分操作）を必要とする際にはいい選択肢でしょう。AP - 可用性と分断耐性(availability and partition tolerance)レスポンスはノード上にあるデータで最新のものを返します。つまり、最新版のデータが返されるとは限りません。分断が解消された後も、書き込みが反映されるのには時間がかかります。結果整合性　を求めるサービスの際にはAPを採用するのがいいでしょう。もしくは、外部エラーに関わらずシステムが稼働する必要がある際にも同様です。その他の参考資料、ページCAP 理論を振り返る平易な英語でのCAP 理論のイントロCAP FAQ一貫性パターン同じデータの複製が複数ある状態では、クライアントが一貫したデータ表示を受け取るために、どのようにそれらを同期すればいいのかという課題があります。 CAP 理論 における一貫性の定義を思い出してみましょう。全ての読み取りは最新の書き込みデータもしくはエラーを受け取るはずです。弱い一貫性書き込み後の読み取りでは、その最新の書き込みを読めたり読めなかったりする。ベストエフォート型のアプローチに基づく。このアプローチはmemcachedなどのシステムに見られます。弱い一貫性はリアルタイム性が必要なユースケース、例えばVoIP、ビデオチャット、リアルタイムマルチプレイヤーゲームなどと相性がいいでしょう。例えば、電話に出ているときに数秒間音声が受け取れなくなったとしたら、その後に接続が回復してもその接続が切断されていた間に話されていたことは聞き取れないというような感じです。結果整合性書き込みの後、読み取りは最終的にはその結果を読み取ることができる(ミリ秒ほど遅れてというのが一般的です)。データは非同期的に複製されます。このアプローチはDNSやメールシステムなどに採用されています。結果整合性は多くのリクエストを捌くサービスと相性がいいでしょう。強い一貫性書き込みの後、読み取りはそれを必ず読むことができます。データは同期的に複製されます。このアプローチはファイルシステムやRDBMSなどで採用されています。トランザクションを扱うサービスでは強い一貫性が必要でしょう。その他の参考資料、ページデータセンター間でのトランザクション可用性パターン高い可用性を担保するには主に次の二つのパターンがあります: フェイルオーバー と レプリケーション です。フェイルオーバーアクティブ・パッシブアクティブ・パッシブフェイルオーバーにおいては、周期信号はアクティブもしくはスタンバイ中のパッシブなサーバーに送られます。周期信号が中断された時には、パッシブだったサーバーがアクティブサーバーのIPアドレスを引き継いでサービスを再開します。起動までのダウンタイムはパッシブサーバーが「ホット」なスタンバイ状態にあるか、「コールド」なスタンバイ状態にあるかで変わります。アクティブなサーバーのみがトラフィックを捌きます。アクティブ・パッシブフェイルオーバーはマスター・スレーブフェイルオーバーと呼ばれることもあります。アクティブ・アクティブアクティブアクティブ構成では両方のサーバーがトラフィックを捌くことで負荷を分散します。これらのサーバーがパブリックなものの場合、DNSは両方のサーバーのパブリックIPを知っている必要があります。もし、プライベートなものな場合、アプリケーションロジックが両方のサーバーの情報について知っている必要があります。アクティブ・アクティブなフェイルオーバーはマスター・マスターフェイルオーバーと呼ばれることもあります。短所: フェイルオーバーフェイルオーバーではより多くのハードウェアを要し、複雑さが増します。最新の書き込みがパッシブサーバーに複製される前にアクティブが落ちると、データ欠損が起きる潜在可能性があります。レプリケーションマスター・スレーブ　と　マスター・マスターこのトピックは データベース セクションにおいてより詳細に解説されています:マスター・スレーブ レプリケーションマスター・マスター レプリケーションドメインネームシステム      Source: DNS security presentationドメインネームシステム (DNS) は www.example.com などのドメインネームをIPアドレスへと翻訳します。DNSは少数のオーソライズされたサーバーが上位に位置する階層的構造です。あなたのルーターもしくはISPは検索をする際にどのDNSサーバーに接続するかという情報を提供します。低い階層のDNSサーバーはその経路マップをキャッシュします。ただ、この情報は伝搬遅延によって陳腐化する可能性があります。DNSの結果はあなたのブラウザもしくはOSに一定期間（time to live (TTL)に設定された期間）キャッシュされます。NS record (name server) - あなたのドメイン・サブドメインでのDNSサーバーを特定します。MX record (mail exchange) - メッセージを受け取るメールサーバーを特定します。A record (address) - IPアドレスに名前をつけます。CNAME (canonical) - 他の名前もしくは　CNAME (example.com を www.example.com) もしくは A recordへと名前を指し示す。CloudFlare や Route 53 などのサービスはマネージドDNSサービスを提供しています。いくつかのDNSサービスでは様々な手法を使ってトラフィックを捌くことができます:加重ラウンドロビントラフィックがメンテナンス中のサーバーに行くのを防ぎます様々なクラスターサイズに応じて調整しますA/B テストレイテンシーベース地理ベース欠点: DNS上記で示されているようなキャッシングによって緩和されているとはいえ、DNSサーバーへの接続には少し遅延が生じる。DNSサーバーは、政府、ISP企業,そして大企業に管理されているが、それらの管理は複雑である。DNSサービスはDDoS attackの例で、IPアドレスなしにユーザーがTwitterなどにアクセスできなくなったように、攻撃を受ける可能性がある。その他の参考資料、ページDNS アーキテクチャWikipediaDNS 記事コンテンツデリバリーネットワーク(Content delivery network)      Source: Why use a CDNコンテンツデリバリーネットワーク(CDN)は世界中に配置されたプロキシサーバーのネットワークがユーザーに一番地理的に近いサーバーからコンテンツを配信するシステムのことです。AmazonのCloudFrontなどは例外的にダイナミックなコンテンツも配信しますが、一般的に、HTML/CSS/JS、写真、そして動画などの静的ファイルがCDNを通じて配信されます。そのサイトのDNSがクライアントにどのサーバーと交信するかという情報を伝えます。CDNを用いてコンテンツを配信することで以下の二つの理由でパフォーマンスが劇的に向上します:ユーザーは近くにあるデータセンターから受信できるバックエンドサーバーはCDNが処理してくれるリクエストに関しては処理する必要がなくなりますプッシュCDNプッシュCDNではサーバーデータに更新があった時には必ず、新しいコンテンツを受け取る方式です。コンテンツを用意し、CDNに直接アップロードし、URLをCDNを指すように指定するところまで、全て自分で責任を負う形です。コンテンツがいつ期限切れになるのか更新されるのかを設定することができます。コンテンツは新規作成時、更新時のみアップロードされることでトラフィックは最小化される一方、ストレージは最大限消費されてしまいます。トラフィックの少ない、もしくは頻繁にはコンテンツが更新されないサイトの場合にはプッシュCDNと相性がいいでしょう。コンテンツは定期的に再びプルされるのではなく、CDNに一度のみ配置されます。プルCDNプルCDNでは一人目のユーザーがリクエストした時に、新しいコンテンツをサービスのサーバーから取得します。コンテンツは自分のサーバーに保存して、CDNを指すURLを書き換えます。結果として、CDNにコンテンツがキャッシュされるまではリクエスト処理が遅くなります。time-to-live (TTL) はコンテンツがどれだけの期間キャッシュされるかを規定します。プルCDNはCDN 上でのストレージスペースを最小化しますが、有効期限が切れたファイルが更新前にプルされてしまうことで冗長なトラフィックに繋がってしまう可能性があります。大規模なトラフィックのあるサイトではプルCDNが相性がいいでしょう。というのも、トラフィックの大部分は最近リクエストされ、CDNに残っているコンテンツにアクセスするものであることが多いからです。欠点: CDNCDNのコストはトラフィック量によって変わります。もちろん、CDNを使わない場合のコストと比較するべきでしょう。TTLが切れる前にコンテンツが更新されると陳腐化する恐れがあります。CDNでは静的コンテンツがCDNを指すようにURLを更新する必要があります。その他の参考資料、ページグローバルに分散されたコンテンツデリバリーネットワークプッシュCDNとプルCDNの違いWikipediaロードバランサー      Source: Scalable system design patternsロードバランサーは入力されるクライアントのリクエストをアプリケーションサーバーやデータベースへと分散させる。どのケースでもロードバランサーはサーバー等計算リソースからのレスポンスを適切なクライアントに返す。ロードバランサーは以下のことに効果的です:リクエストが状態の良くないサーバーに行くのを防ぐリクエストを過剰に送るのを防ぐ特定箇所の欠陥でサービスが落ちることを防ぐロードバランサーは (費用の高い) ハードウェアもしくはHAProxyなどのソフトウェアで実現できる。他の利点としては:SSL termination - 入力されるリクエストを解読する、また、サーバーレスポンスを暗号化することでバックエンドのサーバーがこのコストが高くつきがちな処理を請け負わなくていいように肩代わりします。X.509 certificates をそれぞれのサーバーにインストールする必要をなくしますセッション管理 - クッキーを取り扱うウェブアプリがセッション情報を保持していない時などに、特定のクライアントのリクエストを同じインスタンスへと流します。障害に対応するために、アクティブ・パッシブ もしくは アクティブ・アクティブ モードのどちらにおいても、複数のロードバランサーを配置するのが一般的です。ロードバランサーは以下のような種々のメトリックを用いてトラフィックルーティングを行うことができます:ランダムLeast loadedセッション/クッキーラウンドロビンもしくは加重ラウンドロビンLayer 4Layer 7Layer 4 ロードバランシングLayer 4 ロードバランサーは トランスポートレイヤー を参照してどのようにリクエストを配分するか判断します。一般的に、トランスポートレイヤーとしては、ソース、送信先IPアドレス、ヘッダーに記述されたポート番号が含まれますが、パケットの中身のコンテンツは含みません。 Layer 4 ロードバランサーはネットワークパケットを上流サーバーへ届け、上流サーバーから配信することでネットワークアドレス変換 Network Address Translation (NAT) を実現します。Layer 7 ロードバランシングLayer 7 ロードバランサーは アプリケーションレイヤー を参照してどのようにリクエストを配分するか判断します。ヘッダー、メッセージ、クッキーなどのコンテンツのことです。Layer 7 ロードバランサーはネットワークトラフィックの終端を受け持ち メッセージを読み込み、ロードバランシングの判断をし、選択したサーバーとの接続を繋ぎます。例えば layer 7 ロードバランサーは動画のトラフィックを直接、そのデータをホストしているサーバーにつなぐと同時に、決済処理などのより繊細なトラフィックをセキュリティ強化されたサーバーに流すということもできる。柔軟性とのトレードオフになりますが、 layer 4 ロードバランサーではLayer 7ロードバランサーよりも所要時間、計算リソースを少なく済ませることができます。ただし、昨今の汎用ハードウェアではパフォーマンスは最小限のみしか発揮できないでしょう。水平スケーリングロードバランサーでは水平スケーリングによってパフォーマンスと可用性を向上させることができます。手頃な汎用マシンを追加することによってスケールアウトさせる方が、一つのサーバーをより高価なマシンにスケールアップする（垂直スケーリング）より費用対効果も高くなり、結果的に可用性も高くなります。また、汎用ハードウェアを扱える人材を雇う方が、特化型の商用ハードウェアを扱える人材を雇うよりも簡単でしょう。欠点: 水平スケーリング水平的にスケーリングしていくと、複雑さが増す上に、サーバーのクローニングが必要になる。サーバーはステートレスである必要がある: ユーザーに関連するセッションや、プロフィール写真などのデータを持ってはいけないセッションは一元的なデータベース (SQL、 NoSQL)などのデータストアにストアされるか キャッシュ (Redis、 Memcached)に残す必要があります。キャッシュやデータベースなどの下流サーバーは上流サーバーがスケールアウトするにつれてより多くの同時接続を保たなければなりません。欠点: ロードバランサーロードバランサーはリソースが不足していたり、設定が適切でない場合、システム全体のボトルネックになる可能性があります。単一障害点を除こうとしてロードバランサーを導入した結果、複雑さが増してしまうことになります。ロードバランサーが一つだけだとそこが単一障害点になってしまいます。一方で、ロードバランサーを複数にすると、さらに複雑さが増してしまいます。その他の参考資料、ページNGINX アーキテクチャHAProxy アーキテクチャガイドスケーラビリティWikipediaLayer 4 ロードバランシングLayer 7 ロードバランシングELB listener configリバースプロキシ(webサーバー)      Source: Wikipedia  リバースプロキシサーバーは内部サービスをまとめて外部に統一されたインターフェースを提供するウェブサーバーです。クライアントからのリクエストはそれに対応するサーバーに送られて、その後レスポンスをリバースプロキシがクライアントに返します。他には以下のような利点があります:より堅牢なセキュリティ - バックエンドサーバーの情報を隠したり、IPアドレスをブラックリスト化したり、クライアントごとの接続数を制限したりできます。スケーラビリティや柔軟性が増します - クライアントはリバースプロキシのIPしか見ないので、裏でサーバーをスケールしたり、設定を変えやすくなります。SSL termination - 入力されるリクエストを解読し、サーバーのレスポンスを暗号化することでサーバーがこのコストのかかりうる処理をしなくて済むようになります。X.509 証明書 を各サーバーにインストールする必要がなくなります。圧縮 - サーバーレスポンスを圧縮できますキャッシング - キャッシュされたリクエストに対して、レスポンスを返します静的コンテンツ - 静的コンテンツを直接送信することができます。HTML/CSS/JS写真動画などなどロードバランサー vs リバースプロキシ複数のサーバーがある時にはロードバランサーをデプロイすると役に立つでしょう。 しばしば、ロードバランサーは同じ機能を果たすサーバー群へのトラフィックを捌きます。リバースプロキシでは、上記に述べたような利点を、単一のウェブサーバーやアプリケーションレイヤーに対しても示すことができます。NGINX や HAProxy などの技術はlayer 7 リバースプロキシとロードバランサーの両方をサポートします。欠点: リバースプロキシリバースプロキシを導入するとシステムの複雑性が増します。単一のリバースプロキシは単一障害点になりえます。一方で、複数のリバースプロキシを導入すると(例: フェイルオーバー) 複雑性はより増します。その他の参考資料、ページリバースプロキシ vs ロードバランサーNGINX アーキテクチャHAProxy アーキテクチャ ガイドWikipediaアプリケーション層      Source: Intro to architecting systems for scaleウェブレイヤーをアプリケーション層 (プラットフォーム層とも言われる) と分離することでそれぞれの層を独立にスケール、設定することができるようになります。新しいAPIをアプリケーション層に追加する際に、不必要にウェブサーバーを追加する必要がなくなります。単一責任の原則 では、小さい自律的なサービスが協調して動くように提唱しています。小さいサービスの小さいチームが急成長のためにより積極的な計画を立てられるようにするためです。アプリケーション層は非同期処理もサポートします。マイクロサービス独立してデプロイできる、小規模なモジュール様式であるマイクロサービスもこの議論に関係してくる技術でしょう。それぞれのサービスは独自のプロセスを処理し、明確で軽量なメカニズムで通信して、その目的とする機能を実現します。1例えばPinterestでは以下のようなマイクロサービスに分かれています。ユーザープロフィール、フォロワー、フィード、検索、写真アップロードなどです。サービスディスカバリーConsul、 Etcd、 Zookeeper などのシステムでは、登録されているサービスの名前、アドレス、ポートの情報を監視することで、サービス同士が互いを見つけやすくしています。サービスの完全性の確認には Health checks が便利で、これには HTTP エンドポイントがよく使われます。 Consul と Etcd のいずれも組み込みの key-value store を持っており、設定データや共有データなどのデータを保存しておくことに使われます。欠点: アプリケーション層アーキテクチャ、運用、そしてプロセスを考慮すると、緩く結び付けられたアプリケーション層を追加するには、モノリシックなシステムとは異なるアプローチが必要です。マイクロサービスはデプロイと運用の点から見ると複雑性が増すことになります。その他の参考資料、ページスケールするシステムアーキテクチャを設計するためのイントロシステム設計インタビューを紐解くサービス指向アーキテクチャZookeeperのイントロダクションマイクロサービスを作るために知っておきたいことデータベース      Source: Scaling up to your first 10 million usersリレーショナルデータベースマネジメントシステム (RDBMS)SQLなどのリレーショナルデータベースはテーブルに整理されたデータの集合である。ACID はリレーショナルデータベースにおけるトランザクションのプロパティの集合である不可分性 - それぞれのトランザクションはあるかないかのいずれかである一貫性 - どんなトランザクションもデータベースをある確かな状態から次の状態に遷移させる。独立性 - 同時にトランザクションを処理することは、連続的にトランザクションを処理するのと同じ結果をもたらす。永続性 - トランザクションが処理されたら、そのように保存されるリレーショナルデータベースをスケールさせるためにはたくさんの技術がある: マスター・スレーブ レプリケーション、 マスター・マスター レプリケーション、 federation、 シャーディング、 非正規化、 そして SQL チューニングマスタースレーブ レプリケーションマスターデータベースが読み取りと書き込みを処理し、書き込みを一つ以上のスレーブデータベースに複製します。スレーブデータベースは読み取りのみを処理します。スレーブデータベースは木構造のように追加のスレーブにデータを複製することもできます。マスターデータベースがオフラインになった場合には、いずれかのスレーブがマスターに昇格するか、新しいマスターデータベースが追加されるまでは読み取り専用モードで稼働します。      Source: Scalability, availability, stability, patterns欠点: マスタースレーブ レプリケーションスレーブをマスターに昇格させるには追加のロジックが必要になる。マスタースレーブ レプリケーション、マスターマスター レプリケーションの 両方 の欠点は欠点: レプリケーションを参照マスターマスター レプリケーションいずれのマスターも読み取り書き込みの両方に対応する。書き込みに関してはそれぞれ協調する。いずれかのマスターが落ちても、システム全体としては読み書き両方に対応したまま運用できる。      Source: Scalability, availability, stability, patterns欠点: マスターマスター レプリケーションロードバランサーを導入するか、アプリケーションロジックを変更することでどこに書き込むかを指定しなければならない。大体のマスターマスターシステムは、一貫性が緩い（ACID原理を守っていない）もしくは、同期する時間がかかるために書き込みのレイテンシーが増加してしまっている。書き込みノードが追加され、レイテンシーが増加するにつれ書き込みの衝突の可能性が増える。マスタースレーブ レプリケーション、マスターマスター レプリケーションの 両方 の欠点は欠点: レプリケーション を参照欠点: レプリケーション新しいデータ書き込みを複製する前にマスターが落ちた場合にはそのデータが失われてしまう可能性がある。書き込みは読み取りレプリカにおいてリプレイされる。書き込みが多い場合、複製ノードが書き込みの処理のみで行き詰まって、読み取りの処理を満足に行えない可能性がある。読み取りスレーブノードの数が多ければ多いほど、複製しなければならない数も増え、複製時間が伸びてしまいます。システムによっては、マスターへの書き込みはマルチスレッドで並列処理できる一方、スレーブへの複製は単一スレッドで連続的に処理しなければならない場合があります。レプリケーションでは追加のハードウェアが必要になり、複雑性も増します。その他の参考資料、ページ: レプリケーションスケーラビリティ、 可用性、 スタビリティ パターンマルチマスター レプリケーションFederation      Source: Scaling up to your first 10 million usersフェデレーション (もしくは機能分割化とも言う) はデータベースを機能ごとに分割する。例えば、モノリシックな単一データベースの代わりに、データベースを フォーラム、 ユーザー、 プロダクト のように三つにすることで、データベース一つあたりの書き込み・読み取りのトラフィックが減り、その結果レプリケーションのラグも短くなります。データベースが小さくなることで、メモリーに収まるデータが増えます。キャッシュの局所性が高まるため、キャッシュヒット率も上がります。単一の中央マスターで書き込みを直列化したりしないため、並列で書き込みを処理することができ、スループットの向上が期待できます。欠点: federation大規模な処理やテーブルを要するスキーマの場合、フェデレーションは効果的とは言えないでしょう。どのデータベースに読み書きをするのかを指定するアプリケーションロジックを更新しなければなりません。server linkで二つのデータベースからのデータを連結するのはより複雑になるでしょう。フェデレーションでは追加のハードウェアが必要になり、複雑性も増します。その他の参考資料、ページ: federationScaling up to your first 10 million usersシャーディング      Source: Scalability, availability, stability, patternsシャーディングでは異なるデータベースにそれぞれがデータのサブセット断片のみを持つようにデータを分割します。ユーザーデータベースを例にとると、ユーザー数が増えるにつれてクラスターにはより多くの断片が加えられることになります。federationの利点に似ていて、シャーディングでは読み書きのトラフィックを減らし、レプリケーションを減らし、キャッシュヒットを増やすことができます。インデックスサイズも減らすことができます。一般的にはインデックスサイズを減らすと、パフォーマンスが向上しクエリ速度が速くなります。なにがしかのデータを複製する機能がなければデータロスにつながりますが、もし、一つのシャードが落ちても、他のシャードが動いていることになります。フェデレーションと同じく、単一の中央マスターが書き込みの処理をしなくても、並列で書き込みを処理することができ、スループットの向上が期待できます。ユーザーテーブルをシャードする一般的な方法は、ユーザーのラストネームイニシャルでシャードするか、ユーザーの地理的配置でシャードするなどです。欠点: シャーディングシャードに対応するようにアプリケーションロジックを変更しなければなりません。結果としてSQLクエリが複雑になります。シャードではデータ配分がいびつになってしまう可能性があります。例えば、標準ユーザーの集合を持つシャードがある場合、そのシャードが他のシャードよりも重い負荷を負うことになります。リバランシングをすると複雑性がより増します。consistent hashing に基づいたシャーディングでは、通信データを削減することもできます。複数のシャードからのデータを連結するのはより複雑です。シャーディングでは追加のハードウェアが必要になり、複雑性も増します。その他の参考資料、ページ: シャーディングシャードの登場シャードデータベースアーキテクチャConsistent hashing非正規化非正規化では、書き込みのパフォーマンスをいくらか犠牲にして読み込みのパフォーマンスを向上させようとします。計算的に重いテーブルの結合などをせずに、複数のテーブルに冗長なデータのコピーが書き込まれるのを許容します。いくつかのRDBMS例えば、PostgreSQL やOracleはこの冗長な情報を取り扱い、一貫性を保つためのmaterialized views という機能をサポートしています。フェデレーション や シャーディングなどのテクニックによってそれぞれのデータセンターに分配されたデータを合一させることはとても複雑な作業です。非正規化によってそのような複雑な処理をしなくて済むようになります。多くのシステムで、100対1あるいは1000対1くらいになるくらい読み取りの方が、書き込みのトラフィックよりも多いことでしょう。読み込みを行うために、複雑なデータベースのジョイン処理が含まれるものは計算的に高価につきますし、ディスクの処理時間で膨大な時間を費消してしまうことになります。欠点: 非正規化データが複製される。冗長なデータの複製が同期されるように制約が存在し、そのことでデータベース全体の設計が複雑化する。非正規化されたデータベースは過大な書き込みを処理しなければならない場合、正規化されているそれよりもパフォーマンスにおいて劣る可能性がある。その他の参考資料、ページ: 非正規化DenormalizationSQLチューニングSQLチューニングは広範な知識を必要とする分野で多くの 本 が書かれています。ボトルネックを明らかにし、シミュレートする上で、 ベンチマーク を定め、 プロファイル することはとても重要です。ベンチマーク - abなどのツールを用いて、高負荷の状況をシミュレーションしてみましょう。プロファイル - slow query log などのツールを用いて、パフォーマンス状況の確認をしましょう。ベンチマークとプロファイルをとることで以下のような効率化の選択肢をとることになるでしょう。スキーマを絞るMySQLはアクセス速度向上のため、ディスク上の連続したブロックへデータを格納しています。長さの決まったフィールドに対しては VARCHAR よりも CHAR を使うようにしましょう。CHAR の方が効率的に速くランダムにデータにアクセスできます。 一方、 VARCHAR では次のデータに移る前にデータの末尾を検知しなければならないために速度が犠牲になります。ブログの投稿など、大きなテキストには TEXT を使いましょう。 TEXT ではブーリアン型の検索も可能です。 TEXT フィールドには、テキストブロックが配置されている、ディスク上の場所へのポインターが保存されます。2の32乗や40億以下を超えない程度の大きな数には INT を使いましょう。通貨に関しては小数点表示上のエラーを避けるために DECIMAL を使いましょう。大きな BLOBS を保存するのは避けましょう。どこからそのオブジェクトを取ってくることができるかの情報を保存しましょう。VARCHAR(255) は8ビットで数えられる最大の文字数です。一部のDBMSでは、1バイトの利用効率を最大化するためにこの文字数がよく使われます。検索性能向上のため 、可能であれば NOT NULL 制約を設定しましょう。インデックスを効果的に用いるクエリ(SELECT、 GROUP BY、 ORDER BY、 JOIN) の対象となる列にインデックスを使うことで速度を向上できるかもしれません。インデックスは通常、平衡探索木であるB木の形で表されます。B木によりデータは常にソートされた状態になります。また検索、順次アクセス、挿入、削除を対数時間で行えます。インデックスを配置することはデータをメモリーに残すことにつながりより容量を必要とします。インデックスの更新も必要になるため書き込みも遅くなります。大量のデータをロードする際には、インデックスを切ってからデータをロードして再びインデックスをビルドした方が速いことがあります。高負荷なジョインを避けるパフォーマンス上必要なところには非正規化を適用するテーブルのパーティションテーブルを分割し、ホットスポットを独立したテーブルに分離してメモリーに乗せられるようにする。クエリキャッシュを調整する場合によってはクエリキャッシュ がパフォーマンス問題 を引き起こす可能性があるその他の参考資料、ページ: SQLチューニングMySQLクエリを最適化するためのTipsVARCHAR(255)をやたらよく見かけるのはなんで？null値はどのようにパフォーマンスに影響するのか？Slow query logNoSQLNoSQL は key-value store、 document-store、 wide column store、 もしくは graph databaseによって表現されるデータアイテムの集合です。データは一般的に正規化されておらず、アプリケーション側でジョインが行われます。大部分のNoSQLは真のACIDトランザクションを持たず、 結果整合性 的な振る舞いの方を好みます。BASE はしばしばNoSQLデータベースのプロパティを説明するために用いられます。CAP Theorem と対照的に、BASEは一貫性よりも可用性を優先します。Basically available - システムは可用性を保証します。Soft state - システムの状態は入力がなくても時間経過とともに変化する可能性があります。結果整合性 - システム全体は時間経過とともにその間に入力がないという前提のもと、一貫性が達成されます。SQLか？NoSQLか？ を選択するのに加えて、どのタイプのNoSQLがどの使用例に最も適するかを理解するのはとても有益です。このセクションでは キーバリューストア、 ドキュメントストア、 ワイドカラムストア、 と グラフデータベース について触れていきます。キーバリューストア概要: ハッシュテーブルキーバリューストアでは一般的にO(1)の読み書きができ、それらはメモリないしSSDで裏付けられています。データストアはキーを 辞書的順序 で保持することでキーの効率的な取得を可能にしています。キーバリューストアではメタデータを値とともに保持することが可能です。キーバリューストアはハイパフォーマンスな挙動が可能で、単純なデータモデルやインメモリーキャッシュレイヤーなどのデータが急速に変わる場合などに使われます。単純な処理のみに機能が制限されているので、追加の処理機能が必要な場合にはその複雑性はアプリケーション層に載せることになります。キーバリューストアはもっと複雑なドキュメントストアや、グラフデータベースなどの基本です。その他の参考資料、ページ: キーバリューストアキーバリューデータベースキーバリューストアの欠点Redisアーキテクチャメムキャッシュアーキテクチャドキュメントストア概要: ドキュメントがバリューとして保存されたキーバリューストアドキュメントストアはオブジェクトに関する全ての情報を持つドキュメント(XML、 JSON、 binaryなど)を中心に据えたシステムです。ドキュメントストアでは、ドキュメント自身の内部構造に基づいた、APIもしくはクエリ言語を提供します。 メモ：多くのキーバリューストアでは、値のメタデータを扱う機能を含んでいますが、そのことによって二つドキュメントストアとの境界線が曖昧になってしまっています。以上のことを実現するために、ドキュメントはコレクション、タグ、メタデータやディレクトリなどとして整理されています。ドキュメント同士はまとめてグループにできるものの、それぞれで全く異なるフィールドを持つ可能性があります。MongoDB や CouchDB などのドキュメントストアも、複雑なクエリを処理するためのSQLのような言語を提供しています。DynamoDB はキーバリューとドキュメントの両方をサポートしています。ドキュメントストアは高い柔軟性を担保するので、頻繁に変化するデータを扱う時に用いられます。その他の参考資料、ページ:  ドキュメントストアドキュメント指向 データベースMongoDB アーキテクチャCouchDB アーキテクチャElasticsearch アーキテクチャワイドカラムストア      Source: SQL & NoSQL, a brief history概要: ネストされたマップ カラムファミリー<行キー、 カラム<ColKey、 Value、 Timestamp>>ワイドカラムストアのデータの基本単位はカラム（ネーム・バリューのペア）です。それぞれのカラムはカラムファミリーとして（SQLテーブルのように）グループ化することができます。スーパーカラムファミリーはカラムファミリーの集合です。それぞれのカラムには行キーでアクセスすることができます。同じ行キーを持つカラムは同じ行として認識されます。それぞれの値は、バージョン管理とコンフリクトが起きた時のために、タイムスタンプを含みます。GoogleはBigtableを初のワイドカラムストアとして発表しました。それがオープンソースでHadoopなどでよく使われるHBase やFacebookによるCassandra などのプロジェクトに影響を与えました。BigTable、HBaseやCassandraなどのストアはキーを辞書形式で保持することで選択したキーレンジでのデータ取得を効率的にします。ワイドカラムストアは高い可用性とスケーラビリティを担保します。これらはとても大規模なデータセットを扱うことによく使われます。その他の参考資料、ページ:  ワイドカラムストアSQL & NoSQL簡単に歴史をさらうBigtable アーキテクチャHBase アーキテクチャCassandra アーキテクチャグラフデータベース      Source: Graph database概要: グラフグラフデータベースでは、それぞれのノードがレコードで、それぞれのアークは二つのノードを繋ぐ関係性として定義されます。グラフデータベースは多数の外部キーや多対多などの複雑な関係性を表すのに最適です。グラフデータベースはSNSなどのサービスの複雑な関係性モデルなどについて高いパフォーマンスを発揮します。比較的新しく、まだ一般的には用いられていないので、開発ツールやリソースを探すのが他の方法に比べて難しいかもしれません。多くのグラフはREST APIsを通じてのみアクセスできます。その他の参考資料、ページ:  グラフGraphデータベースNeo4jFlockDBその他の参考資料、ページ:  NoSQL基本用語の説明NoSQLデータベースについて調査と選択ガイドスケーラビリティNoSQLのイントロダクションNoSQLパターンSQLか？NoSQLか？      Source: Transitioning from RDBMS to NoSQLSQL を選ぶ理由:構造化されたデータ厳格なスキーマリレーショナルデータ複雑なジョインをする必要性トランザクションスケールする際のパターンが明確なとき開発者の数、コミュニティ、コード等がより充実しているインデックスによるデータ探索はとても速いNoSQL を選ぶ理由:準構造化されたデータダイナミックないし、フレキシブルなスキーマノンリレーショナルなデータ複雑なジョインをする必要がないデータの多くのTB (もしくは PB) を保存する集中的、大規模なデータ負荷に耐えられるIOPSについては極めて高いスループットを示すNoSQLに適するサンプルデータ:急激なクリックストリームやログデータの収集リーダーボードやスコアリングデータショッピングカートなどの一時的情報頻繁にアクセスされる ('ホットな') テーブルメタデータやルックアップテーブルその他の参考資料、ページ:  　SQLもしくはNoSQL最初の1000万ユーザーにスケールアップするためにSQLとNoSQLの違いキャッシュ      Source: Scalable system design patternsキャッシュはページの読み込み時間を削減し、サーバーやデータベースへの負荷を低減することができます。このモデルでは、実際の処理を保存するために、ディスパッチャーがまず以前にリクエストが送信されたかどうかを確認し、直前の結果を受け取ります。データベースはそのパーティションに渡って統合された読み取り書き込みの分配を要求しますが、人気アイテムはその分配を歪めてシステム全体のボトルネックになってしまうことがあります。データベースの前にキャッシュを差し込むことでこのように、均一でない負荷やトラフィックの急激な増加を吸収することができます。クライアントキャッシングキャッシュはOSやブラウザーなどのクライアントサイド、サーバーサイド もしくは独立のキャッシュレイヤーに設置することができます。CDNキャッシングCDN もキャッシュの一つとして考えることができます。Webサーバーキャッシングリバースプロキシ や Varnish などのキャッシュは静的そして動的なコンテンツを直接配信することができます。 webサーバーもリクエストをキャッシュしてアプリケーションサーバーに接続することなしにレスポンスを返すことができます。データベースキャッシングデータベースは普通、一般的な使用状況に適するようなキャッシングの設定を初期状態で持っています。この設定を特定の仕様に合わせて調整することでパフォーマンスを向上させることができます。アプリケーションキャッシングメムキャッシュなどのIn-memoryキャッシュやRedisはアプリケーションとデータストレージの間のキーバリューストアです。データはRAMで保持されるため、データがディスクで保存される一般的なデータベースよりもだいぶ速いです。RAM容量はディスクよりも限られているので、least recently used (LRU)などのcache invalidation アルゴリズムが 'コールド' なエントリを弾き、'ホット' なデータをRAMに保存します。Redisはさらに以下のような機能を備えています:パージステンス設定ソート済みセット、リストなどの組み込みデータ構造キャッシュには様々なレベルのものがありますが、いずれも大きく二つのカテゴリーのいずれかに分類することができます: データベースクエリ と オブジェクト です:行レベルクエリレベルFully-formed serializable objectsFully-rendered HTML一般的に、ファイルベースキャッシングはクローンを作り出してオートスケーリングを難しくしてしまうので避けるべきです。データベースクエリレベルでのキャッシングデータベースをクエリする際には必ずクエリをキーとしてハッシュして結果をキャッシュに保存しましょう。この手法はキャッシュ期限切れ問題に悩むことになります:複雑なクエリによりキャッシュされた結果を削除することが困難テーブルセルなどのデータ断片が変化した時に、その変化したセルを含むかもしれない全てのキャッシュされたクエリを削除する必要がある。オブジェクトレベルでのキャッシングデータをアプリケーションコードでそうするように、オブジェクトとして捉えてみましょう。アプリケーションに、データベースからのデータセットをクラスインスタンスやデータ構造として組み立てさせます。:そのデータが変更されたら、オブジェクトをキャッシュから削除すること非同期処理を許容します: ワーカーがキャッシュされたオブジェクトの中で最新のものを集めてきます何をキャッシュするか:ユーザーのセッション完全にレンダーされたウェブページアクテビティストリームユーザーグラフデータいつキャッシュを更新するかキャッシュに保存できる容量は限られているため、自分のケースではどのキャッシュ手法が一番いいかは検討する必要があります。キャッシュアサイド      Source: From cache to in-memory data gridアプリケーションはストレージへの読み書きの処理をします。キャッシュはストレージとは直接やりとりをしません。アプリケーションは以下のことをします:キャッシュの中のエントリを参照しますが、結果としてキャッシュミスになりますデータベースからエントリを取得しますエントリをキャッシュに追加しますエントリを返しますdef get_user(self, user_id):    user = cache.get(\""user.{0}\"", user_id)    if user is None:        user = db.query(\""SELECT * FROM users WHERE user_id = {0}\"", user_id)        if user is not None:            key = \""user.{0}\"".format(user_id)            cache.set(key, json.dumps(user))    return userMemcached は通常このように使われる。その後のキャッシュデータ読み込みは速いです。キャッシュアサイドはレージーローディングであるとも言われます。リクエストされたデータのみがキャッシュされ、リクエストされていないデータでキャッシュが溢れるのを防止します。欠点: キャッシュアサイド各キャッシュミスは三つのトリップを呼び出すことになり、体感できるほどの遅延が起きてしまいます。データベースのデータが更新されるとキャッシュデータは古いものになってしまいます。time-to-live (TTL)を設定することでキャッシュエントリの更新を強制的に行う、もしくはライトスルーを採用することでこの問題は緩和できます。ノードが落ちると、新規の空のノードで代替されることでレイテンシーが増加することになります。ライトスルー      Source: Scalability, availability, stability, patternsアプリケーションはキャッシュをメインのデータストアとして使い、そこにデータの読み書きを行います。一方、キャッシュはデータベースへの読み書きを担当します。アプリケーションはキャッシュにあるエントリを追加・更新しますキャッシュは同期的にデータストアに書き込みを行いますエントリを返しますアプリケーションコード:set_user(12345, {\""foo\"":\""bar\""})キャッシュコード:def set_user(user_id, values):    user = db.query(\""UPDATE Users WHERE id = {0}\"", user_id, values)    cache.set(user_id, user)ライトスルーは書き込み処理のせいで全体としては遅いオペレーションですが、書き込まれたばかりのデータに関する読み込みは速いです。ユーザー側は一般的にデータ更新時の方が読み込み時よりもレイテンシーに許容的です。キャッシュ内のデータは最新版で保たれます。欠点: ライトスルーノードが落ちたこと、もしくはスケーリングによって新しいノードが作成された時に、新しいノードはデータベース内のエントリーが更新されるまではエントリーをキャッシュしません。キャッシュアサイドとライトスルーを併用することでこの問題を緩和できます。書き込まれたデータの大部分は一度も読み込まれることはありません。このデータはTTLによって圧縮することができます。ライトビハインド (ライトバック)      Source: Scalability, availability, stability, patternsライトビハインドではアプリケーションは以下のことをします:キャッシュのエントリーを追加・更新しますデータストアへの書き込みを非同期的に行うことで、書き込みパフォーマンスを向上させます。欠点: ライトビハインドキャッシュがデータストア内のコンテンツにヒットする前にキャッシュが落ちるとデータ欠損が起きる可能性があります。キャッシュアサイドやライトスルーよりも実装が複雑になります。リフレッシュアヘッド      Source: From cache to in-memory data grid期限切れよりも前に、直近でアクセスされた全てのキャッシュエントリを自動的に更新するように設定することができます。もしどのアイテムが将来必要になるのかを正確に予測することができるのならば、リードスルーよりもレイテンシーを削減することができます。欠点: リフレッシュアヘッドどのアイテムが必要になるかの予測が正確でない場合にはリフレッシュアヘッドがない方がレイテンシーは良いという結果になってしまいます。欠点: キャッシュcache invalidationなどを用いて、データベースなどの真のデータとキャッシュの間の一貫性を保つ必要があります。Redisやmemcachedを追加することでアプリケーション構成を変更する必要があります。Cache invalidationも難しいですがそれに加えて、いつキャッシュを更新するかという複雑な問題にも悩まされることになります。その他の参考資料、ページFrom cache to in-memory data gridスケーラブルなシステムデザインパターンスケールできるシステムを設計するためのイントロダクションスケーラビリティ、可用性、安定性、パターンスケーラビリティAWS ElastiCacheのストラテジーWikipedia非同期処理      Source: Intro to architecting systems for scale非同期のワークフローはもし、連続的に行われるとリクエスト時間を圧迫してしまうような重い処理を別で処理する手法です。また、定期的にデータを集合させるなどの時間がかかるような処理を前もって処理しておくことにも役立ちます。メッセージキューメッセージキューはメッセージを受け取り、保存し、配信します。もし、処理がインラインで行うには遅すぎる場合、以下のようなワークフローでメッセージキューを用いるといいでしょう:アプリケーションはジョブをキューに配信し、ユーザーにジョブステータスを伝えます。ワーカーがジョブキューから受け取って、処理を行い、終了したらそのシグナルを返します。ユーザーの処理が止まることはなく、ジョブはバックグラウンドで処理されます。この間に、クライアントはオプションとして、タスクが完了したかのように見せるために小規模の処理を行います。例えば、ツイートを投稿するときに、ツイートはすぐにあなたのタイムラインに反映されたように見えますが、そのツイートが実際に全てのフォロワーに配信されるまでにはもう少し時間がかかっているでしょう。Redis はシンプルなメッセージ仲介としてはいいですが、メッセージが失われてしまう可能性があります。RabbitMQ はよく使われていますが、'AMQP'プロトコルに対応して、自前のノードを立てる必要があります。Amazon SQS という選択肢もありますが、レイテンシーが高く、メッセージが重複して配信されてしまう可能性があります。タスクキュータスクキューはタスクとその関連するデータを受け取り、処理した上でその結果を返します。スケジュール管理をできるほか、バックグラウンドでとても重いジョブをこなすこともできます。Celery はスケジューリングとpythonのサポートがあります。バックプレッシャーもし、キューが拡大しすぎると、メモリーよりもキューの方が大きくなりキャッシュミスが起こり、ディスク読み出しにつながり、パフォーマンスが低下することにつながります。バックプレッシャーはキューサイズを制限することで回避することができ、高いスループットを確保しキューにすでにあるジョブについてのレスポンス時間を短縮できます。キューがいっぱいになると、クライアントはサーバービジーもしくはHTTP 503をレスポンスとして受け取りまた後で時間をおいてアクセスするようにメッセージを受け取ります。クライアントはexponential backoffなどによって後ほど再度時間を置いてリクエストすることができます。欠点: 非同期処理キューを用いることで遅延が起こり、複雑さも増すため、あまり重くない計算処理やリアルタイムワークフローにおいては同期処理の方がいいでしょう。その他の参考資料、ページIt's all a numbers gameオーバーロードした時にバックプレッシャーを適用するLittle's lawメッセージキューとタスクキューの違いとは？通信      Source: OSI 7 layer modelHypertext transfer protocol (HTTP)HTTP はクライアントとサーバー間でのデータをエンコードして転送するための手法です。リクエスト・レスポンスに関わるプロトコルです。クライアントがリクエストをサーバーに投げ、サーバーがリクエストに関係するコンテンツと完了ステータス情報をレスポンスとして返します。HTTPは自己完結するので、間にロードバランサー、キャッシュ、エンクリプション、圧縮などのどんな中間ルーターが入っても動くようにできています。基本的なHTTPリクエストはHTTP動詞(メソッド)とリソース(エンドポイント)で成り立っています。以下がよくあるHTTP動詞です。:動詞詳細冪等性*セーフキャッシュできるかGETリソースを読み取るYesYesYesPOSTリソースを作成するもしくはデータを処理するトリガーNoNoYes レスポンスが新しい情報を含む場合PUTリソースを作成もしくは入れ替えるYesNoNoPATCHリソースを部分的に更新するNoNoYes レスポンスが新しい情報を含む場合DELETEリソースを削除するYesNoNo何度呼んでも同じ結果が返ってくることHTTPはTCP や UDP などの低級プロトコルに依存しているアプリケーションレイヤーのプロトコルである。その他の参考資料、ページ: HTTPHTTPってなに?HTTP と TCPの違いPUT と PATCHの違い伝送制御プロトコル (TCP)      Source: How to make a multiplayer gameTCPはIP networkの上で成り立つ接続プロトコルです。接続はhandshakeによって開始、解除されます。全ての送信されたパケットは欠損なしで送信先に送信された順番で到達するように以下の方法で保証されています:シーケンス番号とchecksum fieldsが全てのパケットに用意されているAcknowledgementパケットと自動再送信もし送信者が正しいレスポンスを受け取らなかったとき、パケットを再送信します。複数のタイムアウトがあったとき、接続は解除されます。TCP はフロー制御 と 輻輳制御も実装しています。これらの機能によって速度は低下し、一般的にUDPよりも非効率な転送手段になっています。ハイスループットを実現するために、ウェブサーバーはかなり大きな数のTCP接続を開いておくことがあり、そのことでメモリー使用が圧迫されます。ウェブサーバスレッドと例えばmemcached サーバーの間で多数のコネクションを保っておくことは高くつくかもしれません。可能なところではUDPに切り替えるだけでなくコネクションプーリングなども役立つかもしれません。TCPは高い依存性を要し、時間制約が厳しくないものに適しているでしょう。ウェブサーバー、データベース情報、SMTP、FTPやSSHなどの例に適用されます。以下の時にUDPよりもTCPを使うといいでしょう:全てのデータが欠損することなしに届いてほしいネットワークスループットの最適な自動推測をしてオペレーションしたいユーザデータグラムプロトコル (UDP)      Source: How to make a multiplayer gameUDPはコネクションレスです。データグラム（パケットのようなもの）はデータグラムレベルでの保証しかされません。データグラムは順不同で受け取り先に到着したりそもそも着かなかったりします。UDPは輻輳制御をサポートしません。TCPにおいてはサポートされているこれらの保証がないため、UDPは一般的に、TCPよりも効率的です。UDPはサブネット上のすべての機器にデータグラムを送信することができます。これはDHCP において役に立ちます。というのも、クライアントはまだIPアドレスを取得していないので、IPアドレスを必要とするTCPによるストリームができないからです。UDPは信頼性の面では劣りますが、VoIP、ビデオチャット、ストリーミングや同時通信マルチプレイヤーゲームなどのリアルタイム性が重視される時にはとても効果的です。TCPよりもUDPを使うのは:レイテンシーを最低限に抑えたい時データ欠損よりも、データ遅延を重視するときエラー修正を自前で実装したいときその他の参考資料、ページ: TCP と UDPゲームプログラミングのためのネットワークTCP と UDP プロトコルの主な違いTCP と UDPの違いTransmission control protocolUser datagram protocolFacebookのメムキャッシュスケーリング遠隔手続呼出 (RPC)      Source: Crack the system design interviewRPCではクライアントがリモートサーバーなどの異なるアドレス空間でプロシージャーが処理されるようにします。プロシージャーはローカルでのコールのように、クライアントからサーバーにどのように通信するかという詳細を省いた状態でコードが書かれます。リモートのコールは普通、ローカルのコールよりも遅く、信頼性に欠けるため、RPCコールをローカルコールと区別させておくことが好ましいでしょう。人気のRPCフレームワークは以下です。Protobuf、 Thrift、AvroRPC は リクエストレスポンスプロトコル:クライアントプログラム - クライアントスタブプロシージャーを呼び出します。パラメータはローカルでのプロシージャーコールのようにスタックへとプッシュされていきます。クライアントスタブプロシージャー - プロシージャIDとアーギュメントをパックしてリクエストメッセージにします。クライアント通信モジュール - OSがクライアントからサーバーへとメッセージを送ります。サーバー通信モジュール - OSが受け取ったパケットをサーバースタブプロシージャーに受け渡します。サーバースタブプロシージャー -  結果を展開し、プロシージャーIDにマッチするサーバープロシージャーを呼び出し、結果を返します。サーバーレスポンスは上記のステップを逆順で繰り返します。Sample RPC calls:GET /someoperation?data=anIdPOST /anotheroperation{  \""data\"":\""anId\"";  \""anotherdata\"": \""another value\""}RPCは振る舞いを公開することに焦点を当てています。RPCは内部通信パフォーマンスを理由として使われることが多いです。というのも、使用する状況に合わせてネイティブコールを自作することができるからです。ネイティブライブラリー (aka SDK) を呼ぶのは以下の時:ターゲットのプラットフォームを知っている時ロジックがどのようにアクセスされるのかを管理したいときライブラリー外でエラーがどのようにコントロールされるかを管理したい時パフォーマンスとエンドユーザーエクスペリエンスが最優先の時REST プロトコルに従うHTTP APIはパブリックAPIにおいてよく用いられます。欠点: RPCRPCクライアントとはサービス実装により厳密に左右されることになります。新しいオペレーション、使用例があるたびに新しくAPIが定義されなければなりません。RPCをデバッグするのは難しい可能性があります。既存のテクノロジーをそのまま使ってサービスを構築することはできないかもしれません。例えば、SquidなどのサーバーにRPCコールが正しくキャッシュ されるように追加で骨を折る必要があるかもしれません。Representational state transfer (REST)RESTは、クライアントがサーバーによってマネージされるリソースに対して処理を行うクライアント・サーバーモデルを支持するアーキテキチャスタイルです。サーバーは操作できるもしくは新しいリソースレプレゼンテーションを受け取ることができるようなリソースやアクションのレプレゼンテーションを提供します。すべての通信はステートレスでキャッシュ可能でなければなりません。RESTful なインターフェースには次の四つの特徴があります:特徴的なリソース (URI in HTTP) - どのオペレーションであっても同じURIを使う。HTTP動詞によって変わる (Verbs in HTTP) - 動詞、ヘッダー、ボディを使う自己説明的なエラーメッセージ (status response in HTTP) - ステータスコードを使い、新しく作ったりしないこと。HATEOAS (HTML interface for HTTP) - 自分のwebサービスがブラウザで完全にアクセスできること。サンプル REST コール:GET /someresources/anIdPUT /someresources/anId{\""anotherdata\"": \""another value\""}RESTはデータを公開することに焦点を当てています。クライアントとサーバーのカップリングを最小限にするもので、パブリックAPIなどによく用いられます。RESTはURI、 representation through headers、そして、GET、POST、PUT、 DELETE、PATCHなどのHTTP動詞等のよりジェネリックで統一されたメソッドを用います。ステートレスであるのでRESTは水平スケーリングやパーティショニングに最適です。欠点: RESTRESTはデータ公開に焦点を当てているので、リソースが自然に整理されていなかったり、シンプルなヒエラルキーで表せられない時にはよい選択肢とは言えないかもしれません。例えば、とあるイベントのセットにマッチするすべての更新情報を返すと言った処理は簡単にはパスで表現することができません。RESTでは、URIパス、クエリパラメータ、そして場合によってはリクエストボディなどによって実装されることが多いでしょう。RESTは少数の動詞に依存しています(GET、POST、PUT、DELETE、そして PATCH) が時には使いたい事例に合わないことがあります。例えば、期限の切れたドキュメントをアーカイブに移したい場合などはこれらの動詞の中には綺麗にはフィットしません。ネストされたヒエラルキーの中にあるリソースをとってくるのはシングルビューを描画するのにクライアントとサーバー間で数回やりとりしなければなりません。例として、ブログエントリーのコンテンツとそれに対するコメントを表示する場合などです。様々なネットワーク環境で動作する可能性が考えられるモバイルアプリケーションにおいてはこのような複数のやり取りは好ましくありません。時が経つにつれて、APIレスポンスにより多くのフィールドが与えられて、古いクライアントはすでにいらないものも含めてすべてのデータフィールドを受け取ることになります。そのことで、ペイロードが大きくなりすぎて、レイテンシーも拡大することになります。RPCとREST比較OperationRPCRESTサインアップPOST /signupPOST /personsリザインPOST /resign{\""personid\"": \""1234\""}DELETE /persons/1234Person読み込みGET /readPerson?personid=1234GET /persons/1234Personのアイテムリスト読み込みGET /readUsersItemsList?personid=1234GET /persons/1234/itemsPersonのアイテムへのアイテム追加POST /addItemToUsersItemsList{\""personid\"": \""1234\"";\""itemid\"": \""456\""}POST /persons/1234/items{\""itemid\"": \""456\""}アイテム更新POST /modifyItem{\""itemid\"": \""456\"";\""key\"": \""value\""}PUT /items/456{\""key\"": \""value\""}アイテム削除POST /removeItem{\""itemid\"": \""456\""}DELETE /items/456  Source: Do you really know why you prefer REST over RPCその他の参考資料、ページ: REST と RPCDo you really know why you prefer REST over RPCWhen are RPC-ish approaches more appropriate than REST?REST vs JSON-RPCDebunking the myths of RPC and RESTWhat are the drawbacks of using RESTCrack the system design interviewThriftWhy REST for internal use and not RPCセキュリティこのセクションは更新が必要です。contributingしてください！セキュリティは幅広いトピックです。十分な経験、セキュリティ分野のバックグラウンドがなくても、セキュリティの知識を要する職に応募するのでない限り、基本以上のことを知る必要はないでしょう。情報伝達、保存における暗号化XSS や SQL injectionを防ぐために、全てのユーザー入力もしくはユーザーに露出される入力パラメーターをサニタイズするSQL injectionを防ぐためにパラメータ化されたクエリを用いる。least privilegeの原理を用いるその他の参考資料、ページ:開発者のためのセキュリティガイドOWASP top ten補遺暗算で、推計値を求める必要があることも時にはあります。例えば、ディスクから100枚イメージ分のサムネイルを作る時間を求めたり、その時にどれだけディスクメモリーが消費されるかなどの値です。2の乗数表 と 全てのプログラマーが知るべきレイテンシー値 は良い参考になるでしょう。2の乗数表乗数           厳密な値         約        Bytes---------------------------------------------------------------7                             1288                             25610                           1024   1 thousand           1 KB16                         65,536                       64 KB20                      1,048,576   1 million            1 MB30                  1,073,741,824   1 billion            1 GB32                  4,294,967,296                        4 GB40              1,099,511,627,776   1 trillion           1 TBその他の参考資料、ページ:2の乗数表全てのプログラマーが知るべきレイテンシー値Latency Comparison Numbers--------------------------L1 cache reference                           0.5 nsBranch mispredict                            5   nsL2 cache reference                           7   ns                      14x L1 cacheMutex lock/unlock                           25   nsMain memory reference                      100   ns                      20x L2 cache, 200x L1 cacheCompress 1K bytes with Zippy            10,000   ns       10 usSend 1 KB bytes over 1 Gbps network     10,000   ns       10 usRead 4 KB randomly from SSD*           150,000   ns      150 us          ~1GB/sec SSDRead 1 MB sequentially from memory     250,000   ns      250 usRound trip within same datacenter      500,000   ns      500 usRead 1 MB sequentially from SSD*     1,000,000   ns    1,000 us    1 ms  ~1GB/sec SSD, 4X memoryDisk seek                           10,000,000   ns   10,000 us   10 ms  20x datacenter roundtripRead 1 MB sequentially from 1 Gbps  10,000,000   ns   10,000 us   10 ms  40x memory, 10X SSDRead 1 MB sequentially from disk    30,000,000   ns   30,000 us   30 ms 120x memory, 30X SSDSend packet CA->Netherlands->CA    150,000,000   ns  150,000 us  150 msNotes-----1 ns = 10^-9 seconds1 us = 10^-6 seconds = 1,000 ns1 ms = 10^-3 seconds = 1,000 us = 1,000,000 ns上記表に基づいた役に立つ数値:ディスクからの連続読み取り速度 30 MB/s1 Gbps Ethernetからの連続読み取り速度　100 MB/sSSDからの連続読み取り速度 1 GB/smain memoryからの連続読み取り速度 4 GB/s1秒で地球6-7周できる1秒でデータセンターと2000周やりとりできるレイテンシーの視覚的表その他の参考資料、ページ:全てのプログラマーが知るべきレイテンシー値 - 1全てのプログラマーが知るべきレイテンシー値 - 2Designs, lessons, and advice from building large distributed systemsSoftware Engineering Advice from Building Large-Scale Distributed Systems他のシステム設計面接例題頻出のシステム設計面接課題とその解答へのリンク質問解答Dropboxのようなファイル同期サービスを設計するyoutube.comGoogleのような検索エンジンの設計queue.acm.orgstackexchange.comardendertat.comstanford.eduGoogleのようなスケーラブルなwebクローラーの設計quora.comGoogle docsの設計code.google.comneil.fraser.nameRedisのようなキーバリューストアの設計slideshare.netMemcachedのようなキャッシュシステムの設計slideshare.netAmazonのようなレコメンデーションシステムの設計hulu.comijcai13.orgBitlyのようなURL短縮サービスの設計n00tc0d3r.blogspot.comWhatsAppのようなチャットアプリの設計highscalability.comInstagramのような写真共有サービスの設計highscalability.comhighscalability.comFacebookニュースフィードの設計quora.comquora.comslideshare.netFacebookタイムラインの設計facebook.comhighscalability.comFacebookチャットの設計erlang-factory.comfacebook.comFacebookのようなgraph検索の設計facebook.comfacebook.comfacebook.comCloudFlareのようなCDNの設計cmu.eduTwitterのトレンド機能の設計michael-noll.comsnikolov .wordpress.comランダムID発行システムの設計blog.twitter.comgithub.com一定のインターバル時間での上位k件を返すucsb.eduwpi.edu複数のデータセンターからデータを配信するサービスの設計highscalability.comオンラインの複数プレイヤーカードゲームの設計indieflashblog.combuildnewgames.comガーベッジコレクションシステムの設計stuffwithstuff.comwashington.eduシステム設計例題を追加するContribute実世界のアーキテクチャ世の中のシステムがどのように設計されているかについての記事      Source: Twitter timelines at scale以下の記事の重箱の隅をつつくような細かい詳細にこだわらないこと。むしろ共通の原理、技術、パターンを探ることそれぞれのコンポーネントでどんな問題が解決され、コンポーネントはどこでうまく使えもしくは使えないかを知ること学んだことを復習すること種類システム参考ページデータ処理MapReduce - Googleの分散データ処理システムresearch.google.comデータ処理Spark - Databricksの分散データ処理システムslideshare.netデータ処理Storm - Twitterの分散データ処理システムslideshare.netデータストアBigtable - Googleのカラム指向分散データベースharvard.eduデータストアHBase - Bigtableのオープンソース実装slideshare.netデータストアCassandra - Facebookのカラム指向分散データベースslideshare.netデータストアDynamoDB - Amazonのドキュメント指向分散データベースharvard.eduデータストアMongoDB - ドキュメント指向分散データベースslideshare.netデータストアSpanner - Googleのグローバル分散データベースresearch.google.comデータストアMemcached - 分散メモリーキャッシングシステムslideshare.netデータストアRedis - 永続性とバリュータイプを兼ね備えた分散メモリーキャッシングシステムslideshare.netファイルシステムGoogle File System (GFS) - 分散ファイルシステムresearch.google.comファイルシステムHadoop File System (HDFS) - GFSのオープンソース実装apache.orgMiscChubby - 疎結合の分散システムをロックするGoogleのサービスresearch.google.comMiscDapper - 分散システムを追跡するインフラresearch.google.comMiscKafka - LinkedInによるPub/subメッセージキューslideshare.netMiscZookeeper - 同期を可能にする中央集権インフラとサービスslideshare.netアーキテクチャを追加するContribute各企業のアーキテクチャ企業参考ページAmazonAmazon architectureCinchcastProducing 1,500 hours of audio every dayDataSiftRealtime datamining At 120,000 tweets per secondDropBoxHow we've scaled DropboxESPNOperating At 100,000 duh nuh nuhs per secondGoogleGoogle architectureInstagram14 million users, terabytes of photosWhat powers InstagramJustin.tvJustin.Tv's live video broadcasting architectureFacebookScaling memcached at FacebookTAO: Facebook’s distributed data store for the social graphFacebook’s photo storageFlickrFlickr architectureMailboxFrom 0 to one million users in 6 weeksPinterestFrom 0 To 10s of billions of page views a month18 million visitors, 10x growth, 12 employeesPlayfish50 million monthly users and growingPlentyOfFishPlentyOfFish architectureSalesforceHow they handle 1.3 billion transactions a dayStack OverflowStack Overflow architectureTripAdvisor40M visitors, 200M dynamic page views, 30TB dataTumblr15 billion page views a monthTwitterMaking Twitter 10000 percent fasterStoring 250 million tweets a day using MySQL150M active users, 300K QPS, a 22 MB/S firehoseTimelines at scaleBig and small data at TwitterOperations at Twitter: scaling beyond 100 million usersUberHow Uber scales their real-time market platformWhatsAppThe WhatsApp architecture Facebook bought for $19 billionYouTubeYouTube scalabilityYouTube architecture企業のエンジニアブログ面接を受ける企業のアーキテクチャ投げられる質問は同じ分野から来ることもあるでしょうAirbnb EngineeringAtlassian DevelopersAutodesk EngineeringAWS BlogBitly Engineering BlogBox BlogsCloudera Developer BlogDropbox Tech BlogEngineering at QuoraEbay Tech BlogEvernote Tech BlogEtsy Code as CraftFacebook EngineeringFlickr CodeFoursquare Engineering BlogGitHub Engineering BlogGoogle Research BlogGroupon Engineering BlogHeroku Engineering BlogHubspot Engineering BlogHigh ScalabilityInstagram EngineeringIntel Software BlogJane Street Tech BlogLinkedIn EngineeringMicrosoft EngineeringMicrosoft Python EngineeringNetflix Tech BlogPaypal Developer BlogPinterest Engineering BlogQuora EngineeringReddit BlogSalesforce Engineering BlogSlack Engineering BlogSpotify LabsTwilio Engineering BlogTwitter EngineeringUber Engineering BlogYahoo Engineering BlogYelp Engineering BlogZynga Engineering Blogその他の参考資料、ページ:kilimchoi/engineering-blogsここにあるリストは比較的小規模なものにとどめ、kilimchoi/engineering-blogsにより詳細に記すことで重複しないようにしておくことにする。エンジニアブログへのリンクを追加する場合はここではなく、engineering-blogsレボジトリに追加することを検討してください。進行中の作業セクションの追加や、進行中の作業を手伝っていただける場合はこちら!MapReduceによる分散コンピューティングConsistent hashingScatter gatherContributeクレジットクレジット及び、参照ページは適時このリポジトリ内に記載してありますSpecial thanks to:Hired in techCracking the coding interviewHigh scalabilitycheckcheckzz/system-design-interviewshashank88/system_designmmcgrana/services-engineeringSystem design cheat sheetA distributed systems reading listCracking the system design interviewContact infoFeel free to contact me to discuss any issues, questions, or comments.My contact info can be found on my GitHub page.LicenseI am providing code and resources in this repository to you under an open source license.  Because this is my personal repository, the license you receive to my code and resources is from me and not my employer (Facebook).Copyright 2017 Donne MartinCreative Commons Attribution 4.0 International License (CC BY 4.0)http://creativecommons.org/licenses/by/4.0/"
21,21,AUTOMATIC1111/stable-diffusion-webui,https://github.com/AUTOMATIC1111/stable-diffusion-webui/blob/master/README.md,Python,"Stable Diffusion web UIA browser interface based on Gradio library for Stable Diffusion.FeaturesDetailed feature showcase with images:Original txt2img and img2img modesOne click install and run script (but you still must install python and git)OutpaintingInpaintingColor SketchPrompt MatrixStable Diffusion UpscaleAttention, specify parts of text that the model should pay more attention toa man in a ((tuxedo)) - will pay more attention to tuxedoa man in a (tuxedo:1.21) - alternative syntaxselect text and press Ctrl+Up or Ctrl+Down (or Command+Up or Command+Down if you're on a MacOS) to automatically adjust attention to selected text (code contributed by anonymous user)Loopback, run img2img processing multiple timesX/Y/Z plot, a way to draw a 3 dimensional plot of images with different parametersTextual Inversionhave as many embeddings as you want and use any names you like for themuse multiple embeddings with different numbers of vectors per tokenworks with half precision floating point numberstrain embeddings on 8GB (also reports of 6GB working)Extras tab with:GFPGAN, neural network that fixes facesCodeFormer, face restoration tool as an alternative to GFPGANRealESRGAN, neural network upscalerESRGAN, neural network upscaler with a lot of third party modelsSwinIR and Swin2SR (see here), neural network upscalersLDSR, Latent diffusion super resolution upscalingResizing aspect ratio optionsSampling method selectionAdjust sampler eta values (noise multiplier)More advanced noise setting optionsInterrupt processing at any time4GB video card support (also reports of 2GB working)Correct seeds for batchesLive prompt token length validationGeneration parametersparameters you used to generate images are saved with that imagein PNG chunks for PNG, in EXIF for JPEGcan drag the image to PNG info tab to restore generation parameters and automatically copy them into UIcan be disabled in settingsdrag and drop an image/text-parameters to promptboxRead Generation Parameters Button, loads parameters in promptbox to UISettings pageRunning arbitrary python code from UI (must run with --allow-code to enable)Mouseover hints for most UI elementsPossible to change defaults/mix/max/step values for UI elements via text configTiling support, a checkbox to create images that can be tiled like texturesProgress bar and live image generation previewCan use a separate neural network to produce previews with almost none VRAM or compute requirementNegative prompt, an extra text field that allows you to list what you don't want to see in generated imageStyles, a way to save part of prompt and easily apply them via dropdown laterVariations, a way to generate same image but with tiny differencesSeed resizing, a way to generate same image but at slightly different resolutionCLIP interrogator, a button that tries to guess prompt from an imagePrompt Editing, a way to change prompt mid-generation, say to start making a watermelon and switch to anime girl midwayBatch Processing, process a group of files using img2imgImg2img Alternative, reverse Euler method of cross attention controlHighres Fix, a convenience option to produce high resolution pictures in one click without usual distortionsReloading checkpoints on the flyCheckpoint Merger, a tab that allows you to merge up to 3 checkpoints into oneCustom scripts with many extensions from communityComposable-Diffusion, a way to use multiple prompts at onceseparate prompts using uppercase ANDalso supports weights for prompts: a cat :1.2 AND a dog AND a penguin :2.2No token limit for prompts (original stable diffusion lets you use up to 75 tokens)DeepDanbooru integration, creates danbooru style tags for anime promptsxformers, major speed increase for select cards: (add --xformers to commandline args)via extension: History tab: view, direct and delete images conveniently within the UIGenerate forever optionTraining tabhypernetworks and embeddings optionsPreprocessing images: cropping, mirroring, autotagging using BLIP or deepdanbooru (for anime)Clip skipHypernetworksLoras (same as Hypernetworks but more pretty)A sparate UI where you can choose, with preview, which embeddings, hypernetworks or Loras to add to your promptCan select to load a different VAE from settings screenEstimated completion time in progress barAPISupport for dedicated inpainting model by RunwayMLvia extension: Aesthetic Gradients, a way to generate images with a specific aesthetic by using clip images embeds (implementation of https://github.com/vicgalle/stable-diffusion-aesthetic-gradients)Stable Diffusion 2.0 support - see wiki for instructionsAlt-Diffusion support - see wiki for instructionsNow without any bad letters!Load checkpoints in safetensors formatEased resolution restriction: generated image's domension must be a multiple of 8 rather than 64Now with a license!Reorder elements in the UI from settings screenInstallation and RunningMake sure the required dependencies are met and follow the instructions available for both NVidia (recommended) and AMD GPUs.Alternatively, use online services (like Google Colab):List of Online ServicesInstallation on Windows 10/11 with NVidia-GPUs using release packageDownload sd.webui.zip from v1.0.0-pre and extract it's contents.Run update.bat.Run run.bat.For more details see Install-and-Run-on-NVidia-GPUsAutomatic Installation on WindowsInstall Python 3.10.6 (Newer version of Python does not support torch), checking \""Add Python to PATH\"".Install git.Download the stable-diffusion-webui repository, for example by running git clone https://github.com/AUTOMATIC1111/stable-diffusion-webui.git.Run webui-user.bat from Windows Explorer as normal, non-administrator, user.Automatic Installation on LinuxInstall the dependencies:# Debian-based:sudo apt install wget git python3 python3-venv# Red Hat-based:sudo dnf install wget git python3# Arch-based:sudo pacman -S wget git python3Navigate to the directory you would like the webui to be installed and execute the following command:bash <(wget -qO- https://raw.githubusercontent.com/AUTOMATIC1111/stable-diffusion-webui/master/webui.sh)Run webui.sh.Check webui-user.sh for options.Installation on Apple SiliconFind the instructions here.ContributingHere's how to add code to this repo: ContributingDocumentationThe documentation was moved from this README over to the project's wiki.For the purposes of getting Google and other search engines to crawl the wiki, here's a link to the (not for humans) crawlable wiki.CreditsLicenses for borrowed code can be found in Settings -> Licenses screen, and also in html/licenses.html file.Stable Diffusion - https://github.com/CompVis/stable-diffusion, https://github.com/CompVis/taming-transformersk-diffusion - https://github.com/crowsonkb/k-diffusion.gitGFPGAN - https://github.com/TencentARC/GFPGAN.gitCodeFormer - https://github.com/sczhou/CodeFormerESRGAN - https://github.com/xinntao/ESRGANSwinIR - https://github.com/JingyunLiang/SwinIRSwin2SR - https://github.com/mv-lab/swin2srLDSR - https://github.com/Hafiidz/latent-diffusionMiDaS - https://github.com/isl-org/MiDaSIdeas for optimizations - https://github.com/basujindal/stable-diffusionCross Attention layer optimization - Doggettx - https://github.com/Doggettx/stable-diffusion, original idea for prompt editing.Cross Attention layer optimization - InvokeAI, lstein - https://github.com/invoke-ai/InvokeAI (originally http://github.com/lstein/stable-diffusion)Sub-quadratic Cross Attention layer optimization - Alex Birch (Birch-san/diffusers#1), Amin Rezaei (https://github.com/AminRezaei0x443/memory-efficient-attention)Textual Inversion - Rinon Gal - https://github.com/rinongal/textual_inversion (we're not using his code, but we are using his ideas).Idea for SD upscale - https://github.com/jquesnelle/txt2imghdNoise generation for outpainting mk2 - https://github.com/parlance-zz/g-diffuser-botCLIP interrogator idea and borrowing some code - https://github.com/pharmapsychotic/clip-interrogatorIdea for Composable Diffusion - https://github.com/energy-based-model/Compositional-Visual-Generation-with-Composable-Diffusion-Models-PyTorchxformers - https://github.com/facebookresearch/xformersDeepDanbooru - interrogator for anime diffusers https://github.com/KichangKim/DeepDanbooruSampling in float32 precision from a float16 UNet - marunine for the idea, Birch-san for the example Diffusers implementation (https://github.com/Birch-san/diffusers-play/tree/92feee6)Instruct pix2pix - Tim Brooks (star), Aleksander Holynski (star), Alexei A. Efros (no star) - https://github.com/timothybrooks/instruct-pix2pixSecurity advice - RyotaKUniPC sampler - Wenliang Zhao - https://github.com/wl-zhao/UniPCTAESD - Ollin Boer Bohan - https://github.com/madebyollin/taesdLyCORIS - KohakuBlueleafInitial Gradio script - posted on 4chan by an Anonymous user. Thank you Anonymous user.(You)"
22,22,shadowsocks/shadowsocks,https://github.com/shadowsocks/shadowsocks/blob/rm/README.md,Python,Removed according to regulations.
23,23,yandex-praktikum/backend_test_homework,https://github.com/yandex-praktikum/backend_test_homework/blob/master/README.md,Python,backend_test_homework
24,24,geekcomputers/Python,https://github.com/geekcomputers/Python/blob/master/README.md,Python,"My Python Eggs 🐍 😄I do not consider myself as a programmer. I create these little programs as experiments to play with Python, or to solve problems for myself. I would gladly accept pointers from others to improve, simplify, or make the code more efficient. If you would like to make any comments then please feel free to email me: craig@geekcomputers.co.uk.This repository contains a collection of Python scripts that are designed to reduce human workload and serve as educational examples for beginners to get started with Python. The code documentation is aligned correctly for viewing in Notepad++ 🗒️Feel free to explore the scripts and use them for your learning and automation needs!List of Scripts:batch_file_rename.py - Batch rename a group of files in a specified directory, changing their extensions.create_dir_if_not_there.py - Check if a directory exists in the user's home directory. Create it if it doesn't exist.Fast Youtube Downloader - Download YouTube videos quickly with parallel threads using aria2c.Google Image Downloader - Query a given term and retrieve images from the Google Image database.dir_test.py - Test if the directory testdir exists. If not, create it.env_check.py - Check if all the required environment variables are set.blackjack.py - Casino Blackjack-21 game in Python.fileinfo.py - Show file information for a given file.folder_size.py - Scan the current directory and all subdirectories and display their sizes.logs.py - Search for all *.log files in a directory, zip them using the specified program, and date stamp them.move_files_over_x_days.py - Move all files over a specified age (in days) from the source directory to the destination directory.nslookup_check.py - Open the file server_list.txt and perform nslookup for each server to check the DNS entry.osinfo.py - Display information about the operating system on which the script is running.ping_servers.py - Ping the servers associated with the specified application group.ping_subnet.py - Scan the final range of a given IP subnet for available addresses.powerdown_startup.py - Ping machines in the server list. Load the putty session if the machine is up, or notify if it is not.puttylogs.py - Zip all the logs in the given directory.script_count.py - Scan the scripts directory and count the different types of scripts.get_youtube_view.py - Get more views for YouTube videos and repeat songs on YouTube.script_listing.py - List all files in a given directory and its subdirectories.testlines.py - Open a file and print out 100 lines of the set line variable.tweeter.py - Tweet text or a picture from the terminal.serial_scanner.py - List available serial ports in use on Linux and Windows systems.get_youtube_view.py - Get more views for YouTube videos and repeat songs on YouTube.CountMillionCharacter.py and CountMillionCharacter2.0 - Get character count of a text file.xkcd_downloader.py - Download the latest XKCD comic and place them in a new folder called \""comics\"".timymodule.py - An alternative to Python's 'timeit' module and easier to use.calculator.py - Implement a calculator using Python's eval() function.Google_News.py - Use BeautifulSoup to provide latest news headlines along with news links.cricket_live_score - Use BeautifulSoup to provide live cricket scores.youtube.py - Take a song name as input and fetch the YouTube URL of the best matching song and play it.site_health.py - Check the health of a remote server.SimpleStopWatch.py - Simple stop watch implementation using Python's time module.Changemac.py - Change your MAC address, generate a random MAC address, or enter input as a new MAC address on Linux (Successfully Tested in Ubuntu 18.04).whatsapp-monitor.py - Use Selenium to give online status updates about your contacts in WhatsApp on the terminal.whatsapp-chat-analyzer.py - WhatsApp group/individual chat analyzer that visualizes chat activity using matplotlib.JARVIS.py - Control Windows programs with your voice.Images Downloader - Download images from webpages on Unix-based systems.space_invader.py.py - Classical 2D space invader game to recall your childhood memories.Test Case Generator - Generate different types of test cases with a clean and friendly UI, used in competitive programming and software testing.Note: The content in this repository belongs to the respective authors and creators. I'm just providing a formatted README.md for better presentation."
25,25,udacity/fullstack-nanodegree-vm,https://github.com/udacity/fullstack-nanodegree-vm/blob/master/README.md,Python,"Full Stack Web Developer Nanodegree program virtual machine  Virtual machine for the Relational Databases and Full Stack Foundations courses in the Full Stack Web Developer Nanodegree programTable of ContentsTable of ContentsIntroInstallationInstructionsTroubleshootingSupporting MaterialsIntroIn the next part of this course, you'll use a virtual machine (VM) to run an SQL database server and a web app that uses it. The VM is a Linux server system that runs on top of your own computer. You can share files easily between your computer and the VM; and you'll be running a web service inside the VM which you'll be able to access from your regular browser.We're using tools called Vagrant and VirtualBox to install and manage the VM. You'll need to install these to do some of the exercises. The instructions on this page will help you do this.Conceptual overviewThis video offers a conceptual overview of virtual machines and Vagrant. You don't need to watch it to proceed, but you may find it informative.Use a terminalYou'll be doing these exercises using a Unix-style terminal on your computer. If you are using a Mac or Linux system, your regular terminal program will do just fine. On Windows, we recommend using the Git Bash terminal that comes with the Git software. If you don't already have Git installed, download Git from git-scm.com.For a refresher on using the Unix shell, look back at our Shell Workshop.If you'd like to learn more about Git, take a look at our course about Git.InstallationInstall VirtualBoxVirtualBox is the software that actually runs the virtual machine. You can download it from virtualbox.org, here. Install the platform package for your operating system. You do not need the extension pack or the SDK. You do not need to launch VirtualBox after installing it; Vagrant will do that.Currently (October 2017), the supported version of VirtualBox to install is version 5.1. Newer versions do not work with the current release of Vagrant.Ubuntu users: If you are running Ubuntu 14.04, install VirtualBox using the Ubuntu Software Center instead. Due to a reported bug, installing VirtualBox from the site may uninstall other software you need.Install VagrantVagrant is the software that configures the VM and lets you share files between your host computer and the VM's filesystem. Download it from vagrantup.com. Install the version for your operating system.Windows users: The Installer may ask you to grant network permissions to Vagrant or make a firewall exception. Be sure to allow this.If Vagrant is successfully installed, you will be able to run vagrant --versionin your terminal to see the version number.The shell prompt in your terminal may differ. Here, the $ sign is the shell prompt.Download the VM configurationUse Github to fork and clone, or download, the repository https://github.com/udacity/fullstack-nanodegree-vm.You will end up with a new directory containing the VM files. Change to this directory in your terminal with cd. Inside, you will find another directory called vagrant. Change directory to the vagrant directory:Navigating to the FSND-Virtual-Machine directory and listing the files in it.This picture was taken on a Mac, but the commands will look the same on Git Bash on Windows.InstructionsStart the virtual machineFrom your terminal, inside the vagrant subdirectory, run the command vagrant up. This will cause Vagrant to download the Linux operating system and install it. This may take quite a while (many minutes) depending on how fast your Internet connection is.Starting the Ubuntu Linux installation with vagrant up.This screenshot shows just the beginning of many, many pages of output in a lot of colors.When vagrant up is finished running, you will get your shell prompt back. At this point, you can run vagrant ssh to log in to your newly installed Linux VM!Logging into the Linux VM with vagrant ssh.Logged inIf you are now looking at a shell prompt that starts with the word vagrant (as in the above screenshot), congratulations — you've gotten logged into your Linux VM.If not, take a look at the Troubleshooting section below.The files for this courseInside the VM, change directory to /vagrant and look around with ls.The files you see here are the same as the ones in the vagrant subdirectory on your computer (where you started Vagrant from). Any file you create in one will be automatically shared to the other. This means that you can edit code in your favorite text editor, and run it inside the VM.Files in the VM's /vagrant directory are shared with the vagrant folder on your computer. But other data inside the VM is not. For instance, the PostgreSQL database itself lives only inside the VM.Running the databaseThe PostgreSQL database server will automatically be started inside the VM. You can use the psql command-line tool to access it and run SQL statements:Running psql, the PostgreSQL command interface, inside the VM.Logging out and inIf you type exit (or Ctrl-D) at the shell prompt inside the VM, you will be logged out, and put back into your host computer's shell. To log back in, make sure you're in the same directory and type vagrant ssh again.If you reboot your computer, you will need to run vagrant up to restart the VM.TroubleshootingI'm not sure if it workedIf you can type vagrant ssh and log into your VM, then it worked! It's normal for the vagrant up process to display a lot of text in many colors, including sometimes scary-looking messages in red, green, and purple. If you get your shell prompt back at the end, and you can log in, it should be OK.vagrant up is taking a long timeBecause it's downloading a whole Linux operating system from the Internet.I'm on Windows, and when I run vagrant ssh, I don't get a shell promptSome versions of Windows and Vagrant have a problem communicating the right settings for the terminal. There is a workaround: Instead of vagrant ssh, run the command winpty vagrant ssh instead.I'm on Windows and getting an error about virtualizationSometimes other virtualization programs such as Docker or Hyper-V can interfere with VirtualBox. Try shutting these other programs down first.In addition, some Windows PCs have settings in the BIOS or UEFI (firmware) or in the operating system that disable the use of virtualization. To change this, you may need to reboot your computer and access the firmware settings. A web search can help you find the settings for your computer and operating system. Unfortunately there are so many different versions of Windows and PCs that we can't offer a simple guide to doing this.Why are we using a VM, it seems complicatedIt is complicated. In this case, the point of it is to be able to offer the same software (Linux and PostgreSQL) regardless of what kind of computer you're running on.I got some other error messageIf you're getting a specific textual error message, try looking it up on your favorite search engine. If that doesn't help, take a screenshot and post it to the discussion forums, along with as much detail as you can provide about the process you went through to get there.If all else fails, try an older versionUdacity mentors have noticed that some newer versions of Vagrant don't work on all operating systems. Version 1.9.2 is reported to be stabler on some systems, and version 1.9.1 is the supported version on Ubuntu 17.04. You can download older versions of Vagrant from the Vagrant releases index.Supporting MaterialsVirtual machine repository on GitHub(Back to TOC)"
26,26,AntonOsika/gpt-engineer,https://github.com/AntonOsika/gpt-engineer/blob/main/README.md,Python,"GPT EngineerSpecify what you want it to build, the AI asks for clarification, and then builds it.GPT Engineer is made to be easy to adapt, extend, and make your agent learn how you want your code to look. It generates an entire codebase based on a prompt.DemoProject philosophySimple to get valueFlexible and easy to add new own \""AI steps\"". See steps.py.Incrementally build towards a user experience of:high level promptinggiving feedback to the AI that it will remember over timeFast handovers back and forth between AI and humanSimplicity, all computation is \""resumable\"" and persisted to the filesystemUsageChoose either stable or development.For stable release:python -m pip install gpt-engineerFor development:git clone https://github.com/AntonOsika/gpt-engineer.gitcd gpt-engineerpython -m pip install -e .(or: make install && source venv/bin/activate for a venv)API KeyEither just:export OPENAI_API_KEY=[your api key]Or:Create a copy of .env.template named .envAdd your OPENAI_API_KEY in .envCheck the Windows README for windows usage.RunningCreate an empty folder. If inside the repo, you can run:cp -r projects/example/ projects/my-new-projectFill in the prompt file in your new foldergpt-engineer projects/my-new-project(Note, gpt-engineer --help lets you see all available options. For example --steps use_feedback lets you improve/fix code in a project)By running gpt-engineer you agree to our terms.ResultsCheck the generated files in projects/my-new-project/workspaceAlternativesYou can check Docker instructions to use Docker, or simplydo everything in your browser:FeaturesYou can specify the \""identity\"" of the AI agent by editing the files in the preprompts folder.Editing the preprompts, and evolving how you write the project prompt, is how you make the agent remember things between projects.Each step in steps.py will have its communication history with GPT4 stored in the logs folder, and can be rerun with scripts/rerun_edited_message_logs.py.VisionThe gpt-engineer community is building the open platform for devs to tinker with and build their personal code-generation toolbox.If you are interested in contributing to this, we would be interested in having you.If you want to see our broader ambitions, check out the roadmap, and joindiscordto get input on how you can contribute to it.We are currently looking for more maintainers and community organizers. Email anton.osika@gmail.com if you are interested in an official role.Example              Demo.mov          "
27,27,lazyprogrammer/machine_learning_examples,https://github.com/lazyprogrammer/machine_learning_examples/blob/master/README.md,Python,"machine_learning_examplesA collection of machine learning examples and tutorials.Find associated tutorials at https://lazyprogrammer.meFind associated courses at https://deeplearningcourses.comPlease note that not all code from all courses will be found in this repository. Some newer code examples (e.g. most of Tensorflow 2.0) were done in Google Colab. Therefore, you should check the instructions given in the lectures for the course you are taking.How to I find the code for a particular course?The code for each course is separated by folder. You can determine which folder corresponds with which course by watching the \""Where to get the code\"" lecture inside the course (usually Lecture 2 or 3).Remember: one folder = one course.Why you should not fork this repoI've noticed that many people have out-of-date forks. Thus, I recommend not forking this repository if you take one of my courses. I am constantly updating my courses, and your fork will soon become out-of-date. You should clone the repository instead to make it easy to get updates (i.e. just \""git pull\"" randomly and frequently).Where is the code for your latest courses?Beginning with Tensorflow 2, I started to use Google Colab. For those courses, unless otherwise noted, the code will be on Google Colab. Links to the notebooks are provided in the course. See the lecture \""Where to get the code\"" for further details.VIP Course LinksData Science: Transformers for Natural Language Processinghttps://deeplearningcourses.com/c/data-science-transformers-nlpMachine Learning: Natural Language Processing in Python (V2)https://deeplearningcourses.com/c/natural-language-processing-in-pythonTime Series Analysis, Forecasting, and Machine Learninghttps://deeplearningcourses.com/c/time-series-analysisFinancial Engineering and Artificial Intelligence in Pythonhttps://deeplearningcourses.com/c/ai-financePyTorch: Deep Learning and Artificial Intelligencehttps://deeplearningcourses.com/c/pytorch-deep-learningTensorflow 2.0: Deep Learning and Artificial Intelligence (VIP Version)https://deeplearningcourses.com/c/deep-learning-tensorflow-2Deep Learning Courses ExclusivesData Science: Bayesian Linear Regression in Pythonhttps://deeplearningcourses.com/c/bayesian-linear-regression-in-pythonData Science: Bayesian Classification in Pythonhttps://deeplearningcourses.com/c/bayesian-classification-in-pythonClassical Statistical Inference and A/B Testing in Pythonhttps://deeplearningcourses.com/c/statistical-inference-in-pythonLinear Programming for Linear Regression in Pythonhttps://deeplearningcourses.com/c/linear-programming-pythonMATLAB for Students, Engineers, and Professionals in STEMhttps://deeplearningcourses.com/c/matlabOther Course LinksFinancial Analysis: Build a ChatGPT Pairs Trading Bothttps://deeplearningcourses.com/c/chatgpt-pairs-tradingMath 0-1: Calculus for Data Science & Machine Learninghttps://deeplearningcourses.com/c/calculus-data-scienceData Science & Machine Learning: Naive Bayes in Pythonhttps://deeplearningcourses.com/c/data-science-machine-learning-naive-bayes-in-pythonCutting-Edge AI: Deep Reinforcement Learning in Pythonhttps://deeplearningcourses.com/c/cutting-edge-artificial-intelligenceRecommender Systems and Deep Learning in Pythonhttps://deeplearningcourses.com/c/recommender-systemsMachine Learning and AI: Support Vector Machines in Pythonhttps://deeplearningcourses.com/c/support-vector-machines-in-pythonDeep Learning: Advanced Computer Visionhttps://deeplearningcourses.com/c/advanced-computer-visionDeep Learning: Advanced NLP and RNNshttps://deeplearningcourses.com/c/deep-learning-advanced-nlpDeep Learning: GANs and Variational Autoencodershttps://deeplearningcourses.com/c/deep-learning-gans-and-variational-autoencodersAdvanced AI: Deep Reinforcement Learning in Pythonhttps://deeplearningcourses.com/c/deep-reinforcement-learning-in-pythonArtificial Intelligence: Reinforcement Learning in Pythonhttps://deeplearningcourses.com/c/artificial-intelligence-reinforcement-learning-in-pythonNatural Language Processing with Deep Learning in Pythonhttps://deeplearningcourses.com/c/natural-language-processing-with-deep-learning-in-pythonDeep Learning: Recurrent Neural Networks in Pythonhttps://deeplearningcourses.com/c/deep-learning-recurrent-neural-networks-in-pythonUnsupervised Machine Learning: Hidden Markov Models in Pythonhttps://deeplearningcourses.com/c/unsupervised-machine-learning-hidden-markov-models-in-pythonDeep Learning Prerequisites: The Numpy Stack in Pythonhttps://deeplearningcourses.com/c/deep-learning-prerequisites-the-numpy-stack-in-pythonDeep Learning Prerequisites: Linear Regression in Pythonhttps://deeplearningcourses.com/c/data-science-linear-regression-in-pythonDeep Learning Prerequisites: Logistic Regression in Pythonhttps://deeplearningcourses.com/c/data-science-logistic-regression-in-pythonData Science: Deep Learning and Neural Networks in Pythonhttps://deeplearningcourses.com/c/data-science-deep-learning-in-pythonCluster Analysis and Unsupervised Machine Learning in Pythonhttps://deeplearningcourses.com/c/cluster-analysis-unsupervised-machine-learning-pythonData Science: Supervised Machine Learning in Pythonhttps://deeplearningcourses.com/c/data-science-supervised-machine-learning-in-pythonBayesian Machine Learning in Python: A/B Testinghttps://deeplearningcourses.com/c/bayesian-machine-learning-in-python-ab-testingData Science: Natural Language Processing in Pythonhttps://deeplearningcourses.com/c/data-science-natural-language-processing-in-pythonModern Deep Learning in Pythonhttps://deeplearningcourses.com/c/data-science-deep-learning-in-theano-tensorflowEnsemble Machine Learning in Python: Random Forest and AdaBoosthttps://deeplearningcourses.com/c/machine-learning-in-python-random-forest-adaboostDeep Learning: Convolutional Neural Networks in Pythonhttps://deeplearningcourses.com/c/deep-learning-convolutional-neural-networks-theano-tensorflowUnsupervised Deep Learning in Pythonhttps://deeplearningcourses.com/c/unsupervised-deep-learning-in-python"
28,28,facebookresearch/Detectron,https://github.com/facebookresearch/Detectron/blob/main/README.md,Python,"Detectron is deprecated. Please see detectron2, a ground-up rewrite of Detectron in PyTorch.DetectronDetectron is Facebook AI Research's software system that implements state-of-the-art object detection algorithms, including Mask R-CNN. It is written in Python and powered by the Caffe2 deep learning framework.At FAIR, Detectron has enabled numerous research projects, including: Feature Pyramid Networks for Object Detection, Mask R-CNN, Detecting and Recognizing Human-Object Interactions, Focal Loss for Dense Object Detection, Non-local Neural Networks, Learning to Segment Every Thing, Data Distillation: Towards Omni-Supervised Learning, DensePose: Dense Human Pose Estimation In The Wild, and Group Normalization.    Example Mask R-CNN output.IntroductionThe goal of Detectron is to provide a high-quality, high-performancecodebase for object detection research. It is designed to be flexible in orderto support rapid implementation and evaluation of novel research. Detectronincludes implementations of the following object detection algorithms:Mask R-CNN -- Marr Prize at ICCV 2017RetinaNet -- Best Student Paper Award at ICCV 2017Faster R-CNNRPNFast R-CNNR-FCNusing the following backbone network architectures:ResNeXt{50,101,152}ResNet{50,101,152}Feature Pyramid Networks (with ResNet/ResNeXt)VGG16Additional backbone architectures may be easily implemented. For more details about these models, please see References below.Update4/2018: Support Group Normalization - see GN/README.mdLicenseDetectron is released under the Apache 2.0 license. See the NOTICE file for additional details.Citing DetectronIf you use Detectron in your research or wish to refer to the baseline results published in the Model Zoo, please use the following BibTeX entry.@misc{Detectron2018,  author =       {Ross Girshick and Ilija Radosavovic and Georgia Gkioxari and                  Piotr Doll\\'{a}r and Kaiming He},  title =        {Detectron},  howpublished = {\\url{https://github.com/facebookresearch/detectron}},  year =         {2018}}Model Zoo and BaselinesWe provide a large set of baseline results and trained models available for download in the Detectron Model Zoo.InstallationPlease find installation instructions for Caffe2 and Detectron in INSTALL.md.Quick Start: Using DetectronAfter installation, please see GETTING_STARTED.md for brief tutorials covering inference and training with Detectron.Getting HelpTo start, please check the troubleshooting section of our installation instructions as well as our FAQ. If you couldn't find help there, try searching our GitHub issues. We intend the issues page to be a forum in which the community collectively troubleshoots problems.If bugs are found, we appreciate pull requests (including adding Q&A's to FAQ.md and improving our installation instructions and troubleshooting documents). Please see CONTRIBUTING.md for more information about contributing to Detectron.ReferencesData Distillation: Towards Omni-Supervised Learning.Ilija Radosavovic, Piotr Dollár, Ross Girshick, Georgia Gkioxari, and Kaiming He.Tech report, arXiv, Dec. 2017.Learning to Segment Every Thing.Ronghang Hu, Piotr Dollár, Kaiming He, Trevor Darrell, and Ross Girshick.Tech report, arXiv, Nov. 2017.Non-Local Neural Networks.Xiaolong Wang, Ross Girshick, Abhinav Gupta, and Kaiming He.Tech report, arXiv, Nov. 2017.Mask R-CNN.Kaiming He, Georgia Gkioxari, Piotr Dollár, and Ross Girshick.IEEE International Conference on Computer Vision (ICCV), 2017.Focal Loss for Dense Object Detection.Tsung-Yi Lin, Priya Goyal, Ross Girshick, Kaiming He, and Piotr Dollár.IEEE International Conference on Computer Vision (ICCV), 2017.Accurate, Large Minibatch SGD: Training ImageNet in 1 Hour.Priya Goyal, Piotr Dollár, Ross Girshick, Pieter Noordhuis, Lukasz Wesolowski, Aapo Kyrola, Andrew Tulloch, Yangqing Jia, and Kaiming He.Tech report, arXiv, June 2017.Detecting and Recognizing Human-Object Interactions.Georgia Gkioxari, Ross Girshick, Piotr Dollár, and Kaiming He.Tech report, arXiv, Apr. 2017.Feature Pyramid Networks for Object Detection.Tsung-Yi Lin, Piotr Dollár, Ross Girshick, Kaiming He, Bharath Hariharan, and Serge Belongie.IEEE Conference on Computer Vision and Pattern Recognition (CVPR), 2017.Aggregated Residual Transformations for Deep Neural Networks.Saining Xie, Ross Girshick, Piotr Dollár, Zhuowen Tu, and Kaiming He.IEEE Conference on Computer Vision and Pattern Recognition (CVPR), 2017.R-FCN: Object Detection via Region-based Fully Convolutional Networks.Jifeng Dai, Yi Li, Kaiming He, and Jian Sun.Conference on Neural Information Processing Systems (NIPS), 2016.Deep Residual Learning for Image Recognition.Kaiming He, Xiangyu Zhang, Shaoqing Ren, and Jian Sun.IEEE Conference on Computer Vision and Pattern Recognition (CVPR), 2016.Faster R-CNN: Towards Real-Time Object Detection with Region Proposal NetworksShaoqing Ren, Kaiming He, Ross Girshick, and Jian Sun.Conference on Neural Information Processing Systems (NIPS), 2015.Fast R-CNN.Ross Girshick.IEEE International Conference on Computer Vision (ICCV), 2015."
29,29,Jack-Cherish/Machine-Learning,https://github.com/Jack-Cherish/Machine-Learning/blob/master/README-eng.md,Python,"Machine-Learning中文（简体）Rome was not built in a dayBlogMachine-Learning in Practice (Detailed Comments + Training Datasets), Keep updating!Welcome to my[CSDN Column]Follow me on[Zhihu Column]QQ Group for Communication[328127489]My Website: http://cuijiahua.com/Article DebutDebut articles on my website and forward on orther platforms, click here to get the latest development: http://cuijiahua.com/Chapt. 2: K-Nearest Neighbors AlgorithmArticlePersonal WebsiteCSDNZhihuPython3  study notes (I): K-Nearest Neighbors Algorithm (Gorgeous and Splendid Tutorial)Personal WebsiteCSDNZhihuCode1. Entry Level k-NN2. Miss Helen Dating History3. Digits RecognitionChapt. 3: Decision TreeArticlePersonal WebsiteCSDNZhihuPython3  study notes (II): Decision Tree (Basic Concepts): Let's Start from DatingPersonal WebsiteCSDNZhihuPython3  study notes (III): Decision Tree (In Practice): I'm Looking for a Pair of Contact LensesPersonal WebsiteCSDNZhihuCode1. Loan Prediction2. Contact LensesChapt. 4: Navie BayesArticlePersonal WebsiteCSDNZhihuPython3 Python3  study notes (IV): Navie Bayes (Basic Concepts): Comment FilterPersonal WebsiteCSDNZhihuPython3 Python3  study notes (V): Navie Bayes (In Practice): Catalogues of Sina NewsPersonal WebsiteCSDNZhihuCode1. Comment Filter2. Spam Filter3. News CataloguesChapt. 5: Logistic RegressionArticlePersonal WebsiteCSDNZhihuPython3  study notes (VI): Logistic Regression (Basic Concepts): Gradient Ascent AlgorithmPersonal WebsiteCSDNZhihuPython3  study notes (VII): Logistic Regression (In Practice): Prediction of Horse MortalityPersonal WebsiteCSDNZhihuCode1. Entry Level Exercise for Logistic Regression2. Improved Random Gradient Ascent Algorithm3. Prediction of Horse MortalityChapt. 6: SVM (Support Vector Machine)ArticlePersonal WebsiteCSDNZhihuPython3  study notes (VIII): SVM (Basic Concepts): a Handcraft on Linear SVMPersonal WebsiteCSDNZhihuPython3  study notes (IX): SVM (In Practice): Another Handcraft on Nonlinear SVMPersonal WebsiteCSDNZhihuCode1. Simplified SMO Alogrithm2. Complete SMO Alogrithm3. Nonlinear SVM Alogrithm4. Sklearn SVCChapt. 7: AdaBoostArticlePersonal WebsiteCSDNZhihuPython3  study notes (X): Classifier Sharpener -- AdaBoostPersonal WebsiteCSDNZhihuCode1. Training Process of AdaBoost Based On Decision Stump2. AdaBoost on Hard Datasets3. Implement AdaBoost by sklearn4. ROC Curve PlotChapt. 8: Linear RegressionArticlePersonal WebsiteCSDNZhihuPython3  study notes (XI):Personal WebsiteCSDNZhihuPython3  study notes (XII):Personal WebsitenonoCode1. Linear Regression(Ordinary LR + Locally Weighted LR)2. Predicting the Age of Abalones(Ormers)3. Stepwise Regression4. Predicting the Price of Second Hand LegoChapt. 9: Regression TreeArticlePersonal WebsiteCSDNZhihuPython3  study notes (XIII): Regression Tree (Basic Concepts): CART Alogrithm and PruningPersonal WebsitenonoCode1. Regression Tree"
30,30,donnemartin/system-design-primer,https://github.com/donnemartin/system-design-primer/blob/master/README-ja.md,Python,"English ∙ 日本語 ∙ 简体中文 ∙ 繁體中文 | العَرَبِيَّة‎ ∙ বাংলা ∙ Português do Brasil ∙ Deutsch ∙ ελληνικά ∙ עברית ∙ Italiano ∙ 한국어 ∙ فارسی ∙ Polski ∙ русский язык ∙ Español ∙ ภาษาไทย ∙ Türkçe ∙ tiếng Việt ∙ Français | Add Translationシステム設計入門    動機・目的大規模システムのシステム設計を学ぶシステム設計面接課題に備える大規模システムの設計を学ぶスケーラブルなシステムのシステム設計を学ぶことは、より良いエンジニアになることに資するでしょう。システム設計はとても広範なトピックを含みます。システム設計原理については インターネット上には膨大な量の文献が散らばっています。このリポジトリは大規模システム構築に必要な知識を学ぶことができる 文献リストを体系的にまとめたもの です。オープンソースコミュニティから学ぶこのプロジェクトは、これからもずっと更新されていくオープンソースプロジェクトの初期段階にすぎません。Contributions は大歓迎です！システム設計面接課題に備えるコード技術面接に加えて、システム設計に関する知識は、多くのテック企業における 技術採用面接プロセス で 必要不可欠な要素 です。システム設計面接での頻出質問に備え、自分の解答と模範解答:ディスカッション、コードそして図表などを比較して学びましょう。面接準備に役立つその他のトピック:学習指針システム設計面接課題にどのように準備するかシステム設計課題例 とその解答オブジェクト指向設計課題例、 とその解答その他のシステム設計面接課題例暗記カード    このAnki用フラッシュカードデッキ は、間隔反復を活用して、システム設計のキーコンセプトの学習を支援します。システム設計デッキシステム設計練習課題デッキオブジェクト指向練習課題デッキ外出先や移動中の勉強に役立つでしょう。コーディング技術課題用の問題: 練習用インタラクティブアプリケーションコード技術面接用の問題を探している場合はこちら    姉妹リポジトリの Interactive Coding Challengesも見てみてください。追加の暗記デッキカードも入っています。Coding deckコントリビュートコミュニティから学ぶプルリクエスト等の貢献は積極的にお願いします:エラー修正セクション内容改善新規セクション追加翻訳する現在、内容の改善が必要な作業中のコンテンツはこちらです。コントリビュートの前にContributing Guidelinesを読みましょう。システム設計目次賛否も含めた様々なシステム設計の各トピックの概要。 全てはトレードオフの関係にあります。それぞれのセクションはより学びを深めるような他の文献へのリンクが貼られています。    システム設計トピック: まずはここからStep 1: スケーラビリティに関する動画を見るStep 2: スケーラビリティに関する記事を読む次のステップパフォーマンス vs スケーラビリティレイテンシー vs スループット可用性 vs 一貫性CAP理論CP - 一貫性(consistency)と分割性(partition)耐性AP - 可用性(availability)と分割性(partition)耐性一貫性 パターン弱い一貫性結果整合性強い一貫性可用性 パターンフェイルオーバーレプリケーションドメインネームシステム(DNS)コンテンツデリバリーネットワーク(CDN)プッシュCDNプルCDNロードバランサーアクティブ/パッシブ構成アクティブ/アクティブ構成Layer 4 ロードバランシングLayer 7 ロードバランシング水平スケーリングリバースプロキシ (WEBサーバー)ロードバランサー vs リバースプロキシアプリケーションレイヤーマイクロサービスサービスディスカバリーデータベースリレーショナルデータベースマネジメントシステム (RDBMS)マスター/スレーブ レプリケーションマスター/マスター レプリケーションフェデレーションシャーディングデノーマライゼーションSQL チューニングNoSQLキー/バリューストアドキュメントストアワイドカラムストアグラフ データベースSQL or NoSQLキャッシュクライアントキャッシングCDNキャッシングWebサーバーキャッシングデータベースキャッシングアプリケーションキャッシングデータベースクエリレベルでキャッシングするオブジェクトレベルでキャッシングするいつキャッシュを更新するのかキャッシュアサイドライトスルーライトビハインド (ライトバック)リフレッシュアヘッド非同期処理メッセージキュータスクキューバックプレッシャー通信伝送制御プロトコル (TCP)ユーザデータグラムプロトコル (UDP)遠隔手続呼出 (RPC)Representational state transfer (REST)セキュリティ補遺2の乗数表全てのプログラマーが知るべきレイテンシー値他のシステム設計面接例題実世界でのアーキテクチャ各企業のアーキテクチャ企業のエンジニアブログ作業中クレジット連絡情報ライセンス学習指針学習スパンに応じてみるべきトピックス (short, medium, long)Q: 面接のためには、ここにあるものすべてをやらないといけないのでしょうか？A: いえ、ここにあるすべてをやる必要はありません。面接で何を聞かれるかは以下の条件によって変わってきます:どれだけの技術経験があるかあなたの技術背景が何であるかどのポジションのために面接を受けているかどの企業の面接を受けているか運より経験のある候補者は一般的にシステム設計についてより深い知識を有していることを要求されるでしょう。システムアーキテクトやチームリーダーは各メンバーの持つような知識よりは深い見識を持っているべきでしょう。一流テック企業では複数回の設計面接を課されることが多いです。まずは広く始めて、そこからいくつかの分野に絞って深めていくのがいいでしょう。様々なシステム設計のトピックについて少しずつ知っておくことはいいことです。以下の学習ガイドを自分の学習に当てられる時間、技術経験、どの職位、どの会社に応募しているかなどを加味して自分用に調整して使うといいでしょう。短期間 - 幅広く システム設計トピックを学ぶ。いくつかの 面接課題を解くことで対策する。中期間 - 幅広く そして それなりに深くシステム設計トピックを学ぶ。多くの 面接課題を解くことで対策する。長期間 - 幅広く そして もっと深くシステム設計トピックを学ぶ。ほぼ全ての 面接課題を解くことで対策する。短期間中期間長期間システム設計トピック を読み、システム動作機序について広く知る👍👍👍次のリンク先のいくつかのページを読んで 各企業のエンジニアリングブログ 応募する会社について知る👍👍👍次のリンク先のいくつかのページを読む 実世界でのアーキテクチャ👍👍👍復習する システム設計面接課題にどのように準備するか👍👍👍とりあえず一周する システム設計課題例SomeManyMostとりあえず一周する オブジェクト指向設計問題と解答SomeManyMost復習する その他システム設計面接での質問例SomeManyMostシステム設計面接にどのようにして臨めばいいかシステム設計面接試験問題にどのように取り組むかシステム設計面接は open-ended conversation(Yes/Noでは答えられない口頭質問)です。 自分で会話を組み立てることを求められます。以下のステップに従って議論を組み立てることができるでしょう。この過程を確かなものにするために、次のセクションシステム設計課題例とその解答 を以下の指針に従って読み込むといいでしょう。ステップ 1: そのシステム使用例の概要、制約、推計値等を聞き出し、まとめるシステム仕様の要求事項を聞き出し、問題箇所を特定しましょう。使用例と制約を明確にするための質問を投げかけましょう。要求する推計値についても議論しておきましょう。誰がそのサービスを使うのか？どのように使うのか？何人のユーザーがいるのか？システムはどのような機能を果たすのか？システムへの入力と出力は？どれだけの容量のデータを捌く必要があるのか？一秒間に何リクエストの送信が想定されるか？読み書き比率の推定値はいくら程度か？ステップ 2: より高レベルのシステム設計を組み立てる重要なコンポーネントを全て考慮した高レベルのシステム設計概要を組み立てる。主要なコンポーネントと接続をスケッチして書き出す考えの裏付けをするステップ 3: 核となるコンポーネントを設計するそれぞれの主要なコンポーネントについての詳細を学ぶ。例えば、url短縮サービスの設計を問われた際には次のようにするといいでしょう:元のURLのハッシュ化したものを作り、それを保存するMD5 と Base62ハッシュ衝突SQL もしくは NoSQLデータベーススキーマハッシュ化されたURLを元のURLに再翻訳するデータベース参照API & オブジェクト指向の設計ステップ 4: システム設計のスケール与えられた制約条件からボトルネックとなりそうなところを割り出し、明確化する。  例えば、スケーラビリティの問題解決のために以下の要素を考慮する必要があるだろうか？ロードバランサー水平スケーリングキャッシングデータベースシャーディング取りうる解決策とそのトレードオフについて議論をしよう。全てのことはトレードオフの関係にある。ボトルネックについてはスケーラブルなシステム設計の原理を読むといいでしょう。ちょっとした暗算問題ちょっとした推計値を手計算ですることを求められることもあるかもしれません。補遺の以下の項目が役に立つでしょう:チラ裏計算でシステム設計する2の乗数表全てのプログラマーが知っておくべきレイテンシの参考値文献とその他の参考資料以下のリンク先ページを見てどのような質問を投げかけられるか概要を頭に入れておきましょう:システム設計面接で成功するには？システム設計面接アーキテクチャ、システム設計面接への導入システム設計課題例とその解答頻出のシステム設計面接課題と参考解答、コード及びダイアグラム解答は solutions/ フォルダ以下にリンクが貼られている問題Pastebin.com (もしくは Bit.ly) を設計する解答Twitterタイムライン (もしくはFacebookフィード)を設計するTwitter検索(もしくはFacebook検索)機能を設計する解答ウェブクローラーを設計する解答Mint.comを設計する解答SNSサービスのデータ構造を設計する解答検索エンジンのキー/バリュー構造を設計する解答Amazonのカテゴリ毎の売り上げランキングを設計する解答AWS上で100万人規模のユーザーを捌くサービスを設計する解答システム設計問題を追加するContributePastebin.com (もしくは Bit.ly) を設計する問題と解答を見るTwitterタイムライン&検索 (もしくはFacebookフィード&検索)を設計する問題と解答を見るウェブクローラーの設計問題と解答を見るMint.comの設計問題と解答を見るSNSサービスのデータ構造を設計する問題と解答を見る検索エンジンのキー/バリュー構造を設計する問題と解答を見るAmazonのカテゴリ毎の売り上げランキングを設計する問題と解答を見るAWS上で100万人規模のユーザーを捌くサービスを設計する問題と解答を見るオブジェクト指向設計問題と解答頻出のオブジェクト指向システム設計面接課題と参考解答、コード及びダイアグラム解答は solutions/ フォルダ以下にリンクが貼られている備考: このセクションは作業中です問題ハッシュマップの設計解答LRUキャッシュの設計解答コールセンターの設計解答カードのデッキの設計解答駐車場の設計解答チャットサーバーの設計解答円形配列の設計Contributeオブジェクト指向システム設計問題を追加するContributeシステム設計トピックス: まずはここからシステム設計の勉強は初めて？まず初めに、よく使われる設計原理について、それらが何であるか、どのように用いられるか、長所短所について基本的な知識を得る必要がありますステップ 1: スケーラビリティに関する動画を観て復習するHarvardでのスケーラビリティの講義ここで触れられているトピックス:垂直スケーリング水平スケーリングキャッシングロードバランシングデータベースレプリケーションデータベースパーティションステップ 2: スケーラビリティに関する資料を読んで復習するスケーラビリティここで触れられているトピックス:クローンデータベースキャッシュ非同期次のステップ次に、ハイレベルでのトレードオフについてみていく:パフォーマンス vs スケーラビリティレイテンシ vs スループット可用性 vs 一貫性全てはトレードオフの関係にあるというのを肝に命じておきましょう。それから、より深い内容、DNSやCDNそしてロードバランサーなどについて学習を進めていきましょう。パフォーマンス vs スケーラビリティリソースが追加されるのにつれて パフォーマンス が向上する場合そのサービスは スケーラブル であると言えるでしょう。一般的に、パフォーマンスを向上させるというのはすなわち計算処理を増やすことを意味しますが、データセットが増えた時などより大きな処理を捌けるようになることでもあります。1パフォーマンスvsスケーラビリティをとらえる他の考え方:パフォーマンス での問題を抱えている時、あなたのシステムは一人のユーザーにとって遅いと言えるでしょう。スケーラビリティ での問題を抱えているとき、一人のユーザーにとっては速いですが、多くのリクエストがある時には遅くなってしまうでしょう。その他の参考資料、ページスケーラビリティについてスケーラビリティ、可用性、安定性、パターンレイテンシー vs スループットレイテンシー とはなにがしかの動作を行う、もしくは結果を算出するのに要する時間スループット とはそのような動作や結果算出が単位時間に行われる回数一般的に、 最大限のスループット を 許容範囲内のレイテンシー で実現することを目指すのが普通だ。その他の参考資料、ページレイテンシー vs スループットを理解する可用性 vs 一貫性CAP 理論      Source: CAP theorem revisited分散型コンピュータシステムにおいては下の三つのうち二つまでしか同時に保証することはできない。:一貫性 - 全ての読み込みは最新の書き込みもしくはエラーを受け取る可用性 - 受け取る情報が最新のものだという保証はないが、全てのリクエストはレスポンスを必ず受け取る分断耐性 - ネットワーク問題によって順不同の分断が起きてもシステムが動作を続けるネットワークは信頼できないので、分断耐性は必ず保証しなければなりません。つまりソフトウェアシステムとしてのトレードオフは、一貫性を取るか、可用性を取るかを考えなければなりません。CP - 一貫性と分断耐性(consistency and partition tolerance)分断されたノードからのレスポンスを待ち続けているとタイムアウトエラーに陥る可能性があります。CPはあなたのサービスがアトミックな読み書き（不可分操作）を必要とする際にはいい選択肢でしょう。AP - 可用性と分断耐性(availability and partition tolerance)レスポンスはノード上にあるデータで最新のものを返します。つまり、最新版のデータが返されるとは限りません。分断が解消された後も、書き込みが反映されるのには時間がかかります。結果整合性　を求めるサービスの際にはAPを採用するのがいいでしょう。もしくは、外部エラーに関わらずシステムが稼働する必要がある際にも同様です。その他の参考資料、ページCAP 理論を振り返る平易な英語でのCAP 理論のイントロCAP FAQ一貫性パターン同じデータの複製が複数ある状態では、クライアントが一貫したデータ表示を受け取るために、どのようにそれらを同期すればいいのかという課題があります。 CAP 理論 における一貫性の定義を思い出してみましょう。全ての読み取りは最新の書き込みデータもしくはエラーを受け取るはずです。弱い一貫性書き込み後の読み取りでは、その最新の書き込みを読めたり読めなかったりする。ベストエフォート型のアプローチに基づく。このアプローチはmemcachedなどのシステムに見られます。弱い一貫性はリアルタイム性が必要なユースケース、例えばVoIP、ビデオチャット、リアルタイムマルチプレイヤーゲームなどと相性がいいでしょう。例えば、電話に出ているときに数秒間音声が受け取れなくなったとしたら、その後に接続が回復してもその接続が切断されていた間に話されていたことは聞き取れないというような感じです。結果整合性書き込みの後、読み取りは最終的にはその結果を読み取ることができる(ミリ秒ほど遅れてというのが一般的です)。データは非同期的に複製されます。このアプローチはDNSやメールシステムなどに採用されています。結果整合性は多くのリクエストを捌くサービスと相性がいいでしょう。強い一貫性書き込みの後、読み取りはそれを必ず読むことができます。データは同期的に複製されます。このアプローチはファイルシステムやRDBMSなどで採用されています。トランザクションを扱うサービスでは強い一貫性が必要でしょう。その他の参考資料、ページデータセンター間でのトランザクション可用性パターン高い可用性を担保するには主に次の二つのパターンがあります: フェイルオーバー と レプリケーション です。フェイルオーバーアクティブ・パッシブアクティブ・パッシブフェイルオーバーにおいては、周期信号はアクティブもしくはスタンバイ中のパッシブなサーバーに送られます。周期信号が中断された時には、パッシブだったサーバーがアクティブサーバーのIPアドレスを引き継いでサービスを再開します。起動までのダウンタイムはパッシブサーバーが「ホット」なスタンバイ状態にあるか、「コールド」なスタンバイ状態にあるかで変わります。アクティブなサーバーのみがトラフィックを捌きます。アクティブ・パッシブフェイルオーバーはマスター・スレーブフェイルオーバーと呼ばれることもあります。アクティブ・アクティブアクティブアクティブ構成では両方のサーバーがトラフィックを捌くことで負荷を分散します。これらのサーバーがパブリックなものの場合、DNSは両方のサーバーのパブリックIPを知っている必要があります。もし、プライベートなものな場合、アプリケーションロジックが両方のサーバーの情報について知っている必要があります。アクティブ・アクティブなフェイルオーバーはマスター・マスターフェイルオーバーと呼ばれることもあります。短所: フェイルオーバーフェイルオーバーではより多くのハードウェアを要し、複雑さが増します。最新の書き込みがパッシブサーバーに複製される前にアクティブが落ちると、データ欠損が起きる潜在可能性があります。レプリケーションマスター・スレーブ　と　マスター・マスターこのトピックは データベース セクションにおいてより詳細に解説されています:マスター・スレーブ レプリケーションマスター・マスター レプリケーションドメインネームシステム      Source: DNS security presentationドメインネームシステム (DNS) は www.example.com などのドメインネームをIPアドレスへと翻訳します。DNSは少数のオーソライズされたサーバーが上位に位置する階層的構造です。あなたのルーターもしくはISPは検索をする際にどのDNSサーバーに接続するかという情報を提供します。低い階層のDNSサーバーはその経路マップをキャッシュします。ただ、この情報は伝搬遅延によって陳腐化する可能性があります。DNSの結果はあなたのブラウザもしくはOSに一定期間（time to live (TTL)に設定された期間）キャッシュされます。NS record (name server) - あなたのドメイン・サブドメインでのDNSサーバーを特定します。MX record (mail exchange) - メッセージを受け取るメールサーバーを特定します。A record (address) - IPアドレスに名前をつけます。CNAME (canonical) - 他の名前もしくは　CNAME (example.com を www.example.com) もしくは A recordへと名前を指し示す。CloudFlare や Route 53 などのサービスはマネージドDNSサービスを提供しています。いくつかのDNSサービスでは様々な手法を使ってトラフィックを捌くことができます:加重ラウンドロビントラフィックがメンテナンス中のサーバーに行くのを防ぎます様々なクラスターサイズに応じて調整しますA/B テストレイテンシーベース地理ベース欠点: DNS上記で示されているようなキャッシングによって緩和されているとはいえ、DNSサーバーへの接続には少し遅延が生じる。DNSサーバーは、政府、ISP企業,そして大企業に管理されているが、それらの管理は複雑である。DNSサービスはDDoS attackの例で、IPアドレスなしにユーザーがTwitterなどにアクセスできなくなったように、攻撃を受ける可能性がある。その他の参考資料、ページDNS アーキテクチャWikipediaDNS 記事コンテンツデリバリーネットワーク(Content delivery network)      Source: Why use a CDNコンテンツデリバリーネットワーク(CDN)は世界中に配置されたプロキシサーバーのネットワークがユーザーに一番地理的に近いサーバーからコンテンツを配信するシステムのことです。AmazonのCloudFrontなどは例外的にダイナミックなコンテンツも配信しますが、一般的に、HTML/CSS/JS、写真、そして動画などの静的ファイルがCDNを通じて配信されます。そのサイトのDNSがクライアントにどのサーバーと交信するかという情報を伝えます。CDNを用いてコンテンツを配信することで以下の二つの理由でパフォーマンスが劇的に向上します:ユーザーは近くにあるデータセンターから受信できるバックエンドサーバーはCDNが処理してくれるリクエストに関しては処理する必要がなくなりますプッシュCDNプッシュCDNではサーバーデータに更新があった時には必ず、新しいコンテンツを受け取る方式です。コンテンツを用意し、CDNに直接アップロードし、URLをCDNを指すように指定するところまで、全て自分で責任を負う形です。コンテンツがいつ期限切れになるのか更新されるのかを設定することができます。コンテンツは新規作成時、更新時のみアップロードされることでトラフィックは最小化される一方、ストレージは最大限消費されてしまいます。トラフィックの少ない、もしくは頻繁にはコンテンツが更新されないサイトの場合にはプッシュCDNと相性がいいでしょう。コンテンツは定期的に再びプルされるのではなく、CDNに一度のみ配置されます。プルCDNプルCDNでは一人目のユーザーがリクエストした時に、新しいコンテンツをサービスのサーバーから取得します。コンテンツは自分のサーバーに保存して、CDNを指すURLを書き換えます。結果として、CDNにコンテンツがキャッシュされるまではリクエスト処理が遅くなります。time-to-live (TTL) はコンテンツがどれだけの期間キャッシュされるかを規定します。プルCDNはCDN 上でのストレージスペースを最小化しますが、有効期限が切れたファイルが更新前にプルされてしまうことで冗長なトラフィックに繋がってしまう可能性があります。大規模なトラフィックのあるサイトではプルCDNが相性がいいでしょう。というのも、トラフィックの大部分は最近リクエストされ、CDNに残っているコンテンツにアクセスするものであることが多いからです。欠点: CDNCDNのコストはトラフィック量によって変わります。もちろん、CDNを使わない場合のコストと比較するべきでしょう。TTLが切れる前にコンテンツが更新されると陳腐化する恐れがあります。CDNでは静的コンテンツがCDNを指すようにURLを更新する必要があります。その他の参考資料、ページグローバルに分散されたコンテンツデリバリーネットワークプッシュCDNとプルCDNの違いWikipediaロードバランサー      Source: Scalable system design patternsロードバランサーは入力されるクライアントのリクエストをアプリケーションサーバーやデータベースへと分散させる。どのケースでもロードバランサーはサーバー等計算リソースからのレスポンスを適切なクライアントに返す。ロードバランサーは以下のことに効果的です:リクエストが状態の良くないサーバーに行くのを防ぐリクエストを過剰に送るのを防ぐ特定箇所の欠陥でサービスが落ちることを防ぐロードバランサーは (費用の高い) ハードウェアもしくはHAProxyなどのソフトウェアで実現できる。他の利点としては:SSL termination - 入力されるリクエストを解読する、また、サーバーレスポンスを暗号化することでバックエンドのサーバーがこのコストが高くつきがちな処理を請け負わなくていいように肩代わりします。X.509 certificates をそれぞれのサーバーにインストールする必要をなくしますセッション管理 - クッキーを取り扱うウェブアプリがセッション情報を保持していない時などに、特定のクライアントのリクエストを同じインスタンスへと流します。障害に対応するために、アクティブ・パッシブ もしくは アクティブ・アクティブ モードのどちらにおいても、複数のロードバランサーを配置するのが一般的です。ロードバランサーは以下のような種々のメトリックを用いてトラフィックルーティングを行うことができます:ランダムLeast loadedセッション/クッキーラウンドロビンもしくは加重ラウンドロビンLayer 4Layer 7Layer 4 ロードバランシングLayer 4 ロードバランサーは トランスポートレイヤー を参照してどのようにリクエストを配分するか判断します。一般的に、トランスポートレイヤーとしては、ソース、送信先IPアドレス、ヘッダーに記述されたポート番号が含まれますが、パケットの中身のコンテンツは含みません。 Layer 4 ロードバランサーはネットワークパケットを上流サーバーへ届け、上流サーバーから配信することでネットワークアドレス変換 Network Address Translation (NAT) を実現します。Layer 7 ロードバランシングLayer 7 ロードバランサーは アプリケーションレイヤー を参照してどのようにリクエストを配分するか判断します。ヘッダー、メッセージ、クッキーなどのコンテンツのことです。Layer 7 ロードバランサーはネットワークトラフィックの終端を受け持ち メッセージを読み込み、ロードバランシングの判断をし、選択したサーバーとの接続を繋ぎます。例えば layer 7 ロードバランサーは動画のトラフィックを直接、そのデータをホストしているサーバーにつなぐと同時に、決済処理などのより繊細なトラフィックをセキュリティ強化されたサーバーに流すということもできる。柔軟性とのトレードオフになりますが、 layer 4 ロードバランサーではLayer 7ロードバランサーよりも所要時間、計算リソースを少なく済ませることができます。ただし、昨今の汎用ハードウェアではパフォーマンスは最小限のみしか発揮できないでしょう。水平スケーリングロードバランサーでは水平スケーリングによってパフォーマンスと可用性を向上させることができます。手頃な汎用マシンを追加することによってスケールアウトさせる方が、一つのサーバーをより高価なマシンにスケールアップする（垂直スケーリング）より費用対効果も高くなり、結果的に可用性も高くなります。また、汎用ハードウェアを扱える人材を雇う方が、特化型の商用ハードウェアを扱える人材を雇うよりも簡単でしょう。欠点: 水平スケーリング水平的にスケーリングしていくと、複雑さが増す上に、サーバーのクローニングが必要になる。サーバーはステートレスである必要がある: ユーザーに関連するセッションや、プロフィール写真などのデータを持ってはいけないセッションは一元的なデータベース (SQL、 NoSQL)などのデータストアにストアされるか キャッシュ (Redis、 Memcached)に残す必要があります。キャッシュやデータベースなどの下流サーバーは上流サーバーがスケールアウトするにつれてより多くの同時接続を保たなければなりません。欠点: ロードバランサーロードバランサーはリソースが不足していたり、設定が適切でない場合、システム全体のボトルネックになる可能性があります。単一障害点を除こうとしてロードバランサーを導入した結果、複雑さが増してしまうことになります。ロードバランサーが一つだけだとそこが単一障害点になってしまいます。一方で、ロードバランサーを複数にすると、さらに複雑さが増してしまいます。その他の参考資料、ページNGINX アーキテクチャHAProxy アーキテクチャガイドスケーラビリティWikipediaLayer 4 ロードバランシングLayer 7 ロードバランシングELB listener configリバースプロキシ(webサーバー)      Source: Wikipedia  リバースプロキシサーバーは内部サービスをまとめて外部に統一されたインターフェースを提供するウェブサーバーです。クライアントからのリクエストはそれに対応するサーバーに送られて、その後レスポンスをリバースプロキシがクライアントに返します。他には以下のような利点があります:より堅牢なセキュリティ - バックエンドサーバーの情報を隠したり、IPアドレスをブラックリスト化したり、クライアントごとの接続数を制限したりできます。スケーラビリティや柔軟性が増します - クライアントはリバースプロキシのIPしか見ないので、裏でサーバーをスケールしたり、設定を変えやすくなります。SSL termination - 入力されるリクエストを解読し、サーバーのレスポンスを暗号化することでサーバーがこのコストのかかりうる処理をしなくて済むようになります。X.509 証明書 を各サーバーにインストールする必要がなくなります。圧縮 - サーバーレスポンスを圧縮できますキャッシング - キャッシュされたリクエストに対して、レスポンスを返します静的コンテンツ - 静的コンテンツを直接送信することができます。HTML/CSS/JS写真動画などなどロードバランサー vs リバースプロキシ複数のサーバーがある時にはロードバランサーをデプロイすると役に立つでしょう。 しばしば、ロードバランサーは同じ機能を果たすサーバー群へのトラフィックを捌きます。リバースプロキシでは、上記に述べたような利点を、単一のウェブサーバーやアプリケーションレイヤーに対しても示すことができます。NGINX や HAProxy などの技術はlayer 7 リバースプロキシとロードバランサーの両方をサポートします。欠点: リバースプロキシリバースプロキシを導入するとシステムの複雑性が増します。単一のリバースプロキシは単一障害点になりえます。一方で、複数のリバースプロキシを導入すると(例: フェイルオーバー) 複雑性はより増します。その他の参考資料、ページリバースプロキシ vs ロードバランサーNGINX アーキテクチャHAProxy アーキテクチャ ガイドWikipediaアプリケーション層      Source: Intro to architecting systems for scaleウェブレイヤーをアプリケーション層 (プラットフォーム層とも言われる) と分離することでそれぞれの層を独立にスケール、設定することができるようになります。新しいAPIをアプリケーション層に追加する際に、不必要にウェブサーバーを追加する必要がなくなります。単一責任の原則 では、小さい自律的なサービスが協調して動くように提唱しています。小さいサービスの小さいチームが急成長のためにより積極的な計画を立てられるようにするためです。アプリケーション層は非同期処理もサポートします。マイクロサービス独立してデプロイできる、小規模なモジュール様式であるマイクロサービスもこの議論に関係してくる技術でしょう。それぞれのサービスは独自のプロセスを処理し、明確で軽量なメカニズムで通信して、その目的とする機能を実現します。1例えばPinterestでは以下のようなマイクロサービスに分かれています。ユーザープロフィール、フォロワー、フィード、検索、写真アップロードなどです。サービスディスカバリーConsul、 Etcd、 Zookeeper などのシステムでは、登録されているサービスの名前、アドレス、ポートの情報を監視することで、サービス同士が互いを見つけやすくしています。サービスの完全性の確認には Health checks が便利で、これには HTTP エンドポイントがよく使われます。 Consul と Etcd のいずれも組み込みの key-value store を持っており、設定データや共有データなどのデータを保存しておくことに使われます。欠点: アプリケーション層アーキテクチャ、運用、そしてプロセスを考慮すると、緩く結び付けられたアプリケーション層を追加するには、モノリシックなシステムとは異なるアプローチが必要です。マイクロサービスはデプロイと運用の点から見ると複雑性が増すことになります。その他の参考資料、ページスケールするシステムアーキテクチャを設計するためのイントロシステム設計インタビューを紐解くサービス指向アーキテクチャZookeeperのイントロダクションマイクロサービスを作るために知っておきたいことデータベース      Source: Scaling up to your first 10 million usersリレーショナルデータベースマネジメントシステム (RDBMS)SQLなどのリレーショナルデータベースはテーブルに整理されたデータの集合である。ACID はリレーショナルデータベースにおけるトランザクションのプロパティの集合である不可分性 - それぞれのトランザクションはあるかないかのいずれかである一貫性 - どんなトランザクションもデータベースをある確かな状態から次の状態に遷移させる。独立性 - 同時にトランザクションを処理することは、連続的にトランザクションを処理するのと同じ結果をもたらす。永続性 - トランザクションが処理されたら、そのように保存されるリレーショナルデータベースをスケールさせるためにはたくさんの技術がある: マスター・スレーブ レプリケーション、 マスター・マスター レプリケーション、 federation、 シャーディング、 非正規化、 そして SQL チューニングマスタースレーブ レプリケーションマスターデータベースが読み取りと書き込みを処理し、書き込みを一つ以上のスレーブデータベースに複製します。スレーブデータベースは読み取りのみを処理します。スレーブデータベースは木構造のように追加のスレーブにデータを複製することもできます。マスターデータベースがオフラインになった場合には、いずれかのスレーブがマスターに昇格するか、新しいマスターデータベースが追加されるまでは読み取り専用モードで稼働します。      Source: Scalability, availability, stability, patterns欠点: マスタースレーブ レプリケーションスレーブをマスターに昇格させるには追加のロジックが必要になる。マスタースレーブ レプリケーション、マスターマスター レプリケーションの 両方 の欠点は欠点: レプリケーションを参照マスターマスター レプリケーションいずれのマスターも読み取り書き込みの両方に対応する。書き込みに関してはそれぞれ協調する。いずれかのマスターが落ちても、システム全体としては読み書き両方に対応したまま運用できる。      Source: Scalability, availability, stability, patterns欠点: マスターマスター レプリケーションロードバランサーを導入するか、アプリケーションロジックを変更することでどこに書き込むかを指定しなければならない。大体のマスターマスターシステムは、一貫性が緩い（ACID原理を守っていない）もしくは、同期する時間がかかるために書き込みのレイテンシーが増加してしまっている。書き込みノードが追加され、レイテンシーが増加するにつれ書き込みの衝突の可能性が増える。マスタースレーブ レプリケーション、マスターマスター レプリケーションの 両方 の欠点は欠点: レプリケーション を参照欠点: レプリケーション新しいデータ書き込みを複製する前にマスターが落ちた場合にはそのデータが失われてしまう可能性がある。書き込みは読み取りレプリカにおいてリプレイされる。書き込みが多い場合、複製ノードが書き込みの処理のみで行き詰まって、読み取りの処理を満足に行えない可能性がある。読み取りスレーブノードの数が多ければ多いほど、複製しなければならない数も増え、複製時間が伸びてしまいます。システムによっては、マスターへの書き込みはマルチスレッドで並列処理できる一方、スレーブへの複製は単一スレッドで連続的に処理しなければならない場合があります。レプリケーションでは追加のハードウェアが必要になり、複雑性も増します。その他の参考資料、ページ: レプリケーションスケーラビリティ、 可用性、 スタビリティ パターンマルチマスター レプリケーションFederation      Source: Scaling up to your first 10 million usersフェデレーション (もしくは機能分割化とも言う) はデータベースを機能ごとに分割する。例えば、モノリシックな単一データベースの代わりに、データベースを フォーラム、 ユーザー、 プロダクト のように三つにすることで、データベース一つあたりの書き込み・読み取りのトラフィックが減り、その結果レプリケーションのラグも短くなります。データベースが小さくなることで、メモリーに収まるデータが増えます。キャッシュの局所性が高まるため、キャッシュヒット率も上がります。単一の中央マスターで書き込みを直列化したりしないため、並列で書き込みを処理することができ、スループットの向上が期待できます。欠点: federation大規模な処理やテーブルを要するスキーマの場合、フェデレーションは効果的とは言えないでしょう。どのデータベースに読み書きをするのかを指定するアプリケーションロジックを更新しなければなりません。server linkで二つのデータベースからのデータを連結するのはより複雑になるでしょう。フェデレーションでは追加のハードウェアが必要になり、複雑性も増します。その他の参考資料、ページ: federationScaling up to your first 10 million usersシャーディング      Source: Scalability, availability, stability, patternsシャーディングでは異なるデータベースにそれぞれがデータのサブセット断片のみを持つようにデータを分割します。ユーザーデータベースを例にとると、ユーザー数が増えるにつれてクラスターにはより多くの断片が加えられることになります。federationの利点に似ていて、シャーディングでは読み書きのトラフィックを減らし、レプリケーションを減らし、キャッシュヒットを増やすことができます。インデックスサイズも減らすことができます。一般的にはインデックスサイズを減らすと、パフォーマンスが向上しクエリ速度が速くなります。なにがしかのデータを複製する機能がなければデータロスにつながりますが、もし、一つのシャードが落ちても、他のシャードが動いていることになります。フェデレーションと同じく、単一の中央マスターが書き込みの処理をしなくても、並列で書き込みを処理することができ、スループットの向上が期待できます。ユーザーテーブルをシャードする一般的な方法は、ユーザーのラストネームイニシャルでシャードするか、ユーザーの地理的配置でシャードするなどです。欠点: シャーディングシャードに対応するようにアプリケーションロジックを変更しなければなりません。結果としてSQLクエリが複雑になります。シャードではデータ配分がいびつになってしまう可能性があります。例えば、標準ユーザーの集合を持つシャードがある場合、そのシャードが他のシャードよりも重い負荷を負うことになります。リバランシングをすると複雑性がより増します。consistent hashing に基づいたシャーディングでは、通信データを削減することもできます。複数のシャードからのデータを連結するのはより複雑です。シャーディングでは追加のハードウェアが必要になり、複雑性も増します。その他の参考資料、ページ: シャーディングシャードの登場シャードデータベースアーキテクチャConsistent hashing非正規化非正規化では、書き込みのパフォーマンスをいくらか犠牲にして読み込みのパフォーマンスを向上させようとします。計算的に重いテーブルの結合などをせずに、複数のテーブルに冗長なデータのコピーが書き込まれるのを許容します。いくつかのRDBMS例えば、PostgreSQL やOracleはこの冗長な情報を取り扱い、一貫性を保つためのmaterialized views という機能をサポートしています。フェデレーション や シャーディングなどのテクニックによってそれぞれのデータセンターに分配されたデータを合一させることはとても複雑な作業です。非正規化によってそのような複雑な処理をしなくて済むようになります。多くのシステムで、100対1あるいは1000対1くらいになるくらい読み取りの方が、書き込みのトラフィックよりも多いことでしょう。読み込みを行うために、複雑なデータベースのジョイン処理が含まれるものは計算的に高価につきますし、ディスクの処理時間で膨大な時間を費消してしまうことになります。欠点: 非正規化データが複製される。冗長なデータの複製が同期されるように制約が存在し、そのことでデータベース全体の設計が複雑化する。非正規化されたデータベースは過大な書き込みを処理しなければならない場合、正規化されているそれよりもパフォーマンスにおいて劣る可能性がある。その他の参考資料、ページ: 非正規化DenormalizationSQLチューニングSQLチューニングは広範な知識を必要とする分野で多くの 本 が書かれています。ボトルネックを明らかにし、シミュレートする上で、 ベンチマーク を定め、 プロファイル することはとても重要です。ベンチマーク - abなどのツールを用いて、高負荷の状況をシミュレーションしてみましょう。プロファイル - slow query log などのツールを用いて、パフォーマンス状況の確認をしましょう。ベンチマークとプロファイルをとることで以下のような効率化の選択肢をとることになるでしょう。スキーマを絞るMySQLはアクセス速度向上のため、ディスク上の連続したブロックへデータを格納しています。長さの決まったフィールドに対しては VARCHAR よりも CHAR を使うようにしましょう。CHAR の方が効率的に速くランダムにデータにアクセスできます。 一方、 VARCHAR では次のデータに移る前にデータの末尾を検知しなければならないために速度が犠牲になります。ブログの投稿など、大きなテキストには TEXT を使いましょう。 TEXT ではブーリアン型の検索も可能です。 TEXT フィールドには、テキストブロックが配置されている、ディスク上の場所へのポインターが保存されます。2の32乗や40億以下を超えない程度の大きな数には INT を使いましょう。通貨に関しては小数点表示上のエラーを避けるために DECIMAL を使いましょう。大きな BLOBS を保存するのは避けましょう。どこからそのオブジェクトを取ってくることができるかの情報を保存しましょう。VARCHAR(255) は8ビットで数えられる最大の文字数です。一部のDBMSでは、1バイトの利用効率を最大化するためにこの文字数がよく使われます。検索性能向上のため 、可能であれば NOT NULL 制約を設定しましょう。インデックスを効果的に用いるクエリ(SELECT、 GROUP BY、 ORDER BY、 JOIN) の対象となる列にインデックスを使うことで速度を向上できるかもしれません。インデックスは通常、平衡探索木であるB木の形で表されます。B木によりデータは常にソートされた状態になります。また検索、順次アクセス、挿入、削除を対数時間で行えます。インデックスを配置することはデータをメモリーに残すことにつながりより容量を必要とします。インデックスの更新も必要になるため書き込みも遅くなります。大量のデータをロードする際には、インデックスを切ってからデータをロードして再びインデックスをビルドした方が速いことがあります。高負荷なジョインを避けるパフォーマンス上必要なところには非正規化を適用するテーブルのパーティションテーブルを分割し、ホットスポットを独立したテーブルに分離してメモリーに乗せられるようにする。クエリキャッシュを調整する場合によってはクエリキャッシュ がパフォーマンス問題 を引き起こす可能性があるその他の参考資料、ページ: SQLチューニングMySQLクエリを最適化するためのTipsVARCHAR(255)をやたらよく見かけるのはなんで？null値はどのようにパフォーマンスに影響するのか？Slow query logNoSQLNoSQL は key-value store、 document-store、 wide column store、 もしくは graph databaseによって表現されるデータアイテムの集合です。データは一般的に正規化されておらず、アプリケーション側でジョインが行われます。大部分のNoSQLは真のACIDトランザクションを持たず、 結果整合性 的な振る舞いの方を好みます。BASE はしばしばNoSQLデータベースのプロパティを説明するために用いられます。CAP Theorem と対照的に、BASEは一貫性よりも可用性を優先します。Basically available - システムは可用性を保証します。Soft state - システムの状態は入力がなくても時間経過とともに変化する可能性があります。結果整合性 - システム全体は時間経過とともにその間に入力がないという前提のもと、一貫性が達成されます。SQLか？NoSQLか？ を選択するのに加えて、どのタイプのNoSQLがどの使用例に最も適するかを理解するのはとても有益です。このセクションでは キーバリューストア、 ドキュメントストア、 ワイドカラムストア、 と グラフデータベース について触れていきます。キーバリューストア概要: ハッシュテーブルキーバリューストアでは一般的にO(1)の読み書きができ、それらはメモリないしSSDで裏付けられています。データストアはキーを 辞書的順序 で保持することでキーの効率的な取得を可能にしています。キーバリューストアではメタデータを値とともに保持することが可能です。キーバリューストアはハイパフォーマンスな挙動が可能で、単純なデータモデルやインメモリーキャッシュレイヤーなどのデータが急速に変わる場合などに使われます。単純な処理のみに機能が制限されているので、追加の処理機能が必要な場合にはその複雑性はアプリケーション層に載せることになります。キーバリューストアはもっと複雑なドキュメントストアや、グラフデータベースなどの基本です。その他の参考資料、ページ: キーバリューストアキーバリューデータベースキーバリューストアの欠点Redisアーキテクチャメムキャッシュアーキテクチャドキュメントストア概要: ドキュメントがバリューとして保存されたキーバリューストアドキュメントストアはオブジェクトに関する全ての情報を持つドキュメント(XML、 JSON、 binaryなど)を中心に据えたシステムです。ドキュメントストアでは、ドキュメント自身の内部構造に基づいた、APIもしくはクエリ言語を提供します。 メモ：多くのキーバリューストアでは、値のメタデータを扱う機能を含んでいますが、そのことによって二つドキュメントストアとの境界線が曖昧になってしまっています。以上のことを実現するために、ドキュメントはコレクション、タグ、メタデータやディレクトリなどとして整理されています。ドキュメント同士はまとめてグループにできるものの、それぞれで全く異なるフィールドを持つ可能性があります。MongoDB や CouchDB などのドキュメントストアも、複雑なクエリを処理するためのSQLのような言語を提供しています。DynamoDB はキーバリューとドキュメントの両方をサポートしています。ドキュメントストアは高い柔軟性を担保するので、頻繁に変化するデータを扱う時に用いられます。その他の参考資料、ページ:  ドキュメントストアドキュメント指向 データベースMongoDB アーキテクチャCouchDB アーキテクチャElasticsearch アーキテクチャワイドカラムストア      Source: SQL & NoSQL, a brief history概要: ネストされたマップ カラムファミリー<行キー、 カラム<ColKey、 Value、 Timestamp>>ワイドカラムストアのデータの基本単位はカラム（ネーム・バリューのペア）です。それぞれのカラムはカラムファミリーとして（SQLテーブルのように）グループ化することができます。スーパーカラムファミリーはカラムファミリーの集合です。それぞれのカラムには行キーでアクセスすることができます。同じ行キーを持つカラムは同じ行として認識されます。それぞれの値は、バージョン管理とコンフリクトが起きた時のために、タイムスタンプを含みます。GoogleはBigtableを初のワイドカラムストアとして発表しました。それがオープンソースでHadoopなどでよく使われるHBase やFacebookによるCassandra などのプロジェクトに影響を与えました。BigTable、HBaseやCassandraなどのストアはキーを辞書形式で保持することで選択したキーレンジでのデータ取得を効率的にします。ワイドカラムストアは高い可用性とスケーラビリティを担保します。これらはとても大規模なデータセットを扱うことによく使われます。その他の参考資料、ページ:  ワイドカラムストアSQL & NoSQL簡単に歴史をさらうBigtable アーキテクチャHBase アーキテクチャCassandra アーキテクチャグラフデータベース      Source: Graph database概要: グラフグラフデータベースでは、それぞれのノードがレコードで、それぞれのアークは二つのノードを繋ぐ関係性として定義されます。グラフデータベースは多数の外部キーや多対多などの複雑な関係性を表すのに最適です。グラフデータベースはSNSなどのサービスの複雑な関係性モデルなどについて高いパフォーマンスを発揮します。比較的新しく、まだ一般的には用いられていないので、開発ツールやリソースを探すのが他の方法に比べて難しいかもしれません。多くのグラフはREST APIsを通じてのみアクセスできます。その他の参考資料、ページ:  グラフGraphデータベースNeo4jFlockDBその他の参考資料、ページ:  NoSQL基本用語の説明NoSQLデータベースについて調査と選択ガイドスケーラビリティNoSQLのイントロダクションNoSQLパターンSQLか？NoSQLか？      Source: Transitioning from RDBMS to NoSQLSQL を選ぶ理由:構造化されたデータ厳格なスキーマリレーショナルデータ複雑なジョインをする必要性トランザクションスケールする際のパターンが明確なとき開発者の数、コミュニティ、コード等がより充実しているインデックスによるデータ探索はとても速いNoSQL を選ぶ理由:準構造化されたデータダイナミックないし、フレキシブルなスキーマノンリレーショナルなデータ複雑なジョインをする必要がないデータの多くのTB (もしくは PB) を保存する集中的、大規模なデータ負荷に耐えられるIOPSについては極めて高いスループットを示すNoSQLに適するサンプルデータ:急激なクリックストリームやログデータの収集リーダーボードやスコアリングデータショッピングカートなどの一時的情報頻繁にアクセスされる ('ホットな') テーブルメタデータやルックアップテーブルその他の参考資料、ページ:  　SQLもしくはNoSQL最初の1000万ユーザーにスケールアップするためにSQLとNoSQLの違いキャッシュ      Source: Scalable system design patternsキャッシュはページの読み込み時間を削減し、サーバーやデータベースへの負荷を低減することができます。このモデルでは、実際の処理を保存するために、ディスパッチャーがまず以前にリクエストが送信されたかどうかを確認し、直前の結果を受け取ります。データベースはそのパーティションに渡って統合された読み取り書き込みの分配を要求しますが、人気アイテムはその分配を歪めてシステム全体のボトルネックになってしまうことがあります。データベースの前にキャッシュを差し込むことでこのように、均一でない負荷やトラフィックの急激な増加を吸収することができます。クライアントキャッシングキャッシュはOSやブラウザーなどのクライアントサイド、サーバーサイド もしくは独立のキャッシュレイヤーに設置することができます。CDNキャッシングCDN もキャッシュの一つとして考えることができます。Webサーバーキャッシングリバースプロキシ や Varnish などのキャッシュは静的そして動的なコンテンツを直接配信することができます。 webサーバーもリクエストをキャッシュしてアプリケーションサーバーに接続することなしにレスポンスを返すことができます。データベースキャッシングデータベースは普通、一般的な使用状況に適するようなキャッシングの設定を初期状態で持っています。この設定を特定の仕様に合わせて調整することでパフォーマンスを向上させることができます。アプリケーションキャッシングメムキャッシュなどのIn-memoryキャッシュやRedisはアプリケーションとデータストレージの間のキーバリューストアです。データはRAMで保持されるため、データがディスクで保存される一般的なデータベースよりもだいぶ速いです。RAM容量はディスクよりも限られているので、least recently used (LRU)などのcache invalidation アルゴリズムが 'コールド' なエントリを弾き、'ホット' なデータをRAMに保存します。Redisはさらに以下のような機能を備えています:パージステンス設定ソート済みセット、リストなどの組み込みデータ構造キャッシュには様々なレベルのものがありますが、いずれも大きく二つのカテゴリーのいずれかに分類することができます: データベースクエリ と オブジェクト です:行レベルクエリレベルFully-formed serializable objectsFully-rendered HTML一般的に、ファイルベースキャッシングはクローンを作り出してオートスケーリングを難しくしてしまうので避けるべきです。データベースクエリレベルでのキャッシングデータベースをクエリする際には必ずクエリをキーとしてハッシュして結果をキャッシュに保存しましょう。この手法はキャッシュ期限切れ問題に悩むことになります:複雑なクエリによりキャッシュされた結果を削除することが困難テーブルセルなどのデータ断片が変化した時に、その変化したセルを含むかもしれない全てのキャッシュされたクエリを削除する必要がある。オブジェクトレベルでのキャッシングデータをアプリケーションコードでそうするように、オブジェクトとして捉えてみましょう。アプリケーションに、データベースからのデータセットをクラスインスタンスやデータ構造として組み立てさせます。:そのデータが変更されたら、オブジェクトをキャッシュから削除すること非同期処理を許容します: ワーカーがキャッシュされたオブジェクトの中で最新のものを集めてきます何をキャッシュするか:ユーザーのセッション完全にレンダーされたウェブページアクテビティストリームユーザーグラフデータいつキャッシュを更新するかキャッシュに保存できる容量は限られているため、自分のケースではどのキャッシュ手法が一番いいかは検討する必要があります。キャッシュアサイド      Source: From cache to in-memory data gridアプリケーションはストレージへの読み書きの処理をします。キャッシュはストレージとは直接やりとりをしません。アプリケーションは以下のことをします:キャッシュの中のエントリを参照しますが、結果としてキャッシュミスになりますデータベースからエントリを取得しますエントリをキャッシュに追加しますエントリを返しますdef get_user(self, user_id):    user = cache.get(\""user.{0}\"", user_id)    if user is None:        user = db.query(\""SELECT * FROM users WHERE user_id = {0}\"", user_id)        if user is not None:            key = \""user.{0}\"".format(user_id)            cache.set(key, json.dumps(user))    return userMemcached は通常このように使われる。その後のキャッシュデータ読み込みは速いです。キャッシュアサイドはレージーローディングであるとも言われます。リクエストされたデータのみがキャッシュされ、リクエストされていないデータでキャッシュが溢れるのを防止します。欠点: キャッシュアサイド各キャッシュミスは三つのトリップを呼び出すことになり、体感できるほどの遅延が起きてしまいます。データベースのデータが更新されるとキャッシュデータは古いものになってしまいます。time-to-live (TTL)を設定することでキャッシュエントリの更新を強制的に行う、もしくはライトスルーを採用することでこの問題は緩和できます。ノードが落ちると、新規の空のノードで代替されることでレイテンシーが増加することになります。ライトスルー      Source: Scalability, availability, stability, patternsアプリケーションはキャッシュをメインのデータストアとして使い、そこにデータの読み書きを行います。一方、キャッシュはデータベースへの読み書きを担当します。アプリケーションはキャッシュにあるエントリを追加・更新しますキャッシュは同期的にデータストアに書き込みを行いますエントリを返しますアプリケーションコード:set_user(12345, {\""foo\"":\""bar\""})キャッシュコード:def set_user(user_id, values):    user = db.query(\""UPDATE Users WHERE id = {0}\"", user_id, values)    cache.set(user_id, user)ライトスルーは書き込み処理のせいで全体としては遅いオペレーションですが、書き込まれたばかりのデータに関する読み込みは速いです。ユーザー側は一般的にデータ更新時の方が読み込み時よりもレイテンシーに許容的です。キャッシュ内のデータは最新版で保たれます。欠点: ライトスルーノードが落ちたこと、もしくはスケーリングによって新しいノードが作成された時に、新しいノードはデータベース内のエントリーが更新されるまではエントリーをキャッシュしません。キャッシュアサイドとライトスルーを併用することでこの問題を緩和できます。書き込まれたデータの大部分は一度も読み込まれることはありません。このデータはTTLによって圧縮することができます。ライトビハインド (ライトバック)      Source: Scalability, availability, stability, patternsライトビハインドではアプリケーションは以下のことをします:キャッシュのエントリーを追加・更新しますデータストアへの書き込みを非同期的に行うことで、書き込みパフォーマンスを向上させます。欠点: ライトビハインドキャッシュがデータストア内のコンテンツにヒットする前にキャッシュが落ちるとデータ欠損が起きる可能性があります。キャッシュアサイドやライトスルーよりも実装が複雑になります。リフレッシュアヘッド      Source: From cache to in-memory data grid期限切れよりも前に、直近でアクセスされた全てのキャッシュエントリを自動的に更新するように設定することができます。もしどのアイテムが将来必要になるのかを正確に予測することができるのならば、リードスルーよりもレイテンシーを削減することができます。欠点: リフレッシュアヘッドどのアイテムが必要になるかの予測が正確でない場合にはリフレッシュアヘッドがない方がレイテンシーは良いという結果になってしまいます。欠点: キャッシュcache invalidationなどを用いて、データベースなどの真のデータとキャッシュの間の一貫性を保つ必要があります。Redisやmemcachedを追加することでアプリケーション構成を変更する必要があります。Cache invalidationも難しいですがそれに加えて、いつキャッシュを更新するかという複雑な問題にも悩まされることになります。その他の参考資料、ページFrom cache to in-memory data gridスケーラブルなシステムデザインパターンスケールできるシステムを設計するためのイントロダクションスケーラビリティ、可用性、安定性、パターンスケーラビリティAWS ElastiCacheのストラテジーWikipedia非同期処理      Source: Intro to architecting systems for scale非同期のワークフローはもし、連続的に行われるとリクエスト時間を圧迫してしまうような重い処理を別で処理する手法です。また、定期的にデータを集合させるなどの時間がかかるような処理を前もって処理しておくことにも役立ちます。メッセージキューメッセージキューはメッセージを受け取り、保存し、配信します。もし、処理がインラインで行うには遅すぎる場合、以下のようなワークフローでメッセージキューを用いるといいでしょう:アプリケーションはジョブをキューに配信し、ユーザーにジョブステータスを伝えます。ワーカーがジョブキューから受け取って、処理を行い、終了したらそのシグナルを返します。ユーザーの処理が止まることはなく、ジョブはバックグラウンドで処理されます。この間に、クライアントはオプションとして、タスクが完了したかのように見せるために小規模の処理を行います。例えば、ツイートを投稿するときに、ツイートはすぐにあなたのタイムラインに反映されたように見えますが、そのツイートが実際に全てのフォロワーに配信されるまでにはもう少し時間がかかっているでしょう。Redis はシンプルなメッセージ仲介としてはいいですが、メッセージが失われてしまう可能性があります。RabbitMQ はよく使われていますが、'AMQP'プロトコルに対応して、自前のノードを立てる必要があります。Amazon SQS という選択肢もありますが、レイテンシーが高く、メッセージが重複して配信されてしまう可能性があります。タスクキュータスクキューはタスクとその関連するデータを受け取り、処理した上でその結果を返します。スケジュール管理をできるほか、バックグラウンドでとても重いジョブをこなすこともできます。Celery はスケジューリングとpythonのサポートがあります。バックプレッシャーもし、キューが拡大しすぎると、メモリーよりもキューの方が大きくなりキャッシュミスが起こり、ディスク読み出しにつながり、パフォーマンスが低下することにつながります。バックプレッシャーはキューサイズを制限することで回避することができ、高いスループットを確保しキューにすでにあるジョブについてのレスポンス時間を短縮できます。キューがいっぱいになると、クライアントはサーバービジーもしくはHTTP 503をレスポンスとして受け取りまた後で時間をおいてアクセスするようにメッセージを受け取ります。クライアントはexponential backoffなどによって後ほど再度時間を置いてリクエストすることができます。欠点: 非同期処理キューを用いることで遅延が起こり、複雑さも増すため、あまり重くない計算処理やリアルタイムワークフローにおいては同期処理の方がいいでしょう。その他の参考資料、ページIt's all a numbers gameオーバーロードした時にバックプレッシャーを適用するLittle's lawメッセージキューとタスクキューの違いとは？通信      Source: OSI 7 layer modelHypertext transfer protocol (HTTP)HTTP はクライアントとサーバー間でのデータをエンコードして転送するための手法です。リクエスト・レスポンスに関わるプロトコルです。クライアントがリクエストをサーバーに投げ、サーバーがリクエストに関係するコンテンツと完了ステータス情報をレスポンスとして返します。HTTPは自己完結するので、間にロードバランサー、キャッシュ、エンクリプション、圧縮などのどんな中間ルーターが入っても動くようにできています。基本的なHTTPリクエストはHTTP動詞(メソッド)とリソース(エンドポイント)で成り立っています。以下がよくあるHTTP動詞です。:動詞詳細冪等性*セーフキャッシュできるかGETリソースを読み取るYesYesYesPOSTリソースを作成するもしくはデータを処理するトリガーNoNoYes レスポンスが新しい情報を含む場合PUTリソースを作成もしくは入れ替えるYesNoNoPATCHリソースを部分的に更新するNoNoYes レスポンスが新しい情報を含む場合DELETEリソースを削除するYesNoNo何度呼んでも同じ結果が返ってくることHTTPはTCP や UDP などの低級プロトコルに依存しているアプリケーションレイヤーのプロトコルである。その他の参考資料、ページ: HTTPHTTPってなに?HTTP と TCPの違いPUT と PATCHの違い伝送制御プロトコル (TCP)      Source: How to make a multiplayer gameTCPはIP networkの上で成り立つ接続プロトコルです。接続はhandshakeによって開始、解除されます。全ての送信されたパケットは欠損なしで送信先に送信された順番で到達するように以下の方法で保証されています:シーケンス番号とchecksum fieldsが全てのパケットに用意されているAcknowledgementパケットと自動再送信もし送信者が正しいレスポンスを受け取らなかったとき、パケットを再送信します。複数のタイムアウトがあったとき、接続は解除されます。TCP はフロー制御 と 輻輳制御も実装しています。これらの機能によって速度は低下し、一般的にUDPよりも非効率な転送手段になっています。ハイスループットを実現するために、ウェブサーバーはかなり大きな数のTCP接続を開いておくことがあり、そのことでメモリー使用が圧迫されます。ウェブサーバスレッドと例えばmemcached サーバーの間で多数のコネクションを保っておくことは高くつくかもしれません。可能なところではUDPに切り替えるだけでなくコネクションプーリングなども役立つかもしれません。TCPは高い依存性を要し、時間制約が厳しくないものに適しているでしょう。ウェブサーバー、データベース情報、SMTP、FTPやSSHなどの例に適用されます。以下の時にUDPよりもTCPを使うといいでしょう:全てのデータが欠損することなしに届いてほしいネットワークスループットの最適な自動推測をしてオペレーションしたいユーザデータグラムプロトコル (UDP)      Source: How to make a multiplayer gameUDPはコネクションレスです。データグラム（パケットのようなもの）はデータグラムレベルでの保証しかされません。データグラムは順不同で受け取り先に到着したりそもそも着かなかったりします。UDPは輻輳制御をサポートしません。TCPにおいてはサポートされているこれらの保証がないため、UDPは一般的に、TCPよりも効率的です。UDPはサブネット上のすべての機器にデータグラムを送信することができます。これはDHCP において役に立ちます。というのも、クライアントはまだIPアドレスを取得していないので、IPアドレスを必要とするTCPによるストリームができないからです。UDPは信頼性の面では劣りますが、VoIP、ビデオチャット、ストリーミングや同時通信マルチプレイヤーゲームなどのリアルタイム性が重視される時にはとても効果的です。TCPよりもUDPを使うのは:レイテンシーを最低限に抑えたい時データ欠損よりも、データ遅延を重視するときエラー修正を自前で実装したいときその他の参考資料、ページ: TCP と UDPゲームプログラミングのためのネットワークTCP と UDP プロトコルの主な違いTCP と UDPの違いTransmission control protocolUser datagram protocolFacebookのメムキャッシュスケーリング遠隔手続呼出 (RPC)      Source: Crack the system design interviewRPCではクライアントがリモートサーバーなどの異なるアドレス空間でプロシージャーが処理されるようにします。プロシージャーはローカルでのコールのように、クライアントからサーバーにどのように通信するかという詳細を省いた状態でコードが書かれます。リモートのコールは普通、ローカルのコールよりも遅く、信頼性に欠けるため、RPCコールをローカルコールと区別させておくことが好ましいでしょう。人気のRPCフレームワークは以下です。Protobuf、 Thrift、AvroRPC は リクエストレスポンスプロトコル:クライアントプログラム - クライアントスタブプロシージャーを呼び出します。パラメータはローカルでのプロシージャーコールのようにスタックへとプッシュされていきます。クライアントスタブプロシージャー - プロシージャIDとアーギュメントをパックしてリクエストメッセージにします。クライアント通信モジュール - OSがクライアントからサーバーへとメッセージを送ります。サーバー通信モジュール - OSが受け取ったパケットをサーバースタブプロシージャーに受け渡します。サーバースタブプロシージャー -  結果を展開し、プロシージャーIDにマッチするサーバープロシージャーを呼び出し、結果を返します。サーバーレスポンスは上記のステップを逆順で繰り返します。Sample RPC calls:GET /someoperation?data=anIdPOST /anotheroperation{  \""data\"":\""anId\"";  \""anotherdata\"": \""another value\""}RPCは振る舞いを公開することに焦点を当てています。RPCは内部通信パフォーマンスを理由として使われることが多いです。というのも、使用する状況に合わせてネイティブコールを自作することができるからです。ネイティブライブラリー (aka SDK) を呼ぶのは以下の時:ターゲットのプラットフォームを知っている時ロジックがどのようにアクセスされるのかを管理したいときライブラリー外でエラーがどのようにコントロールされるかを管理したい時パフォーマンスとエンドユーザーエクスペリエンスが最優先の時REST プロトコルに従うHTTP APIはパブリックAPIにおいてよく用いられます。欠点: RPCRPCクライアントとはサービス実装により厳密に左右されることになります。新しいオペレーション、使用例があるたびに新しくAPIが定義されなければなりません。RPCをデバッグするのは難しい可能性があります。既存のテクノロジーをそのまま使ってサービスを構築することはできないかもしれません。例えば、SquidなどのサーバーにRPCコールが正しくキャッシュ されるように追加で骨を折る必要があるかもしれません。Representational state transfer (REST)RESTは、クライアントがサーバーによってマネージされるリソースに対して処理を行うクライアント・サーバーモデルを支持するアーキテキチャスタイルです。サーバーは操作できるもしくは新しいリソースレプレゼンテーションを受け取ることができるようなリソースやアクションのレプレゼンテーションを提供します。すべての通信はステートレスでキャッシュ可能でなければなりません。RESTful なインターフェースには次の四つの特徴があります:特徴的なリソース (URI in HTTP) - どのオペレーションであっても同じURIを使う。HTTP動詞によって変わる (Verbs in HTTP) - 動詞、ヘッダー、ボディを使う自己説明的なエラーメッセージ (status response in HTTP) - ステータスコードを使い、新しく作ったりしないこと。HATEOAS (HTML interface for HTTP) - 自分のwebサービスがブラウザで完全にアクセスできること。サンプル REST コール:GET /someresources/anIdPUT /someresources/anId{\""anotherdata\"": \""another value\""}RESTはデータを公開することに焦点を当てています。クライアントとサーバーのカップリングを最小限にするもので、パブリックAPIなどによく用いられます。RESTはURI、 representation through headers、そして、GET、POST、PUT、 DELETE、PATCHなどのHTTP動詞等のよりジェネリックで統一されたメソッドを用います。ステートレスであるのでRESTは水平スケーリングやパーティショニングに最適です。欠点: RESTRESTはデータ公開に焦点を当てているので、リソースが自然に整理されていなかったり、シンプルなヒエラルキーで表せられない時にはよい選択肢とは言えないかもしれません。例えば、とあるイベントのセットにマッチするすべての更新情報を返すと言った処理は簡単にはパスで表現することができません。RESTでは、URIパス、クエリパラメータ、そして場合によってはリクエストボディなどによって実装されることが多いでしょう。RESTは少数の動詞に依存しています(GET、POST、PUT、DELETE、そして PATCH) が時には使いたい事例に合わないことがあります。例えば、期限の切れたドキュメントをアーカイブに移したい場合などはこれらの動詞の中には綺麗にはフィットしません。ネストされたヒエラルキーの中にあるリソースをとってくるのはシングルビューを描画するのにクライアントとサーバー間で数回やりとりしなければなりません。例として、ブログエントリーのコンテンツとそれに対するコメントを表示する場合などです。様々なネットワーク環境で動作する可能性が考えられるモバイルアプリケーションにおいてはこのような複数のやり取りは好ましくありません。時が経つにつれて、APIレスポンスにより多くのフィールドが与えられて、古いクライアントはすでにいらないものも含めてすべてのデータフィールドを受け取ることになります。そのことで、ペイロードが大きくなりすぎて、レイテンシーも拡大することになります。RPCとREST比較OperationRPCRESTサインアップPOST /signupPOST /personsリザインPOST /resign{\""personid\"": \""1234\""}DELETE /persons/1234Person読み込みGET /readPerson?personid=1234GET /persons/1234Personのアイテムリスト読み込みGET /readUsersItemsList?personid=1234GET /persons/1234/itemsPersonのアイテムへのアイテム追加POST /addItemToUsersItemsList{\""personid\"": \""1234\"";\""itemid\"": \""456\""}POST /persons/1234/items{\""itemid\"": \""456\""}アイテム更新POST /modifyItem{\""itemid\"": \""456\"";\""key\"": \""value\""}PUT /items/456{\""key\"": \""value\""}アイテム削除POST /removeItem{\""itemid\"": \""456\""}DELETE /items/456  Source: Do you really know why you prefer REST over RPCその他の参考資料、ページ: REST と RPCDo you really know why you prefer REST over RPCWhen are RPC-ish approaches more appropriate than REST?REST vs JSON-RPCDebunking the myths of RPC and RESTWhat are the drawbacks of using RESTCrack the system design interviewThriftWhy REST for internal use and not RPCセキュリティこのセクションは更新が必要です。contributingしてください！セキュリティは幅広いトピックです。十分な経験、セキュリティ分野のバックグラウンドがなくても、セキュリティの知識を要する職に応募するのでない限り、基本以上のことを知る必要はないでしょう。情報伝達、保存における暗号化XSS や SQL injectionを防ぐために、全てのユーザー入力もしくはユーザーに露出される入力パラメーターをサニタイズするSQL injectionを防ぐためにパラメータ化されたクエリを用いる。least privilegeの原理を用いるその他の参考資料、ページ:開発者のためのセキュリティガイドOWASP top ten補遺暗算で、推計値を求める必要があることも時にはあります。例えば、ディスクから100枚イメージ分のサムネイルを作る時間を求めたり、その時にどれだけディスクメモリーが消費されるかなどの値です。2の乗数表 と 全てのプログラマーが知るべきレイテンシー値 は良い参考になるでしょう。2の乗数表乗数           厳密な値         約        Bytes---------------------------------------------------------------7                             1288                             25610                           1024   1 thousand           1 KB16                         65,536                       64 KB20                      1,048,576   1 million            1 MB30                  1,073,741,824   1 billion            1 GB32                  4,294,967,296                        4 GB40              1,099,511,627,776   1 trillion           1 TBその他の参考資料、ページ:2の乗数表全てのプログラマーが知るべきレイテンシー値Latency Comparison Numbers--------------------------L1 cache reference                           0.5 nsBranch mispredict                            5   nsL2 cache reference                           7   ns                      14x L1 cacheMutex lock/unlock                           25   nsMain memory reference                      100   ns                      20x L2 cache, 200x L1 cacheCompress 1K bytes with Zippy            10,000   ns       10 usSend 1 KB bytes over 1 Gbps network     10,000   ns       10 usRead 4 KB randomly from SSD*           150,000   ns      150 us          ~1GB/sec SSDRead 1 MB sequentially from memory     250,000   ns      250 usRound trip within same datacenter      500,000   ns      500 usRead 1 MB sequentially from SSD*     1,000,000   ns    1,000 us    1 ms  ~1GB/sec SSD, 4X memoryDisk seek                           10,000,000   ns   10,000 us   10 ms  20x datacenter roundtripRead 1 MB sequentially from 1 Gbps  10,000,000   ns   10,000 us   10 ms  40x memory, 10X SSDRead 1 MB sequentially from disk    30,000,000   ns   30,000 us   30 ms 120x memory, 30X SSDSend packet CA->Netherlands->CA    150,000,000   ns  150,000 us  150 msNotes-----1 ns = 10^-9 seconds1 us = 10^-6 seconds = 1,000 ns1 ms = 10^-3 seconds = 1,000 us = 1,000,000 ns上記表に基づいた役に立つ数値:ディスクからの連続読み取り速度 30 MB/s1 Gbps Ethernetからの連続読み取り速度　100 MB/sSSDからの連続読み取り速度 1 GB/smain memoryからの連続読み取り速度 4 GB/s1秒で地球6-7周できる1秒でデータセンターと2000周やりとりできるレイテンシーの視覚的表その他の参考資料、ページ:全てのプログラマーが知るべきレイテンシー値 - 1全てのプログラマーが知るべきレイテンシー値 - 2Designs, lessons, and advice from building large distributed systemsSoftware Engineering Advice from Building Large-Scale Distributed Systems他のシステム設計面接例題頻出のシステム設計面接課題とその解答へのリンク質問解答Dropboxのようなファイル同期サービスを設計するyoutube.comGoogleのような検索エンジンの設計queue.acm.orgstackexchange.comardendertat.comstanford.eduGoogleのようなスケーラブルなwebクローラーの設計quora.comGoogle docsの設計code.google.comneil.fraser.nameRedisのようなキーバリューストアの設計slideshare.netMemcachedのようなキャッシュシステムの設計slideshare.netAmazonのようなレコメンデーションシステムの設計hulu.comijcai13.orgBitlyのようなURL短縮サービスの設計n00tc0d3r.blogspot.comWhatsAppのようなチャットアプリの設計highscalability.comInstagramのような写真共有サービスの設計highscalability.comhighscalability.comFacebookニュースフィードの設計quora.comquora.comslideshare.netFacebookタイムラインの設計facebook.comhighscalability.comFacebookチャットの設計erlang-factory.comfacebook.comFacebookのようなgraph検索の設計facebook.comfacebook.comfacebook.comCloudFlareのようなCDNの設計cmu.eduTwitterのトレンド機能の設計michael-noll.comsnikolov .wordpress.comランダムID発行システムの設計blog.twitter.comgithub.com一定のインターバル時間での上位k件を返すucsb.eduwpi.edu複数のデータセンターからデータを配信するサービスの設計highscalability.comオンラインの複数プレイヤーカードゲームの設計indieflashblog.combuildnewgames.comガーベッジコレクションシステムの設計stuffwithstuff.comwashington.eduシステム設計例題を追加するContribute実世界のアーキテクチャ世の中のシステムがどのように設計されているかについての記事      Source: Twitter timelines at scale以下の記事の重箱の隅をつつくような細かい詳細にこだわらないこと。むしろ共通の原理、技術、パターンを探ることそれぞれのコンポーネントでどんな問題が解決され、コンポーネントはどこでうまく使えもしくは使えないかを知ること学んだことを復習すること種類システム参考ページデータ処理MapReduce - Googleの分散データ処理システムresearch.google.comデータ処理Spark - Databricksの分散データ処理システムslideshare.netデータ処理Storm - Twitterの分散データ処理システムslideshare.netデータストアBigtable - Googleのカラム指向分散データベースharvard.eduデータストアHBase - Bigtableのオープンソース実装slideshare.netデータストアCassandra - Facebookのカラム指向分散データベースslideshare.netデータストアDynamoDB - Amazonのドキュメント指向分散データベースharvard.eduデータストアMongoDB - ドキュメント指向分散データベースslideshare.netデータストアSpanner - Googleのグローバル分散データベースresearch.google.comデータストアMemcached - 分散メモリーキャッシングシステムslideshare.netデータストアRedis - 永続性とバリュータイプを兼ね備えた分散メモリーキャッシングシステムslideshare.netファイルシステムGoogle File System (GFS) - 分散ファイルシステムresearch.google.comファイルシステムHadoop File System (HDFS) - GFSのオープンソース実装apache.orgMiscChubby - 疎結合の分散システムをロックするGoogleのサービスresearch.google.comMiscDapper - 分散システムを追跡するインフラresearch.google.comMiscKafka - LinkedInによるPub/subメッセージキューslideshare.netMiscZookeeper - 同期を可能にする中央集権インフラとサービスslideshare.netアーキテクチャを追加するContribute各企業のアーキテクチャ企業参考ページAmazonAmazon architectureCinchcastProducing 1,500 hours of audio every dayDataSiftRealtime datamining At 120,000 tweets per secondDropBoxHow we've scaled DropboxESPNOperating At 100,000 duh nuh nuhs per secondGoogleGoogle architectureInstagram14 million users, terabytes of photosWhat powers InstagramJustin.tvJustin.Tv's live video broadcasting architectureFacebookScaling memcached at FacebookTAO: Facebook’s distributed data store for the social graphFacebook’s photo storageFlickrFlickr architectureMailboxFrom 0 to one million users in 6 weeksPinterestFrom 0 To 10s of billions of page views a month18 million visitors, 10x growth, 12 employeesPlayfish50 million monthly users and growingPlentyOfFishPlentyOfFish architectureSalesforceHow they handle 1.3 billion transactions a dayStack OverflowStack Overflow architectureTripAdvisor40M visitors, 200M dynamic page views, 30TB dataTumblr15 billion page views a monthTwitterMaking Twitter 10000 percent fasterStoring 250 million tweets a day using MySQL150M active users, 300K QPS, a 22 MB/S firehoseTimelines at scaleBig and small data at TwitterOperations at Twitter: scaling beyond 100 million usersUberHow Uber scales their real-time market platformWhatsAppThe WhatsApp architecture Facebook bought for $19 billionYouTubeYouTube scalabilityYouTube architecture企業のエンジニアブログ面接を受ける企業のアーキテクチャ投げられる質問は同じ分野から来ることもあるでしょうAirbnb EngineeringAtlassian DevelopersAutodesk EngineeringAWS BlogBitly Engineering BlogBox BlogsCloudera Developer BlogDropbox Tech BlogEngineering at QuoraEbay Tech BlogEvernote Tech BlogEtsy Code as CraftFacebook EngineeringFlickr CodeFoursquare Engineering BlogGitHub Engineering BlogGoogle Research BlogGroupon Engineering BlogHeroku Engineering BlogHubspot Engineering BlogHigh ScalabilityInstagram EngineeringIntel Software BlogJane Street Tech BlogLinkedIn EngineeringMicrosoft EngineeringMicrosoft Python EngineeringNetflix Tech BlogPaypal Developer BlogPinterest Engineering BlogQuora EngineeringReddit BlogSalesforce Engineering BlogSlack Engineering BlogSpotify LabsTwilio Engineering BlogTwitter EngineeringUber Engineering BlogYahoo Engineering BlogYelp Engineering BlogZynga Engineering Blogその他の参考資料、ページ:kilimchoi/engineering-blogsここにあるリストは比較的小規模なものにとどめ、kilimchoi/engineering-blogsにより詳細に記すことで重複しないようにしておくことにする。エンジニアブログへのリンクを追加する場合はここではなく、engineering-blogsレボジトリに追加することを検討してください。進行中の作業セクションの追加や、進行中の作業を手伝っていただける場合はこちら!MapReduceによる分散コンピューティングConsistent hashingScatter gatherContributeクレジットクレジット及び、参照ページは適時このリポジトリ内に記載してありますSpecial thanks to:Hired in techCracking the coding interviewHigh scalabilitycheckcheckzz/system-design-interviewshashank88/system_designmmcgrana/services-engineeringSystem design cheat sheetA distributed systems reading listCracking the system design interviewContact infoFeel free to contact me to discuss any issues, questions, or comments.My contact info can be found on my GitHub page.LicenseI am providing code and resources in this repository to you under an open source license.  Because this is my personal repository, the license you receive to my code and resources is from me and not my employer (Facebook).Copyright 2017 Donne MartinCreative Commons Attribution 4.0 International License (CC BY 4.0)http://creativecommons.org/licenses/by/4.0/"
31,31,AUTOMATIC1111/stable-diffusion-webui,https://github.com/AUTOMATIC1111/stable-diffusion-webui/blob/master/README.md,Python,"Stable Diffusion web UIA browser interface based on Gradio library for Stable Diffusion.FeaturesDetailed feature showcase with images:Original txt2img and img2img modesOne click install and run script (but you still must install python and git)OutpaintingInpaintingColor SketchPrompt MatrixStable Diffusion UpscaleAttention, specify parts of text that the model should pay more attention toa man in a ((tuxedo)) - will pay more attention to tuxedoa man in a (tuxedo:1.21) - alternative syntaxselect text and press Ctrl+Up or Ctrl+Down (or Command+Up or Command+Down if you're on a MacOS) to automatically adjust attention to selected text (code contributed by anonymous user)Loopback, run img2img processing multiple timesX/Y/Z plot, a way to draw a 3 dimensional plot of images with different parametersTextual Inversionhave as many embeddings as you want and use any names you like for themuse multiple embeddings with different numbers of vectors per tokenworks with half precision floating point numberstrain embeddings on 8GB (also reports of 6GB working)Extras tab with:GFPGAN, neural network that fixes facesCodeFormer, face restoration tool as an alternative to GFPGANRealESRGAN, neural network upscalerESRGAN, neural network upscaler with a lot of third party modelsSwinIR and Swin2SR (see here), neural network upscalersLDSR, Latent diffusion super resolution upscalingResizing aspect ratio optionsSampling method selectionAdjust sampler eta values (noise multiplier)More advanced noise setting optionsInterrupt processing at any time4GB video card support (also reports of 2GB working)Correct seeds for batchesLive prompt token length validationGeneration parametersparameters you used to generate images are saved with that imagein PNG chunks for PNG, in EXIF for JPEGcan drag the image to PNG info tab to restore generation parameters and automatically copy them into UIcan be disabled in settingsdrag and drop an image/text-parameters to promptboxRead Generation Parameters Button, loads parameters in promptbox to UISettings pageRunning arbitrary python code from UI (must run with --allow-code to enable)Mouseover hints for most UI elementsPossible to change defaults/mix/max/step values for UI elements via text configTiling support, a checkbox to create images that can be tiled like texturesProgress bar and live image generation previewCan use a separate neural network to produce previews with almost none VRAM or compute requirementNegative prompt, an extra text field that allows you to list what you don't want to see in generated imageStyles, a way to save part of prompt and easily apply them via dropdown laterVariations, a way to generate same image but with tiny differencesSeed resizing, a way to generate same image but at slightly different resolutionCLIP interrogator, a button that tries to guess prompt from an imagePrompt Editing, a way to change prompt mid-generation, say to start making a watermelon and switch to anime girl midwayBatch Processing, process a group of files using img2imgImg2img Alternative, reverse Euler method of cross attention controlHighres Fix, a convenience option to produce high resolution pictures in one click without usual distortionsReloading checkpoints on the flyCheckpoint Merger, a tab that allows you to merge up to 3 checkpoints into oneCustom scripts with many extensions from communityComposable-Diffusion, a way to use multiple prompts at onceseparate prompts using uppercase ANDalso supports weights for prompts: a cat :1.2 AND a dog AND a penguin :2.2No token limit for prompts (original stable diffusion lets you use up to 75 tokens)DeepDanbooru integration, creates danbooru style tags for anime promptsxformers, major speed increase for select cards: (add --xformers to commandline args)via extension: History tab: view, direct and delete images conveniently within the UIGenerate forever optionTraining tabhypernetworks and embeddings optionsPreprocessing images: cropping, mirroring, autotagging using BLIP or deepdanbooru (for anime)Clip skipHypernetworksLoras (same as Hypernetworks but more pretty)A sparate UI where you can choose, with preview, which embeddings, hypernetworks or Loras to add to your promptCan select to load a different VAE from settings screenEstimated completion time in progress barAPISupport for dedicated inpainting model by RunwayMLvia extension: Aesthetic Gradients, a way to generate images with a specific aesthetic by using clip images embeds (implementation of https://github.com/vicgalle/stable-diffusion-aesthetic-gradients)Stable Diffusion 2.0 support - see wiki for instructionsAlt-Diffusion support - see wiki for instructionsNow without any bad letters!Load checkpoints in safetensors formatEased resolution restriction: generated image's domension must be a multiple of 8 rather than 64Now with a license!Reorder elements in the UI from settings screenInstallation and RunningMake sure the required dependencies are met and follow the instructions available for both NVidia (recommended) and AMD GPUs.Alternatively, use online services (like Google Colab):List of Online ServicesInstallation on Windows 10/11 with NVidia-GPUs using release packageDownload sd.webui.zip from v1.0.0-pre and extract it's contents.Run update.bat.Run run.bat.For more details see Install-and-Run-on-NVidia-GPUsAutomatic Installation on WindowsInstall Python 3.10.6 (Newer version of Python does not support torch), checking \""Add Python to PATH\"".Install git.Download the stable-diffusion-webui repository, for example by running git clone https://github.com/AUTOMATIC1111/stable-diffusion-webui.git.Run webui-user.bat from Windows Explorer as normal, non-administrator, user.Automatic Installation on LinuxInstall the dependencies:# Debian-based:sudo apt install wget git python3 python3-venv# Red Hat-based:sudo dnf install wget git python3# Arch-based:sudo pacman -S wget git python3Navigate to the directory you would like the webui to be installed and execute the following command:bash <(wget -qO- https://raw.githubusercontent.com/AUTOMATIC1111/stable-diffusion-webui/master/webui.sh)Run webui.sh.Check webui-user.sh for options.Installation on Apple SiliconFind the instructions here.ContributingHere's how to add code to this repo: ContributingDocumentationThe documentation was moved from this README over to the project's wiki.For the purposes of getting Google and other search engines to crawl the wiki, here's a link to the (not for humans) crawlable wiki.CreditsLicenses for borrowed code can be found in Settings -> Licenses screen, and also in html/licenses.html file.Stable Diffusion - https://github.com/CompVis/stable-diffusion, https://github.com/CompVis/taming-transformersk-diffusion - https://github.com/crowsonkb/k-diffusion.gitGFPGAN - https://github.com/TencentARC/GFPGAN.gitCodeFormer - https://github.com/sczhou/CodeFormerESRGAN - https://github.com/xinntao/ESRGANSwinIR - https://github.com/JingyunLiang/SwinIRSwin2SR - https://github.com/mv-lab/swin2srLDSR - https://github.com/Hafiidz/latent-diffusionMiDaS - https://github.com/isl-org/MiDaSIdeas for optimizations - https://github.com/basujindal/stable-diffusionCross Attention layer optimization - Doggettx - https://github.com/Doggettx/stable-diffusion, original idea for prompt editing.Cross Attention layer optimization - InvokeAI, lstein - https://github.com/invoke-ai/InvokeAI (originally http://github.com/lstein/stable-diffusion)Sub-quadratic Cross Attention layer optimization - Alex Birch (Birch-san/diffusers#1), Amin Rezaei (https://github.com/AminRezaei0x443/memory-efficient-attention)Textual Inversion - Rinon Gal - https://github.com/rinongal/textual_inversion (we're not using his code, but we are using his ideas).Idea for SD upscale - https://github.com/jquesnelle/txt2imghdNoise generation for outpainting mk2 - https://github.com/parlance-zz/g-diffuser-botCLIP interrogator idea and borrowing some code - https://github.com/pharmapsychotic/clip-interrogatorIdea for Composable Diffusion - https://github.com/energy-based-model/Compositional-Visual-Generation-with-Composable-Diffusion-Models-PyTorchxformers - https://github.com/facebookresearch/xformersDeepDanbooru - interrogator for anime diffusers https://github.com/KichangKim/DeepDanbooruSampling in float32 precision from a float16 UNet - marunine for the idea, Birch-san for the example Diffusers implementation (https://github.com/Birch-san/diffusers-play/tree/92feee6)Instruct pix2pix - Tim Brooks (star), Aleksander Holynski (star), Alexei A. Efros (no star) - https://github.com/timothybrooks/instruct-pix2pixSecurity advice - RyotaKUniPC sampler - Wenliang Zhao - https://github.com/wl-zhao/UniPCTAESD - Ollin Boer Bohan - https://github.com/madebyollin/taesdLyCORIS - KohakuBlueleafInitial Gradio script - posted on 4chan by an Anonymous user. Thank you Anonymous user.(You)"
32,32,geekcomputers/Python,https://github.com/geekcomputers/Python/blob/master/README.md,Python,"My Python Eggs 🐍 😄I do not consider myself as a programmer. I create these little programs as experiments to play with Python, or to solve problems for myself. I would gladly accept pointers from others to improve, simplify, or make the code more efficient. If you would like to make any comments then please feel free to email me: craig@geekcomputers.co.uk.This repository contains a collection of Python scripts that are designed to reduce human workload and serve as educational examples for beginners to get started with Python. The code documentation is aligned correctly for viewing in Notepad++ 🗒️Feel free to explore the scripts and use them for your learning and automation needs!List of Scripts:batch_file_rename.py - Batch rename a group of files in a specified directory, changing their extensions.create_dir_if_not_there.py - Check if a directory exists in the user's home directory. Create it if it doesn't exist.Fast Youtube Downloader - Download YouTube videos quickly with parallel threads using aria2c.Google Image Downloader - Query a given term and retrieve images from the Google Image database.dir_test.py - Test if the directory testdir exists. If not, create it.env_check.py - Check if all the required environment variables are set.blackjack.py - Casino Blackjack-21 game in Python.fileinfo.py - Show file information for a given file.folder_size.py - Scan the current directory and all subdirectories and display their sizes.logs.py - Search for all *.log files in a directory, zip them using the specified program, and date stamp them.move_files_over_x_days.py - Move all files over a specified age (in days) from the source directory to the destination directory.nslookup_check.py - Open the file server_list.txt and perform nslookup for each server to check the DNS entry.osinfo.py - Display information about the operating system on which the script is running.ping_servers.py - Ping the servers associated with the specified application group.ping_subnet.py - Scan the final range of a given IP subnet for available addresses.powerdown_startup.py - Ping machines in the server list. Load the putty session if the machine is up, or notify if it is not.puttylogs.py - Zip all the logs in the given directory.script_count.py - Scan the scripts directory and count the different types of scripts.get_youtube_view.py - Get more views for YouTube videos and repeat songs on YouTube.script_listing.py - List all files in a given directory and its subdirectories.testlines.py - Open a file and print out 100 lines of the set line variable.tweeter.py - Tweet text or a picture from the terminal.serial_scanner.py - List available serial ports in use on Linux and Windows systems.get_youtube_view.py - Get more views for YouTube videos and repeat songs on YouTube.CountMillionCharacter.py and CountMillionCharacter2.0 - Get character count of a text file.xkcd_downloader.py - Download the latest XKCD comic and place them in a new folder called \""comics\"".timymodule.py - An alternative to Python's 'timeit' module and easier to use.calculator.py - Implement a calculator using Python's eval() function.Google_News.py - Use BeautifulSoup to provide latest news headlines along with news links.cricket_live_score - Use BeautifulSoup to provide live cricket scores.youtube.py - Take a song name as input and fetch the YouTube URL of the best matching song and play it.site_health.py - Check the health of a remote server.SimpleStopWatch.py - Simple stop watch implementation using Python's time module.Changemac.py - Change your MAC address, generate a random MAC address, or enter input as a new MAC address on Linux (Successfully Tested in Ubuntu 18.04).whatsapp-monitor.py - Use Selenium to give online status updates about your contacts in WhatsApp on the terminal.whatsapp-chat-analyzer.py - WhatsApp group/individual chat analyzer that visualizes chat activity using matplotlib.JARVIS.py - Control Windows programs with your voice.Images Downloader - Download images from webpages on Unix-based systems.space_invader.py.py - Classical 2D space invader game to recall your childhood memories.Test Case Generator - Generate different types of test cases with a clean and friendly UI, used in competitive programming and software testing.Note: The content in this repository belongs to the respective authors and creators. I'm just providing a formatted README.md for better presentation."
33,33,AntonOsika/gpt-engineer,https://github.com/AntonOsika/gpt-engineer/blob/main/README.md,Python,"GPT EngineerSpecify what you want it to build, the AI asks for clarification, and then builds it.GPT Engineer is made to be easy to adapt, extend, and make your agent learn how you want your code to look. It generates an entire codebase based on a prompt.DemoProject philosophySimple to get valueFlexible and easy to add new own \""AI steps\"". See steps.py.Incrementally build towards a user experience of:high level promptinggiving feedback to the AI that it will remember over timeFast handovers back and forth between AI and humanSimplicity, all computation is \""resumable\"" and persisted to the filesystemUsageChoose either stable or development.For stable release:python -m pip install gpt-engineerFor development:git clone https://github.com/AntonOsika/gpt-engineer.gitcd gpt-engineerpython -m pip install -e .(or: make install && source venv/bin/activate for a venv)API KeyEither just:export OPENAI_API_KEY=[your api key]Or:Create a copy of .env.template named .envAdd your OPENAI_API_KEY in .envCheck the Windows README for windows usage.RunningCreate an empty folder. If inside the repo, you can run:cp -r projects/example/ projects/my-new-projectFill in the prompt file in your new foldergpt-engineer projects/my-new-project(Note, gpt-engineer --help lets you see all available options. For example --steps use_feedback lets you improve/fix code in a project)By running gpt-engineer you agree to our terms.ResultsCheck the generated files in projects/my-new-project/workspaceAlternativesYou can check Docker instructions to use Docker, or simplydo everything in your browser:FeaturesYou can specify the \""identity\"" of the AI agent by editing the files in the preprompts folder.Editing the preprompts, and evolving how you write the project prompt, is how you make the agent remember things between projects.Each step in steps.py will have its communication history with GPT4 stored in the logs folder, and can be rerun with scripts/rerun_edited_message_logs.py.VisionThe gpt-engineer community is building the open platform for devs to tinker with and build their personal code-generation toolbox.If you are interested in contributing to this, we would be interested in having you.If you want to see our broader ambitions, check out the roadmap, and joindiscordto get input on how you can contribute to it.We are currently looking for more maintainers and community organizers. Email anton.osika@gmail.com if you are interested in an official role.Example              Demo.mov          "
34,34,facebookresearch/Detectron,https://github.com/facebookresearch/Detectron/blob/main/README.md,Python,"Detectron is deprecated. Please see detectron2, a ground-up rewrite of Detectron in PyTorch.DetectronDetectron is Facebook AI Research's software system that implements state-of-the-art object detection algorithms, including Mask R-CNN. It is written in Python and powered by the Caffe2 deep learning framework.At FAIR, Detectron has enabled numerous research projects, including: Feature Pyramid Networks for Object Detection, Mask R-CNN, Detecting and Recognizing Human-Object Interactions, Focal Loss for Dense Object Detection, Non-local Neural Networks, Learning to Segment Every Thing, Data Distillation: Towards Omni-Supervised Learning, DensePose: Dense Human Pose Estimation In The Wild, and Group Normalization.    Example Mask R-CNN output.IntroductionThe goal of Detectron is to provide a high-quality, high-performancecodebase for object detection research. It is designed to be flexible in orderto support rapid implementation and evaluation of novel research. Detectronincludes implementations of the following object detection algorithms:Mask R-CNN -- Marr Prize at ICCV 2017RetinaNet -- Best Student Paper Award at ICCV 2017Faster R-CNNRPNFast R-CNNR-FCNusing the following backbone network architectures:ResNeXt{50,101,152}ResNet{50,101,152}Feature Pyramid Networks (with ResNet/ResNeXt)VGG16Additional backbone architectures may be easily implemented. For more details about these models, please see References below.Update4/2018: Support Group Normalization - see GN/README.mdLicenseDetectron is released under the Apache 2.0 license. See the NOTICE file for additional details.Citing DetectronIf you use Detectron in your research or wish to refer to the baseline results published in the Model Zoo, please use the following BibTeX entry.@misc{Detectron2018,  author =       {Ross Girshick and Ilija Radosavovic and Georgia Gkioxari and                  Piotr Doll\\'{a}r and Kaiming He},  title =        {Detectron},  howpublished = {\\url{https://github.com/facebookresearch/detectron}},  year =         {2018}}Model Zoo and BaselinesWe provide a large set of baseline results and trained models available for download in the Detectron Model Zoo.InstallationPlease find installation instructions for Caffe2 and Detectron in INSTALL.md.Quick Start: Using DetectronAfter installation, please see GETTING_STARTED.md for brief tutorials covering inference and training with Detectron.Getting HelpTo start, please check the troubleshooting section of our installation instructions as well as our FAQ. If you couldn't find help there, try searching our GitHub issues. We intend the issues page to be a forum in which the community collectively troubleshoots problems.If bugs are found, we appreciate pull requests (including adding Q&A's to FAQ.md and improving our installation instructions and troubleshooting documents). Please see CONTRIBUTING.md for more information about contributing to Detectron.ReferencesData Distillation: Towards Omni-Supervised Learning.Ilija Radosavovic, Piotr Dollár, Ross Girshick, Georgia Gkioxari, and Kaiming He.Tech report, arXiv, Dec. 2017.Learning to Segment Every Thing.Ronghang Hu, Piotr Dollár, Kaiming He, Trevor Darrell, and Ross Girshick.Tech report, arXiv, Nov. 2017.Non-Local Neural Networks.Xiaolong Wang, Ross Girshick, Abhinav Gupta, and Kaiming He.Tech report, arXiv, Nov. 2017.Mask R-CNN.Kaiming He, Georgia Gkioxari, Piotr Dollár, and Ross Girshick.IEEE International Conference on Computer Vision (ICCV), 2017.Focal Loss for Dense Object Detection.Tsung-Yi Lin, Priya Goyal, Ross Girshick, Kaiming He, and Piotr Dollár.IEEE International Conference on Computer Vision (ICCV), 2017.Accurate, Large Minibatch SGD: Training ImageNet in 1 Hour.Priya Goyal, Piotr Dollár, Ross Girshick, Pieter Noordhuis, Lukasz Wesolowski, Aapo Kyrola, Andrew Tulloch, Yangqing Jia, and Kaiming He.Tech report, arXiv, June 2017.Detecting and Recognizing Human-Object Interactions.Georgia Gkioxari, Ross Girshick, Piotr Dollár, and Kaiming He.Tech report, arXiv, Apr. 2017.Feature Pyramid Networks for Object Detection.Tsung-Yi Lin, Piotr Dollár, Ross Girshick, Kaiming He, Bharath Hariharan, and Serge Belongie.IEEE Conference on Computer Vision and Pattern Recognition (CVPR), 2017.Aggregated Residual Transformations for Deep Neural Networks.Saining Xie, Ross Girshick, Piotr Dollár, Zhuowen Tu, and Kaiming He.IEEE Conference on Computer Vision and Pattern Recognition (CVPR), 2017.R-FCN: Object Detection via Region-based Fully Convolutional Networks.Jifeng Dai, Yi Li, Kaiming He, and Jian Sun.Conference on Neural Information Processing Systems (NIPS), 2016.Deep Residual Learning for Image Recognition.Kaiming He, Xiangyu Zhang, Shaoqing Ren, and Jian Sun.IEEE Conference on Computer Vision and Pattern Recognition (CVPR), 2016.Faster R-CNN: Towards Real-Time Object Detection with Region Proposal NetworksShaoqing Ren, Kaiming He, Ross Girshick, and Jian Sun.Conference on Neural Information Processing Systems (NIPS), 2015.Fast R-CNN.Ross Girshick.IEEE International Conference on Computer Vision (ICCV), 2015."
35,35,Jack-Cherish/Machine-Learning,https://github.com/Jack-Cherish/Machine-Learning/blob/master/README-eng.md,Python,"Machine-Learning中文（简体）Rome was not built in a dayBlogMachine-Learning in Practice (Detailed Comments + Training Datasets), Keep updating!Welcome to my[CSDN Column]Follow me on[Zhihu Column]QQ Group for Communication[328127489]My Website: http://cuijiahua.com/Article DebutDebut articles on my website and forward on orther platforms, click here to get the latest development: http://cuijiahua.com/Chapt. 2: K-Nearest Neighbors AlgorithmArticlePersonal WebsiteCSDNZhihuPython3  study notes (I): K-Nearest Neighbors Algorithm (Gorgeous and Splendid Tutorial)Personal WebsiteCSDNZhihuCode1. Entry Level k-NN2. Miss Helen Dating History3. Digits RecognitionChapt. 3: Decision TreeArticlePersonal WebsiteCSDNZhihuPython3  study notes (II): Decision Tree (Basic Concepts): Let's Start from DatingPersonal WebsiteCSDNZhihuPython3  study notes (III): Decision Tree (In Practice): I'm Looking for a Pair of Contact LensesPersonal WebsiteCSDNZhihuCode1. Loan Prediction2. Contact LensesChapt. 4: Navie BayesArticlePersonal WebsiteCSDNZhihuPython3 Python3  study notes (IV): Navie Bayes (Basic Concepts): Comment FilterPersonal WebsiteCSDNZhihuPython3 Python3  study notes (V): Navie Bayes (In Practice): Catalogues of Sina NewsPersonal WebsiteCSDNZhihuCode1. Comment Filter2. Spam Filter3. News CataloguesChapt. 5: Logistic RegressionArticlePersonal WebsiteCSDNZhihuPython3  study notes (VI): Logistic Regression (Basic Concepts): Gradient Ascent AlgorithmPersonal WebsiteCSDNZhihuPython3  study notes (VII): Logistic Regression (In Practice): Prediction of Horse MortalityPersonal WebsiteCSDNZhihuCode1. Entry Level Exercise for Logistic Regression2. Improved Random Gradient Ascent Algorithm3. Prediction of Horse MortalityChapt. 6: SVM (Support Vector Machine)ArticlePersonal WebsiteCSDNZhihuPython3  study notes (VIII): SVM (Basic Concepts): a Handcraft on Linear SVMPersonal WebsiteCSDNZhihuPython3  study notes (IX): SVM (In Practice): Another Handcraft on Nonlinear SVMPersonal WebsiteCSDNZhihuCode1. Simplified SMO Alogrithm2. Complete SMO Alogrithm3. Nonlinear SVM Alogrithm4. Sklearn SVCChapt. 7: AdaBoostArticlePersonal WebsiteCSDNZhihuPython3  study notes (X): Classifier Sharpener -- AdaBoostPersonal WebsiteCSDNZhihuCode1. Training Process of AdaBoost Based On Decision Stump2. AdaBoost on Hard Datasets3. Implement AdaBoost by sklearn4. ROC Curve PlotChapt. 8: Linear RegressionArticlePersonal WebsiteCSDNZhihuPython3  study notes (XI):Personal WebsiteCSDNZhihuPython3  study notes (XII):Personal WebsitenonoCode1. Linear Regression(Ordinary LR + Locally Weighted LR)2. Predicting the Age of Abalones(Ormers)3. Stepwise Regression4. Predicting the Price of Second Hand LegoChapt. 9: Regression TreeArticlePersonal WebsiteCSDNZhihuPython3  study notes (XIII): Regression Tree (Basic Concepts): CART Alogrithm and PruningPersonal WebsitenonoCode1. Regression Tree"
36,36,jenkins-docs/simple-python-pyinstaller-app,https://github.com/jenkins-docs/simple-python-pyinstaller-app/blob/master/README.md,Python,"simple-python-pyinstaller-appThis repository is for theBuild a Python app with PyInstallertutorial in the Jenkins User Documentation.The repository contains a simple Python application which is a command line tool \""add2vals\"" that outputs the addition of two values. If at least one of thevalues is a string, \""add2vals\"" treats both values as a string and insteadconcatenates the values. The \""add2\"" function in the \""calc\"" library (which\""add2vals\"" imports) is accompanied by a set of unit tests. These are tested with pytest to check that this function works as expected and the results are savedto a JUnit XML report.The delivery of the \""add2vals\"" tool through PyInstaller converts this tool intoa standalone executable file for Linux, which you can download through Jenkinsand execute at the command line on Linux machines without Python.The jenkins directory contains an example of the Jenkinsfile (i.e. Pipeline)you'll be creating yourself during the tutorial."
37,37,huggingface/pytorch-image-models,https://github.com/huggingface/pytorch-image-models/blob/main/README.md,Python,"PyTorch Image ModelsSponsorsWhat's NewIntroductionModelsFeaturesResultsGetting Started (Documentation)Train, Validation, Inference ScriptsAwesome PyTorch ResourcesLicensesCitingSponsorsThanks to the following for hardware support:TPU Research Cloud (TRC) (https://sites.research.google/trc/about/)Nvidia (https://www.nvidia.com/en-us/)And a big thanks to all GitHub sponsors who helped with some of my costs before I joined Hugging Face.What's New❗Updates after Oct 10, 2022 are available in version >= 0.9❗Many changes since the last 0.6.x stable releases. They were previewed in 0.8.x dev releases but not everyone transitioned.timm.models.layers moved to timm.layers:from timm.models.layers import name will still work via deprecation mapping (but please transition to timm.layers).import timm.models.layers.module or from timm.models.layers.module import name needs to be changed now.Builder, helper, non-model modules in timm.models have a _ prefix added, ie timm.models.helpers -> timm.models._helpers, there are temporary deprecation mapping files but those will be removed.All models now support architecture.pretrained_tag naming (ex resnet50.rsb_a1).The pretrained_tag is the specific weight variant (different head) for the architecture.Using only architecture defaults to the first weights in the default_cfgs for that model architecture.In adding pretrained tags, many model names that existed to differentiate were renamed to use the tag  (ex: vit_base_patch16_224_in21k -> vit_base_patch16_224.augreg_in21k). There are deprecation mappings for these.A number of models had their checkpoints remaped to match architecture changes needed to better support features_only=True, there are checkpoint_filter_fn methods in any model module that was remapped. These can be passed to timm.models.load_checkpoint(..., filter_fn=timm.models.swin_transformer_v2.checkpoint_filter_fn) to remap your existing checkpoint.The Hugging Face Hub (https://huggingface.co/timm) is now the primary source for timm weights. Model cards include link to papers, original source, license.Previous 0.6.x can be cloned from 0.6.x branch or installed via pip with version.Aug 3, 2023Add GluonCV weights for HRNet w18_small and w18_small_v2. Converted by SeeFunFix selecsls* model naming regressionPatch and position embedding for ViT/EVA works for bfloat16/float16 weights on load (or activations for on-the-fly resize)v0.9.5 release prepJuly 27, 2023Added timm trained seresnextaa201d_32x8d.sw_in12k_ft_in1k_384 weights (and .sw_in12k pretrain) with 87.3% top-1 on ImageNet-1k, best ImageNet ResNet family model I'm aware of.RepViT model and weights (https://arxiv.org/abs/2307.09283) added by wangaoI-JEPA ViT feature weights (no classifier) added by SeeFunSAM-ViT (segment anything) feature weights (no classifier) added by SeeFunAdd support for alternative feat extraction methods and -ve indices to EfficientNetAdd NAdamW optimizerMisc fixesMay 11, 2023timm 0.9 released, transition from 0.8.xdev releasesMay 10, 2023Hugging Face Hub downloading is now default, 1132 models on https://huggingface.co/timm, 1163 weights in timmDINOv2 vit feature backbone weights added thanks to Leng YueFB MAE vit feature backbone weights addedOpenCLIP DataComp-XL L/14 feat backbone weights addedMetaFormer (poolformer-v2, caformer, convformer, updated poolformer (v1)) w/ weights added by Fredo GuanExperimental get_intermediate_layers function on vit/deit models for grabbing hidden states (inspired by DINO impl). This is WIP and may change significantly... feedback welcome.Model creation throws error if pretrained=True and no weights exist (instead of continuing with random initialization)Fix regression with inception / nasnet TF sourced weights with 1001 classes in original classifiersbitsandbytes (https://github.com/TimDettmers/bitsandbytes) optimizers added to factory, use bnb prefix, ie bnbadam8bitMisc cleanup and fixesFinal testing before switching to a 0.9 and bringing timm out of pre-release stateApril 27, 202397% of timm models uploaded to HF Hub and almost all updated to support multi-weight pretrained configsMinor cleanup and refactoring of another batch of models as multi-weight added. More fused_attn (F.sdpa) and features_only support, and torchscript fixes.April 21, 2023Gradient accumulation support added to train script and tested (--grad-accum-steps), thanks Taeksang KimMore weights on HF Hub (cspnet, cait, volo, xcit, tresnet, hardcorenas, densenet, dpn, vovnet, xception_aligned)Added --head-init-scale and --head-init-bias to train.py to scale classiifer head and set fixed bias for fine-tuneRemove all InplaceABN (inplace_abn) use, replaced use in tresnet with standard BatchNorm (modified weights accordingly).April 12, 2023Add ONNX export script, validate script, helpers that I've had kicking around for along time. Tweak 'same' padding for better export w/ recent ONNX + pytorch.Refactor dropout args for vit and vit-like models, separate drop_rate into drop_rate (classifier dropout), proj_drop_rate (block mlp / out projections), pos_drop_rate (position embedding drop), attn_drop_rate (attention dropout). Also add patch dropout (FLIP) to vit and eva models.fused F.scaled_dot_product_attention support to more vit models, add env var (TIMM_FUSED_ATTN) to control, and config interface to enable/disableAdd EVA-CLIP backbones w/ image tower weights, all the way up to 4B param 'enormous' model, and 336x336 OpenAI ViT mode that was missed.April 5, 2023ALL ResNet models pushed to Hugging Face Hub with multi-weight supportAll past timm trained weights added with recipe based tags to differentiateAll ResNet strikes back A1/A2/A3 (seed 0) and R50 example B/C1/C2/D weights availableAdd torchvision v2 recipe weights to existing torchvision originalsSee comparison table in https://huggingface.co/timm/seresnextaa101d_32x8d.sw_in12k_ft_in1k_288#model-comparisonNew ImageNet-12k + ImageNet-1k fine-tunes available for a few anti-aliased ResNet modelsresnetaa50d.sw_in12k_ft_in1k - 81.7 @ 224, 82.6 @ 288resnetaa101d.sw_in12k_ft_in1k - 83.5 @ 224, 84.1 @ 288seresnextaa101d_32x8d.sw_in12k_ft_in1k - 86.0 @ 224, 86.5 @ 288seresnextaa101d_32x8d.sw_in12k_ft_in1k_288 - 86.5 @ 288, 86.7 @ 320March 31, 2023Add first ConvNext-XXLarge CLIP -> IN-1k fine-tune and IN-12k intermediate fine-tunes for convnext-base/large CLIP models.modeltop1top5img_sizeparam_countgmacsmactsconvnext_xxlarge.clip_laion2b_soup_ft_in1k88.61298.704256846.47198.09124.45convnext_large_mlp.clip_laion2b_soup_ft_in12k_in1k_38488.31298.578384200.13101.11126.74convnext_large_mlp.clip_laion2b_soup_ft_in12k_in1k_32087.96898.47320200.1370.2188.02convnext_base.clip_laion2b_augreg_ft_in12k_in1k_38487.13898.21238488.5945.2184.49convnext_base.clip_laion2b_augreg_ft_in12k_in1k86.34497.9725688.5920.0937.55Add EVA-02 MIM pretrained and fine-tuned weights, push to HF hub and update model cards for all EVA models. First model over 90% top-1 (99% top-5)! Check out the original code & weights at https://github.com/baaivision/EVA for more details on their work blending MIM, CLIP w/ many model, dataset, and train recipe tweaks.modeltop1top5param_countimg_sizeeva02_large_patch14_448.mim_m38m_ft_in22k_in1k90.05499.042305.08448eva02_large_patch14_448.mim_in22k_ft_in22k_in1k89.94699.01305.08448eva_giant_patch14_560.m30m_ft_in22k_in1k89.79298.9921014.45560eva02_large_patch14_448.mim_in22k_ft_in1k89.62698.954305.08448eva02_large_patch14_448.mim_m38m_ft_in1k89.5798.918305.08448eva_giant_patch14_336.m30m_ft_in22k_in1k89.5698.9561013.01336eva_giant_patch14_336.clip_ft_in1k89.46698.821013.01336eva_large_patch14_336.in22k_ft_in22k_in1k89.21498.854304.53336eva_giant_patch14_224.clip_ft_in1k88.88298.6781012.56224eva02_base_patch14_448.mim_in22k_ft_in22k_in1k88.69298.72287.12448eva_large_patch14_336.in22k_ft_in1k88.65298.722304.53336eva_large_patch14_196.in22k_ft_in22k_in1k88.59298.656304.14196eva02_base_patch14_448.mim_in22k_ft_in1k88.2398.56487.12448eva_large_patch14_196.in22k_ft_in1k87.93498.504304.14196eva02_small_patch14_336.mim_in22k_ft_in1k85.7497.61422.13336eva02_tiny_patch14_336.mim_in22k_ft_in1k80.65895.5245.76336Multi-weight and HF hub for DeiT and MLP-Mixer based modelsMarch 22, 2023More weights pushed to HF hub along with multi-weight support, including: regnet.py, rexnet.py, byobnet.py, resnetv2.py, swin_transformer.py, swin_transformer_v2.py, swin_transformer_v2_cr.pySwin Transformer models support feature extraction (NCHW feat maps for swinv2_cr_*, and NHWC for all others) and spatial embedding outputs.FocalNet (from https://github.com/microsoft/FocalNet) models and weights added with significant refactoring, feature extraction, no fixed resolution / sizing constraintRegNet weights increased with HF hub push, SWAG, SEER, and torchvision v2 weights. SEER is pretty poor wrt to performance for model size, but possibly useful.More ImageNet-12k pretrained and 1k fine-tuned timm weights:rexnetr_200.sw_in12k_ft_in1k - 82.6 @ 224, 83.2 @ 288rexnetr_300.sw_in12k_ft_in1k - 84.0 @ 224, 84.5 @ 288regnety_120.sw_in12k_ft_in1k - 85.0 @ 224, 85.4 @ 288regnety_160.lion_in12k_ft_in1k - 85.6 @ 224, 86.0 @ 288regnety_160.sw_in12k_ft_in1k - 85.6 @ 224, 86.0 @ 288  (compare to SWAG PT + 1k FT this is same BUT much lower res, blows SEER FT away)Model name deprecation + remapping functionality added (a milestone for bringing 0.8.x out of pre-release). Mappings being added...Minor bug fixes and improvements.Feb 26, 2023Add ConvNeXt-XXLarge CLIP pretrained image tower weights for fine-tune & features (fine-tuning TBD) -- see model cardUpdate convnext_xxlarge default LayerNorm eps to 1e-5 (for CLIP weights, improved stability)0.8.15dev0Feb 20, 2023Add 320x320 convnext_large_mlp.clip_laion2b_ft_320 and convnext_lage_mlp.clip_laion2b_ft_soup_320 CLIP image tower weights for features & fine-tune0.8.13dev0 pypi release for latest changes w/ move to huggingface orgFeb 16, 2023safetensor checkpoint support addedAdd ideas from 'Scaling Vision Transformers to 22 B. Params' (https://arxiv.org/abs/2302.05442) -- qk norm, RmsNorm, parallel blockAdd F.scaled_dot_product_attention support (PyTorch 2.0 only) to vit_*, vit_relpos*, coatnet / maxxvit (to start)Lion optimizer (w/ multi-tensor option) added (https://arxiv.org/abs/2302.06675)gradient checkpointing works with features_only=TrueFeb 7, 2023New inference benchmark numbers added in results folder.Add convnext LAION CLIP trained weights and initial set of in1k fine-tunesconvnext_base.clip_laion2b_augreg_ft_in1k - 86.2% @ 256x256convnext_base.clip_laiona_augreg_ft_in1k_384 - 86.5% @ 384x384convnext_large_mlp.clip_laion2b_augreg_ft_in1k - 87.3% @ 256x256convnext_large_mlp.clip_laion2b_augreg_ft_in1k_384 - 87.9% @ 384x384Add DaViT models. Supports features_only=True. Adapted from https://github.com/dingmyu/davit by Fredo.Use a common NormMlpClassifierHead across MaxViT, ConvNeXt, DaViTAdd EfficientFormer-V2 model, update EfficientFormer, and refactor LeViT (closely related architectures). Weights on HF hub.New EfficientFormer-V2 arch, significant refactor from original at (https://github.com/snap-research/EfficientFormer). Supports features_only=True.Minor updates to EfficientFormer.Refactor LeViT models to stages, add features_only=True support to new conv variants, weight remap required.Move ImageNet meta-data (synsets, indices) from /results to timm/data/_info.Add ImageNetInfo / DatasetInfo classes to provide labelling for various ImageNet classifier layouts in timmUpdate inference.py to use, try: python inference.py /folder/to/images --model convnext_small.in12k --label-type detail --topk 5Ready for 0.8.10 pypi pre-release (final testing).Jan 20, 2023Add two convnext 12k -> 1k fine-tunes at 384x384convnext_tiny.in12k_ft_in1k_384 - 85.1 @ 384convnext_small.in12k_ft_in1k_384 - 86.2 @ 384Push all MaxxViT weights to HF hub, and add new ImageNet-12k -> 1k fine-tunes for rw base MaxViT and CoAtNet 1/2 modelsmodeltop1top5samples / secParams (M)GMACAct (M)maxvit_xlarge_tf_512.in21k_ft_in1k88.5398.6421.76475.77534.141413.22maxvit_xlarge_tf_384.in21k_ft_in1k88.3298.5442.53475.32292.78668.76maxvit_base_tf_512.in21k_ft_in1k88.2098.5350.87119.88138.02703.99maxvit_large_tf_512.in21k_ft_in1k88.0498.4036.42212.33244.75942.15maxvit_large_tf_384.in21k_ft_in1k87.9898.5671.75212.03132.55445.84maxvit_base_tf_384.in21k_ft_in1k87.9298.54104.71119.6573.80332.90maxvit_rmlp_base_rw_384.sw_in12k_ft_in1k87.8198.37106.55116.1470.97318.95maxxvitv2_rmlp_base_rw_384.sw_in12k_ft_in1k87.4798.37149.49116.0972.98213.74coatnet_rmlp_2_rw_384.sw_in12k_ft_in1k87.3998.31160.8073.8847.69209.43maxvit_rmlp_base_rw_224.sw_in12k_ft_in1k86.8998.02375.86116.1423.1592.64maxxvitv2_rmlp_base_rw_224.sw_in12k_ft_in1k86.6498.02501.03116.0924.2062.77maxvit_base_tf_512.in1k86.6097.9250.75119.88138.02703.99coatnet_2_rw_224.sw_in12k_ft_in1k86.5797.89631.8873.8715.0949.22maxvit_large_tf_512.in1k86.5297.8836.04212.33244.75942.15coatnet_rmlp_2_rw_224.sw_in12k_ft_in1k86.4997.90620.5873.8815.1854.78maxvit_base_tf_384.in1k86.2997.80101.09119.6573.80332.90maxvit_large_tf_384.in1k86.2397.6970.56212.03132.55445.84maxvit_small_tf_512.in1k86.1097.7688.6369.1367.26383.77maxvit_tiny_tf_512.in1k85.6797.58144.2531.0533.49257.59maxvit_small_tf_384.in1k85.5497.46188.3569.0235.87183.65maxvit_tiny_tf_384.in1k85.1197.38293.4630.9817.53123.42maxvit_large_tf_224.in1k84.9396.97247.71211.7943.68127.35coatnet_rmlp_1_rw2_224.sw_in12k_ft_in1k84.9096.961025.4541.728.1140.13maxvit_base_tf_224.in1k84.8596.99358.25119.4724.0495.01maxxvit_rmlp_small_rw_256.sw_in1k84.6397.06575.5366.0114.6758.38coatnet_rmlp_2_rw_224.sw_in1k84.6196.74625.8173.8815.1854.78maxvit_rmlp_small_rw_224.sw_in1k84.4996.76693.8264.9010.7549.30maxvit_small_tf_224.in1k84.4396.83647.9668.9311.6653.17maxvit_rmlp_tiny_rw_256.sw_in1k84.2396.78807.2129.156.7746.92coatnet_1_rw_224.sw_in1k83.6296.38989.5941.728.0434.60maxvit_tiny_rw_224.sw_in1k83.5096.501100.5329.065.1133.11maxvit_tiny_tf_224.in1k83.4196.591004.9430.925.6035.78coatnet_rmlp_1_rw_224.sw_in1k83.3696.451093.0341.697.8535.47maxxvitv2_nano_rw_256.sw_in1k83.1196.331276.8823.706.2623.05maxxvit_rmlp_nano_rw_256.sw_in1k83.0396.341341.2416.784.3726.05maxvit_rmlp_nano_rw_256.sw_in1k82.9696.261283.2415.504.4731.92maxvit_nano_rw_256.sw_in1k82.9396.231218.1715.454.4630.28coatnet_bn_0_rw_224.sw_in1k82.3996.191600.1427.444.6722.04coatnet_0_rw_224.sw_in1k82.3995.841831.2127.444.4318.73coatnet_rmlp_nano_rw_224.sw_in1k82.0595.872109.0915.152.6220.34coatnext_nano_rw_224.sw_in1k81.9595.922525.5214.702.4712.80coatnet_nano_rw_224.sw_in1k81.7095.642344.5215.142.4115.41maxvit_rmlp_pico_rw_256.sw_in1k80.5395.211594.717.521.8524.86Jan 11, 2023Update ConvNeXt ImageNet-12k pretrain series w/ two new fine-tuned weights (and pre FT .in12k tags)convnext_nano.in12k_ft_in1k - 82.3 @ 224, 82.9 @ 288  (previously released)convnext_tiny.in12k_ft_in1k - 84.2 @ 224, 84.5 @ 288convnext_small.in12k_ft_in1k - 85.2 @ 224, 85.3 @ 288Jan 6, 2023Finally got around to adding --model-kwargs and --opt-kwargs to scripts to pass through rare args directly to model classes from cmd linetrain.py /imagenet --model resnet50 --amp --model-kwargs output_stride=16 act_layer=silutrain.py /imagenet --model vit_base_patch16_clip_224 --img-size 240 --amp --model-kwargs img_size=240 patch_size=12Cleanup some popular models to better support arg passthrough / merge with model configs, more to go.Jan 5, 2023ConvNeXt-V2 models and weights added to existing convnext.pyPaper: ConvNeXt V2: Co-designing and Scaling ConvNets with Masked AutoencodersReference impl: https://github.com/facebookresearch/ConvNeXt-V2 (NOTE: weights currently CC-BY-NC)Dec 23, 2022 🎄☃Add FlexiViT models and weights from https://github.com/google-research/big_vision (check out paper at https://arxiv.org/abs/2212.08013)NOTE currently resizing is static on model creation, on-the-fly dynamic / train patch size sampling is a WIPMany more models updated to multi-weight and downloadable via HF hub now (convnext, efficientnet, mobilenet, vision_transformer*, beit)More model pretrained tag and adjustments, some model names changed (working on deprecation translations, consider main branch DEV branch right now, use 0.6.x for stable use)More ImageNet-12k (subset of 22k) pretrain models popping up:efficientnet_b5.in12k_ft_in1k - 85.9 @ 448x448vit_medium_patch16_gap_384.in12k_ft_in1k - 85.5 @ 384x384vit_medium_patch16_gap_256.in12k_ft_in1k - 84.5 @ 256x256convnext_nano.in12k_ft_in1k - 82.9 @ 288x288Dec 8, 2022Add 'EVA l' to vision_transformer.py, MAE style ViT-L/14 MIM pretrain w/ EVA-CLIP targets, FT on ImageNet-1k (w/ ImageNet-22k intermediate for some)original source: https://github.com/baaivision/EVAmodeltop1param_countgmacmactshubeva_large_patch14_336.in22k_ft_in22k_in1k89.2304.5191.1270.2linkeva_large_patch14_336.in22k_ft_in1k88.7304.5191.1270.2linkeva_large_patch14_196.in22k_ft_in22k_in1k88.6304.161.663.5linkeva_large_patch14_196.in22k_ft_in1k87.9304.161.663.5linkDec 6, 2022Add 'EVA g', BEiT style ViT-g/14 model weights w/ both MIM pretrain and CLIP pretrain to beit.py.original source: https://github.com/baaivision/EVApaper: https://arxiv.org/abs/2211.07636modeltop1param_countgmacmactshubeva_giant_patch14_560.m30m_ft_in22k_in1k89.81014.41906.82577.2linkeva_giant_patch14_336.m30m_ft_in22k_in1k89.61013620.6550.7linkeva_giant_patch14_336.clip_ft_in1k89.41013620.6550.7linkeva_giant_patch14_224.clip_ft_in1k89.11012.6267.2192.6linkDec 5, 2022Pre-release (0.8.0dev0) of multi-weight support (model_arch.pretrained_tag). Install with pip install --pre timmvision_transformer, maxvit, convnext are the first three model impl w/ supportmodel names are changing with this (previous _21k, etc. fn will merge), still sorting out deprecation handlingbugs are likely, but I need feedback so please try it outif stability is needed, please use 0.6.x pypi releases or clone from 0.6.x branchSupport for PyTorch 2.0 compile is added in train/validate/inference/benchmark, use --torchcompile argumentInference script allows more control over output, select k for top-class index + prob json, csv or parquet outputAdd a full set of fine-tuned CLIP image tower weights from both LAION-2B and original OpenAI CLIP modelsmodeltop1param_countgmacmactshubvit_huge_patch14_clip_336.laion2b_ft_in12k_in1k88.6632.5391407.5linkvit_large_patch14_clip_336.openai_ft_in12k_in1k88.3304.5191.1270.2linkvit_huge_patch14_clip_224.laion2b_ft_in12k_in1k88.2632167.4139.4linkvit_large_patch14_clip_336.laion2b_ft_in12k_in1k88.2304.5191.1270.2linkvit_large_patch14_clip_224.openai_ft_in12k_in1k88.2304.281.188.8linkvit_large_patch14_clip_224.laion2b_ft_in12k_in1k87.9304.281.188.8linkvit_large_patch14_clip_224.openai_ft_in1k87.9304.281.188.8linkvit_large_patch14_clip_336.laion2b_ft_in1k87.9304.5191.1270.2linkvit_huge_patch14_clip_224.laion2b_ft_in1k87.6632167.4139.4linkvit_large_patch14_clip_224.laion2b_ft_in1k87.3304.281.188.8linkvit_base_patch16_clip_384.laion2b_ft_in12k_in1k87.286.955.5101.6linkvit_base_patch16_clip_384.openai_ft_in12k_in1k8786.955.5101.6linkvit_base_patch16_clip_384.laion2b_ft_in1k86.686.955.5101.6linkvit_base_patch16_clip_384.openai_ft_in1k86.286.955.5101.6linkvit_base_patch16_clip_224.laion2b_ft_in12k_in1k86.286.617.623.9linkvit_base_patch16_clip_224.openai_ft_in12k_in1k85.986.617.623.9linkvit_base_patch32_clip_448.laion2b_ft_in12k_in1k85.888.317.923.9linkvit_base_patch16_clip_224.laion2b_ft_in1k85.586.617.623.9linkvit_base_patch32_clip_384.laion2b_ft_in12k_in1k85.488.313.116.5linkvit_base_patch16_clip_224.openai_ft_in1k85.386.617.623.9linkvit_base_patch32_clip_384.openai_ft_in12k_in1k85.288.313.116.5linkvit_base_patch32_clip_224.laion2b_ft_in12k_in1k83.388.24.45linkvit_base_patch32_clip_224.laion2b_ft_in1k82.688.24.45linkvit_base_patch32_clip_224.openai_ft_in1k81.988.24.45linkPort of MaxViT Tensorflow Weights from official impl at https://github.com/google-research/maxvitThere was larger than expected drops for the upscaled 384/512 in21k fine-tune weights, possible detail missing, but the 21k FT did seem sensitive to small preprocessingmodeltop1param_countgmacmactshubmaxvit_xlarge_tf_512.in21k_ft_in1k88.5475.8534.11413.2linkmaxvit_xlarge_tf_384.in21k_ft_in1k88.3475.3292.8668.8linkmaxvit_base_tf_512.in21k_ft_in1k88.2119.9138704linkmaxvit_large_tf_512.in21k_ft_in1k88212.3244.8942.2linkmaxvit_large_tf_384.in21k_ft_in1k88212132.6445.8linkmaxvit_base_tf_384.in21k_ft_in1k87.9119.673.8332.9linkmaxvit_base_tf_512.in1k86.6119.9138704linkmaxvit_large_tf_512.in1k86.5212.3244.8942.2linkmaxvit_base_tf_384.in1k86.3119.673.8332.9linkmaxvit_large_tf_384.in1k86.2212132.6445.8linkmaxvit_small_tf_512.in1k86.169.167.3383.8linkmaxvit_tiny_tf_512.in1k85.73133.5257.6linkmaxvit_small_tf_384.in1k85.56935.9183.6linkmaxvit_tiny_tf_384.in1k85.13117.5123.4linkmaxvit_large_tf_224.in1k84.9211.843.7127.4linkmaxvit_base_tf_224.in1k84.9119.52495linkmaxvit_small_tf_224.in1k84.468.911.753.2linkmaxvit_tiny_tf_224.in1k83.430.95.635.8linkOct 15, 2022Train and validation script enhancementsNon-GPU (ie CPU) device supportSLURM compatibility for train scriptHF datasets support (via ReaderHfds)TFDS/WDS dataloading improvements (sample padding/wrap for distributed use fixed wrt sample count estimate)in_chans !=3 support for scripts / loaderAdan optimizerCan enable per-step LR scheduling via argsDataset 'parsers' renamed to 'readers', more descriptive of purposeAMP args changed, APEX via --amp-impl apex, bfloat16 supportedf via --amp-dtype bfloat16main branch switched to 0.7.x version, 0.6x forked for stable release of weight only addsmaster -> main branch renameOct 10, 2022More weights in maxxvit series, incl first ConvNeXt block based coatnext and maxxvit experiments:coatnext_nano_rw_224 - 82.0 @ 224 (G) -- (uses ConvNeXt conv block, no BatchNorm)maxxvit_rmlp_nano_rw_256 - 83.0 @ 256, 83.7 @ 320  (G) (uses ConvNeXt conv block, no BN)maxvit_rmlp_small_rw_224 - 84.5 @ 224, 85.1 @ 320 (G)maxxvit_rmlp_small_rw_256 - 84.6 @ 256, 84.9 @ 288 (G) -- could be trained better, hparams need tuning (uses ConvNeXt block, no BN)coatnet_rmlp_2_rw_224 - 84.6 @ 224, 85 @ 320  (T)NOTE: official MaxVit weights (in1k) have been released at https://github.com/google-research/maxvit -- some extra work is needed to port and adapt since my impl was created independently of theirs and has a few small differences + the whole TF same padding fun.Sept 23, 2022LAION-2B CLIP image towers supported as pretrained backbones for fine-tune or features (no classifier)vit_base_patch32_224_clip_laion2bvit_large_patch14_224_clip_laion2bvit_huge_patch14_224_clip_laion2bvit_giant_patch14_224_clip_laion2bSept 7, 2022Hugging Face timm docs home now exists, look for more here in the futureAdd BEiT-v2 weights for base and large 224x224 models from https://github.com/microsoft/unilm/tree/master/beit2Add more weights in maxxvit series incl a pico (7.5M params, 1.9 GMACs), two tiny variants:maxvit_rmlp_pico_rw_256 - 80.5 @ 256, 81.3 @ 320  (T)maxvit_tiny_rw_224 - 83.5 @ 224 (G)maxvit_rmlp_tiny_rw_256 - 84.2 @ 256, 84.8 @ 320 (T)Aug 29, 2022MaxVit window size scales with img_size by default. Add new RelPosMlp MaxViT weight that leverages this:maxvit_rmlp_nano_rw_256 - 83.0 @ 256, 83.6 @ 320  (T)Aug 26, 2022CoAtNet (https://arxiv.org/abs/2106.04803) and MaxVit (https://arxiv.org/abs/2204.01697) timm original modelsboth found in maxxvit.py model def, contains numerous experiments outside scope of original papersan unfinished Tensorflow version from MaxVit authors can be found https://github.com/google-research/maxvitInitial CoAtNet and MaxVit timm pretrained weights (working on more):coatnet_nano_rw_224 - 81.7 @ 224  (T)coatnet_rmlp_nano_rw_224 - 82.0 @ 224, 82.8 @ 320 (T)coatnet_0_rw_224 - 82.4  (T)  -- NOTE timm '0' coatnets have 2 more 3rd stage blockscoatnet_bn_0_rw_224 - 82.4  (T)maxvit_nano_rw_256 - 82.9 @ 256  (T)coatnet_rmlp_1_rw_224 - 83.4 @ 224, 84 @ 320  (T)coatnet_1_rw_224 - 83.6 @ 224 (G)(T) = TPU trained with bits_and_tpu branch training code, (G) = GPU trainedGCVit (weights adapted from https://github.com/NVlabs/GCVit, code 100% timm re-write for license purposes)MViT-V2 (multi-scale vit, adapted from https://github.com/facebookresearch/mvit)EfficientFormer (adapted from https://github.com/snap-research/EfficientFormer)PyramidVisionTransformer-V2 (adapted from https://github.com/whai362/PVT)'Fast Norm' support for LayerNorm and GroupNorm that avoids float32 upcast w/ AMP (uses APEX LN if available for further boost)Aug 15, 2022ConvNeXt atto weights addedconvnext_atto - 75.7 @ 224, 77.0 @ 288convnext_atto_ols - 75.9  @ 224, 77.2 @ 288Aug 5, 2022More custom ConvNeXt smaller model defs with weightsconvnext_femto - 77.5 @ 224, 78.7 @ 288convnext_femto_ols - 77.9  @ 224, 78.9 @ 288convnext_pico - 79.5 @ 224, 80.4 @ 288convnext_pico_ols - 79.5 @ 224, 80.5 @ 288convnext_nano_ols - 80.9 @ 224, 81.6 @ 288Updated EdgeNeXt to improve ONNX export, add new base variant and weights from original (https://github.com/mmaaz60/EdgeNeXt)July 28, 2022Add freshly minted DeiT-III Medium (width=512, depth=12, num_heads=8) model weights. Thanks Hugo Touvron!July 27, 2022All runtime benchmark and validation result csv files are finally up-to-date!A few more weights & model defs added:darknetaa53 -  79.8 @ 256, 80.5 @ 288convnext_nano - 80.8 @ 224, 81.5 @ 288cs3sedarknet_l - 81.2 @ 256, 81.8 @ 288cs3darknet_x - 81.8 @ 256, 82.2 @ 288cs3sedarknet_x - 82.2 @ 256, 82.7 @ 288cs3edgenet_x - 82.2 @ 256, 82.7 @ 288cs3se_edgenet_x - 82.8 @ 256, 83.5 @ 320cs3* weights above all trained on TPU w/ bits_and_tpu branch. Thanks to TRC program!Add output_stride=8 and 16 support to ConvNeXt (dilation)deit3 models not being able to resize pos_emb fixedVersion 0.6.7 PyPi release (/w above bug fixes and new weighs since 0.6.5)July 8, 2022More models, more fixesOfficial research models (w/ weights) added:EdgeNeXt from (https://github.com/mmaaz60/EdgeNeXt)MobileViT-V2 from (https://github.com/apple/ml-cvnets)DeiT III (Revenge of the ViT) from (https://github.com/facebookresearch/deit)My own models:Small ResNet defs added by request with 1 block repeats for both basic and bottleneck (resnet10 and resnet14)CspNet refactored with dataclass config, simplified CrossStage3 (cs3) option. These are closer to YOLO-v5+ backbone defs.More relative position vit fiddling. Two srelpos (shared relative position) models trained, and a medium w/ class token.Add an alternate downsample mode to EdgeNeXt and train a small model. Better than original small, but not their new USI trained weights.My own model weight results (all ImageNet-1k training)resnet10t - 66.5 @ 176, 68.3 @ 224resnet14t - 71.3 @ 176, 72.3 @ 224resnetaa50 - 80.6 @ 224 , 81.6 @ 288darknet53 -  80.0 @ 256, 80.5 @ 288cs3darknet_m - 77.0 @ 256, 77.6 @ 288cs3darknet_focus_m - 76.7 @ 256, 77.3 @ 288cs3darknet_l - 80.4 @ 256, 80.9 @ 288cs3darknet_focus_l - 80.3 @ 256, 80.9 @ 288vit_srelpos_small_patch16_224 - 81.1 @ 224, 82.1 @ 320vit_srelpos_medium_patch16_224 - 82.3 @ 224, 83.1 @ 320vit_relpos_small_patch16_cls_224 - 82.6 @ 224, 83.6 @ 320edgnext_small_rw - 79.6 @ 224, 80.4 @ 320cs3, darknet, and vit_*relpos weights above all trained on TPU thanks to TRC program! Rest trained on overheating GPUs.Hugging Face Hub support fixes verified, demo notebook TBAPretrained weights / configs can be loaded externally (ie from local disk) w/ support for head adaptation.Add support to change image extensions scanned by timm datasets/readers. See (#1274 (comment))Default ConvNeXt LayerNorm impl to use F.layer_norm(x.permute(0, 2, 3, 1), ...).permute(0, 3, 1, 2) via LayerNorm2d in all cases.a bit slower than previous custom impl on some hardware (ie Ampere w/ CL), but overall fewer regressions across wider HW / PyTorch version ranges.previous impl exists as LayerNormExp2d in models/layers/norm.pyNumerous bug fixesCurrently testing for imminent PyPi 0.6.x releaseLeViT pretraining of larger models still a WIP, they don't train well / easily without distillation. Time to add distill support (finally)?ImageNet-22k weight training + finetune ongoing, work on multi-weight support (slowly) chugging along (there are a LOT of weights, sigh) ...May 13, 2022Official Swin-V2 models and weights added from (https://github.com/microsoft/Swin-Transformer). Cleaned up to support torchscript.Some refactoring for existing timm Swin-V2-CR impl, will likely do a bit more to bring parts closer to official and decide whether to merge some aspects.More Vision Transformer relative position / residual post-norm experiments (all trained on TPU thanks to TRC program)vit_relpos_small_patch16_224 - 81.5 @ 224, 82.5 @ 320 -- rel pos, layer scale, no class token, avg poolvit_relpos_medium_patch16_rpn_224 - 82.3 @ 224, 83.1 @ 320 -- rel pos + res-post-norm, no class token, avg poolvit_relpos_medium_patch16_224 - 82.5 @ 224, 83.3 @ 320 -- rel pos, layer scale, no class token, avg poolvit_relpos_base_patch16_gapcls_224 - 82.8 @ 224, 83.9 @ 320 -- rel pos, layer scale, class token, avg pool (by mistake)Bring 512 dim, 8-head 'medium' ViT model variant back to life (after using in a pre DeiT 'small' model for first ViT impl back in 2020)Add ViT relative position support for switching btw existing impl and some additions in official Swin-V2 impl for future trialsSequencer2D impl (https://arxiv.org/abs/2205.01972), added via PR from author (https://github.com/okojoalg)May 2, 2022Vision Transformer experiments adding Relative Position (Swin-V2 log-coord) (vision_transformer_relpos.py) and Residual Post-Norm branches (from Swin-V2) (vision_transformer*.py)vit_relpos_base_patch32_plus_rpn_256 - 79.5 @ 256, 80.6 @ 320 -- rel pos + extended width + res-post-norm, no class token, avg poolvit_relpos_base_patch16_224 - 82.5 @ 224, 83.6 @ 320 -- rel pos, layer scale, no class token, avg poolvit_base_patch16_rpn_224 - 82.3 @ 224 -- rel pos + res-post-norm, no class token, avg poolVision Transformer refactor to remove representation layer that was only used in initial vit and rarely used since with newer pretrain (ie How to Train Your ViT)vit_* models support removal of class token, use of global average pool, use of fc_norm (ala beit, mae).April 22, 2022timm models are now officially supported in fast.ai! Just in time for the new Practical Deep Learning course. timmdocs documentation link updated to timm.fast.ai.Two more model weights added in the TPU trained series. Some In22k pretrain still in progress.seresnext101d_32x8d - 83.69 @ 224, 84.35 @ 288seresnextaa101d_32x8d (anti-aliased w/ AvgPool2d) - 83.85 @ 224, 84.57 @ 288March 23, 2022Add ParallelBlock and LayerScale option to base vit models to support model configs in Three things everyone should know about ViTconvnext_tiny_hnf (head norm first) weights trained with (close to) A2 recipe, 82.2% top-1, could do better with more epochs.March 21, 2022Merge norm_norm_norm. IMPORTANT this update for a coming 0.6.x release will likely de-stabilize the master branch for a while. Branch 0.5.x or a previous 0.5.x release can be used if stability is required.Significant weights update (all TPU trained) as described in this releaseregnety_040 - 82.3 @ 224, 82.96 @ 288regnety_064 - 83.0 @ 224, 83.65 @ 288regnety_080 - 83.17 @ 224, 83.86 @ 288regnetv_040 - 82.44 @ 224, 83.18 @ 288   (timm pre-act)regnetv_064 - 83.1 @ 224, 83.71 @ 288   (timm pre-act)regnetz_040 - 83.67 @ 256, 84.25 @ 320regnetz_040h - 83.77 @ 256, 84.5 @ 320 (w/ extra fc in head)resnetv2_50d_gn - 80.8 @ 224, 81.96 @ 288 (pre-act GroupNorm)resnetv2_50d_evos 80.77 @ 224, 82.04 @ 288 (pre-act EvoNormS)regnetz_c16_evos  - 81.9 @ 256, 82.64 @ 320 (EvoNormS)regnetz_d8_evos  - 83.42 @ 256, 84.04 @ 320 (EvoNormS)xception41p - 82 @ 299   (timm pre-act)xception65 -  83.17 @ 299xception65p -  83.14 @ 299   (timm pre-act)resnext101_64x4d - 82.46 @ 224, 83.16 @ 288seresnext101_32x8d - 83.57 @ 224, 84.270 @ 288resnetrs200 - 83.85 @ 256, 84.44 @ 320HuggingFace hub support fixed w/ initial groundwork for allowing alternative 'config sources' for pretrained model definitions and weights (generic local file / remote url support soon)SwinTransformer-V2 implementation added. Submitted by Christoph Reich. Training experiments and model changes by myself are ongoing so expect compat breaks.Swin-S3 (AutoFormerV2) models / weights added from https://github.com/microsoft/Cream/tree/main/AutoFormerV2MobileViT models w/ weights adapted from https://github.com/apple/ml-cvnetsPoolFormer models w/ weights adapted from https://github.com/sail-sg/poolformerVOLO models w/ weights adapted from https://github.com/sail-sg/voloSignificant work experimenting with non-BatchNorm norm layers such as EvoNorm, FilterResponseNorm, GroupNorm, etcEnhance support for alternate norm + act ('NormAct') layers added to a number of models, esp EfficientNet/MobileNetV3, RegNet, and aligned XceptionGrouped conv support added to EfficientNet familyAdd 'group matching' API to all models to allow grouping model parameters for application of 'layer-wise' LR decay, lr scale added to LR schedulerGradient checkpointing support added to many modelsforward_head(x, pre_logits=False) fn added to all models to allow separate calls of forward_features + forward_headAll vision transformer and vision MLP models update to return non-pooled / non-token selected features from foward_features, for consistency with CNN models, token selection or pooling now applied in forward_headFeb 2, 2022Chris Hughes posted an exhaustive run through of timm on his blog yesterday. Well worth a read. Getting Started with PyTorch Image Models (timm): A Practitioner’s GuideI'm currently prepping to merge the norm_norm_norm branch back to master (ver 0.6.x) in next week or so.The changes are more extensive than usual and may destabilize and break some model API use (aiming for full backwards compat). So, beware pip install git+https://github.com/rwightman/pytorch-image-models installs!0.5.x releases and a 0.5.x branch will remain stable with a cherry pick or two until dust clears. Recommend sticking to pypi install for a bit if you want stable.Jan 14, 2022Version 0.5.4 w/ release to be pushed to pypi. It's been a while since last pypi update and riskier changes will be merged to main branch soon....Add ConvNeXT models /w weights from official impl (https://github.com/facebookresearch/ConvNeXt), a few perf tweaks, compatible with timm featuresTried training a few small (~1.8-3M param) / mobile optimized models, a few are good so far, more on the way...mnasnet_small - 65.6 top-1mobilenetv2_050 - 65.9lcnet_100/075/050 - 72.1 / 68.8 / 63.1semnasnet_075 - 73fbnetv3_b/d/g - 79.1 / 79.7 / 82.0TinyNet models added by rsomani95LCNet added via MobileNetV3 architectureIntroductionPyTorch Image Models (timm) is a collection of image models, layers, utilities, optimizers, schedulers, data-loaders / augmentations, and reference training / validation scripts that aim to pull together a wide variety of SOTA models with ability to reproduce ImageNet training results.The work of many others is present here. I've tried to make sure all source material is acknowledged via links to github, arxiv papers, etc in the README, documentation, and code docstrings. Please let me know if I missed anything.ModelsAll model architecture families include variants with pretrained weights. There are specific model variants without any weights, it is NOT a bug. Help training new or better weights is always appreciated.Aggregating Nested Transformers - https://arxiv.org/abs/2105.12723BEiT - https://arxiv.org/abs/2106.08254Big Transfer ResNetV2 (BiT) - https://arxiv.org/abs/1912.11370Bottleneck Transformers - https://arxiv.org/abs/2101.11605CaiT (Class-Attention in Image Transformers) - https://arxiv.org/abs/2103.17239CoaT (Co-Scale Conv-Attentional Image Transformers) - https://arxiv.org/abs/2104.06399CoAtNet (Convolution and Attention) - https://arxiv.org/abs/2106.04803ConvNeXt - https://arxiv.org/abs/2201.03545ConvNeXt-V2 - http://arxiv.org/abs/2301.00808ConViT (Soft Convolutional Inductive Biases Vision Transformers)- https://arxiv.org/abs/2103.10697CspNet (Cross-Stage Partial Networks) - https://arxiv.org/abs/1911.11929DeiT - https://arxiv.org/abs/2012.12877DeiT-III - https://arxiv.org/pdf/2204.07118.pdfDenseNet - https://arxiv.org/abs/1608.06993DLA - https://arxiv.org/abs/1707.06484DPN (Dual-Path Network) - https://arxiv.org/abs/1707.01629EdgeNeXt - https://arxiv.org/abs/2206.10589EfficientFormer - https://arxiv.org/abs/2206.01191EfficientNet (MBConvNet Family)EfficientNet NoisyStudent (B0-B7, L2) - https://arxiv.org/abs/1911.04252EfficientNet AdvProp (B0-B8) - https://arxiv.org/abs/1911.09665EfficientNet (B0-B7) - https://arxiv.org/abs/1905.11946EfficientNet-EdgeTPU (S, M, L) - https://ai.googleblog.com/2019/08/efficientnet-edgetpu-creating.htmlEfficientNet V2 - https://arxiv.org/abs/2104.00298FBNet-C - https://arxiv.org/abs/1812.03443MixNet - https://arxiv.org/abs/1907.09595MNASNet B1, A1 (Squeeze-Excite), and Small - https://arxiv.org/abs/1807.11626MobileNet-V2 - https://arxiv.org/abs/1801.04381Single-Path NAS - https://arxiv.org/abs/1904.02877TinyNet - https://arxiv.org/abs/2010.14819EVA - https://arxiv.org/abs/2211.07636EVA-02 - https://arxiv.org/abs/2303.11331FlexiViT - https://arxiv.org/abs/2212.08013FocalNet (Focal Modulation Networks) - https://arxiv.org/abs/2203.11926GCViT (Global Context Vision Transformer) - https://arxiv.org/abs/2206.09959GhostNet - https://arxiv.org/abs/1911.11907gMLP - https://arxiv.org/abs/2105.08050GPU-Efficient Networks - https://arxiv.org/abs/2006.14090Halo Nets - https://arxiv.org/abs/2103.12731HRNet - https://arxiv.org/abs/1908.07919Inception-V3 - https://arxiv.org/abs/1512.00567Inception-ResNet-V2 and Inception-V4 - https://arxiv.org/abs/1602.07261Lambda Networks - https://arxiv.org/abs/2102.08602LeViT (Vision Transformer in ConvNet's Clothing) - https://arxiv.org/abs/2104.01136MaxViT (Multi-Axis Vision Transformer) - https://arxiv.org/abs/2204.01697MLP-Mixer - https://arxiv.org/abs/2105.01601MobileNet-V3 (MBConvNet w/ Efficient Head) - https://arxiv.org/abs/1905.02244FBNet-V3 - https://arxiv.org/abs/2006.02049HardCoRe-NAS - https://arxiv.org/abs/2102.11646LCNet - https://arxiv.org/abs/2109.15099MobileViT - https://arxiv.org/abs/2110.02178MobileViT-V2 - https://arxiv.org/abs/2206.02680MViT-V2 (Improved Multiscale Vision Transformer) - https://arxiv.org/abs/2112.01526NASNet-A - https://arxiv.org/abs/1707.07012NesT - https://arxiv.org/abs/2105.12723NFNet-F - https://arxiv.org/abs/2102.06171NF-RegNet / NF-ResNet - https://arxiv.org/abs/2101.08692PNasNet - https://arxiv.org/abs/1712.00559PoolFormer (MetaFormer) - https://arxiv.org/abs/2111.11418Pooling-based Vision Transformer (PiT) - https://arxiv.org/abs/2103.16302PVT-V2 (Improved Pyramid Vision Transformer) - https://arxiv.org/abs/2106.13797RegNet - https://arxiv.org/abs/2003.13678RegNetZ - https://arxiv.org/abs/2103.06877RepVGG - https://arxiv.org/abs/2101.03697ResMLP - https://arxiv.org/abs/2105.03404ResNet/ResNeXtResNet (v1b/v1.5) - https://arxiv.org/abs/1512.03385ResNeXt - https://arxiv.org/abs/1611.05431'Bag of Tricks' / Gluon C, D, E, S variations - https://arxiv.org/abs/1812.01187Weakly-supervised (WSL) Instagram pretrained / ImageNet tuned ResNeXt101 - https://arxiv.org/abs/1805.00932Semi-supervised (SSL) / Semi-weakly Supervised (SWSL) ResNet/ResNeXts - https://arxiv.org/abs/1905.00546ECA-Net (ECAResNet) - https://arxiv.org/abs/1910.03151v4Squeeze-and-Excitation Networks (SEResNet) - https://arxiv.org/abs/1709.01507ResNet-RS - https://arxiv.org/abs/2103.07579Res2Net - https://arxiv.org/abs/1904.01169ResNeSt - https://arxiv.org/abs/2004.08955ReXNet - https://arxiv.org/abs/2007.00992SelecSLS - https://arxiv.org/abs/1907.00837Selective Kernel Networks - https://arxiv.org/abs/1903.06586Sequencer2D - https://arxiv.org/abs/2205.01972Swin S3 (AutoFormerV2) - https://arxiv.org/abs/2111.14725Swin Transformer - https://arxiv.org/abs/2103.14030Swin Transformer V2 - https://arxiv.org/abs/2111.09883Transformer-iN-Transformer (TNT) - https://arxiv.org/abs/2103.00112TResNet - https://arxiv.org/abs/2003.13630Twins (Spatial Attention in Vision Transformers) - https://arxiv.org/pdf/2104.13840.pdfVisformer - https://arxiv.org/abs/2104.12533Vision Transformer - https://arxiv.org/abs/2010.11929VOLO (Vision Outlooker) - https://arxiv.org/abs/2106.13112VovNet V2 and V1 - https://arxiv.org/abs/1911.06667Xception - https://arxiv.org/abs/1610.02357Xception (Modified Aligned, Gluon) - https://arxiv.org/abs/1802.02611Xception (Modified Aligned, TF) - https://arxiv.org/abs/1802.02611XCiT (Cross-Covariance Image Transformers) - https://arxiv.org/abs/2106.09681FeaturesSeveral (less common) features that I often utilize in my projects are included. Many of their additions are the reason why I maintain my own set of models, instead of using others' via PIP:All models have a common default configuration interface and API foraccessing/changing the classifier - get_classifier and reset_classifierdoing a forward pass on just the features - forward_features (see documentation)these makes it easy to write consistent network wrappers that work with any of the modelsAll models support multi-scale feature map extraction (feature pyramids) via create_model (see documentation)create_model(name, features_only=True, out_indices=..., output_stride=...)out_indices creation arg specifies which feature maps to return, these indices are 0 based and generally correspond to the C(i + 1) feature level.output_stride creation arg controls output stride of the network by using dilated convolutions. Most networks are stride 32 by default. Not all networks support this.feature map channel counts, reduction level (stride) can be queried AFTER model creation via the .feature_info memberAll models have a consistent pretrained weight loader that adapts last linear if necessary, and from 3 to 1 channel input if desiredHigh performance reference training, validation, and inference scripts that work in several process/GPU modes:NVIDIA DDP w/ a single GPU per process, multiple processes with APEX present (AMP mixed-precision optional)PyTorch DistributedDataParallel w/ multi-gpu, single process (AMP disabled as it crashes when enabled)PyTorch w/ single GPU single process (AMP optional)A dynamic global pool implementation that allows selecting from average pooling, max pooling, average + max, or concat([average, max]) at model creation. All global pooling is adaptive average by default and compatible with pretrained weights.A 'Test Time Pool' wrapper that can wrap any of the included models and usually provides improved performance doing inference with input images larger than the training size. Idea adapted from original DPN implementation when I ported (https://github.com/cypw/DPNs)Learning rate schedulersIdeas adopted fromAllenNLP schedulersFAIRseq lr_schedulerSGDR: Stochastic Gradient Descent with Warm Restarts (https://arxiv.org/abs/1608.03983)Schedulers include step, cosine w/ restarts, tanh w/ restarts, plateauOptimizers:rmsprop_tf adapted from PyTorch RMSProp by myself. Reproduces much improved Tensorflow RMSProp behaviour.radam by Liyuan Liu (https://arxiv.org/abs/1908.03265)novograd by Masashi Kimura (https://arxiv.org/abs/1905.11286)lookahead adapted from impl by Liam (https://arxiv.org/abs/1907.08610)fused<name> optimizers by name with NVIDIA Apex installedadamp and sgdp by Naver ClovAI (https://arxiv.org/abs/2006.08217)adafactor adapted from FAIRSeq impl (https://arxiv.org/abs/1804.04235)adahessian by David Samuel (https://arxiv.org/abs/2006.00719)Random Erasing from Zhun Zhong  (https://arxiv.org/abs/1708.04896)Mixup (https://arxiv.org/abs/1710.09412)CutMix (https://arxiv.org/abs/1905.04899)AutoAugment (https://arxiv.org/abs/1805.09501) and RandAugment (https://arxiv.org/abs/1909.13719) ImageNet configurations modeled after impl for EfficientNet training (https://github.com/tensorflow/tpu/blob/master/models/official/efficientnet/autoaugment.py)AugMix w/ JSD loss (https://arxiv.org/abs/1912.02781), JSD w/ clean + augmented mixing support works with AutoAugment and RandAugment as wellSplitBachNorm - allows splitting batch norm layers between clean and augmented (auxiliary batch norm) dataDropPath aka \""Stochastic Depth\"" (https://arxiv.org/abs/1603.09382)DropBlock (https://arxiv.org/abs/1810.12890)Blur Pooling (https://arxiv.org/abs/1904.11486)Space-to-Depth by mrT23 (https://arxiv.org/abs/1801.04590) -- original paper?Adaptive Gradient Clipping (https://arxiv.org/abs/2102.06171, https://github.com/deepmind/deepmind-research/tree/master/nfnets)An extensive selection of channel and/or spatial attention modules:Bottleneck Transformer - https://arxiv.org/abs/2101.11605CBAM - https://arxiv.org/abs/1807.06521Effective Squeeze-Excitation (ESE) - https://arxiv.org/abs/1911.06667Efficient Channel Attention (ECA) - https://arxiv.org/abs/1910.03151Gather-Excite (GE) - https://arxiv.org/abs/1810.12348Global Context (GC) - https://arxiv.org/abs/1904.11492Halo - https://arxiv.org/abs/2103.12731Involution - https://arxiv.org/abs/2103.06255Lambda Layer - https://arxiv.org/abs/2102.08602Non-Local (NL) -  https://arxiv.org/abs/1711.07971Squeeze-and-Excitation (SE) - https://arxiv.org/abs/1709.01507Selective Kernel (SK) - (https://arxiv.org/abs/1903.06586Split (SPLAT) - https://arxiv.org/abs/2004.08955Shifted Window (SWIN) - https://arxiv.org/abs/2103.14030ResultsModel validation results can be found in the results tablesGetting Started (Documentation)The official documentation can be found at https://huggingface.co/docs/hub/timm. Documentation contributions are welcome.Getting Started with PyTorch Image Models (timm): A Practitioner’s Guide by Chris Hughes is an extensive blog post covering many aspects of timm in detail.timmdocs is an alternate set of documentation for timm. A big thanks to Aman Arora for his efforts creating timmdocs.paperswithcode is a good resource for browsing the models within timm.Train, Validation, Inference ScriptsThe root folder of the repository contains reference train, validation, and inference scripts that work with the included models and other features of this repository. They are adaptable for other datasets and use cases with a little hacking. See documentation.Awesome PyTorch ResourcesOne of the greatest assets of PyTorch is the community and their contributions. A few of my favourite resources that pair well with the models and components here are listed below.Object Detection, Instance and Semantic SegmentationDetectron2 - https://github.com/facebookresearch/detectron2Segmentation Models (Semantic) - https://github.com/qubvel/segmentation_models.pytorchEfficientDet (Obj Det, Semantic soon) - https://github.com/rwightman/efficientdet-pytorchComputer Vision / Image AugmentationAlbumentations - https://github.com/albumentations-team/albumentationsKornia - https://github.com/kornia/korniaKnowledge DistillationRepDistiller - https://github.com/HobbitLong/RepDistillertorchdistill - https://github.com/yoshitomo-matsubara/torchdistillMetric LearningPyTorch Metric Learning - https://github.com/KevinMusgrave/pytorch-metric-learningTraining / Frameworksfastai - https://github.com/fastai/fastaiLicensesCodeThe code here is licensed Apache 2.0. I've taken care to make sure any third party code included or adapted has compatible (permissive) licenses such as MIT, BSD, etc. I've made an effort to avoid any GPL / LGPL conflicts. That said, it is your responsibility to ensure you comply with licenses here and conditions of any dependent licenses. Where applicable, I've linked the sources/references for various components in docstrings. If you think I've missed anything please create an issue.Pretrained WeightsSo far all of the pretrained weights available here are pretrained on ImageNet with a select few that have some additional pretraining (see extra note below). ImageNet was released for non-commercial research purposes only (https://image-net.org/download). It's not clear what the implications of that are for the use of pretrained weights from that dataset. Any models I have trained with ImageNet are done for research purposes and one should assume that the original dataset license applies to the weights. It's best to seek legal advice if you intend to use the pretrained weights in a commercial product.Pretrained on more than ImageNetSeveral weights included or references here were pretrained with proprietary datasets that I do not have access to. These include the Facebook WSL, SSL, SWSL ResNe(Xt) and the Google Noisy Student EfficientNet models. The Facebook models have an explicit non-commercial license (CC-BY-NC 4.0, https://github.com/facebookresearch/semi-supervised-ImageNet1K-models, https://github.com/facebookresearch/WSL-Images). The Google models do not appear to have any restriction beyond the Apache 2.0 license (and ImageNet concerns). In either case, you should contact Facebook or Google with any questions.CitingBibTeX@misc{rw2019timm,  author = {Ross Wightman},  title = {PyTorch Image Models},  year = {2019},  publisher = {GitHub},  journal = {GitHub repository},  doi = {10.5281/zenodo.4414861},  howpublished = {\\url{https://github.com/rwightman/pytorch-image-models}}}Latest DOI"
38,38,Stability-AI/stablediffusion,https://github.com/Stability-AI/stablediffusion/blob/main/README.md,Python,"Stable Diffusion Version 2This repository contains Stable Diffusion models trained from scratch and will be continuously updated withnew checkpoints. The following list provides an overview of all currently available models. More coming soon.NewsMarch 24, 2023Stable UnCLIP 2.1New stable diffusion finetune (Stable unCLIP 2.1, Hugging Face) at 768x768 resolution,  based on SD2.1-768. This model allows for image variations and mixing operations as described in Hierarchical Text-Conditional Image Generation with CLIP Latents, and, thanks to its modularity, can be combined with other models such as KARLO. Comes in two variants: Stable unCLIP-L and Stable unCLIP-H, which are conditioned on CLIP ViT-L and ViT-H image embeddings, respectively. Instructions are available here.A public demo of SD-unCLIP is already available at clipdrop.co/stable-diffusion-reimagineDecember 7, 2022Version 2.1New stable diffusion model (Stable Diffusion 2.1-v, Hugging Face) at 768x768 resolution and (Stable Diffusion 2.1-base, HuggingFace) at 512x512 resolution, both based on the same number of parameters and architecture as 2.0 and fine-tuned on 2.0, on a less restrictive NSFW filtering of the LAION-5B dataset.Per default, the attention operation of the model is evaluated at full precision when xformers is not installed. To enable fp16 (which can cause numerical instabilities with the vanilla attention module on the v2.1 model) , run your script with ATTN_PRECISION=fp16 python <thescript.py>November 24, 2022Version 2.0New stable diffusion model (Stable Diffusion 2.0-v) at 768x768 resolution. Same number of parameters in the U-Net as 1.5, but uses OpenCLIP-ViT/H as the text encoder and is trained from scratch. SD 2.0-v is a so-called v-prediction model.The above model is finetuned from SD 2.0-base, which was trained as a standard noise-prediction model on 512x512 images and is also made available.Added a x4 upscaling latent text-guided diffusion model.New depth-guided stable diffusion model, finetuned from SD 2.0-base. The model is conditioned on monocular depth estimates inferred via MiDaS and can be used for structure-preserving img2img and shape-conditional synthesis.A text-guided inpainting model, finetuned from SD 2.0-base.We follow the original repository and provide basic inference scripts to sample from the models.The original Stable Diffusion model was created in a collaboration with CompVis and RunwayML and builds upon the work:High-Resolution Image Synthesis with Latent Diffusion ModelsRobin Rombach*,Andreas Blattmann*,Dominik Lorenz,Patrick Esser,Björn OmmerCVPR '22 Oral |GitHub | arXiv | Project pageand many others.Stable Diffusion is a latent text-to-image diffusion model.RequirementsYou can update an existing latent diffusion environment by runningconda install pytorch==1.12.1 torchvision==0.13.1 -c pytorchpip install transformers==4.19.2 diffusers invisible-watermarkpip install -e .xformers efficient attentionFor more efficiency and speed on GPUs,we highly recommended installing the xformerslibrary.Tested on A100 with CUDA 11.4.Installation needs a somewhat recent version of nvcc and gcc/g++, obtain those, e.g., viaexport CUDA_HOME=/usr/local/cuda-11.4conda install -c nvidia/label/cuda-11.4.0 cuda-nvccconda install -c conda-forge gccconda install -c conda-forge gxx_linux-64==9.5.0Then, run the following (compiling takes up to 30 min).cd ..git clone https://github.com/facebookresearch/xformers.gitcd xformersgit submodule update --init --recursivepip install -r requirements.txtpip install -e .cd ../stablediffusionUpon successful installation, the code will automatically default to memory efficient attentionfor the self- and cross-attention layers in the U-Net and autoencoder.General DisclaimerStable Diffusion models are general text-to-image diffusion models and therefore mirror biases and (mis-)conceptions that are presentin their training data. Although efforts were made to reduce the inclusion of explicit pornographic material, we do not recommend using the provided weights for services or products without additional safety mechanisms and considerations.The weights are research artifacts and should be treated as such.Details on the training procedure and data, as well as the intended use of the model can be found in the corresponding model card.The weights are available via the StabilityAI organization at Hugging Face under the CreativeML Open RAIL++-M License.Stable Diffusion v2Stable Diffusion v2 refers to a specific configuration of the modelarchitecture that uses a downsampling-factor 8 autoencoder with an 865M UNetand OpenCLIP ViT-H/14 text encoder for the diffusion model. The SD 2-v model produces 768x768 px outputs.Evaluations with different classifier-free guidance scales (1.5, 2.0, 3.0, 4.0,5.0, 6.0, 7.0, 8.0) and 50 DDIM sampling steps show the relative improvements of the checkpoints:Text-to-ImageStable Diffusion 2 is a latent diffusion model conditioned on the penultimate text embeddings of a CLIP ViT-H/14 text encoder.We provide a reference script for sampling.Reference Sampling ScriptThis script incorporates an invisible watermarking of the outputs, to help viewers identify the images as machine-generated.We provide the configs for the SD2-v (768px) and SD2-base (512px) model.First, download the weights for SD2.1-v and SD2.1-base.To sample from the SD2.1-v model, run the following:python scripts/txt2img.py --prompt \""a professional photograph of an astronaut riding a horse\"" --ckpt <path/to/768model.ckpt/> --config configs/stable-diffusion/v2-inference-v.yaml --H 768 --W 768  or try out the Web Demo: .To sample from the base model, usepython scripts/txt2img.py --prompt \""a professional photograph of an astronaut riding a horse\"" --ckpt <path/to/model.ckpt/> --config <path/to/config.yaml/>  By default, this uses the DDIM sampler, and renders images of size 768x768 (which it was trained on) in 50 steps.Empirically, the v-models can be sampled with higher guidance scales.Note: The inference config for all model versions is designed to be used with EMA-only checkpoints.For this reason use_ema=False is set in the configuration, otherwise the code will try to switch fromnon-EMA to EMA weights.Enable Intel® Extension for PyTorch* optimizations in Text-to-Image scriptIf you're planning on running Text-to-Image on Intel® CPU, try to sample an image with TorchScript and Intel® Extension for PyTorch* optimizations. Intel® Extension for PyTorch* extends PyTorch by enabling up-to-date features optimizations for an extra performance boost on Intel® hardware. It can optimize memory layout of the operators to Channel Last memory format, which is generally beneficial for Intel CPUs, take advantage of the most advanced instruction set available on a machine, optimize operators and many more.PrerequisitesBefore running the script, make sure you have all needed libraries installed. (the optimization was checked on Ubuntu 20.04). Install jemalloc, numactl, Intel® OpenMP and Intel® Extension for PyTorch*.apt-get install numactl libjemalloc-devpip install intel-openmppip install intel_extension_for_pytorch -f https://software.intel.com/ipex-whl-stableTo sample from the SD2.1-v model with TorchScript+IPEX optimizations, run the following. Remember to specify desired number of instances you want to run the program on (more).MALLOC_CONF=oversize_threshold:1,background_thread:true,metadata_thp:auto,dirty_decay_ms:9000000000,muzzy_decay_ms:9000000000 python -m intel_extension_for_pytorch.cpu.launch --ninstance <number of an instance> --enable_jemalloc scripts/txt2img.py --prompt \\\""a corgi is playing guitar, oil on canvas\\\"" --ckpt <path/to/768model.ckpt/> --config configs/stable-diffusion/intel/v2-inference-v-fp32.yaml  --H 768 --W 768 --precision full --device cpu --torchscript --ipexTo sample from the base model with IPEX optimizations, useMALLOC_CONF=oversize_threshold:1,background_thread:true,metadata_thp:auto,dirty_decay_ms:9000000000,muzzy_decay_ms:9000000000 python -m intel_extension_for_pytorch.cpu.launch --ninstance <number of an instance> --enable_jemalloc scripts/txt2img.py --prompt \\\""a corgi is playing guitar, oil on canvas\\\"" --ckpt <path/to/model.ckpt/> --config configs/stable-diffusion/intel/v2-inference-fp32.yaml  --n_samples 1 --n_iter 4 --precision full --device cpu --torchscript --ipexIf you're using a CPU that supports bfloat16, consider sample from the model with bfloat16 enabled for a performance boost, like so# SD2.1-vMALLOC_CONF=oversize_threshold:1,background_thread:true,metadata_thp:auto,dirty_decay_ms:9000000000,muzzy_decay_ms:9000000000 python -m intel_extension_for_pytorch.cpu.launch --ninstance <number of an instance> --enable_jemalloc scripts/txt2img.py --prompt \\\""a corgi is playing guitar, oil on canvas\\\"" --ckpt <path/to/768model.ckpt/> --config configs/stable-diffusion/intel/v2-inference-v-bf16.yaml --H 768 --W 768 --precision full --device cpu --torchscript --ipex --bf16# SD2.1-baseMALLOC_CONF=oversize_threshold:1,background_thread:true,metadata_thp:auto,dirty_decay_ms:9000000000,muzzy_decay_ms:9000000000 python -m intel_extension_for_pytorch.cpu.launch --ninstance <number of an instance> --enable_jemalloc scripts/txt2img.py --prompt \\\""a corgi is playing guitar, oil on canvas\\\"" --ckpt <path/to/model.ckpt/> --config configs/stable-diffusion/intel/v2-inference-bf16.yaml --precision full --device cpu --torchscript --ipex --bf16Image Modification with Stable DiffusionDepth-Conditional Stable DiffusionTo augment the well-established img2img functionality of Stable Diffusion, we provide a shape-preserving stable diffusion model.Note that the original method for image modification introduces significant semantic changes w.r.t. the initial image.If that is not desired, download our depth-conditional stable diffusion model and the dpt_hybrid MiDaS model weights, place the latter in a folder midas_models and sample viapython scripts/gradio/depth2img.py configs/stable-diffusion/v2-midas-inference.yaml <path-to-ckpt>orstreamlit run scripts/streamlit/depth2img.py configs/stable-diffusion/v2-midas-inference.yaml <path-to-ckpt>This method can be used on the samples of the base model itself.For example, take this sample generated by an anonymous discord user.Using the gradio or streamlit script depth2img.py, the MiDaS model first infers a monocular depth estimate given this input,and the diffusion model is then conditioned on the (relative) depth output. depth2image This model is particularly useful for a photorealistic style; see the examples.For a maximum strength of 1.0, the model removes all pixel-based information and only relies on the text prompt and the inferred monocular depth estimate.Classic Img2ImgFor running the \""classic\"" img2img, usepython scripts/img2img.py --prompt \""A fantasy landscape, trending on artstation\"" --init-img <path-to-img.jpg> --strength 0.8 --ckpt <path/to/model.ckpt>and adapt the checkpoint and config paths accordingly.Image Upscaling with Stable DiffusionAfter downloading the weights, runpython scripts/gradio/superresolution.py configs/stable-diffusion/x4-upscaling.yaml <path-to-checkpoint>orstreamlit run scripts/streamlit/superresolution.py -- configs/stable-diffusion/x4-upscaling.yaml <path-to-checkpoint>for a Gradio or Streamlit demo of the text-guided x4 superresolution model.This model can be used both on real inputs and on synthesized examples. For the latter, we recommend setting a highernoise_level, e.g. noise_level=100.Image Inpainting with Stable DiffusionDownload the SD 2.0-inpainting checkpoint and runpython scripts/gradio/inpainting.py configs/stable-diffusion/v2-inpainting-inference.yaml <path-to-checkpoint>orstreamlit run scripts/streamlit/inpainting.py -- configs/stable-diffusion/v2-inpainting-inference.yaml <path-to-checkpoint>for a Gradio or Streamlit demo of the inpainting model.This scripts adds invisible watermarking to the demo in the RunwayML repository, but both should work interchangeably with the checkpoints/configs.Shout-OutsThanks to Hugging Face and in particular Apolinário  for support with our model releases!Stable Diffusion would not be possible without LAION and their efforts to create open, large-scale datasets.The DeepFloyd team at Stability AI, for creating the subset of LAION-5B dataset used to train the model.Stable Diffusion 2.0 uses OpenCLIP, trained by Romain Beaumont.Our codebase for the diffusion models builds heavily on OpenAI's ADM codebaseand https://github.com/lucidrains/denoising-diffusion-pytorch.Thanks for open-sourcing!CompVis initial stable diffusion releasePatrick's implementation of the streamlit demo for inpainting.img2img is an application of SDEdit by Chenlin Meng from the Stanford AI Lab.Kat's implementation of the PLMS sampler, and more.DPMSolver integration by Cheng Lu.Facebook's xformers for efficient attention computation.MiDaS for monocular depth estimation.LicenseThe code in this repository is released under the MIT License.The weights are available via the StabilityAI organization at Hugging Face, and released under the CreativeML Open RAIL++-M License License.BibTeX@misc{rombach2021highresolution,      title={High-Resolution Image Synthesis with Latent Diffusion Models},       author={Robin Rombach and Andreas Blattmann and Dominik Lorenz and Patrick Esser and Björn Ommer},      year={2021},      eprint={2112.10752},      archivePrefix={arXiv},      primaryClass={cs.CV}}"
39,39,Turonk/infra_actions,https://github.com/Turonk/infra_actions/blob/main/README.md,Python,infra_actionsУчебный проект для изучения работы GitHub Actions (Яндекс Практикум)
40,40,donnemartin/system-design-primer,https://github.com/donnemartin/system-design-primer/blob/master/README-ja.md,Python,"English ∙ 日本語 ∙ 简体中文 ∙ 繁體中文 | العَرَبِيَّة‎ ∙ বাংলা ∙ Português do Brasil ∙ Deutsch ∙ ελληνικά ∙ עברית ∙ Italiano ∙ 한국어 ∙ فارسی ∙ Polski ∙ русский язык ∙ Español ∙ ภาษาไทย ∙ Türkçe ∙ tiếng Việt ∙ Français | Add Translationシステム設計入門    動機・目的大規模システムのシステム設計を学ぶシステム設計面接課題に備える大規模システムの設計を学ぶスケーラブルなシステムのシステム設計を学ぶことは、より良いエンジニアになることに資するでしょう。システム設計はとても広範なトピックを含みます。システム設計原理については インターネット上には膨大な量の文献が散らばっています。このリポジトリは大規模システム構築に必要な知識を学ぶことができる 文献リストを体系的にまとめたもの です。オープンソースコミュニティから学ぶこのプロジェクトは、これからもずっと更新されていくオープンソースプロジェクトの初期段階にすぎません。Contributions は大歓迎です！システム設計面接課題に備えるコード技術面接に加えて、システム設計に関する知識は、多くのテック企業における 技術採用面接プロセス で 必要不可欠な要素 です。システム設計面接での頻出質問に備え、自分の解答と模範解答:ディスカッション、コードそして図表などを比較して学びましょう。面接準備に役立つその他のトピック:学習指針システム設計面接課題にどのように準備するかシステム設計課題例 とその解答オブジェクト指向設計課題例、 とその解答その他のシステム設計面接課題例暗記カード    このAnki用フラッシュカードデッキ は、間隔反復を活用して、システム設計のキーコンセプトの学習を支援します。システム設計デッキシステム設計練習課題デッキオブジェクト指向練習課題デッキ外出先や移動中の勉強に役立つでしょう。コーディング技術課題用の問題: 練習用インタラクティブアプリケーションコード技術面接用の問題を探している場合はこちら    姉妹リポジトリの Interactive Coding Challengesも見てみてください。追加の暗記デッキカードも入っています。Coding deckコントリビュートコミュニティから学ぶプルリクエスト等の貢献は積極的にお願いします:エラー修正セクション内容改善新規セクション追加翻訳する現在、内容の改善が必要な作業中のコンテンツはこちらです。コントリビュートの前にContributing Guidelinesを読みましょう。システム設計目次賛否も含めた様々なシステム設計の各トピックの概要。 全てはトレードオフの関係にあります。それぞれのセクションはより学びを深めるような他の文献へのリンクが貼られています。    システム設計トピック: まずはここからStep 1: スケーラビリティに関する動画を見るStep 2: スケーラビリティに関する記事を読む次のステップパフォーマンス vs スケーラビリティレイテンシー vs スループット可用性 vs 一貫性CAP理論CP - 一貫性(consistency)と分割性(partition)耐性AP - 可用性(availability)と分割性(partition)耐性一貫性 パターン弱い一貫性結果整合性強い一貫性可用性 パターンフェイルオーバーレプリケーションドメインネームシステム(DNS)コンテンツデリバリーネットワーク(CDN)プッシュCDNプルCDNロードバランサーアクティブ/パッシブ構成アクティブ/アクティブ構成Layer 4 ロードバランシングLayer 7 ロードバランシング水平スケーリングリバースプロキシ (WEBサーバー)ロードバランサー vs リバースプロキシアプリケーションレイヤーマイクロサービスサービスディスカバリーデータベースリレーショナルデータベースマネジメントシステム (RDBMS)マスター/スレーブ レプリケーションマスター/マスター レプリケーションフェデレーションシャーディングデノーマライゼーションSQL チューニングNoSQLキー/バリューストアドキュメントストアワイドカラムストアグラフ データベースSQL or NoSQLキャッシュクライアントキャッシングCDNキャッシングWebサーバーキャッシングデータベースキャッシングアプリケーションキャッシングデータベースクエリレベルでキャッシングするオブジェクトレベルでキャッシングするいつキャッシュを更新するのかキャッシュアサイドライトスルーライトビハインド (ライトバック)リフレッシュアヘッド非同期処理メッセージキュータスクキューバックプレッシャー通信伝送制御プロトコル (TCP)ユーザデータグラムプロトコル (UDP)遠隔手続呼出 (RPC)Representational state transfer (REST)セキュリティ補遺2の乗数表全てのプログラマーが知るべきレイテンシー値他のシステム設計面接例題実世界でのアーキテクチャ各企業のアーキテクチャ企業のエンジニアブログ作業中クレジット連絡情報ライセンス学習指針学習スパンに応じてみるべきトピックス (short, medium, long)Q: 面接のためには、ここにあるものすべてをやらないといけないのでしょうか？A: いえ、ここにあるすべてをやる必要はありません。面接で何を聞かれるかは以下の条件によって変わってきます:どれだけの技術経験があるかあなたの技術背景が何であるかどのポジションのために面接を受けているかどの企業の面接を受けているか運より経験のある候補者は一般的にシステム設計についてより深い知識を有していることを要求されるでしょう。システムアーキテクトやチームリーダーは各メンバーの持つような知識よりは深い見識を持っているべきでしょう。一流テック企業では複数回の設計面接を課されることが多いです。まずは広く始めて、そこからいくつかの分野に絞って深めていくのがいいでしょう。様々なシステム設計のトピックについて少しずつ知っておくことはいいことです。以下の学習ガイドを自分の学習に当てられる時間、技術経験、どの職位、どの会社に応募しているかなどを加味して自分用に調整して使うといいでしょう。短期間 - 幅広く システム設計トピックを学ぶ。いくつかの 面接課題を解くことで対策する。中期間 - 幅広く そして それなりに深くシステム設計トピックを学ぶ。多くの 面接課題を解くことで対策する。長期間 - 幅広く そして もっと深くシステム設計トピックを学ぶ。ほぼ全ての 面接課題を解くことで対策する。短期間中期間長期間システム設計トピック を読み、システム動作機序について広く知る👍👍👍次のリンク先のいくつかのページを読んで 各企業のエンジニアリングブログ 応募する会社について知る👍👍👍次のリンク先のいくつかのページを読む 実世界でのアーキテクチャ👍👍👍復習する システム設計面接課題にどのように準備するか👍👍👍とりあえず一周する システム設計課題例SomeManyMostとりあえず一周する オブジェクト指向設計問題と解答SomeManyMost復習する その他システム設計面接での質問例SomeManyMostシステム設計面接にどのようにして臨めばいいかシステム設計面接試験問題にどのように取り組むかシステム設計面接は open-ended conversation(Yes/Noでは答えられない口頭質問)です。 自分で会話を組み立てることを求められます。以下のステップに従って議論を組み立てることができるでしょう。この過程を確かなものにするために、次のセクションシステム設計課題例とその解答 を以下の指針に従って読み込むといいでしょう。ステップ 1: そのシステム使用例の概要、制約、推計値等を聞き出し、まとめるシステム仕様の要求事項を聞き出し、問題箇所を特定しましょう。使用例と制約を明確にするための質問を投げかけましょう。要求する推計値についても議論しておきましょう。誰がそのサービスを使うのか？どのように使うのか？何人のユーザーがいるのか？システムはどのような機能を果たすのか？システムへの入力と出力は？どれだけの容量のデータを捌く必要があるのか？一秒間に何リクエストの送信が想定されるか？読み書き比率の推定値はいくら程度か？ステップ 2: より高レベルのシステム設計を組み立てる重要なコンポーネントを全て考慮した高レベルのシステム設計概要を組み立てる。主要なコンポーネントと接続をスケッチして書き出す考えの裏付けをするステップ 3: 核となるコンポーネントを設計するそれぞれの主要なコンポーネントについての詳細を学ぶ。例えば、url短縮サービスの設計を問われた際には次のようにするといいでしょう:元のURLのハッシュ化したものを作り、それを保存するMD5 と Base62ハッシュ衝突SQL もしくは NoSQLデータベーススキーマハッシュ化されたURLを元のURLに再翻訳するデータベース参照API & オブジェクト指向の設計ステップ 4: システム設計のスケール与えられた制約条件からボトルネックとなりそうなところを割り出し、明確化する。  例えば、スケーラビリティの問題解決のために以下の要素を考慮する必要があるだろうか？ロードバランサー水平スケーリングキャッシングデータベースシャーディング取りうる解決策とそのトレードオフについて議論をしよう。全てのことはトレードオフの関係にある。ボトルネックについてはスケーラブルなシステム設計の原理を読むといいでしょう。ちょっとした暗算問題ちょっとした推計値を手計算ですることを求められることもあるかもしれません。補遺の以下の項目が役に立つでしょう:チラ裏計算でシステム設計する2の乗数表全てのプログラマーが知っておくべきレイテンシの参考値文献とその他の参考資料以下のリンク先ページを見てどのような質問を投げかけられるか概要を頭に入れておきましょう:システム設計面接で成功するには？システム設計面接アーキテクチャ、システム設計面接への導入システム設計課題例とその解答頻出のシステム設計面接課題と参考解答、コード及びダイアグラム解答は solutions/ フォルダ以下にリンクが貼られている問題Pastebin.com (もしくは Bit.ly) を設計する解答Twitterタイムライン (もしくはFacebookフィード)を設計するTwitter検索(もしくはFacebook検索)機能を設計する解答ウェブクローラーを設計する解答Mint.comを設計する解答SNSサービスのデータ構造を設計する解答検索エンジンのキー/バリュー構造を設計する解答Amazonのカテゴリ毎の売り上げランキングを設計する解答AWS上で100万人規模のユーザーを捌くサービスを設計する解答システム設計問題を追加するContributePastebin.com (もしくは Bit.ly) を設計する問題と解答を見るTwitterタイムライン&検索 (もしくはFacebookフィード&検索)を設計する問題と解答を見るウェブクローラーの設計問題と解答を見るMint.comの設計問題と解答を見るSNSサービスのデータ構造を設計する問題と解答を見る検索エンジンのキー/バリュー構造を設計する問題と解答を見るAmazonのカテゴリ毎の売り上げランキングを設計する問題と解答を見るAWS上で100万人規模のユーザーを捌くサービスを設計する問題と解答を見るオブジェクト指向設計問題と解答頻出のオブジェクト指向システム設計面接課題と参考解答、コード及びダイアグラム解答は solutions/ フォルダ以下にリンクが貼られている備考: このセクションは作業中です問題ハッシュマップの設計解答LRUキャッシュの設計解答コールセンターの設計解答カードのデッキの設計解答駐車場の設計解答チャットサーバーの設計解答円形配列の設計Contributeオブジェクト指向システム設計問題を追加するContributeシステム設計トピックス: まずはここからシステム設計の勉強は初めて？まず初めに、よく使われる設計原理について、それらが何であるか、どのように用いられるか、長所短所について基本的な知識を得る必要がありますステップ 1: スケーラビリティに関する動画を観て復習するHarvardでのスケーラビリティの講義ここで触れられているトピックス:垂直スケーリング水平スケーリングキャッシングロードバランシングデータベースレプリケーションデータベースパーティションステップ 2: スケーラビリティに関する資料を読んで復習するスケーラビリティここで触れられているトピックス:クローンデータベースキャッシュ非同期次のステップ次に、ハイレベルでのトレードオフについてみていく:パフォーマンス vs スケーラビリティレイテンシ vs スループット可用性 vs 一貫性全てはトレードオフの関係にあるというのを肝に命じておきましょう。それから、より深い内容、DNSやCDNそしてロードバランサーなどについて学習を進めていきましょう。パフォーマンス vs スケーラビリティリソースが追加されるのにつれて パフォーマンス が向上する場合そのサービスは スケーラブル であると言えるでしょう。一般的に、パフォーマンスを向上させるというのはすなわち計算処理を増やすことを意味しますが、データセットが増えた時などより大きな処理を捌けるようになることでもあります。1パフォーマンスvsスケーラビリティをとらえる他の考え方:パフォーマンス での問題を抱えている時、あなたのシステムは一人のユーザーにとって遅いと言えるでしょう。スケーラビリティ での問題を抱えているとき、一人のユーザーにとっては速いですが、多くのリクエストがある時には遅くなってしまうでしょう。その他の参考資料、ページスケーラビリティについてスケーラビリティ、可用性、安定性、パターンレイテンシー vs スループットレイテンシー とはなにがしかの動作を行う、もしくは結果を算出するのに要する時間スループット とはそのような動作や結果算出が単位時間に行われる回数一般的に、 最大限のスループット を 許容範囲内のレイテンシー で実現することを目指すのが普通だ。その他の参考資料、ページレイテンシー vs スループットを理解する可用性 vs 一貫性CAP 理論      Source: CAP theorem revisited分散型コンピュータシステムにおいては下の三つのうち二つまでしか同時に保証することはできない。:一貫性 - 全ての読み込みは最新の書き込みもしくはエラーを受け取る可用性 - 受け取る情報が最新のものだという保証はないが、全てのリクエストはレスポンスを必ず受け取る分断耐性 - ネットワーク問題によって順不同の分断が起きてもシステムが動作を続けるネットワークは信頼できないので、分断耐性は必ず保証しなければなりません。つまりソフトウェアシステムとしてのトレードオフは、一貫性を取るか、可用性を取るかを考えなければなりません。CP - 一貫性と分断耐性(consistency and partition tolerance)分断されたノードからのレスポンスを待ち続けているとタイムアウトエラーに陥る可能性があります。CPはあなたのサービスがアトミックな読み書き（不可分操作）を必要とする際にはいい選択肢でしょう。AP - 可用性と分断耐性(availability and partition tolerance)レスポンスはノード上にあるデータで最新のものを返します。つまり、最新版のデータが返されるとは限りません。分断が解消された後も、書き込みが反映されるのには時間がかかります。結果整合性　を求めるサービスの際にはAPを採用するのがいいでしょう。もしくは、外部エラーに関わらずシステムが稼働する必要がある際にも同様です。その他の参考資料、ページCAP 理論を振り返る平易な英語でのCAP 理論のイントロCAP FAQ一貫性パターン同じデータの複製が複数ある状態では、クライアントが一貫したデータ表示を受け取るために、どのようにそれらを同期すればいいのかという課題があります。 CAP 理論 における一貫性の定義を思い出してみましょう。全ての読み取りは最新の書き込みデータもしくはエラーを受け取るはずです。弱い一貫性書き込み後の読み取りでは、その最新の書き込みを読めたり読めなかったりする。ベストエフォート型のアプローチに基づく。このアプローチはmemcachedなどのシステムに見られます。弱い一貫性はリアルタイム性が必要なユースケース、例えばVoIP、ビデオチャット、リアルタイムマルチプレイヤーゲームなどと相性がいいでしょう。例えば、電話に出ているときに数秒間音声が受け取れなくなったとしたら、その後に接続が回復してもその接続が切断されていた間に話されていたことは聞き取れないというような感じです。結果整合性書き込みの後、読み取りは最終的にはその結果を読み取ることができる(ミリ秒ほど遅れてというのが一般的です)。データは非同期的に複製されます。このアプローチはDNSやメールシステムなどに採用されています。結果整合性は多くのリクエストを捌くサービスと相性がいいでしょう。強い一貫性書き込みの後、読み取りはそれを必ず読むことができます。データは同期的に複製されます。このアプローチはファイルシステムやRDBMSなどで採用されています。トランザクションを扱うサービスでは強い一貫性が必要でしょう。その他の参考資料、ページデータセンター間でのトランザクション可用性パターン高い可用性を担保するには主に次の二つのパターンがあります: フェイルオーバー と レプリケーション です。フェイルオーバーアクティブ・パッシブアクティブ・パッシブフェイルオーバーにおいては、周期信号はアクティブもしくはスタンバイ中のパッシブなサーバーに送られます。周期信号が中断された時には、パッシブだったサーバーがアクティブサーバーのIPアドレスを引き継いでサービスを再開します。起動までのダウンタイムはパッシブサーバーが「ホット」なスタンバイ状態にあるか、「コールド」なスタンバイ状態にあるかで変わります。アクティブなサーバーのみがトラフィックを捌きます。アクティブ・パッシブフェイルオーバーはマスター・スレーブフェイルオーバーと呼ばれることもあります。アクティブ・アクティブアクティブアクティブ構成では両方のサーバーがトラフィックを捌くことで負荷を分散します。これらのサーバーがパブリックなものの場合、DNSは両方のサーバーのパブリックIPを知っている必要があります。もし、プライベートなものな場合、アプリケーションロジックが両方のサーバーの情報について知っている必要があります。アクティブ・アクティブなフェイルオーバーはマスター・マスターフェイルオーバーと呼ばれることもあります。短所: フェイルオーバーフェイルオーバーではより多くのハードウェアを要し、複雑さが増します。最新の書き込みがパッシブサーバーに複製される前にアクティブが落ちると、データ欠損が起きる潜在可能性があります。レプリケーションマスター・スレーブ　と　マスター・マスターこのトピックは データベース セクションにおいてより詳細に解説されています:マスター・スレーブ レプリケーションマスター・マスター レプリケーションドメインネームシステム      Source: DNS security presentationドメインネームシステム (DNS) は www.example.com などのドメインネームをIPアドレスへと翻訳します。DNSは少数のオーソライズされたサーバーが上位に位置する階層的構造です。あなたのルーターもしくはISPは検索をする際にどのDNSサーバーに接続するかという情報を提供します。低い階層のDNSサーバーはその経路マップをキャッシュします。ただ、この情報は伝搬遅延によって陳腐化する可能性があります。DNSの結果はあなたのブラウザもしくはOSに一定期間（time to live (TTL)に設定された期間）キャッシュされます。NS record (name server) - あなたのドメイン・サブドメインでのDNSサーバーを特定します。MX record (mail exchange) - メッセージを受け取るメールサーバーを特定します。A record (address) - IPアドレスに名前をつけます。CNAME (canonical) - 他の名前もしくは　CNAME (example.com を www.example.com) もしくは A recordへと名前を指し示す。CloudFlare や Route 53 などのサービスはマネージドDNSサービスを提供しています。いくつかのDNSサービスでは様々な手法を使ってトラフィックを捌くことができます:加重ラウンドロビントラフィックがメンテナンス中のサーバーに行くのを防ぎます様々なクラスターサイズに応じて調整しますA/B テストレイテンシーベース地理ベース欠点: DNS上記で示されているようなキャッシングによって緩和されているとはいえ、DNSサーバーへの接続には少し遅延が生じる。DNSサーバーは、政府、ISP企業,そして大企業に管理されているが、それらの管理は複雑である。DNSサービスはDDoS attackの例で、IPアドレスなしにユーザーがTwitterなどにアクセスできなくなったように、攻撃を受ける可能性がある。その他の参考資料、ページDNS アーキテクチャWikipediaDNS 記事コンテンツデリバリーネットワーク(Content delivery network)      Source: Why use a CDNコンテンツデリバリーネットワーク(CDN)は世界中に配置されたプロキシサーバーのネットワークがユーザーに一番地理的に近いサーバーからコンテンツを配信するシステムのことです。AmazonのCloudFrontなどは例外的にダイナミックなコンテンツも配信しますが、一般的に、HTML/CSS/JS、写真、そして動画などの静的ファイルがCDNを通じて配信されます。そのサイトのDNSがクライアントにどのサーバーと交信するかという情報を伝えます。CDNを用いてコンテンツを配信することで以下の二つの理由でパフォーマンスが劇的に向上します:ユーザーは近くにあるデータセンターから受信できるバックエンドサーバーはCDNが処理してくれるリクエストに関しては処理する必要がなくなりますプッシュCDNプッシュCDNではサーバーデータに更新があった時には必ず、新しいコンテンツを受け取る方式です。コンテンツを用意し、CDNに直接アップロードし、URLをCDNを指すように指定するところまで、全て自分で責任を負う形です。コンテンツがいつ期限切れになるのか更新されるのかを設定することができます。コンテンツは新規作成時、更新時のみアップロードされることでトラフィックは最小化される一方、ストレージは最大限消費されてしまいます。トラフィックの少ない、もしくは頻繁にはコンテンツが更新されないサイトの場合にはプッシュCDNと相性がいいでしょう。コンテンツは定期的に再びプルされるのではなく、CDNに一度のみ配置されます。プルCDNプルCDNでは一人目のユーザーがリクエストした時に、新しいコンテンツをサービスのサーバーから取得します。コンテンツは自分のサーバーに保存して、CDNを指すURLを書き換えます。結果として、CDNにコンテンツがキャッシュされるまではリクエスト処理が遅くなります。time-to-live (TTL) はコンテンツがどれだけの期間キャッシュされるかを規定します。プルCDNはCDN 上でのストレージスペースを最小化しますが、有効期限が切れたファイルが更新前にプルされてしまうことで冗長なトラフィックに繋がってしまう可能性があります。大規模なトラフィックのあるサイトではプルCDNが相性がいいでしょう。というのも、トラフィックの大部分は最近リクエストされ、CDNに残っているコンテンツにアクセスするものであることが多いからです。欠点: CDNCDNのコストはトラフィック量によって変わります。もちろん、CDNを使わない場合のコストと比較するべきでしょう。TTLが切れる前にコンテンツが更新されると陳腐化する恐れがあります。CDNでは静的コンテンツがCDNを指すようにURLを更新する必要があります。その他の参考資料、ページグローバルに分散されたコンテンツデリバリーネットワークプッシュCDNとプルCDNの違いWikipediaロードバランサー      Source: Scalable system design patternsロードバランサーは入力されるクライアントのリクエストをアプリケーションサーバーやデータベースへと分散させる。どのケースでもロードバランサーはサーバー等計算リソースからのレスポンスを適切なクライアントに返す。ロードバランサーは以下のことに効果的です:リクエストが状態の良くないサーバーに行くのを防ぐリクエストを過剰に送るのを防ぐ特定箇所の欠陥でサービスが落ちることを防ぐロードバランサーは (費用の高い) ハードウェアもしくはHAProxyなどのソフトウェアで実現できる。他の利点としては:SSL termination - 入力されるリクエストを解読する、また、サーバーレスポンスを暗号化することでバックエンドのサーバーがこのコストが高くつきがちな処理を請け負わなくていいように肩代わりします。X.509 certificates をそれぞれのサーバーにインストールする必要をなくしますセッション管理 - クッキーを取り扱うウェブアプリがセッション情報を保持していない時などに、特定のクライアントのリクエストを同じインスタンスへと流します。障害に対応するために、アクティブ・パッシブ もしくは アクティブ・アクティブ モードのどちらにおいても、複数のロードバランサーを配置するのが一般的です。ロードバランサーは以下のような種々のメトリックを用いてトラフィックルーティングを行うことができます:ランダムLeast loadedセッション/クッキーラウンドロビンもしくは加重ラウンドロビンLayer 4Layer 7Layer 4 ロードバランシングLayer 4 ロードバランサーは トランスポートレイヤー を参照してどのようにリクエストを配分するか判断します。一般的に、トランスポートレイヤーとしては、ソース、送信先IPアドレス、ヘッダーに記述されたポート番号が含まれますが、パケットの中身のコンテンツは含みません。 Layer 4 ロードバランサーはネットワークパケットを上流サーバーへ届け、上流サーバーから配信することでネットワークアドレス変換 Network Address Translation (NAT) を実現します。Layer 7 ロードバランシングLayer 7 ロードバランサーは アプリケーションレイヤー を参照してどのようにリクエストを配分するか判断します。ヘッダー、メッセージ、クッキーなどのコンテンツのことです。Layer 7 ロードバランサーはネットワークトラフィックの終端を受け持ち メッセージを読み込み、ロードバランシングの判断をし、選択したサーバーとの接続を繋ぎます。例えば layer 7 ロードバランサーは動画のトラフィックを直接、そのデータをホストしているサーバーにつなぐと同時に、決済処理などのより繊細なトラフィックをセキュリティ強化されたサーバーに流すということもできる。柔軟性とのトレードオフになりますが、 layer 4 ロードバランサーではLayer 7ロードバランサーよりも所要時間、計算リソースを少なく済ませることができます。ただし、昨今の汎用ハードウェアではパフォーマンスは最小限のみしか発揮できないでしょう。水平スケーリングロードバランサーでは水平スケーリングによってパフォーマンスと可用性を向上させることができます。手頃な汎用マシンを追加することによってスケールアウトさせる方が、一つのサーバーをより高価なマシンにスケールアップする（垂直スケーリング）より費用対効果も高くなり、結果的に可用性も高くなります。また、汎用ハードウェアを扱える人材を雇う方が、特化型の商用ハードウェアを扱える人材を雇うよりも簡単でしょう。欠点: 水平スケーリング水平的にスケーリングしていくと、複雑さが増す上に、サーバーのクローニングが必要になる。サーバーはステートレスである必要がある: ユーザーに関連するセッションや、プロフィール写真などのデータを持ってはいけないセッションは一元的なデータベース (SQL、 NoSQL)などのデータストアにストアされるか キャッシュ (Redis、 Memcached)に残す必要があります。キャッシュやデータベースなどの下流サーバーは上流サーバーがスケールアウトするにつれてより多くの同時接続を保たなければなりません。欠点: ロードバランサーロードバランサーはリソースが不足していたり、設定が適切でない場合、システム全体のボトルネックになる可能性があります。単一障害点を除こうとしてロードバランサーを導入した結果、複雑さが増してしまうことになります。ロードバランサーが一つだけだとそこが単一障害点になってしまいます。一方で、ロードバランサーを複数にすると、さらに複雑さが増してしまいます。その他の参考資料、ページNGINX アーキテクチャHAProxy アーキテクチャガイドスケーラビリティWikipediaLayer 4 ロードバランシングLayer 7 ロードバランシングELB listener configリバースプロキシ(webサーバー)      Source: Wikipedia  リバースプロキシサーバーは内部サービスをまとめて外部に統一されたインターフェースを提供するウェブサーバーです。クライアントからのリクエストはそれに対応するサーバーに送られて、その後レスポンスをリバースプロキシがクライアントに返します。他には以下のような利点があります:より堅牢なセキュリティ - バックエンドサーバーの情報を隠したり、IPアドレスをブラックリスト化したり、クライアントごとの接続数を制限したりできます。スケーラビリティや柔軟性が増します - クライアントはリバースプロキシのIPしか見ないので、裏でサーバーをスケールしたり、設定を変えやすくなります。SSL termination - 入力されるリクエストを解読し、サーバーのレスポンスを暗号化することでサーバーがこのコストのかかりうる処理をしなくて済むようになります。X.509 証明書 を各サーバーにインストールする必要がなくなります。圧縮 - サーバーレスポンスを圧縮できますキャッシング - キャッシュされたリクエストに対して、レスポンスを返します静的コンテンツ - 静的コンテンツを直接送信することができます。HTML/CSS/JS写真動画などなどロードバランサー vs リバースプロキシ複数のサーバーがある時にはロードバランサーをデプロイすると役に立つでしょう。 しばしば、ロードバランサーは同じ機能を果たすサーバー群へのトラフィックを捌きます。リバースプロキシでは、上記に述べたような利点を、単一のウェブサーバーやアプリケーションレイヤーに対しても示すことができます。NGINX や HAProxy などの技術はlayer 7 リバースプロキシとロードバランサーの両方をサポートします。欠点: リバースプロキシリバースプロキシを導入するとシステムの複雑性が増します。単一のリバースプロキシは単一障害点になりえます。一方で、複数のリバースプロキシを導入すると(例: フェイルオーバー) 複雑性はより増します。その他の参考資料、ページリバースプロキシ vs ロードバランサーNGINX アーキテクチャHAProxy アーキテクチャ ガイドWikipediaアプリケーション層      Source: Intro to architecting systems for scaleウェブレイヤーをアプリケーション層 (プラットフォーム層とも言われる) と分離することでそれぞれの層を独立にスケール、設定することができるようになります。新しいAPIをアプリケーション層に追加する際に、不必要にウェブサーバーを追加する必要がなくなります。単一責任の原則 では、小さい自律的なサービスが協調して動くように提唱しています。小さいサービスの小さいチームが急成長のためにより積極的な計画を立てられるようにするためです。アプリケーション層は非同期処理もサポートします。マイクロサービス独立してデプロイできる、小規模なモジュール様式であるマイクロサービスもこの議論に関係してくる技術でしょう。それぞれのサービスは独自のプロセスを処理し、明確で軽量なメカニズムで通信して、その目的とする機能を実現します。1例えばPinterestでは以下のようなマイクロサービスに分かれています。ユーザープロフィール、フォロワー、フィード、検索、写真アップロードなどです。サービスディスカバリーConsul、 Etcd、 Zookeeper などのシステムでは、登録されているサービスの名前、アドレス、ポートの情報を監視することで、サービス同士が互いを見つけやすくしています。サービスの完全性の確認には Health checks が便利で、これには HTTP エンドポイントがよく使われます。 Consul と Etcd のいずれも組み込みの key-value store を持っており、設定データや共有データなどのデータを保存しておくことに使われます。欠点: アプリケーション層アーキテクチャ、運用、そしてプロセスを考慮すると、緩く結び付けられたアプリケーション層を追加するには、モノリシックなシステムとは異なるアプローチが必要です。マイクロサービスはデプロイと運用の点から見ると複雑性が増すことになります。その他の参考資料、ページスケールするシステムアーキテクチャを設計するためのイントロシステム設計インタビューを紐解くサービス指向アーキテクチャZookeeperのイントロダクションマイクロサービスを作るために知っておきたいことデータベース      Source: Scaling up to your first 10 million usersリレーショナルデータベースマネジメントシステム (RDBMS)SQLなどのリレーショナルデータベースはテーブルに整理されたデータの集合である。ACID はリレーショナルデータベースにおけるトランザクションのプロパティの集合である不可分性 - それぞれのトランザクションはあるかないかのいずれかである一貫性 - どんなトランザクションもデータベースをある確かな状態から次の状態に遷移させる。独立性 - 同時にトランザクションを処理することは、連続的にトランザクションを処理するのと同じ結果をもたらす。永続性 - トランザクションが処理されたら、そのように保存されるリレーショナルデータベースをスケールさせるためにはたくさんの技術がある: マスター・スレーブ レプリケーション、 マスター・マスター レプリケーション、 federation、 シャーディング、 非正規化、 そして SQL チューニングマスタースレーブ レプリケーションマスターデータベースが読み取りと書き込みを処理し、書き込みを一つ以上のスレーブデータベースに複製します。スレーブデータベースは読み取りのみを処理します。スレーブデータベースは木構造のように追加のスレーブにデータを複製することもできます。マスターデータベースがオフラインになった場合には、いずれかのスレーブがマスターに昇格するか、新しいマスターデータベースが追加されるまでは読み取り専用モードで稼働します。      Source: Scalability, availability, stability, patterns欠点: マスタースレーブ レプリケーションスレーブをマスターに昇格させるには追加のロジックが必要になる。マスタースレーブ レプリケーション、マスターマスター レプリケーションの 両方 の欠点は欠点: レプリケーションを参照マスターマスター レプリケーションいずれのマスターも読み取り書き込みの両方に対応する。書き込みに関してはそれぞれ協調する。いずれかのマスターが落ちても、システム全体としては読み書き両方に対応したまま運用できる。      Source: Scalability, availability, stability, patterns欠点: マスターマスター レプリケーションロードバランサーを導入するか、アプリケーションロジックを変更することでどこに書き込むかを指定しなければならない。大体のマスターマスターシステムは、一貫性が緩い（ACID原理を守っていない）もしくは、同期する時間がかかるために書き込みのレイテンシーが増加してしまっている。書き込みノードが追加され、レイテンシーが増加するにつれ書き込みの衝突の可能性が増える。マスタースレーブ レプリケーション、マスターマスター レプリケーションの 両方 の欠点は欠点: レプリケーション を参照欠点: レプリケーション新しいデータ書き込みを複製する前にマスターが落ちた場合にはそのデータが失われてしまう可能性がある。書き込みは読み取りレプリカにおいてリプレイされる。書き込みが多い場合、複製ノードが書き込みの処理のみで行き詰まって、読み取りの処理を満足に行えない可能性がある。読み取りスレーブノードの数が多ければ多いほど、複製しなければならない数も増え、複製時間が伸びてしまいます。システムによっては、マスターへの書き込みはマルチスレッドで並列処理できる一方、スレーブへの複製は単一スレッドで連続的に処理しなければならない場合があります。レプリケーションでは追加のハードウェアが必要になり、複雑性も増します。その他の参考資料、ページ: レプリケーションスケーラビリティ、 可用性、 スタビリティ パターンマルチマスター レプリケーションFederation      Source: Scaling up to your first 10 million usersフェデレーション (もしくは機能分割化とも言う) はデータベースを機能ごとに分割する。例えば、モノリシックな単一データベースの代わりに、データベースを フォーラム、 ユーザー、 プロダクト のように三つにすることで、データベース一つあたりの書き込み・読み取りのトラフィックが減り、その結果レプリケーションのラグも短くなります。データベースが小さくなることで、メモリーに収まるデータが増えます。キャッシュの局所性が高まるため、キャッシュヒット率も上がります。単一の中央マスターで書き込みを直列化したりしないため、並列で書き込みを処理することができ、スループットの向上が期待できます。欠点: federation大規模な処理やテーブルを要するスキーマの場合、フェデレーションは効果的とは言えないでしょう。どのデータベースに読み書きをするのかを指定するアプリケーションロジックを更新しなければなりません。server linkで二つのデータベースからのデータを連結するのはより複雑になるでしょう。フェデレーションでは追加のハードウェアが必要になり、複雑性も増します。その他の参考資料、ページ: federationScaling up to your first 10 million usersシャーディング      Source: Scalability, availability, stability, patternsシャーディングでは異なるデータベースにそれぞれがデータのサブセット断片のみを持つようにデータを分割します。ユーザーデータベースを例にとると、ユーザー数が増えるにつれてクラスターにはより多くの断片が加えられることになります。federationの利点に似ていて、シャーディングでは読み書きのトラフィックを減らし、レプリケーションを減らし、キャッシュヒットを増やすことができます。インデックスサイズも減らすことができます。一般的にはインデックスサイズを減らすと、パフォーマンスが向上しクエリ速度が速くなります。なにがしかのデータを複製する機能がなければデータロスにつながりますが、もし、一つのシャードが落ちても、他のシャードが動いていることになります。フェデレーションと同じく、単一の中央マスターが書き込みの処理をしなくても、並列で書き込みを処理することができ、スループットの向上が期待できます。ユーザーテーブルをシャードする一般的な方法は、ユーザーのラストネームイニシャルでシャードするか、ユーザーの地理的配置でシャードするなどです。欠点: シャーディングシャードに対応するようにアプリケーションロジックを変更しなければなりません。結果としてSQLクエリが複雑になります。シャードではデータ配分がいびつになってしまう可能性があります。例えば、標準ユーザーの集合を持つシャードがある場合、そのシャードが他のシャードよりも重い負荷を負うことになります。リバランシングをすると複雑性がより増します。consistent hashing に基づいたシャーディングでは、通信データを削減することもできます。複数のシャードからのデータを連結するのはより複雑です。シャーディングでは追加のハードウェアが必要になり、複雑性も増します。その他の参考資料、ページ: シャーディングシャードの登場シャードデータベースアーキテクチャConsistent hashing非正規化非正規化では、書き込みのパフォーマンスをいくらか犠牲にして読み込みのパフォーマンスを向上させようとします。計算的に重いテーブルの結合などをせずに、複数のテーブルに冗長なデータのコピーが書き込まれるのを許容します。いくつかのRDBMS例えば、PostgreSQL やOracleはこの冗長な情報を取り扱い、一貫性を保つためのmaterialized views という機能をサポートしています。フェデレーション や シャーディングなどのテクニックによってそれぞれのデータセンターに分配されたデータを合一させることはとても複雑な作業です。非正規化によってそのような複雑な処理をしなくて済むようになります。多くのシステムで、100対1あるいは1000対1くらいになるくらい読み取りの方が、書き込みのトラフィックよりも多いことでしょう。読み込みを行うために、複雑なデータベースのジョイン処理が含まれるものは計算的に高価につきますし、ディスクの処理時間で膨大な時間を費消してしまうことになります。欠点: 非正規化データが複製される。冗長なデータの複製が同期されるように制約が存在し、そのことでデータベース全体の設計が複雑化する。非正規化されたデータベースは過大な書き込みを処理しなければならない場合、正規化されているそれよりもパフォーマンスにおいて劣る可能性がある。その他の参考資料、ページ: 非正規化DenormalizationSQLチューニングSQLチューニングは広範な知識を必要とする分野で多くの 本 が書かれています。ボトルネックを明らかにし、シミュレートする上で、 ベンチマーク を定め、 プロファイル することはとても重要です。ベンチマーク - abなどのツールを用いて、高負荷の状況をシミュレーションしてみましょう。プロファイル - slow query log などのツールを用いて、パフォーマンス状況の確認をしましょう。ベンチマークとプロファイルをとることで以下のような効率化の選択肢をとることになるでしょう。スキーマを絞るMySQLはアクセス速度向上のため、ディスク上の連続したブロックへデータを格納しています。長さの決まったフィールドに対しては VARCHAR よりも CHAR を使うようにしましょう。CHAR の方が効率的に速くランダムにデータにアクセスできます。 一方、 VARCHAR では次のデータに移る前にデータの末尾を検知しなければならないために速度が犠牲になります。ブログの投稿など、大きなテキストには TEXT を使いましょう。 TEXT ではブーリアン型の検索も可能です。 TEXT フィールドには、テキストブロックが配置されている、ディスク上の場所へのポインターが保存されます。2の32乗や40億以下を超えない程度の大きな数には INT を使いましょう。通貨に関しては小数点表示上のエラーを避けるために DECIMAL を使いましょう。大きな BLOBS を保存するのは避けましょう。どこからそのオブジェクトを取ってくることができるかの情報を保存しましょう。VARCHAR(255) は8ビットで数えられる最大の文字数です。一部のDBMSでは、1バイトの利用効率を最大化するためにこの文字数がよく使われます。検索性能向上のため 、可能であれば NOT NULL 制約を設定しましょう。インデックスを効果的に用いるクエリ(SELECT、 GROUP BY、 ORDER BY、 JOIN) の対象となる列にインデックスを使うことで速度を向上できるかもしれません。インデックスは通常、平衡探索木であるB木の形で表されます。B木によりデータは常にソートされた状態になります。また検索、順次アクセス、挿入、削除を対数時間で行えます。インデックスを配置することはデータをメモリーに残すことにつながりより容量を必要とします。インデックスの更新も必要になるため書き込みも遅くなります。大量のデータをロードする際には、インデックスを切ってからデータをロードして再びインデックスをビルドした方が速いことがあります。高負荷なジョインを避けるパフォーマンス上必要なところには非正規化を適用するテーブルのパーティションテーブルを分割し、ホットスポットを独立したテーブルに分離してメモリーに乗せられるようにする。クエリキャッシュを調整する場合によってはクエリキャッシュ がパフォーマンス問題 を引き起こす可能性があるその他の参考資料、ページ: SQLチューニングMySQLクエリを最適化するためのTipsVARCHAR(255)をやたらよく見かけるのはなんで？null値はどのようにパフォーマンスに影響するのか？Slow query logNoSQLNoSQL は key-value store、 document-store、 wide column store、 もしくは graph databaseによって表現されるデータアイテムの集合です。データは一般的に正規化されておらず、アプリケーション側でジョインが行われます。大部分のNoSQLは真のACIDトランザクションを持たず、 結果整合性 的な振る舞いの方を好みます。BASE はしばしばNoSQLデータベースのプロパティを説明するために用いられます。CAP Theorem と対照的に、BASEは一貫性よりも可用性を優先します。Basically available - システムは可用性を保証します。Soft state - システムの状態は入力がなくても時間経過とともに変化する可能性があります。結果整合性 - システム全体は時間経過とともにその間に入力がないという前提のもと、一貫性が達成されます。SQLか？NoSQLか？ を選択するのに加えて、どのタイプのNoSQLがどの使用例に最も適するかを理解するのはとても有益です。このセクションでは キーバリューストア、 ドキュメントストア、 ワイドカラムストア、 と グラフデータベース について触れていきます。キーバリューストア概要: ハッシュテーブルキーバリューストアでは一般的にO(1)の読み書きができ、それらはメモリないしSSDで裏付けられています。データストアはキーを 辞書的順序 で保持することでキーの効率的な取得を可能にしています。キーバリューストアではメタデータを値とともに保持することが可能です。キーバリューストアはハイパフォーマンスな挙動が可能で、単純なデータモデルやインメモリーキャッシュレイヤーなどのデータが急速に変わる場合などに使われます。単純な処理のみに機能が制限されているので、追加の処理機能が必要な場合にはその複雑性はアプリケーション層に載せることになります。キーバリューストアはもっと複雑なドキュメントストアや、グラフデータベースなどの基本です。その他の参考資料、ページ: キーバリューストアキーバリューデータベースキーバリューストアの欠点Redisアーキテクチャメムキャッシュアーキテクチャドキュメントストア概要: ドキュメントがバリューとして保存されたキーバリューストアドキュメントストアはオブジェクトに関する全ての情報を持つドキュメント(XML、 JSON、 binaryなど)を中心に据えたシステムです。ドキュメントストアでは、ドキュメント自身の内部構造に基づいた、APIもしくはクエリ言語を提供します。 メモ：多くのキーバリューストアでは、値のメタデータを扱う機能を含んでいますが、そのことによって二つドキュメントストアとの境界線が曖昧になってしまっています。以上のことを実現するために、ドキュメントはコレクション、タグ、メタデータやディレクトリなどとして整理されています。ドキュメント同士はまとめてグループにできるものの、それぞれで全く異なるフィールドを持つ可能性があります。MongoDB や CouchDB などのドキュメントストアも、複雑なクエリを処理するためのSQLのような言語を提供しています。DynamoDB はキーバリューとドキュメントの両方をサポートしています。ドキュメントストアは高い柔軟性を担保するので、頻繁に変化するデータを扱う時に用いられます。その他の参考資料、ページ:  ドキュメントストアドキュメント指向 データベースMongoDB アーキテクチャCouchDB アーキテクチャElasticsearch アーキテクチャワイドカラムストア      Source: SQL & NoSQL, a brief history概要: ネストされたマップ カラムファミリー<行キー、 カラム<ColKey、 Value、 Timestamp>>ワイドカラムストアのデータの基本単位はカラム（ネーム・バリューのペア）です。それぞれのカラムはカラムファミリーとして（SQLテーブルのように）グループ化することができます。スーパーカラムファミリーはカラムファミリーの集合です。それぞれのカラムには行キーでアクセスすることができます。同じ行キーを持つカラムは同じ行として認識されます。それぞれの値は、バージョン管理とコンフリクトが起きた時のために、タイムスタンプを含みます。GoogleはBigtableを初のワイドカラムストアとして発表しました。それがオープンソースでHadoopなどでよく使われるHBase やFacebookによるCassandra などのプロジェクトに影響を与えました。BigTable、HBaseやCassandraなどのストアはキーを辞書形式で保持することで選択したキーレンジでのデータ取得を効率的にします。ワイドカラムストアは高い可用性とスケーラビリティを担保します。これらはとても大規模なデータセットを扱うことによく使われます。その他の参考資料、ページ:  ワイドカラムストアSQL & NoSQL簡単に歴史をさらうBigtable アーキテクチャHBase アーキテクチャCassandra アーキテクチャグラフデータベース      Source: Graph database概要: グラフグラフデータベースでは、それぞれのノードがレコードで、それぞれのアークは二つのノードを繋ぐ関係性として定義されます。グラフデータベースは多数の外部キーや多対多などの複雑な関係性を表すのに最適です。グラフデータベースはSNSなどのサービスの複雑な関係性モデルなどについて高いパフォーマンスを発揮します。比較的新しく、まだ一般的には用いられていないので、開発ツールやリソースを探すのが他の方法に比べて難しいかもしれません。多くのグラフはREST APIsを通じてのみアクセスできます。その他の参考資料、ページ:  グラフGraphデータベースNeo4jFlockDBその他の参考資料、ページ:  NoSQL基本用語の説明NoSQLデータベースについて調査と選択ガイドスケーラビリティNoSQLのイントロダクションNoSQLパターンSQLか？NoSQLか？      Source: Transitioning from RDBMS to NoSQLSQL を選ぶ理由:構造化されたデータ厳格なスキーマリレーショナルデータ複雑なジョインをする必要性トランザクションスケールする際のパターンが明確なとき開発者の数、コミュニティ、コード等がより充実しているインデックスによるデータ探索はとても速いNoSQL を選ぶ理由:準構造化されたデータダイナミックないし、フレキシブルなスキーマノンリレーショナルなデータ複雑なジョインをする必要がないデータの多くのTB (もしくは PB) を保存する集中的、大規模なデータ負荷に耐えられるIOPSについては極めて高いスループットを示すNoSQLに適するサンプルデータ:急激なクリックストリームやログデータの収集リーダーボードやスコアリングデータショッピングカートなどの一時的情報頻繁にアクセスされる ('ホットな') テーブルメタデータやルックアップテーブルその他の参考資料、ページ:  　SQLもしくはNoSQL最初の1000万ユーザーにスケールアップするためにSQLとNoSQLの違いキャッシュ      Source: Scalable system design patternsキャッシュはページの読み込み時間を削減し、サーバーやデータベースへの負荷を低減することができます。このモデルでは、実際の処理を保存するために、ディスパッチャーがまず以前にリクエストが送信されたかどうかを確認し、直前の結果を受け取ります。データベースはそのパーティションに渡って統合された読み取り書き込みの分配を要求しますが、人気アイテムはその分配を歪めてシステム全体のボトルネックになってしまうことがあります。データベースの前にキャッシュを差し込むことでこのように、均一でない負荷やトラフィックの急激な増加を吸収することができます。クライアントキャッシングキャッシュはOSやブラウザーなどのクライアントサイド、サーバーサイド もしくは独立のキャッシュレイヤーに設置することができます。CDNキャッシングCDN もキャッシュの一つとして考えることができます。Webサーバーキャッシングリバースプロキシ や Varnish などのキャッシュは静的そして動的なコンテンツを直接配信することができます。 webサーバーもリクエストをキャッシュしてアプリケーションサーバーに接続することなしにレスポンスを返すことができます。データベースキャッシングデータベースは普通、一般的な使用状況に適するようなキャッシングの設定を初期状態で持っています。この設定を特定の仕様に合わせて調整することでパフォーマンスを向上させることができます。アプリケーションキャッシングメムキャッシュなどのIn-memoryキャッシュやRedisはアプリケーションとデータストレージの間のキーバリューストアです。データはRAMで保持されるため、データがディスクで保存される一般的なデータベースよりもだいぶ速いです。RAM容量はディスクよりも限られているので、least recently used (LRU)などのcache invalidation アルゴリズムが 'コールド' なエントリを弾き、'ホット' なデータをRAMに保存します。Redisはさらに以下のような機能を備えています:パージステンス設定ソート済みセット、リストなどの組み込みデータ構造キャッシュには様々なレベルのものがありますが、いずれも大きく二つのカテゴリーのいずれかに分類することができます: データベースクエリ と オブジェクト です:行レベルクエリレベルFully-formed serializable objectsFully-rendered HTML一般的に、ファイルベースキャッシングはクローンを作り出してオートスケーリングを難しくしてしまうので避けるべきです。データベースクエリレベルでのキャッシングデータベースをクエリする際には必ずクエリをキーとしてハッシュして結果をキャッシュに保存しましょう。この手法はキャッシュ期限切れ問題に悩むことになります:複雑なクエリによりキャッシュされた結果を削除することが困難テーブルセルなどのデータ断片が変化した時に、その変化したセルを含むかもしれない全てのキャッシュされたクエリを削除する必要がある。オブジェクトレベルでのキャッシングデータをアプリケーションコードでそうするように、オブジェクトとして捉えてみましょう。アプリケーションに、データベースからのデータセットをクラスインスタンスやデータ構造として組み立てさせます。:そのデータが変更されたら、オブジェクトをキャッシュから削除すること非同期処理を許容します: ワーカーがキャッシュされたオブジェクトの中で最新のものを集めてきます何をキャッシュするか:ユーザーのセッション完全にレンダーされたウェブページアクテビティストリームユーザーグラフデータいつキャッシュを更新するかキャッシュに保存できる容量は限られているため、自分のケースではどのキャッシュ手法が一番いいかは検討する必要があります。キャッシュアサイド      Source: From cache to in-memory data gridアプリケーションはストレージへの読み書きの処理をします。キャッシュはストレージとは直接やりとりをしません。アプリケーションは以下のことをします:キャッシュの中のエントリを参照しますが、結果としてキャッシュミスになりますデータベースからエントリを取得しますエントリをキャッシュに追加しますエントリを返しますdef get_user(self, user_id):    user = cache.get(\""user.{0}\"", user_id)    if user is None:        user = db.query(\""SELECT * FROM users WHERE user_id = {0}\"", user_id)        if user is not None:            key = \""user.{0}\"".format(user_id)            cache.set(key, json.dumps(user))    return userMemcached は通常このように使われる。その後のキャッシュデータ読み込みは速いです。キャッシュアサイドはレージーローディングであるとも言われます。リクエストされたデータのみがキャッシュされ、リクエストされていないデータでキャッシュが溢れるのを防止します。欠点: キャッシュアサイド各キャッシュミスは三つのトリップを呼び出すことになり、体感できるほどの遅延が起きてしまいます。データベースのデータが更新されるとキャッシュデータは古いものになってしまいます。time-to-live (TTL)を設定することでキャッシュエントリの更新を強制的に行う、もしくはライトスルーを採用することでこの問題は緩和できます。ノードが落ちると、新規の空のノードで代替されることでレイテンシーが増加することになります。ライトスルー      Source: Scalability, availability, stability, patternsアプリケーションはキャッシュをメインのデータストアとして使い、そこにデータの読み書きを行います。一方、キャッシュはデータベースへの読み書きを担当します。アプリケーションはキャッシュにあるエントリを追加・更新しますキャッシュは同期的にデータストアに書き込みを行いますエントリを返しますアプリケーションコード:set_user(12345, {\""foo\"":\""bar\""})キャッシュコード:def set_user(user_id, values):    user = db.query(\""UPDATE Users WHERE id = {0}\"", user_id, values)    cache.set(user_id, user)ライトスルーは書き込み処理のせいで全体としては遅いオペレーションですが、書き込まれたばかりのデータに関する読み込みは速いです。ユーザー側は一般的にデータ更新時の方が読み込み時よりもレイテンシーに許容的です。キャッシュ内のデータは最新版で保たれます。欠点: ライトスルーノードが落ちたこと、もしくはスケーリングによって新しいノードが作成された時に、新しいノードはデータベース内のエントリーが更新されるまではエントリーをキャッシュしません。キャッシュアサイドとライトスルーを併用することでこの問題を緩和できます。書き込まれたデータの大部分は一度も読み込まれることはありません。このデータはTTLによって圧縮することができます。ライトビハインド (ライトバック)      Source: Scalability, availability, stability, patternsライトビハインドではアプリケーションは以下のことをします:キャッシュのエントリーを追加・更新しますデータストアへの書き込みを非同期的に行うことで、書き込みパフォーマンスを向上させます。欠点: ライトビハインドキャッシュがデータストア内のコンテンツにヒットする前にキャッシュが落ちるとデータ欠損が起きる可能性があります。キャッシュアサイドやライトスルーよりも実装が複雑になります。リフレッシュアヘッド      Source: From cache to in-memory data grid期限切れよりも前に、直近でアクセスされた全てのキャッシュエントリを自動的に更新するように設定することができます。もしどのアイテムが将来必要になるのかを正確に予測することができるのならば、リードスルーよりもレイテンシーを削減することができます。欠点: リフレッシュアヘッドどのアイテムが必要になるかの予測が正確でない場合にはリフレッシュアヘッドがない方がレイテンシーは良いという結果になってしまいます。欠点: キャッシュcache invalidationなどを用いて、データベースなどの真のデータとキャッシュの間の一貫性を保つ必要があります。Redisやmemcachedを追加することでアプリケーション構成を変更する必要があります。Cache invalidationも難しいですがそれに加えて、いつキャッシュを更新するかという複雑な問題にも悩まされることになります。その他の参考資料、ページFrom cache to in-memory data gridスケーラブルなシステムデザインパターンスケールできるシステムを設計するためのイントロダクションスケーラビリティ、可用性、安定性、パターンスケーラビリティAWS ElastiCacheのストラテジーWikipedia非同期処理      Source: Intro to architecting systems for scale非同期のワークフローはもし、連続的に行われるとリクエスト時間を圧迫してしまうような重い処理を別で処理する手法です。また、定期的にデータを集合させるなどの時間がかかるような処理を前もって処理しておくことにも役立ちます。メッセージキューメッセージキューはメッセージを受け取り、保存し、配信します。もし、処理がインラインで行うには遅すぎる場合、以下のようなワークフローでメッセージキューを用いるといいでしょう:アプリケーションはジョブをキューに配信し、ユーザーにジョブステータスを伝えます。ワーカーがジョブキューから受け取って、処理を行い、終了したらそのシグナルを返します。ユーザーの処理が止まることはなく、ジョブはバックグラウンドで処理されます。この間に、クライアントはオプションとして、タスクが完了したかのように見せるために小規模の処理を行います。例えば、ツイートを投稿するときに、ツイートはすぐにあなたのタイムラインに反映されたように見えますが、そのツイートが実際に全てのフォロワーに配信されるまでにはもう少し時間がかかっているでしょう。Redis はシンプルなメッセージ仲介としてはいいですが、メッセージが失われてしまう可能性があります。RabbitMQ はよく使われていますが、'AMQP'プロトコルに対応して、自前のノードを立てる必要があります。Amazon SQS という選択肢もありますが、レイテンシーが高く、メッセージが重複して配信されてしまう可能性があります。タスクキュータスクキューはタスクとその関連するデータを受け取り、処理した上でその結果を返します。スケジュール管理をできるほか、バックグラウンドでとても重いジョブをこなすこともできます。Celery はスケジューリングとpythonのサポートがあります。バックプレッシャーもし、キューが拡大しすぎると、メモリーよりもキューの方が大きくなりキャッシュミスが起こり、ディスク読み出しにつながり、パフォーマンスが低下することにつながります。バックプレッシャーはキューサイズを制限することで回避することができ、高いスループットを確保しキューにすでにあるジョブについてのレスポンス時間を短縮できます。キューがいっぱいになると、クライアントはサーバービジーもしくはHTTP 503をレスポンスとして受け取りまた後で時間をおいてアクセスするようにメッセージを受け取ります。クライアントはexponential backoffなどによって後ほど再度時間を置いてリクエストすることができます。欠点: 非同期処理キューを用いることで遅延が起こり、複雑さも増すため、あまり重くない計算処理やリアルタイムワークフローにおいては同期処理の方がいいでしょう。その他の参考資料、ページIt's all a numbers gameオーバーロードした時にバックプレッシャーを適用するLittle's lawメッセージキューとタスクキューの違いとは？通信      Source: OSI 7 layer modelHypertext transfer protocol (HTTP)HTTP はクライアントとサーバー間でのデータをエンコードして転送するための手法です。リクエスト・レスポンスに関わるプロトコルです。クライアントがリクエストをサーバーに投げ、サーバーがリクエストに関係するコンテンツと完了ステータス情報をレスポンスとして返します。HTTPは自己完結するので、間にロードバランサー、キャッシュ、エンクリプション、圧縮などのどんな中間ルーターが入っても動くようにできています。基本的なHTTPリクエストはHTTP動詞(メソッド)とリソース(エンドポイント)で成り立っています。以下がよくあるHTTP動詞です。:動詞詳細冪等性*セーフキャッシュできるかGETリソースを読み取るYesYesYesPOSTリソースを作成するもしくはデータを処理するトリガーNoNoYes レスポンスが新しい情報を含む場合PUTリソースを作成もしくは入れ替えるYesNoNoPATCHリソースを部分的に更新するNoNoYes レスポンスが新しい情報を含む場合DELETEリソースを削除するYesNoNo何度呼んでも同じ結果が返ってくることHTTPはTCP や UDP などの低級プロトコルに依存しているアプリケーションレイヤーのプロトコルである。その他の参考資料、ページ: HTTPHTTPってなに?HTTP と TCPの違いPUT と PATCHの違い伝送制御プロトコル (TCP)      Source: How to make a multiplayer gameTCPはIP networkの上で成り立つ接続プロトコルです。接続はhandshakeによって開始、解除されます。全ての送信されたパケットは欠損なしで送信先に送信された順番で到達するように以下の方法で保証されています:シーケンス番号とchecksum fieldsが全てのパケットに用意されているAcknowledgementパケットと自動再送信もし送信者が正しいレスポンスを受け取らなかったとき、パケットを再送信します。複数のタイムアウトがあったとき、接続は解除されます。TCP はフロー制御 と 輻輳制御も実装しています。これらの機能によって速度は低下し、一般的にUDPよりも非効率な転送手段になっています。ハイスループットを実現するために、ウェブサーバーはかなり大きな数のTCP接続を開いておくことがあり、そのことでメモリー使用が圧迫されます。ウェブサーバスレッドと例えばmemcached サーバーの間で多数のコネクションを保っておくことは高くつくかもしれません。可能なところではUDPに切り替えるだけでなくコネクションプーリングなども役立つかもしれません。TCPは高い依存性を要し、時間制約が厳しくないものに適しているでしょう。ウェブサーバー、データベース情報、SMTP、FTPやSSHなどの例に適用されます。以下の時にUDPよりもTCPを使うといいでしょう:全てのデータが欠損することなしに届いてほしいネットワークスループットの最適な自動推測をしてオペレーションしたいユーザデータグラムプロトコル (UDP)      Source: How to make a multiplayer gameUDPはコネクションレスです。データグラム（パケットのようなもの）はデータグラムレベルでの保証しかされません。データグラムは順不同で受け取り先に到着したりそもそも着かなかったりします。UDPは輻輳制御をサポートしません。TCPにおいてはサポートされているこれらの保証がないため、UDPは一般的に、TCPよりも効率的です。UDPはサブネット上のすべての機器にデータグラムを送信することができます。これはDHCP において役に立ちます。というのも、クライアントはまだIPアドレスを取得していないので、IPアドレスを必要とするTCPによるストリームができないからです。UDPは信頼性の面では劣りますが、VoIP、ビデオチャット、ストリーミングや同時通信マルチプレイヤーゲームなどのリアルタイム性が重視される時にはとても効果的です。TCPよりもUDPを使うのは:レイテンシーを最低限に抑えたい時データ欠損よりも、データ遅延を重視するときエラー修正を自前で実装したいときその他の参考資料、ページ: TCP と UDPゲームプログラミングのためのネットワークTCP と UDP プロトコルの主な違いTCP と UDPの違いTransmission control protocolUser datagram protocolFacebookのメムキャッシュスケーリング遠隔手続呼出 (RPC)      Source: Crack the system design interviewRPCではクライアントがリモートサーバーなどの異なるアドレス空間でプロシージャーが処理されるようにします。プロシージャーはローカルでのコールのように、クライアントからサーバーにどのように通信するかという詳細を省いた状態でコードが書かれます。リモートのコールは普通、ローカルのコールよりも遅く、信頼性に欠けるため、RPCコールをローカルコールと区別させておくことが好ましいでしょう。人気のRPCフレームワークは以下です。Protobuf、 Thrift、AvroRPC は リクエストレスポンスプロトコル:クライアントプログラム - クライアントスタブプロシージャーを呼び出します。パラメータはローカルでのプロシージャーコールのようにスタックへとプッシュされていきます。クライアントスタブプロシージャー - プロシージャIDとアーギュメントをパックしてリクエストメッセージにします。クライアント通信モジュール - OSがクライアントからサーバーへとメッセージを送ります。サーバー通信モジュール - OSが受け取ったパケットをサーバースタブプロシージャーに受け渡します。サーバースタブプロシージャー -  結果を展開し、プロシージャーIDにマッチするサーバープロシージャーを呼び出し、結果を返します。サーバーレスポンスは上記のステップを逆順で繰り返します。Sample RPC calls:GET /someoperation?data=anIdPOST /anotheroperation{  \""data\"":\""anId\"";  \""anotherdata\"": \""another value\""}RPCは振る舞いを公開することに焦点を当てています。RPCは内部通信パフォーマンスを理由として使われることが多いです。というのも、使用する状況に合わせてネイティブコールを自作することができるからです。ネイティブライブラリー (aka SDK) を呼ぶのは以下の時:ターゲットのプラットフォームを知っている時ロジックがどのようにアクセスされるのかを管理したいときライブラリー外でエラーがどのようにコントロールされるかを管理したい時パフォーマンスとエンドユーザーエクスペリエンスが最優先の時REST プロトコルに従うHTTP APIはパブリックAPIにおいてよく用いられます。欠点: RPCRPCクライアントとはサービス実装により厳密に左右されることになります。新しいオペレーション、使用例があるたびに新しくAPIが定義されなければなりません。RPCをデバッグするのは難しい可能性があります。既存のテクノロジーをそのまま使ってサービスを構築することはできないかもしれません。例えば、SquidなどのサーバーにRPCコールが正しくキャッシュ されるように追加で骨を折る必要があるかもしれません。Representational state transfer (REST)RESTは、クライアントがサーバーによってマネージされるリソースに対して処理を行うクライアント・サーバーモデルを支持するアーキテキチャスタイルです。サーバーは操作できるもしくは新しいリソースレプレゼンテーションを受け取ることができるようなリソースやアクションのレプレゼンテーションを提供します。すべての通信はステートレスでキャッシュ可能でなければなりません。RESTful なインターフェースには次の四つの特徴があります:特徴的なリソース (URI in HTTP) - どのオペレーションであっても同じURIを使う。HTTP動詞によって変わる (Verbs in HTTP) - 動詞、ヘッダー、ボディを使う自己説明的なエラーメッセージ (status response in HTTP) - ステータスコードを使い、新しく作ったりしないこと。HATEOAS (HTML interface for HTTP) - 自分のwebサービスがブラウザで完全にアクセスできること。サンプル REST コール:GET /someresources/anIdPUT /someresources/anId{\""anotherdata\"": \""another value\""}RESTはデータを公開することに焦点を当てています。クライアントとサーバーのカップリングを最小限にするもので、パブリックAPIなどによく用いられます。RESTはURI、 representation through headers、そして、GET、POST、PUT、 DELETE、PATCHなどのHTTP動詞等のよりジェネリックで統一されたメソッドを用います。ステートレスであるのでRESTは水平スケーリングやパーティショニングに最適です。欠点: RESTRESTはデータ公開に焦点を当てているので、リソースが自然に整理されていなかったり、シンプルなヒエラルキーで表せられない時にはよい選択肢とは言えないかもしれません。例えば、とあるイベントのセットにマッチするすべての更新情報を返すと言った処理は簡単にはパスで表現することができません。RESTでは、URIパス、クエリパラメータ、そして場合によってはリクエストボディなどによって実装されることが多いでしょう。RESTは少数の動詞に依存しています(GET、POST、PUT、DELETE、そして PATCH) が時には使いたい事例に合わないことがあります。例えば、期限の切れたドキュメントをアーカイブに移したい場合などはこれらの動詞の中には綺麗にはフィットしません。ネストされたヒエラルキーの中にあるリソースをとってくるのはシングルビューを描画するのにクライアントとサーバー間で数回やりとりしなければなりません。例として、ブログエントリーのコンテンツとそれに対するコメントを表示する場合などです。様々なネットワーク環境で動作する可能性が考えられるモバイルアプリケーションにおいてはこのような複数のやり取りは好ましくありません。時が経つにつれて、APIレスポンスにより多くのフィールドが与えられて、古いクライアントはすでにいらないものも含めてすべてのデータフィールドを受け取ることになります。そのことで、ペイロードが大きくなりすぎて、レイテンシーも拡大することになります。RPCとREST比較OperationRPCRESTサインアップPOST /signupPOST /personsリザインPOST /resign{\""personid\"": \""1234\""}DELETE /persons/1234Person読み込みGET /readPerson?personid=1234GET /persons/1234Personのアイテムリスト読み込みGET /readUsersItemsList?personid=1234GET /persons/1234/itemsPersonのアイテムへのアイテム追加POST /addItemToUsersItemsList{\""personid\"": \""1234\"";\""itemid\"": \""456\""}POST /persons/1234/items{\""itemid\"": \""456\""}アイテム更新POST /modifyItem{\""itemid\"": \""456\"";\""key\"": \""value\""}PUT /items/456{\""key\"": \""value\""}アイテム削除POST /removeItem{\""itemid\"": \""456\""}DELETE /items/456  Source: Do you really know why you prefer REST over RPCその他の参考資料、ページ: REST と RPCDo you really know why you prefer REST over RPCWhen are RPC-ish approaches more appropriate than REST?REST vs JSON-RPCDebunking the myths of RPC and RESTWhat are the drawbacks of using RESTCrack the system design interviewThriftWhy REST for internal use and not RPCセキュリティこのセクションは更新が必要です。contributingしてください！セキュリティは幅広いトピックです。十分な経験、セキュリティ分野のバックグラウンドがなくても、セキュリティの知識を要する職に応募するのでない限り、基本以上のことを知る必要はないでしょう。情報伝達、保存における暗号化XSS や SQL injectionを防ぐために、全てのユーザー入力もしくはユーザーに露出される入力パラメーターをサニタイズするSQL injectionを防ぐためにパラメータ化されたクエリを用いる。least privilegeの原理を用いるその他の参考資料、ページ:開発者のためのセキュリティガイドOWASP top ten補遺暗算で、推計値を求める必要があることも時にはあります。例えば、ディスクから100枚イメージ分のサムネイルを作る時間を求めたり、その時にどれだけディスクメモリーが消費されるかなどの値です。2の乗数表 と 全てのプログラマーが知るべきレイテンシー値 は良い参考になるでしょう。2の乗数表乗数           厳密な値         約        Bytes---------------------------------------------------------------7                             1288                             25610                           1024   1 thousand           1 KB16                         65,536                       64 KB20                      1,048,576   1 million            1 MB30                  1,073,741,824   1 billion            1 GB32                  4,294,967,296                        4 GB40              1,099,511,627,776   1 trillion           1 TBその他の参考資料、ページ:2の乗数表全てのプログラマーが知るべきレイテンシー値Latency Comparison Numbers--------------------------L1 cache reference                           0.5 nsBranch mispredict                            5   nsL2 cache reference                           7   ns                      14x L1 cacheMutex lock/unlock                           25   nsMain memory reference                      100   ns                      20x L2 cache, 200x L1 cacheCompress 1K bytes with Zippy            10,000   ns       10 usSend 1 KB bytes over 1 Gbps network     10,000   ns       10 usRead 4 KB randomly from SSD*           150,000   ns      150 us          ~1GB/sec SSDRead 1 MB sequentially from memory     250,000   ns      250 usRound trip within same datacenter      500,000   ns      500 usRead 1 MB sequentially from SSD*     1,000,000   ns    1,000 us    1 ms  ~1GB/sec SSD, 4X memoryDisk seek                           10,000,000   ns   10,000 us   10 ms  20x datacenter roundtripRead 1 MB sequentially from 1 Gbps  10,000,000   ns   10,000 us   10 ms  40x memory, 10X SSDRead 1 MB sequentially from disk    30,000,000   ns   30,000 us   30 ms 120x memory, 30X SSDSend packet CA->Netherlands->CA    150,000,000   ns  150,000 us  150 msNotes-----1 ns = 10^-9 seconds1 us = 10^-6 seconds = 1,000 ns1 ms = 10^-3 seconds = 1,000 us = 1,000,000 ns上記表に基づいた役に立つ数値:ディスクからの連続読み取り速度 30 MB/s1 Gbps Ethernetからの連続読み取り速度　100 MB/sSSDからの連続読み取り速度 1 GB/smain memoryからの連続読み取り速度 4 GB/s1秒で地球6-7周できる1秒でデータセンターと2000周やりとりできるレイテンシーの視覚的表その他の参考資料、ページ:全てのプログラマーが知るべきレイテンシー値 - 1全てのプログラマーが知るべきレイテンシー値 - 2Designs, lessons, and advice from building large distributed systemsSoftware Engineering Advice from Building Large-Scale Distributed Systems他のシステム設計面接例題頻出のシステム設計面接課題とその解答へのリンク質問解答Dropboxのようなファイル同期サービスを設計するyoutube.comGoogleのような検索エンジンの設計queue.acm.orgstackexchange.comardendertat.comstanford.eduGoogleのようなスケーラブルなwebクローラーの設計quora.comGoogle docsの設計code.google.comneil.fraser.nameRedisのようなキーバリューストアの設計slideshare.netMemcachedのようなキャッシュシステムの設計slideshare.netAmazonのようなレコメンデーションシステムの設計hulu.comijcai13.orgBitlyのようなURL短縮サービスの設計n00tc0d3r.blogspot.comWhatsAppのようなチャットアプリの設計highscalability.comInstagramのような写真共有サービスの設計highscalability.comhighscalability.comFacebookニュースフィードの設計quora.comquora.comslideshare.netFacebookタイムラインの設計facebook.comhighscalability.comFacebookチャットの設計erlang-factory.comfacebook.comFacebookのようなgraph検索の設計facebook.comfacebook.comfacebook.comCloudFlareのようなCDNの設計cmu.eduTwitterのトレンド機能の設計michael-noll.comsnikolov .wordpress.comランダムID発行システムの設計blog.twitter.comgithub.com一定のインターバル時間での上位k件を返すucsb.eduwpi.edu複数のデータセンターからデータを配信するサービスの設計highscalability.comオンラインの複数プレイヤーカードゲームの設計indieflashblog.combuildnewgames.comガーベッジコレクションシステムの設計stuffwithstuff.comwashington.eduシステム設計例題を追加するContribute実世界のアーキテクチャ世の中のシステムがどのように設計されているかについての記事      Source: Twitter timelines at scale以下の記事の重箱の隅をつつくような細かい詳細にこだわらないこと。むしろ共通の原理、技術、パターンを探ることそれぞれのコンポーネントでどんな問題が解決され、コンポーネントはどこでうまく使えもしくは使えないかを知ること学んだことを復習すること種類システム参考ページデータ処理MapReduce - Googleの分散データ処理システムresearch.google.comデータ処理Spark - Databricksの分散データ処理システムslideshare.netデータ処理Storm - Twitterの分散データ処理システムslideshare.netデータストアBigtable - Googleのカラム指向分散データベースharvard.eduデータストアHBase - Bigtableのオープンソース実装slideshare.netデータストアCassandra - Facebookのカラム指向分散データベースslideshare.netデータストアDynamoDB - Amazonのドキュメント指向分散データベースharvard.eduデータストアMongoDB - ドキュメント指向分散データベースslideshare.netデータストアSpanner - Googleのグローバル分散データベースresearch.google.comデータストアMemcached - 分散メモリーキャッシングシステムslideshare.netデータストアRedis - 永続性とバリュータイプを兼ね備えた分散メモリーキャッシングシステムslideshare.netファイルシステムGoogle File System (GFS) - 分散ファイルシステムresearch.google.comファイルシステムHadoop File System (HDFS) - GFSのオープンソース実装apache.orgMiscChubby - 疎結合の分散システムをロックするGoogleのサービスresearch.google.comMiscDapper - 分散システムを追跡するインフラresearch.google.comMiscKafka - LinkedInによるPub/subメッセージキューslideshare.netMiscZookeeper - 同期を可能にする中央集権インフラとサービスslideshare.netアーキテクチャを追加するContribute各企業のアーキテクチャ企業参考ページAmazonAmazon architectureCinchcastProducing 1,500 hours of audio every dayDataSiftRealtime datamining At 120,000 tweets per secondDropBoxHow we've scaled DropboxESPNOperating At 100,000 duh nuh nuhs per secondGoogleGoogle architectureInstagram14 million users, terabytes of photosWhat powers InstagramJustin.tvJustin.Tv's live video broadcasting architectureFacebookScaling memcached at FacebookTAO: Facebook’s distributed data store for the social graphFacebook’s photo storageFlickrFlickr architectureMailboxFrom 0 to one million users in 6 weeksPinterestFrom 0 To 10s of billions of page views a month18 million visitors, 10x growth, 12 employeesPlayfish50 million monthly users and growingPlentyOfFishPlentyOfFish architectureSalesforceHow they handle 1.3 billion transactions a dayStack OverflowStack Overflow architectureTripAdvisor40M visitors, 200M dynamic page views, 30TB dataTumblr15 billion page views a monthTwitterMaking Twitter 10000 percent fasterStoring 250 million tweets a day using MySQL150M active users, 300K QPS, a 22 MB/S firehoseTimelines at scaleBig and small data at TwitterOperations at Twitter: scaling beyond 100 million usersUberHow Uber scales their real-time market platformWhatsAppThe WhatsApp architecture Facebook bought for $19 billionYouTubeYouTube scalabilityYouTube architecture企業のエンジニアブログ面接を受ける企業のアーキテクチャ投げられる質問は同じ分野から来ることもあるでしょうAirbnb EngineeringAtlassian DevelopersAutodesk EngineeringAWS BlogBitly Engineering BlogBox BlogsCloudera Developer BlogDropbox Tech BlogEngineering at QuoraEbay Tech BlogEvernote Tech BlogEtsy Code as CraftFacebook EngineeringFlickr CodeFoursquare Engineering BlogGitHub Engineering BlogGoogle Research BlogGroupon Engineering BlogHeroku Engineering BlogHubspot Engineering BlogHigh ScalabilityInstagram EngineeringIntel Software BlogJane Street Tech BlogLinkedIn EngineeringMicrosoft EngineeringMicrosoft Python EngineeringNetflix Tech BlogPaypal Developer BlogPinterest Engineering BlogQuora EngineeringReddit BlogSalesforce Engineering BlogSlack Engineering BlogSpotify LabsTwilio Engineering BlogTwitter EngineeringUber Engineering BlogYahoo Engineering BlogYelp Engineering BlogZynga Engineering Blogその他の参考資料、ページ:kilimchoi/engineering-blogsここにあるリストは比較的小規模なものにとどめ、kilimchoi/engineering-blogsにより詳細に記すことで重複しないようにしておくことにする。エンジニアブログへのリンクを追加する場合はここではなく、engineering-blogsレボジトリに追加することを検討してください。進行中の作業セクションの追加や、進行中の作業を手伝っていただける場合はこちら!MapReduceによる分散コンピューティングConsistent hashingScatter gatherContributeクレジットクレジット及び、参照ページは適時このリポジトリ内に記載してありますSpecial thanks to:Hired in techCracking the coding interviewHigh scalabilitycheckcheckzz/system-design-interviewshashank88/system_designmmcgrana/services-engineeringSystem design cheat sheetA distributed systems reading listCracking the system design interviewContact infoFeel free to contact me to discuss any issues, questions, or comments.My contact info can be found on my GitHub page.LicenseI am providing code and resources in this repository to you under an open source license.  Because this is my personal repository, the license you receive to my code and resources is from me and not my employer (Facebook).Copyright 2017 Donne MartinCreative Commons Attribution 4.0 International License (CC BY 4.0)http://creativecommons.org/licenses/by/4.0/"
41,41,google/it-cert-automation-practice,https://github.com/google/it-cert-automation-practice/blob/master/README.md,Python,Google IT Automation with Python Professional Certificate - Practice filesThis repository contains the practice files used throughout the courses that arepart of the Google IT Automation with Python Professional CertificateThere's a separate folder for each course.
42,42,public-apis/public-apis,https://github.com/public-apis/public-apis/blob/master/README.md,Python,"    Public APIs    A collective list of free APIs for use in software and web development    Status                                                                                            The Project        Contributing Guide •    API for this project •    Issues •    Pull Requests •    License    Alternative sites for the project (unofficials)        Free APIs •    Dev Resources •    Public APIs Site •    Apihouse •    Collective APIs             [ Become a sponsor and support Public APIs and their maintainers ]        Special thanks to:                                                                                The fastest way to integrate APIs into any product                                        Explore, discover and consume public APIs as simpler programmable building blocks all on one platform for a 10x developer experience.                                                                                                The fastest way to integrate APIs into any product                                        Explore, discover and consume public APIs as simpler programmable building blocks all on one platform for a 10x developer experience.                        IndexAnimalsAnimeAnti-MalwareArt & DesignAuthentication & AuthorizationBlockchainBooksBusinessCalendarCloud Storage & File SharingContinuous IntegrationCryptocurrencyCurrency ExchangeData ValidationDevelopmentDictionariesDocuments & ProductivityEmailEntertainmentEnvironmentEventsFinanceFood & DrinkGames & ComicsGeocodingGovernmentHealthJobsMachine LearningMusicNewsOpen DataOpen Source ProjectsPatentPersonalityPhonePhotographyProgrammingScience & MathSecurityShoppingSocialSports & FitnessTest DataText AnalysisTrackingTransportationURL ShortenersVehicleVideoWeatherAnimalsAPIDescriptionAuthHTTPSCORSAdoptAPetResource to help get pets adoptedapiKeyYesYesAxolotlCollection of axolotl pictures and factsNoYesNoCat FactsDaily cat factsNoYesNoCataasCat as a service (cats pictures and gifs)NoYesNoCatsPictures of cats from TumblrapiKeyYesNoDog FactsRandom dog factsNoYesYesDog FactsRandom facts of DogsNoYesYesDogsBased on the Stanford Dogs DatasetNoYesYeseBirdRetrieve recent or notable birding observations within a regionapiKeyYesNoFishWatchInformation and pictures about individual fish speciesNoYesYesHTTP CatCat for every HTTP StatusNoYesYesHTTP DogDogs for every HTTP response status codeNoYesYesIUCNIUCN Red List of Threatened SpeciesapiKeyNoNoMeowFactsGet random cat factsNoYesNoMovebankMovement and Migration data of animalsNoYesYesPetfinderPetfinder is dedicated to helping pets find homes, another resource to get pets adoptedapiKeyYesYesPlaceBearPlaceholder bear picturesNoYesYesPlaceDogPlaceholder Dog picturesNoYesYesPlaceKittenPlaceholder Kitten picturesNoYesYesRandomDogRandom pictures of dogsNoYesYesRandomDuckRandom pictures of ducksNoYesNoRandomFoxRandom pictures of foxesNoYesNoRescueGroupsAdoptionNoYesUnknownShibe.OnlineRandom pictures of Shiba Inu, cats or birdsNoYesYesThe DogA public service all about Dogs, free to use when making your fancy new App, Website or ServiceapiKeyYesNoxeno-cantoBird recordingsNoYesUnknownZoo AnimalsFacts and pictures of zoo animalsNoYesYes⬆ Back to IndexAnimeAPIDescriptionAuthHTTPSCORSAniAPIAnime discovery, streaming & syncing with trackersOAuthYesYesAniDBAnime DatabaseapiKeyNoUnknownAniListAnime discovery & trackingOAuthYesUnknownAnimeChanAnime quotes (over 10k+)NoYesNoAnimeFactsAnime Facts (over 100+)NoYesYesAnimeNewsNetworkAnime industry newsNoYesYesCatboyNeko images, funny GIFs & moreNoYesYesDanbooru AnimeThousands of anime artist database to find good anime artapiKeyYesYesJikanUnofficial MyAnimeList APINoYesYesKitsuAnime discovery platformOAuthYesYesMangaDexManga Database and CommunityapiKeyYesUnknownMangapiTranslate manga pages from one language to anotherapiKeyYesUnknownMyAnimeListAnime and Manga Database and CommunityOAuthYesUnknownNekosBestNeko Images & Anime roleplaying GIFsNoYesYesShikimoriAnime discovery, tracking, forum, ratesOAuthYesUnknownStudio GhibliResources from Studio Ghibli filmsNoYesYesTrace MoeA useful tool to get the exact scene of an anime from a screenshotNoYesNoWaifu.imGet waifu pictures from an archive of over 4000 images and multiple tagsNoYesYesWaifu.picsImage sharing platform for anime imagesNoYesNo⬆ Back to IndexAnti-MalwareAPIDescriptionAuthHTTPSCORSAbuseIPDBIP/domain/URL reputationapiKeyYesUnknownAlienVault Open Threat Exchange (OTX)IP/domain/URL reputationapiKeyYesUnknownCAPEsandboxMalware execution and analysisapiKeyYesUnknownGoogle Safe BrowsingGoogle Link/Domain FlaggingapiKeyYesUnknownMalDatabaseProvide malware datasets and threat intelligence feedsapiKeyYesUnknownMalShareMalware Archive / file sourcingapiKeyYesNoMalwareBazaarCollect and share malware samplesapiKeyYesUnknownMetacertMetacert Link FlaggingapiKeyYesUnknownNoPhishyCheck links to see if they're known phishing attemptsapiKeyYesYesPhishermanIP/domain/URL reputationapiKeyYesUnknownScaniiSimple REST API that can scan submitted documents/files for the presence of threatsapiKeyYesYesURLhausBulk queries and Download Malware SamplesNoYesYesURLScan.ioScan and Analyse URLsapiKeyYesUnknownVirusTotalVirusTotal File/URL AnalysisapiKeyYesUnknownWeb of TrustIP/domain/URL reputationapiKeyYesUnknown⬆ Back to IndexArt & DesignAPIDescriptionAuthHTTPSCORSAméthysteGenerate images for Discord usersapiKeyYesUnknownArt Institute of ChicagoArtNoYesYesColormindColor scheme generatorNoNoUnknownColourLoversGet various patterns, palettes and imagesNoNoUnknownCooper HewittSmithsonian Design MuseumapiKeyYesUnknownDribbbleDiscover the world’s top designers & creativesOAuthYesUnknownEmojiHubGet emojis by categories and groupsNoYesYesEuropeanaEuropean Museum and Galleries contentapiKeyYesUnknownHarvard Art MuseumsArtapiKeyNoUnknownIcon HorseFavicons for any website, with fallbacksNoYesYesIconfinderIconsapiKeyYesUnknownIcons8Icons (find \""search icon\"" hyperlink in page)NoYesUnknownLordiconIcons with predone AnimationsNoYesYesMetropolitan Museum of ArtMet Museum of ArtNoYesNoNoun ProjectIconsOAuthNoUnknownPHP-NoiseNoise Background Image GeneratorNoYesYesPixel EncounterSVG Icon GeneratorNoYesNoRijksmuseumRijksMuseum DataapiKeyYesUnknownWord CloudEasily create word cloudsapiKeyYesUnknownxColorsGenerate & convert colorsNoYesYes⬆ Back to IndexAuthentication & AuthorizationAPIDescriptionAuthHTTPSCORSAuth0Easy to implement, adaptable authentication and authorization platformapiKeyYesYesGetOTPImplement OTP flow quicklyapiKeyYesNoMicro User ServiceUser management and authenticationapiKeyYesNoMojoAuthSecure and modern passwordless authentication platformapiKeyYesYesSAWO LabsSimplify login and improve user experience by integrating passwordless authentication in your appapiKeyYesYesStytchUser infrastructure for modern applicationsapiKeyYesNoWarrantAPIs for authorization and access controlapiKeyYesYes⬆ Back to IndexBlockchainAPIDescriptionAuthHTTPSCORSBitqueryOnchain GraphQL APIs & DEX APIsapiKeyYesYesChainlinkBuild hybrid smart contracts with ChainlinkNoYesUnknownChainpointChainpoint is a global network for anchoring data to the Bitcoin blockchainNoYesUnknownCovalentMulti-blockchain data aggregator platformapiKeyYesUnknownEtherscanEthereum explorer APIapiKeyYesYesHeliumHelium is a global, distributed network of Hotspots that create public, long-range wireless coverageNoYesUnknownNownodesBlockchain-as-a-service solution that provides high-quality connection via APIapiKeyYesUnknownSteemBlockchain-based blogging and social media websiteNoNoNoThe GraphIndexing protocol for querying networks like Ethereum with GraphQLapiKeyYesUnknownWalltimeTo retrieve Walltime's market infoNoYesUnknownWatchdataProvide simple and reliable API access to Ethereum blockchainapiKeyYesUnknown⬆ Back to IndexBooksAPIDescriptionAuthHTTPSCORSA Bíblia DigitalDo not worry about managing the multiple versions of the BibleapiKeyYesNoBhagavad GitaOpen Source Shrimad Bhagavad Gita API including 21+ authors translation in Sanskrit/English/HindiapiKeyYesYesBhagavad GitaBhagavad Gita textOAuthYesYesBhagavad Gita teluguBhagavad Gita API in telugu and odia languagesNoYesYesBible-apiFree Bible API with multiple languagesNoYesYesBritish National BibliographyBooksNoNoUnknownCrossref Metadata SearchBooks & Articles MetadataNoYesUnknownGanjoorClassic Persian poetry works including access to related manuscripts, recitations and music tracksOAuthYesYesGoogle BooksBooksOAuthYesUnknownGurbaniNowFast and Accurate Gurbani RESTful APINoYesUnknownGutendexWeb-API for fetching data from Project Gutenberg Books LibraryNoYesUnknownOpen LibraryBooks, book covers and related dataNoYesNoPenguin PublishingBooks, book covers and related dataNoYesYesPoetryDBEnables you to get instant data from our vast poetry collectionNoYesYesQuranRESTful Quran API with multiple languagesNoYesYesQuran CloudA RESTful Quran API to retrieve an Ayah, Surah, Juz or the entire Holy QuranNoYesYesQuran-apiFree Quran API Service with 90+ different languages and 400+ translationsNoYesYesRig VedaGods and poets, their categories, and the verse meters, with the mandal and sukta numberNoYesUnknownThe BibleEverything you need from the Bible in one discoverable placeapiKeyYesUnknownThirukkural1330 Thirukkural poems and explanation in Tamil and EnglishNoYesYesVedic SocietyDescriptions of all nouns (names, places, animals, things) from vedic literatureNoYesUnknownWizard WorldGet information from the Harry Potter universeNoYesYesWolne LekturyAPI for obtaining information about e-books available on the WolneLektury.pl websiteNoYesUnknown⬆ Back to IndexBusinessAPIDescriptionAuthHTTPSCORSApache SupersetAPI to manage your BI dashboards and data sources on SupersetapiKeyYesYesCharity SearchNon-profit charity dataapiKeyNoUnknownClearbit LogoSearch for company logos and embed them in your projectsapiKeyYesUnknownDomainsdb.infoRegistered Domain Names SearchNoYesNoFreelancerHire freelancers to get work doneOAuthYesUnknownGmailFlexible, RESTful access to the user's inboxOAuthYesUnknownGoogle AnalyticsCollect, configure and analyze your data to reach the right audienceOAuthYesUnknownInstatusPost to and update maintenance and incidents on your status page through an HTTP REST APIapiKeyYesUnknownMailchimpSend marketing campaigns and transactional mailsapiKeyYesUnknownmailjetMarketing email can be sent and mail templates made in MJML or HTML can be sent using APIapiKeyYesUnknownmarkerapiTrademark SearchNoNoUnknownORB IntelligenceCompany lookupapiKeyYesUnknownRedashAccess your queries and dashboards on RedashapiKeyYesYesSmartsheetAllows you to programmatically access and Smartsheet data and account informationOAuthYesNoSquareEasy way to take payments, manage refunds, and help customers checkout onlineOAuthYesUnknownSwiftKanbanKanban software, Visualize Work, Increase Organizations Lead Time, Throughput & ProductivityapiKeyYesUnknownTenders in HungaryGet data for procurements in Hungary in JSON formatNoYesUnknownTenders in PolandGet data for procurements in Poland in JSON formatNoYesUnknownTenders in RomaniaGet data for procurements in Romania in JSON formatNoYesUnknownTenders in SpainGet data for procurements in Spain in JSON formatNoYesUnknownTenders in UkraineGet data for procurements in Ukraine in JSON formatNoYesUnknownTomba email finderEmail Finder for B2B sales and email marketing and email verifierapiKeyYesYesTrelloBoards, lists and cards to help you organize and prioritize your projectsOAuthYesUnknown⬆ Back to IndexCalendarAPIDescriptionAuthHTTPSCORSAbstract Public HolidaysData on national, regional, and religious holidays via APIapiKeyYesYesCalendarificWorldwide HolidaysapiKeyYesUnknownCheckiday - National Holiday APIIndustry-leading Holiday API. Over 5,000 holidays and thousands of descriptions. Trusted by the World’s leading companiesapiKeyYesUnknownChurch CalendarCatholic liturgical calendarNoNoUnknownCzech Namedays CalendarLookup for a name and returns nameday dateNoNoUnknownFestivo Public HolidaysFastest and most advanced public holiday and observance service on the marketapiKeyYesYesGoogle CalendarDisplay, create and modify Google calendar eventsOAuthYesUnknownHebrew CalendarConvert between Gregorian and Hebrew, fetch Shabbat and Holiday times, etcNoNoUnknownHolidaysHistorical data regarding holidaysapiKeyYesUnknownLectServeProtestant liturgical calendarNoNoUnknownNager.DatePublic holidays for more than 90 countriesNoYesNoNamedays CalendarProvides namedays for multiple countriesNoYesYesNon-Working DaysDatabase of ICS files for non working daysNoYesUnknownNon-Working DaysSimple REST API for checking working, non-working or short days for Russia, CIS, USA and otherNoYesYesRussian CalendarCheck if a date is a Russian holiday or notNoYesNoUK Bank HolidaysBank holidays in England and Wales, Scotland and Northern IrelandNoYesUnknown⬆ Back to IndexCloud Storage & File SharingAPIDescriptionAuthHTTPSCORSAnonFilesUpload and share your files anonymouslyNoYesUnknownBayFilesUpload and share your filesNoYesUnknownBoxFile Sharing and StorageOAuthYesUnknownddownloadFile Sharing and StorageapiKeyYesUnknownDropboxFile Sharing and StorageOAuthYesUnknownFile.ioSuper simple file sharing, convenient, anonymous and secureNoYesUnknownFilestackFilestack File Uploader & File Upload APIapiKeyYesUnknownGoFileUnlimited size file uploads for freeapiKeyYesUnknownGoogle DriveFile Sharing and StorageOAuthYesUnknownGyazoSave & Share screen captures instantlyapiKeyYesUnknownImgbbSimple and quick private image sharingapiKeyYesUnknownOneDriveFile Sharing and StorageOAuthYesUnknownPantryFree JSON storage for small projectsNoYesYesPastebinPlain Text StorageapiKeyYesUnknownPinataIPFS Pinning Services APIapiKeyYesUnknownQuipFile Sharing and Storage for groupsapiKeyYesYesStorjDecentralized Open-Source Cloud StorageapiKeyYesUnknownThe Null PointerNo-bullshit file hosting and URL shortening serviceNoYesUnknownWeb3 StorageFile Sharing and Storage for Free with 1TB SpaceapiKeyYesYes⬆ Back to IndexContinuous IntegrationAPIDescriptionAuthHTTPSCORSAzure DevOps HealthResource health helps you diagnose and get support when an Azure issue impacts your resourcesapiKeyNoNoBitriseBuild tool and processes integrations to create efficient development pipelinesapiKeyYesUnknownBuddyThe fastest continuous integration and continuous delivery platformOAuthYesUnknownCircleCIAutomate the software development process using continuous integration and continuous deliveryapiKeyYesUnknownCodeshipCodeship is a Continuous Integration Platform in the cloudapiKeyYesUnknownTravis CISync your GitHub projects with Travis CI to test your code in minutesapiKeyYesUnknown⬆ Back to IndexCryptocurrencyAPIDescriptionAuthHTTPSCORS0xAPI for querying token and pool stats across various liquidity poolsNoYesYes1inchAPI for querying decentralize exchangeNoYesUnknownAlchemy EthereumEthereum Node-as-a-Service ProviderapiKeyYesYesapilayer coinlayerReal-time Crypto Currency Exchange RatesapiKeyYesUnknownBinanceExchange for Trading Cryptocurrencies based in ChinaapiKeyYesUnknownBitcambioGet the list of all traded assets in the exchangeNoYesUnknownBitcoinAverageDigital Asset Price Data for the blockchain industryapiKeyYesUnknownBitcoinChartsFinancial and Technical Data related to the Bitcoin NetworkNoYesUnknownBitfinexCryptocurrency Trading PlatformapiKeyYesUnknownBitmexReal-Time Cryptocurrency derivatives trading platform based in Hong KongapiKeyYesUnknownBittrexNext Generation Crypto Trading PlatformapiKeyYesUnknownBlockBitcoin Payment, Wallet & Transaction DataapiKeyYesUnknownBlockchainBitcoin Payment, Wallet & Transaction DataapiKeyYesUnknownblockfrost CardanoInteraction with the Cardano mainnet and several testnetsapiKeyYesUnknownBrave NewCoinReal-time and historic crypto data from more than 200+ exchangesapiKeyYesUnknownBtcTurkReal-time cryptocurrency data, graphs and API that allows buy&sellapiKeyYesYesBybitCryptocurrency data feed and algorithmic tradingapiKeyYesUnknownCoinAPIAll Currency Exchanges integrate under a single apiapiKeyYesNoCoinbaseBitcoin, Bitcoin Cash, Litecoin and Ethereum PricesapiKeyYesUnknownCoinbase ProCryptocurrency Trading PlatformapiKeyYesUnknownCoinCapReal time Cryptocurrency prices through a RESTful APINoYesUnknownCoinDCXCryptocurrency Trading PlatformapiKeyYesUnknownCoinDeskCoinDesk's Bitcoin Price Index (BPI) in multiple currenciesNoYesUnknownCoinGeckoCryptocurrency Price, Market, and Developer/Social DataNoYesYesCoinigyInteracting with Coinigy Accounts and Exchange DirectlyapiKeyYesUnknownCoinlibCrypto Currency PricesapiKeyYesUnknownCoinloreCryptocurrencies prices, volume and moreNoYesUnknownCoinMarketCapCryptocurrencies PricesapiKeyYesUnknownCoinpaprikaCryptocurrencies prices, volume and moreNoYesYesCoinRankingLive Cryptocurrency dataapiKeyYesUnknownCoinremitterCryptocurrencies Payment & PricesapiKeyYesUnknownCoinStatsCrypto TrackerNoYesUnknownCryptAPICryptocurrency Payment ProcessorNoYesUnknownCryptingUpCryptocurrency dataNoYesUnknownCryptoCompareCryptocurrencies ComparisonNoYesUnknownCryptoMarketCryptocurrencies Trading platformapiKeyYesYesCryptonatorCryptocurrencies Exchange RatesNoYesUnknowndYdXDecentralized cryptocurrency exchangeapiKeyYesUnknownEthplorerEthereum tokens, balances, addresses, history of transactions, contracts, and custom structuresapiKeyYesUnknownEXMOCryptocurrencies exchange based in UKapiKeyYesUnknownFTXComplete REST, websocket, and FTX APIs to suit your algorithmic trading needsapiKeyYesYesGateioAPI provides spot, margin and futures trading operationsapiKeyYesUnknownGeminiCryptocurrencies ExchangeNoYesUnknownHirak Exchange RatesExchange rates between 162 currency & 300 crypto currency update each 5 min, accurate, no limitsapiKeyYesUnknownHuobiSeychelles based cryptocurrency exchangeapiKeyYesUnknownicy.toolsGraphQL based NFT APIapiKeyYesUnknownIndodaxTrade your Bitcoin and other assets with rupiahapiKeyYesUnknownINFURA EthereumInteraction with the Ethereum mainnet and several testnetsapiKeyYesYesKrakenCryptocurrencies ExchangeapiKeyYesUnknownKuCoinCryptocurrency Trading PlatformapiKeyYesUnknownLocalbitcoinsP2P platform to buy and sell BitcoinsNoYesUnknownMempoolBitcoin API Service focusing on the transaction feeNoYesNoMercadoBitcoinBrazilian Cryptocurrency InformationNoYesUnknownMessariProvides API endpoints for thousands of crypto assetsNoYesUnknownNexchangeAutomated cryptocurrency exchange serviceNoNoYesNomicsHistorical and realtime cryptocurrency prices and market dataapiKeyYesYesNovaDaxNovaDAX API to access all market data, trading management endpointsapiKeyYesUnknownOKExCryptocurrency exchange based in SeychellesapiKeyYesUnknownPoloniexUS based digital asset exchangeapiKeyYesUnknownSolana JSON RPCProvides various endpoints to interact with the Solana BlockchainNoYesUnknownTechnical AnalysisCryptocurrency prices and technical analysisapiKeyYesNoVALRCryptocurrency Exchange based in South AfricaapiKeyYesUnknownWorldCoinIndexCryptocurrencies PricesapiKeyYesUnknownZMOKEthereum JSON RPC API and Web3 providerNoYesUnknown⬆ Back to IndexCurrency ExchangeAPIDescriptionAuthHTTPSCORS1ForgeForex currency market dataapiKeyYesUnknownAmdorenFree currency API with over 150 currenciesapiKeyYesUnknownapilayer fixer.ioExchange rates and currency conversionapiKeyNoUnknownBank of RussiaExchange rates and currency conversionNoYesUnknownCurrency-apiFree Currency Exchange Rates API with 150+ Currencies & No Rate LimitsNoYesYesCurrencyFreaksProvides current and historical currency exchange rates with free plan 1K requests/monthapiKeyYesYesCurrencylayerExchange rates and currency conversionapiKeyYesUnknownCurrencyScoopReal-time and historical currency rates JSON APIapiKeyYesYesCzech National BankA collection of exchange ratesNoYesUnknownEconomia.AwesomePortuguese free currency prices and conversion with no rate limitsNoYesUnknownExchangeRate-APIFree currency conversionapiKeyYesYesExchangerate.hostFree foreign exchange & crypto rates APINoYesUnknownExchangeratesapi.ioExchange rates with currency conversionapiKeyYesYesFrankfurterExchange rates, currency conversion and time seriesNoYesYesFreeForexAPIReal-time foreign exchange rates for major currency pairsNoYesNoNational Bank of PolandA collection of currency exchange rates (data in XML and JSON)NoYesYesVATComply.comExchange rates, geolocation and VAT number validationNoYesYes⬆ Back to IndexData ValidationAPIDescriptionAuthHTTPSCORSLob.comUS Address VerificationapiKeyYesUnknownPostman EchoTest api server to receive and return value from HTTP methodNoYesUnknownPurgoMalumContent validator against profanity & obscenityNoNoUnknownUS AutocompleteEnter address data quickly with real-time address suggestionsapiKeyYesYesUS ExtractExtract postal addresses from any text including emailsapiKeyYesYesUS Street AddressValidate and append data for any US postal addressapiKeyYesYesvatlayerVAT number validationapiKeyYesUnknown⬆ Back to IndexDevelopmentAPIDescriptionAuthHTTPSCORS24 Pull RequestsProject to promote open source collaboration during DecemberNoYesYesAbstract ScreenshotTake programmatic screenshots of web pages from any websiteapiKeyYesYesAgify.ioEstimates the age from a first nameNoYesYesAPI GrátisMultiples services and public APIsNoYesUnknownApicAgentExtract device details from user-agent stringNoYesYesApiFlashChrome based screenshot API for developersapiKeyYesUnknownapilayer userstackSecure User-Agent String Lookup JSON APIOAuthYesUnknownAPIs.guruWikipedia for Web APIs, OpenAPI/Swagger specs for public APIsNoYesUnknownAzure DevOpsThe Azure DevOps basic components of a REST API request/response pairapiKeyYesUnknownBaseBuilding quick backendsapiKeyYesYesBeeceptorBuild a mock Rest API endpoint in secondsNoYesYesBitbucketBitbucket APIOAuthYesUnknownBlague.xyzLa plus grande API de Blagues FR/The biggest FR jokes APIapiKeyYesYesBlitappSchedule screenshots of web pages and sync them to your cloudapiKeyYesUnknownBlynk-CloudControl IoT Devices from Blynk IoT CloudapiKeyNoUnknownBoredFind random activities to fight boredomNoYesUnknownBrainshop.aiMake A Free A.I BrainapiKeyYesYesBrowshotEasily make screenshots of web pages in any screen size, as any deviceapiKeyYesYesCDNJSLibrary info on CDNJSNoYesUnknownChangelogs.mdStructured changelog metadata from open source projectsNoYesUnknownCiprandSecure random string generatorNoYesNoCloudflare TraceGet IP Address, Timestamp, User Agent, Country Code, IATA, HTTP Version, TLS/SSL Version & MoreNoYesYesCodexOnline Compiler for Various LanguagesNoYesUnknownContentful ImagesUsed to retrieve and apply transformations to imagesapiKeyYesYesCORS ProxyGet around the dreaded CORS error by using this proxy as a middle manNoYesYesCountAPIFree and simple counting service. You can use it to track page hits and specific eventsNoYesYesDatabricksService to manage your databricks account,clusters, notebooks, jobs and workspacesapiKeyYesYesDigitalOcean StatusStatus of all DigitalOcean servicesNoYesUnknownDocker HubInteract with Docker HubapiKeyYesYesDomainDb InfoDomain name search to find all domains containing particular words/phrases/etcNoYesUnknownExtendsClass JSON StorageA simple JSON store APINoYesYesGeekFlareProvide numerous capabilities for important testing and monitoring methods for websitesapiKeyYesUnknownGenderize.ioEstimates a gender from a first nameNoYesYesGETPingTrigger an email notification with a simple GET requestapiKeyYesUnknownGhostGet Published content into your Website, App or other embedded mediaapiKeyYesYesGitHubMake use of GitHub repositories, code and user info programmaticallyOAuthYesYesGitlabAutomate GitLab interaction programmaticallyOAuthYesUnknownGitterChat for DevelopersOAuthYesUnknownGlitterlyImage generation APIapiKeyYesYesGoogle DocsAPI to read, write, and format Google Docs documentsOAuthYesUnknownGoogle FirebaseGoogle's mobile application development platform that helps build, improve, and grow appapiKeyYesYesGoogle FontsMetadata for all families served by Google FontsapiKeyYesUnknownGoogle KeepAPI to read, write, and format Google Keep notesOAuthYesUnknownGoogle SheetsAPI to read, write, and format Google Sheets dataOAuthYesUnknownGoogle SlidesAPI to read, write, and format Google Slides presentationsOAuthYesUnknownGorestOnline REST API for Testing and PrototypingOAuthYesUnknownHasuraGraphQL and REST API Engine with built in AuthorizationapiKeyYesYesHerokuREST API to programmatically create apps, provision add-ons and perform other task on HerokuOAuthYesYeshost-t.comBasic DNS query via HTTP GET requestNoYesNoHost.ioDomains Data API for DevelopersapiKeyYesYesHTTP2.ProTest endpoints for client and server HTTP/2 protocol supportNoYesUnknownHttpbinA Simple HTTP Request & Response ServiceNoYesYesHttpbin CloudflareA Simple HTTP Request & Response Service with HTTP/3 Support by CloudflareNoYesYesHunterAPI for domain search, professional email finder, author finder and email verifierapiKeyYesUnknownIBM Text to SpeechConvert text to speechapiKeyYesYesIcanhazepochGet Epoch timeNoYesYesIcanhazipIP Address APINoYesYesIFTTTIFTTT Connect APINoYesUnknownImage-ChartsGenerate charts, QR codes and graph imagesNoYesYesimport.ioRetrieve structured data from a website or RSS feedapiKeyYesUnknownip-fast.comIP address, country and cityNoYesYesIP2WHOIS Information LookupWHOIS domain name lookupapiKeyYesUnknownipfind.ioGeographic location of an IP address or any domain name along with some other useful informationapiKeyYesYesIPifyA simple IP Address APINoYesUnknownIPinfoAnother simple IP Address APINoYesUnknownjsDelivrPackage info and download stats on jsDelivr CDNNoYesYesJSON 2 JSONPConvert JSON to JSONP (on-the-fly) for easy cross-domain data requests using client-side JavaScriptNoYesUnknownJSONbin.ioFree JSON storage service. Ideal for small scale Web apps, Websites and Mobile appsapiKeyYesYesKrokiCreates diagrams from textual descriptionsNoYesYesLicense-APIUnofficial REST API for choosealicense.comNoYesNoLogs.toGenerate logsapiKeyYesUnknownLua DecompilerOnline Lua 5.1 DecompilerNoYesYesMAC address vendor lookupRetrieve vendor details and other information regarding a given MAC address or an OUIapiKeyYesYesMicro DBSimple database serviceapiKeyYesUnknownMicroENVFake Rest API for developersNoYesUnknownMockyMock user defined test JSON for REST API endpointsNoYesYesMY IPGet IP address informationNoYesUnknownNationalize.ioEstimate the nationality of a first nameNoYesYesNetlifyNetlify is a hosting service for the programmable webOAuthYesUnknownNetworkCalcNetwork calculators, including subnets, DNS, binary, and security toolsNoYesYesnpm RegistryQuery information about your favorite Node.js libraries programaticallyNoYesUnknownOneSignalSelf-serve customer engagement solution for Push Notifications, Email, SMS & In-AppapiKeyYesUnknownOpen Page RankAPI for calculating and comparing metrics of different websites using Page Rank algorithmapiKeyYesUnknownOpenAPIHubThe All-in-one API PlatformX-Mashape-KeyYesUnknownOpenGraphrReally simple API to retrieve Open Graph data from an URLapiKeyYesUnknownoyyiAPI for Fake Data, image/video conversion, optimization, pdf optimization and thumbnail generationNoYesYesPageCDNPublic API for javascript, css and font libraries on PageCDNapiKeyYesYesPostmanTool for testing APIsapiKeyYesUnknownProxyCrawlScraping and crawling anticaptcha serviceapiKeyYesUnknownProxyKingdomRotating Proxy API that produces a working proxy on every requestapiKeyYesYesPusher BeamsPush notifications for Android & iOSapiKeyYesUnknownQR codeCreate an easy to read QR code and URL shortenerNoYesYesQR codeGenerate and decode / read QR code graphicsNoYesUnknownQrcode MonkeyIntegrate custom and unique looking QR codes into your system or workflowNoYesUnknownQuickChartGenerate chart and graph imagesNoYesYesRandom StuffCan be used to get AI Response, jokes, memes, and much more at lightning-fast speedapiKeyYesYesRejaxReverse AJAX service to notify clientsapiKeyYesNoReqResA hosted REST-API ready to respond to your AJAX requestsNoYesUnknownRSS feed to JSONReturns RSS feed in JSON format using feed URLNoYesYesSavePage.ioA free, RESTful API used to screenshot any desktop, or mobile websiteapiKeyYesYesScrapeNinjaScraping API with Chrome fingerprint and residential proxiesapiKeyYesUnknownScraperApiEasily build scalable web scrapersapiKeyYesUnknownscraperBoxUndetectable web scraping APIapiKeyYesYesscrapestackReal-time, Scalable Proxy & Web Scraping REST APIapiKeyYesUnknownScrapingAntHeadless Chrome scraping with a simple APIapiKeyYesUnknownScrapingDogProxy API for Web scrapingapiKeyYesUnknownScreenshotAPI.netCreate pixel-perfect website screenshotsapiKeyYesYesSerialif ColorColor conversion, complementary, grayscale and contrasted textNoYesNoserpstackReal-Time & Accurate Google Search Results APIapiKeyYesYesSheetsuEasy google sheets integrationapiKeyYesUnknownSHOUTCLOUDALL-CAPS AS A SERVICENoNoUnknownSonarProject Sonar DNS Enumeration APINoYesYesSonarQubeSonarQube REST APIs to detect bugs, code smells & security vulnerabilitiesOAuthYesUnknownStackExchangeQ&A forum for developersOAuthYesUnknownStaticallyA free CDN for developersNoYesYesSupportivekoalaAutogenerate images with templateapiKeyYesYesTykApi and service management platformapiKeyYesYesWandboxCode compiler supporting 35+ languages mentioned at wandbox.orgNoYesUnknownWebScraping.AIWeb Scraping API with built-in proxies and JS renderingapiKeyYesYesZenRowsWeb Scraping API that bypasses anti-bot solutions while offering JS rendering, and rotating proxiesapiKeyYesUnknown⬆ Back to IndexDictionariesAPIDescriptionAuthHTTPSCORSChinese Character WebChinese character definitions and pronunciationsNoNoNoChinese Text ProjectOnline open-access digital library for pre-modern Chinese textsNoYesUnknownCollinsBilingual Dictionary and Thesaurus DataapiKeyYesUnknownFree DictionaryDefinitions, phonetics, pronounciations, parts of speech, examples, synonymsNoYesUnknownIndonesia DictionaryIndonesia dictionary many wordsNoYesUnknownLingua RobotWord definitions, pronunciations, synonyms, antonyms and othersapiKeyYesYesMerriam-WebsterDictionary and Thesaurus DataapiKeyYesUnknownOwlBotDefinitions with example sentence and photo if availableapiKeyYesYesOxfordDictionary DataapiKeyYesNoSynonymsSynonyms, thesaurus and antonyms information for any given wordapiKeyYesUnknownWiktionaryCollaborative dictionary dataNoYesYesWordnikDictionary DataapiKeyYesUnknownWordsDefinitions and synonyms for more than 150,000 wordsapiKeyYesUnknown⬆ Back to IndexDocuments & ProductivityAPIDescriptionAuthHTTPSCORSAirtableIntegrate with AirtableapiKeyYesUnknownApi2ConvertOnline File Conversion APIapiKeyYesUnknownapilayer pdflayerHTML/URL to PDFapiKeyYesUnknownAsanaProgrammatic access to all data in your asana systemapiKeyYesYesClickUpClickUp is a robust, cloud-based project management tool for boosting productivityOAuthYesUnknownClockifyClockify's REST-based API can be used to push/pull data to/from it & integrate it with other systemsapiKeyYesUnknownCloudConvertOnline file converter for audio, video, document, ebook, archive, image, spreadsheet, presentationapiKeyYesUnknownCloudmersive Document and Data ConversionHTML/URL to PDF/PNG, Office documents to PDF, image conversionapiKeyYesYesCode::StatsAutomatic time tracking for programmersapiKeyYesNoCraftMyPDFGenerate PDF documents from templates with a drop-and-drop editor and a simple APIapiKeyYesNoFlowdashAutomate business workflowsapiKeyYesUnknownHtml2PDFHTML/URL to PDFapiKeyYesUnknowniLovePDFConvert, merge, split, extract text and add page numbers for PDFs. Free for 250 documents/monthapiKeyYesYesJIRAJIRA is a proprietary issue tracking product that allows bug tracking and agile project managementOAuthYesUnknownMattermostAn open source platform for developer collaborationOAuthYesUnknownMercuryWeb parserapiKeyYesUnknownMondayProgrammatically access and update data inside a monday.com accountapiKeyYesUnknownNotionIntegrate with NotionOAuthYesUnknownPandaDocDocGen and eSignatures APIapiKeyYesNoPocketBookmarking serviceOAuthYesUnknownPodioFile sharing and productivityOAuthYesUnknownPrexViewData from XML or JSON to PDF, HTML or ImageapiKeyYesUnknownRestpackProvides screenshot, HTML to PDF and content extraction APIsapiKeyYesUnknownTodoistTodo ListsOAuthYesUnknownSmart Image Enhancement APIPerforms image upscaling by adding detail to images through multiple super-resolution algorithmsapiKeyYesUnknownVector Express v2.0Free vector file converting APINoYesNoWakaTimeAutomated time tracking leaderboards for programmersNoYesUnknownZubeFull stack project managementOAuthYesUnknown⬆ Back to IndexEmailAPIDescriptionAuthHTTPSCORSAbstract Email ValidationValidate email addresses for deliverability and spamapiKeyYesYesapilayer mailboxlayerEmail address validationapiKeyYesUnknownCloudmersive ValidateValidate email addresses, phone numbers, VAT numbers and domain namesapiKeyYesYesDisifyValidate and detect disposable and temporary email addressesNoYesYesDropMailGraphQL API for creating and managing ephemeral e-mail inboxesNoYesUnknownEVAValidate email addressesNoYesYesGuerrilla MailDisposable temporary Email addressesNoYesUnknownImprovMXAPI for free email forwarding serviceapiKeyYesUnknownKickboxEmail verification APINoYesYesmail.gw10 Minute MailNoYesYesmail.tmTemporary Email ServiceNoYesYesMailboxValidatorValidate email address to improve deliverabilityapiKeyYesUnknownMailCheck.aiPrevent users to sign up with temporary email addressesNoYesUnknownMailtrapA service for the safe testing of emails sent from the development and staging environmentsapiKeyYesUnknownSendgridA cloud-based SMTP provider that allows you to send emails without having to maintain email serversapiKeyYesUnknownSendinblueA service that provides solutions relating to marketing and/or transactional email and/or SMSapiKeyYesUnknownVerifierVerifies that a given email is realapiKeyYesYes⬆ Back to IndexEntertainmentAPIDescriptionAuthHTTPSCORSchucknorris.ioJSON API for hand curated Chuck Norris jokesNoYesUnknownCorporate Buzz WordsREST API for Corporate Buzz WordsNoYesYesExcuserGet random excuses for various situationsNoYesUnknownFun FactA simple HTTPS api that can randomly select and return a fact from the FFA databaseNoYesYesImgflipGets an array of popular memesNoYesUnknownMeme MakerREST API for create your own memeNoYesUnknownNaMoMemesMemes on Narendra ModiNoYesUnknownRandom Useless FactsGet useless, but true factsNoYesUnknownTechyJSON and Plaintext API for tech-savvy sounding phrasesNoYesUnknownYo Momma JokesREST API for Yo Momma JokesNoYesUnknown⬆ Back to IndexEnvironmentAPIDescriptionAuthHTTPSCORSBreezoMeter PollenDaily Forecast pollen conditions data for a specific locationapiKeyYesUnknownCarbon InterfaceAPI to calculate carbon (C02) emissions estimates for common C02 emitting activitiesapiKeyYesYesClimatiqCalculate the environmental footprint created by a broad range of emission-generating activitiesapiKeyYesYesCloverlyAPI calculates the impact of common carbon-intensive activities in real timeapiKeyYesUnknownCO2 OffsetAPI calculates and validates the carbon footprintNoYesUnknownDanish data service EnergiOpen energy data from Energinet to societyNoYesUnknownGrünstromIndexGreen Power Index for Germany (Grünstromindex/GSI)NoNoYesIQAirAir quality and weather dataapiKeyYesUnknownLuchtmeetnetPredicted and actual air quality components for The Netherlands (RIVM)NoYesUnknownNational Grid ESOOpen data from Great Britain’s Electricity System OperatorNoYesUnknownOpenAQOpen air quality dataapiKeyYesUnknownPM2.5 Open Data PortalOpen low-cost PM2.5 sensor dataNoYesUnknownPM25.inAir quality of ChinaapiKeyNoUnknownPVWattsEnergy production photovoltaic (PV) energy systemsapiKeyYesUnknownSrp EnergyHourly usage energy report for Srp customersapiKeyYesNoUK Carbon IntensityThe Official Carbon Intensity API for Great Britain developed by National GridNoYesUnknownWebsite CarbonAPI to estimate the carbon footprint of loading web pagesNoYesUnknown⬆ Back to IndexEventsAPIDescriptionAuthHTTPSCORSEventbriteFind eventsOAuthYesUnknownSeatGeekSearch events, venues and performersapiKeyYesUnknownTicketmasterSearch events, attractions, or venuesapiKeyYesUnknown⬆ Back to IndexFinanceAPIDescriptionAuthHTTPSCORSAbstract VAT ValidationValidate VAT numbers and calculate VAT ratesapiKeyYesYesAletheiaInsider trading data, earnings call analysis, financial statements, and moreapiKeyYesYesAlpacaRealtime and historical market data on all US equities and ETFsapiKeyYesYesAlpha VantageRealtime and historical stock dataapiKeyYesUnknownapilayer marketstackReal-Time, Intraday & Historical Market Data APIapiKeyYesUnknownBanco do BrasilAll Banco do Brasil financial transaction APIsOAuthYesYesBank Data APIInstant IBAN and SWIFT number validation across the globeapiKeyYesUnknownBillplzPayment platformapiKeyYesUnknownBinlistPublic access to a database of IIN/BIN informationNoYesUnknownBoleto.CloudA api to generate boletos in BrazilapiKeyYesUnknownCitiAll Citigroup account and statement data APIsapiKeyYesUnknownEcondbGlobal macroeconomic dataNoYesYesFed TreasuryU.S. Department of the Treasury DataNoYesUnknownFinageFinage is a stock, currency, cryptocurrency, indices, and ETFs real-time & historical data providerapiKeyYesUnknownFinancial Modeling PrepRealtime and historical stock dataapiKeyYesUnknownFinnhubReal-Time RESTful APIs and Websocket for Stocks, Currencies, and CryptoapiKeyYesUnknownFREDEconomic data from the Federal Reserve Bank of St. LouisapiKeyYesYesFront Accounting APIsFront accounting is multilingual and multicurrency software for small businessesOAuthYesYesHotstoksStock market data powered by SQLapiKeyYesYesIEX CloudRealtime & Historical Stock and Market DataapiKeyYesYesIGSpreadbetting and CFD Market DataapiKeyYesUnknownIndian Mutual FundGet complete history of India Mutual Funds DataNoYesUnknownIntrinioA wide selection of financial data feedsapiKeyYesUnknownKlarnaKlarna payment and shopping serviceapiKeyYesUnknownMercadoPagoMercado Pago API reference - all the information you need to develop your integrationsapiKeyYesUnknownMonoConnect with users’ bank accounts and access transaction data in AfricaapiKeyYesUnknownMoovThe Moov API makes it simple for platforms to send, receive, and store moneyapiKeyYesUnknownNordigenConnect to bank accounts using official bank APIs and get raw transaction dataapiKeyYesUnknownOpenFIGIEquity, index, futures, options symbology from Bloomberg LPapiKeyYesYesPlaidConnect with user's bank accounts and access transaction dataapiKeyYesUnknownPolygonHistorical stock market dataapiKeyYesUnknownPortfolio OptimizerPortfolio analysis and optimizationNoYesYesRazorpay IFSCIndian Financial Systems Code (Bank Branch Codes)NoYesUnknownReal Time FinanceWebsocket API to access realtime stock dataapiKeyNoUnknownSEC EDGAR DataAPI to access annual reports of public US companiesNoYesYesSmartAPIGain access to set of  and create end-to-end broking servicesapiKeyYesUnknownStockDataReal-Time, Intraday & Historical Market Data, News and Sentiment APIapiKeyYesYesStyvioRealtime and historical stock data and current stock sentimentapiKeyYesUnknownTax Data APIInstant VAT number and tax validation across the globeapiKeyYesUnkownTradierUS equity/option market data (delayed, intraday, historical)OAuthYesYesTwelve DataStock market data (real-time & historical)apiKeyYesUnknownWallstreetBetsWallstreetBets Stock Comments Sentiment AnalysisNoYesUnknownYahoo FinanceReal time low latency Yahoo Finance API for stock market, crypto currencies, and currency exchangeapiKeyYesYesYNABBudgeting & PlanningOAuthYesYesZoho BooksOnline accounting software, built for your businessOAuthYesUnknown⬆ Back to IndexFood & DrinkAPIDescriptionAuthHTTPSCORSBaconMockupResizable bacon placeholder imagesNoYesYesChompData about various grocery products and foodsapiKeyYesUnknownCoffeeRandom pictures of coffeeNoYesUnknownEdamam nutritionNutrition AnalysisapiKeyYesUnknownEdamam recipesRecipe SearchapiKeyYesUnknownFoodishRandom pictures of food dishesNoYesYesFruityviceData about all kinds of fruitNoYesUnknownKrogerSupermarket DataapiKeyYesUnknownLCBOAlcoholapiKeyYesUnknownOpen Brewery DBBreweries, Cideries and Craft Beer Bottle ShopsNoYesYesOpen Food FactsFood Products DatabaseNoYesUnknownPunkAPIBrewdog Beer RecipesNoYesUnknownRustybeerBeer brewing toolsNoYesNoSpoonacularRecipes, Food Products, and Meal PlanningapiKeyYesUnknownSystembolagetGovornment owned liqour store in SwedenapiKeyYesUnknownTacoFancyCommunity-driven taco databaseNoNoUnknownTastyAPI to query data about recipe, plan, ingredientsapiKeyYesUnknownThe Report of the WeekFood & Drink ReviewsNoYesUnknownTheCocktailDBCocktail RecipesapiKeyYesYesTheMealDBMeal RecipesapiKeyYesYesUntappdSocial beer sharingOAuthYesUnknownWhat's on the menu?NYPL human-transcribed historical menu collectionapiKeyNoUnknownWhiskyHunterPast online whisky auctions statistical dataNoYesUnknownZestfulParse recipe ingredientsapiKeyYesYes⬆ Back to IndexGames & ComicsAPIDescriptionAuthHTTPSCORSAge of Empires IIGet information about Age of Empires II resourcesNoYesNoAmiiboAPINintendo Amiibo InformationNoYesYesAnimal Crossing: New HorizonsAPI for critters, fossils, art, music, furniture and villagersNoYesUnknownAutochess VNGRest Api for Autochess VNGNoYesYesBarter.VGProvides information about Game, DLC, Bundles, Giveaways, TradingNoYesYesBattle.netDiablo III, Hearthstone, StarCraft II and World of Warcraft game data APIsOAuthYesYesBoard Game GeekBoard games, RPG and videogamesNoYesNoBrawl StarsBrawl Stars Game InformationapiKeyYesUnknownBugsnaxGet information about BugsnaxNoYesYesCheapSharkSteam/PC Game Prices and DealsNoYesYesChess.comChess.com read-only REST APINoYesUnknownChuck Norris DatabaseJokesNoNoUnknownClash of ClansClash of Clans Game InformationapiKeyYesUnknownClash RoyaleClash Royale Game InformationapiKeyYesUnknownComic VineComicsNoYesUnknownCrafatarAPI for Minecraft skins and facesNoYesYesCross UniverseCross Universe Card DataNoYesYesDeck of CardsDeck of CardsNoNoUnknownDestiny The GameBungie Platform APIapiKeyYesUnknownDigimon InformationProvides information about digimon creaturesNoYesUnknownDigimon TCGSearch for Digimon cards in digimoncard.ioNoYesUnknownDisneyInformation of Disney charactersNoYesYesDota 2Provides information about Player stats , Match stats, Rankings for Dota 2apiKeyYesUnknownDungeons and DragonsReference for 5th edition spells, classes, monsters, and moreNoNoNoDungeons and Dragons (Alternate)Includes all monsters and spells from the SRD (System Reference Document) as well as a search APINoYesYesEve OnlineThird-Party Developer DocumentationOAuthYesUnknownFFXIV CollectFinal Fantasy XIV data on collectablesNoYesYesFIFA Ultimate TeamFIFA Ultimate Team items APINoYesUnknownFinal Fantasy XIVFinal Fantasy XIV Game data APINoYesYesFortniteFortnite StatsapiKeyYesUnknownForzaShow random image of car from ForzaNoYesUnknownFreeToGameFree-To-Play Games DatabaseNoYesYesFun FactsRandom Fun FactsNoYesYesFunTranslationsTranslate Text into funny languagesNoYesYesGamerPowerGame Giveaways TrackerNoYesYesGDBrowserEasy way to use the Geometry Dash ServersNoYesUnknownGeek-JokesFetch a random geeky/programming related joke for use in all sorts of applicationsNoYesYesGenshin ImpactGenshin Impact game dataNoYesYesGiant BombVideo GamesapiKeyYesUnknownGraphQL PokemonGraphQL powered Pokemon API. Supports generations 1 through 8NoYesYesGuild Wars 2Guild Wars 2 Game InformationapiKeyYesUnknownGW2SpidyGW2Spidy API, Items data on the Guild Wars 2 Trade MarketNoYesUnknownHaloHalo 5 and Halo Wars 2 InformationapiKeyYesUnknownHearthstoneHearthstone Cards InformationX-Mashape-KeyYesUnknownHumble BundleHumble Bundle's current bundlesapiKeyYesUnknownHumorHumor, Jokes, and MemesapiKeyYesUnknownHypixelHypixel player statsapiKeyYesUnknownHyrule CompendiumData on all interactive items from The Legend of Zelda: BOTWNoYesUnknownHytaleHytale blog posts and jobsNoYesUnknownIGDB.comVideo Game DatabaseapiKeyYesUnknownJokeAPIProgramming, Miscellaneous and Dark JokesNoYesYesJokes OneJoke of the day and large category of jokes accessible via REST APIapiKeyYesYesJserviceJeopardy Question DatabaseNoNoUnknownLichessAccess to all data of users, games, puzzles and etc on LichessOAuthYesUnknownMagic The GatheringMagic The Gathering Game InformationNoNoUnknownMario Kart TourAPI for Drivers, Karts, Gliders and CoursesOAuthYesUnknownMarvelMarvel ComicsapiKeyYesUnknownMinecraft Server StatusAPI to get Information about a Minecraft ServerNoYesNoMMO GamesMMO Games Database, News and GiveawaysNoYesNomod.ioCross Platform Mod APIapiKeyYesUnknownMojangMojang / Minecraft APIapiKeyYesUnknownMonster Hunter WorldMonster Hunter World dataNoYesYesOpen TriviaTrivia QuestionsNoYesUnknownPandaScoreE-sports games and resultsapiKeyYesUnknownPath of ExilePath of Exile Game InformationOAuthYesUnknownPlayerDBQuery Minecraft, Steam and XBox AccountsNoYesUnknownPokéapiPokémon InformationNoYesUnknownPokéAPI (GraphQL)The Unofficial GraphQL for PokeAPINoYesYesPokémon TCGPokémon TCG InformationNoYesUnknownPsychonautsPsychonauts World Characters Information and PSI PowersNoYesYesPUBGAccess in-game PUBG dataapiKeyYesYesPuyo NexusPuyo Puyo information from Puyo Nexus WikiNoYesYesquizapi.ioAccess to various kind of quiz questionsapiKeyYesYesRaiderProvides detailed character and guild rankings for Raiding and Mythic+ content in World of WarcraftNoYesUnknownRAWG.io500,000+ games for 50 platforms including mobilesapiKeyYesUnknownRick and MortyAll the Rick and Morty information, including imagesNoYesYesRiot GamesLeague of Legends Game InformationapiKeyYesUnknownRPS 101Rock, Paper, Scissors with 101 objectsNoYesYesRuneScapeRuneScape and OSRS RPGs informationNoYesNoSakura CardCaptorSakura CardCaptor Cards InformationNoYesUnknownScryfallMagic: The Gathering databaseNoYesYesSpaceTradersAPIA playable inter-galactic space trading MMOAPIOAuthYesYesSteamSteam Web API documentationapiKeyYesNoSteamInternal Steam Web API documentationNoYesNoSuperHeroesAll SuperHeroes and Villains data from all universes under a single APIapiKeyYesUnknownTCGdexMulti languages Pokémon TCG InformationNoYesYesTebexTebex API for information about game purchasesX-Mashape-KeyYesNoTETR.IOTETR.IO Tetra Channel APINoYesUnknownTronald DumpThe dumbest things Donald Trump has ever saidNoYesUnknownUniversalisFinal Fantasy XIV market board dataNoYesYesValorant (non-official)An extensive API containing data of most Valorant in-game items, assets and moreNoYesUnknownWarface (non-official)Official API proxy with better data structure and more featuresNoYesNoWargaming.netWargaming.net info and statsapiKeyYesNoWhen is next MCU filmUpcoming MCU film informationNoYesUnknownxkcdRetrieve xkcd comics as JSONNoYesNoYu-Gi-Oh!Yu-Gi-Oh! TCG InformationNoYesUnknown⬆ Back to IndexGeocodingAPIDescriptionAuthHTTPSCORSAbstract IP GeolocationGeolocate website visitors from their IPsapiKeyYesYesActinia Grass GISActinia is an open source REST API for geographical data that uses GRASS GISapiKeyYesUnknownadministrative-divisons-dbGet all administrative divisions of a countryNoYesYesadresse.data.gouv.frAddress database of France, geocoding and reverseNoYesUnknownAirtel IPIP Geolocation API. Collecting data from multiple sourcesNoYesUnknownApiipGet location information by IP addressapiKeyYesYesapilayer ipstackLocate and identify website visitors by IP addressapiKeyYesUnknownBattutaA (country/region/city) in-cascade location APIapiKeyNoUnknownBigDataCloudProvides fast and accurate IP geolocation APIs along with security checks and confidence areaapiKeyYesUnknownBing MapsCreate/customize digital maps based on Bing Maps dataapiKeyYesUnknownbng2latlongConvert British OSGB36 easting and northing (British National Grid) to WGS84 latitude and longitudeNoYesYesCartes.ioCreate maps and markers for anythingNoYesUnknownCep.laBrazil RESTful API to find information about streets, zip codes, neighborhoods, cities and statesNoNoUnknownCitySDKOpen APIs for select European citiesNoYesUnknownCountryGet your visitor's country from their IPNoYesYesCountryStateCityWorld countries, states, regions, provinces, cities & towns in JSON, SQL, XML, YAML, & CSV formatapiKeyYesYesDucks UnlimitedAPI explorer that gives a query URL with a JSON response of locations and citiesNoYesNoFreeGeoIPFree geo ip information, no registration required. 15k/hour rate limitNoYesYesGeoApiFrench geographical dataNoYesUnknownGeoapifyForward and reverse geocoding, address autocompleteapiKeyYesYesGeocod.ioAddress geocoding / reverse geocoding in bulkapiKeyYesUnknownGeocode.xyzProvides worldwide forward/reverse geocoding, batch geocoding and geoparsingNoYesUnknownGeocodify.comWorldwide geocoding, geoparsing and autocomplete for addressesapiKeyYesYesGeodata.gov.grOpen geospatial data and API service for GreeceNoYesUnknownGeoDataSourceGeocoding of city name by using latitude and longitude coordinatesapiKeyYesUnknownGeoDB CitiesGet global city, region, and country dataapiKeyYesUnknownGeographQLA Country, State, and City GraphQL APINoYesYesGeoJSIP geolocation with ChatOps integrationNoYesYesGeokeoGeokeo geocoding service- with 2500 free api requests dailyNoYesYesGeoNamesPlace names and other geographical dataNoNoUnknowngeoPluginIP geolocation and currency conversionNoYesYesGoogle Earth EngineA cloud-based platform for planetary-scale environmental data analysisapiKeyYesUnknownGoogle MapsCreate/customize digital maps based on Google Maps dataapiKeyYesUnknownGraph CountriesCountry-related data like currencies, languages, flags, regions+subregions and bordering countriesNoYesUnknownHelloSalutGet hello translation following user languageNoYesUnknownHERE MapsCreate/customize digital maps based on HERE Maps dataapiKeyYesUnknownHirak IP to CountryIp to location with country code, currency code & currency name, fast response, unlimited requestsapiKeyYesUnknownHong Kong GeoData StoreAPI for accessing geo-data of Hong KongNoYesUnknownIBGEAggregate services of IBGE (Brazilian Institute of Geography and Statistics)NoYesUnknownIP 2 CountryMap an IP to a countryNoYesUnknownIP Address DetailsFind geolocation with ip addressNoYesUnknownIP VigilanteFree IP Geolocation APINoYesUnknownip-apiFind location with IP address or domainNoNoUnknownIP2LocationIP geolocation web service to get more than 55 parametersapiKeyYesUnknownIP2ProxyDetect proxy and VPN using IP addressapiKeyYesUnknownipapi.coFind IP address location informationNoYesYesipapi.comReal-time Geolocation & Reverse IP Lookup REST APIapiKeyYesUnknownIPGEOUnlimited free IP Address API with useful informationNoYesUnknownipgeolocationIP Geolocation AP with free plan 30k requests per monthapiKeyYesYesIPInfoDBFree Geolocation tools and APIs for country, region, city and time zone lookup by IP addressapiKeyYesUnknownKakao MapsKakao Maps provide multiple APIs for Korean mapsapiKeyYesUnknownkeycdn IP Location FinderGet the IP geolocation data through the simple REST API. All the responses are JSON encodedapiKeyYesUnknownLocationIQProvides forward/reverse geocoding and batch geocodingapiKeyYesYesLongdo MapInteractive map with detailed places and information portal in ThailandapiKeyYesYesMapboxCreate/customize beautiful digital mapsapiKeyYesUnknownMapQuestTo access tools and resources to map the worldapiKeyYesNoMexicoMexico RESTful zip codes APINoYesUnknownNominatimProvides worldwide forward / reverse geocodingNoYesYesOne Map, SingaporeSingapore Land Authority REST API services for Singapore addressesapiKeyYesUnknownOnWaterDetermine if a lat/lon is on water or landNoYesUnknownOpen Topo DataElevation and ocean depth for a latitude and longitudeNoYesNoOpenCageForward and reverse geocoding using open dataapiKeyYesYesopenrouteservice.orgDirections, POIs, isochrones, geocoding (+reverse), elevation, and moreapiKeyYesUnknownOpenStreetMapNavigation, geolocation and geographical dataOAuthNoUnknownPinball MapA crowdsourced map of public pinball machinesNoYesYespositionstackForward & Reverse Batch Geocoding REST APIapiKeyYesUnknownPostaliMexico Zip Codes APINoYesYesPostcodeData.nlProvide geolocation data based on postcode for Dutch addressesNoNoUnknownPostcodes.ioPostcode lookup & Geolocation for the UKNoYesYesQueimadas INPEAccess to heat focus data (probable wildfire)NoYesUnknownREST CountriesGet information about countries via a RESTful APINoYesYesRoadGoat CitiesCities content & photos APIapiKeyYesNoRwanda LocationsRwanda Provences, Districts, Cities, Capital City, Sector, cells, villages and streetsNoYesUnknownSLFGerman city, country, river, databaseNoYesYesSpotSenseAdd location based interactions to your mobile appapiKeyYesUnknownTelizeTelize offers location information from any IP addressapiKeyYesYesTomTomMaps, Directions, Places and Traffic APIsapiKeyYesYesUebermapsDiscover and share maps with friendsapiKeyYesUnknownUS ZipCodeValidate and append data for any US ZipCodeapiKeyYesYesUtah AGRCUtah Web API for geocoding Utah addressesapiKeyYesUnknownViaCepBrazil RESTful zip codes APINoYesUnknownWhat3WordsThree words as rememberable and unique coordinates worldwideapiKeyYesUnknownYandex.Maps GeocoderUse geocoding to get an object's coordinates from its addressapiKeyYesUnknownZipCodeAPIUS zip code distance, radius and location APIapiKeyYesUnknownZippopotam.usGet information about place such as country, city, state, etcNoNoUnknownZiptasticGet the country, state, and city of any US zip-codeNoYesUnknown⬆ Back to IndexGovernmentAPIDescriptionAuthHTTPSCORSBank Negara Malaysia Open DataMalaysia Central Bank Open DataNoYesUnknownBCLawsAccess to the laws of British ColumbiaNoNoUnknownBrazilCommunity driven API for Brazil Public DataNoYesYesBrazil Central Bank Open DataBrazil Central Bank Open DataNoYesUnknownBrazil Receita WSConsult companies by CNPJ for Brazilian companiesNoYesUnknownBrazilian Chamber of Deputies Open DataProvides legislative information in Apis XML and JSON, as well as files in various formatsNoYesNoCensus.govThe US Census Bureau provides various APIs and data sets on demographics and businessesNoYesUnknownCity, BerlinBerlin(DE) City Open DataNoYesUnknownCity, GdańskGdańsk (PL) City Open DataNoYesUnknownCity, GdyniaGdynia (PL) City Open DataNoNoUnknownCity, HelsinkiHelsinki(FI) City Open DataNoYesUnknownCity, LvivLviv(UA) City Open DataNoYesUnknownCity, Nantes Open DataNantes(FR) City Open DataapiKeyYesUnknownCity, New York Open DataNew York (US) City Open DataNoYesUnknownCity, Prague Open DataPrague(CZ) City Open DataNoNoUnknownCity, Toronto Open DataToronto (CA) City Open DataNoYesYesCode.govThe primary platform for Open Source and code sharing for the U.S. Federal GovernmentapiKeyYesUnknownColorado Information MarketplaceColorado State Government Open DataNoYesUnknownData USAUS Public DataNoYesUnknownData.govUS Government DataapiKeyYesUnknownData.parliament.ukContains live datasets including information about petitions, bills, MP votes, attendance and moreNoNoUnknownDeutscher Bundestag DIPThis API provides read access to DIP entities (e.g. activities, persons, printed material)apiKeyYesUnknownDistrict of Columbia Open DataContains D.C. government public datasets, including crime, GIS, financial data, and so onNoYesUnknownEPAWeb services and data sets from the US Environmental Protection AgencyNoYesUnknownFBI WantedAccess information on the FBI Wanted programNoYesUnknownFECInformation on campaign donations in federal electionsapiKeyYesUnknownFederal RegisterThe Daily Journal of the United States GovernmentNoYesUnknownFood Standards AgencyUK food hygiene rating data APINoNoUnknownGazette Data, UKUK official public record APIOAuthYesUnknownGun PolicyInternational firearm injury prevention and policyapiKeyYesUnknownINEIPeruvian Statistical Government Open DataNoNoUnknownInterpol Red NoticesAccess and search Interpol Red NoticesNoYesUnknownIstanbul (İBB) Open DataData sets from the İstanbul Metropolitan Municipality (İBB)NoYesUnknownNational Park Service, USData from the US National Park ServiceapiKeyYesYesOpen Government, ACTAustralian Capital Territory Open DataNoYesUnknownOpen Government, ArgentinaArgentina Government Open DataNoYesUnknownOpen Government, AustraliaAustralian Government Open DataNoYesUnknownOpen Government, AustriaAustria Government Open DataNoYesUnknownOpen Government, BelgiumBelgium Government Open DataNoYesUnknownOpen Government, CanadaCanadian Government Open DataNoNoUnknownOpen Government, ColombiaColombia Government Open DataNoNoUnknownOpen Government, CyprusCyprus Government Open DataNoYesUnknownOpen Government, Czech RepublicCzech Republic Government Open DataNoYesUnknownOpen Government, DenmarkDenmark Government Open DataNoYesUnknownOpen Government, EstoniaEstonia Government Open DataapiKeyYesUnknownOpen Government, FinlandFinland Government Open DataNoYesUnknownOpen Government, FranceFrench Government Open DataapiKeyYesUnknownOpen Government, GermanyGermany Government Open DataNoYesUnknownOpen Government, GreeceGreece Government Open DataOAuthYesUnknownOpen Government, IndiaIndian Government Open DataapiKeyYesUnknownOpen Government, IrelandIreland Government Open DataNoYesUnknownOpen Government, ItalyItaly Government Open DataNoYesUnknownOpen Government, KoreaKorea Government Open DataapiKeyYesUnknownOpen Government, LithuaniaLithuania Government Open DataNoYesUnknownOpen Government, LuxembourgLuxembourgish Government Open DataapiKeyYesUnknownOpen Government, MexicoMexican Statistical Government Open DataNoYesUnknownOpen Government, MexicoMexico Government Open DataNoYesUnknownOpen Government, NetherlandsNetherlands Government Open DataNoYesUnknownOpen Government, New South WalesNew South Wales Government Open DataapiKeyYesUnknownOpen Government, New ZealandNew Zealand Government Open DataNoYesUnknownOpen Government, NorwayNorwegian Government Open DataNoYesYesOpen Government, PeruPeru Government Open DataNoYesUnknownOpen Government, PolandPoland Government Open DataNoYesYesOpen Government, PortugalPortugal Government Open DataNoYesYesOpen Government, Queensland GovernmentQueensland Government Open DataNoYesUnknownOpen Government, RomaniaRomania Government Open DataNoNoUnknownOpen Government, Saudi ArabiaSaudi Arabia Government Open DataNoYesUnknownOpen Government, SingaporeSingapore Government Open DataNoYesUnknownOpen Government, SlovakiaSlovakia Government Open DataNoYesUnknownOpen Government, SloveniaSlovenia Government Open DataNoYesNoOpen Government, South Australian GovernmentSouth Australian Government Open DataNoYesUnknownOpen Government, SpainSpain Government Open DataNoYesUnknownOpen Government, SwedenSweden Government Open DataNoYesUnknownOpen Government, SwitzerlandSwitzerland Government Open DataNoYesUnknownOpen Government, TaiwanTaiwan Government Open DataNoYesUnknownOpen Government, ThailandThailand Government Open DataapiKeyYesUnknownOpen Government, UKUK Government Open DataNoYesUnknownOpen Government, USAUnited States Government Open DataNoYesUnknownOpen Government, Victoria State GovernmentVictoria State Government Open DataNoYesUnknownOpen Government, West AustraliaWest Australia Open DataNoYesUnknownPRC Exam ScheduleUnofficial Philippine Professional Regulation Commission's examination scheduleNoYesYesRepresent by Open NorthFind Canadian Government RepresentativesNoYesUnknownUK Companies HouseUK Companies House Data from the UK governmentOAuthYesUnknownUS Presidential Election Data by TogaTechBasic candidate data and live electoral vote counts for top two parties in US presidential electionNoYesNoUSA.govAuthoritative information on U.S. programs, events, services and moreapiKeyYesUnknownUSAspending.govUS federal spending dataNoYesUnknown⬆ Back to IndexHealthAPIDescriptionAuthHTTPSCORSCMS.govAccess to the data from the CMS - medicare.govapiKeyYesUnknownCoronavirusHTTP API for Latest Covid-19 DataNoYesUnknownCoronavirus in the UKUK Government coronavirus data, including deaths and cases by regionNoYesUnknownCovid Tracking ProjectCovid-19  data for the USNoYesNoCovid-19Covid 19 spread, infection and recoveryNoYesYesCovid-19Covid 19 cases, deaths and recovery per countryNoYesYesCovid-19 DatenhubMaps, datasets, applications and more in the context of COVID-19NoYesUnknownCovid-19 Government ResponseGovernment measures tracker to fight against the Covid-19 pandemicNoYesYesCovid-19 IndiaCovid 19 statistics state and district wise about cases, vaccinations, recovery within IndiaNoYesUnknownCovid-19 JHU CSSEOpen-source API for exploring Covid19 cases based on JHU CSSENoYesYesCovid-19 Live DataGlobal and countrywise data of Covid 19 daily Summary, confirmed cases, recovered and deathsNoYesYesCovid-19 PhilippinesUnofficial Covid-19 Web API for Philippines from data collected by DOHNoYesYesCOVID-19 Tracker CanadaDetails on Covid-19 cases across CanadaNoYesUnknownCOVID-19 Tracker Sri LankaProvides situation of the COVID-19 patients reported in Sri LankaNoYesUnknownCOVID-IDIndonesian government Covid data per provinceNoYesYesDataflow Kit COVID-19COVID-19 live statistics into sites per hourNoYesUnknownFoodData CentralNational Nutrient Database for Standard ReferenceapiKeyYesUnknownHealthcare.govEducational content about the US Health Insurance MarketplaceNoYesUnknownHumanitarian Data ExchangeHumanitarian Data Exchange (HDX) is open platform for sharing data across crises and organisationsNoYesUnknownInfermedicaNLP based symptom checker and patient triage API for health diagnosis from textapiKeyYesYesLAPISSARS-CoV-2 genomic sequences from public sourcesNoYesYesLexigramNLP that extracts mentions of clinical concepts from text, gives access to clinical ontologyapiKeyYesUnknownMakeupMakeup InformationNoNoUnknownMyVaccinationVaccination data for MalaysiaNoYesUnknownNPPESNational Plan & Provider Enumeration System, info on healthcare providers registered in USNoYesUnknownNutritionixWorlds largest verified nutrition databaseapiKeyYesUnknownOpen Data NHS ScotlandMedical reference data and statistics by Public Health ScotlandNoYesUnknownOpen DiseaseAPI for Current cases and more stuff about COVID-19 and InfluenzaNoYesYesopenFDAPublic FDA data about drugs, devices and foodsapiKeyYesUnknownOrion HealthMedical platform which allows the development of applications for different healthcare scenariosOAuthYesUnknownQuarantineCoronavirus API with free COVID-19 live updatesNoYesYes⬆ Back to IndexJobsAPIDescriptionAuthHTTPSCORSAdzunaJob board aggregatorapiKeyYesUnknownArbeitnowAPI for Job board aggregator in Europe / RemoteNoYesYesArbeitsamtAPI for the \""Arbeitsamt\"", which is a german Job board aggregatorOAuthYesUnknownCareerjetJob search engineapiKeyNoUnknownDevITjobs UKJobs with GraphQLNoYesYesFindworkJob boardapiKeyYesUnknownGraphQL JobsJobs with GraphQLNoYesYesJobs2CareersJob aggregatorapiKeyYesUnknownJoobleJob search engineapiKeyYesUnknownJujuJob search engineapiKeyNoUnknownOpen SkillsJob titles, skills and related jobs dataNoNoUnknownReedJob board aggregatorapiKeyYesUnknownThe MuseJob board and company profilesapiKeyYesUnknownUpworkFreelance job board and management systemOAuthYesUnknownUSAJOBSUS government job boardapiKeyYesUnknownWhatJobsJob search engineapiKeyYesUnknownZipRecruiterJob search app and websiteapiKeyYesUnknown⬆ Back to IndexMachine LearningAPIDescriptionAuthHTTPSCORSAI For ThaiFree Various Thai AI APIapiKeyYesYesClarifaiComputer VisionOAuthYesUnknownCloudmersiveImage captioning, face recognition, NSFW classificationapiKeyYesYesDeepcodeAI for code reviewNoYesUnknownDialogflowNatural Language ProcessingapiKeyYesUnknownEXUDE-APIUsed for the primary ways for filtering the stopping, stemming words from the text dataNoYesYesHirak FaceAPIFace detection, face recognition with age estimation/gender estimation, accurate, no quota limitsapiKeyYesUnknownImaggaImage Recognition Solutions like Tagging, Visual Search, NSFW moderationapiKeyYesUnknownInferdoComputer Vision services like Facial detection, Image labeling, NSFW classificationapiKeyYesUnknownIPS OnlineFace and License Plate AnonymizationapiKeyYesUnknownIrisnetRealtime content moderation API that blocks or blurs unwanted images in real-timeapiKeyYesYesKeen IOData AnalyticsapiKeyYesUnknownMachinetutorsAI Solutions: Video/Image Classification & Tagging, NSFW, Icon/Image/Audio Search, NLPapiKeyYesYesMessengerX.ioA FREE API for developers to build and monetize personalized ML based chat appsapiKeyYesYesNLP CloudNLP API using spaCy and transformers for NER, sentiments, classification, summarization, and moreapiKeyYesUnknownOpenVisionAPIOpen source computer vision API based on open source modelsNoYesYesPerspectiveNLP API to return probability that if text is toxic, obscene, insulting or threateningapiKeyYesUnknownRoboflow UniversePre-trained computer vision modelsapiKeyYesYesSkyBiometryFace Detection, Face Recognition and Face GroupingapiKeyYesUnknownTime DoorA time series analysis APIapiKeyYesYesUnpluggForecasting API for timeseries dataapiKeyYesUnknownWolframAlphaProvides specific answers to questions using data and algorithmsapiKeyYesUnknown⬆ Back to IndexMusicAPIDescriptionAuthHTTPSCORS7digitalApi of Music store 7digitalOAuthYesUnknownAI MasteringAutomated Music MasteringapiKeyYesYesAudiomackApi of the streaming music hub AudiomackOAuthYesUnknownBandcampAPI of Music store BandcampOAuthYesUnknownBandsintownMusic EventsNoYesUnknownDeezerMusicOAuthYesUnknownDiscogsMusicOAuthYesUnknownFreesoundMusic SamplesapiKeyYesUnknownGaanaAPI to retrieve song information from GaanaNoYesUnknownGeniusCrowdsourced lyrics and music knowledgeOAuthYesUnknownGenrenatorMusic genre generatorNoYesUnknowniTunes SearchSoftware productsNoYesUnknownJamendoMusicOAuthYesUnknownJioSaavnAPI to retrieve song information, album meta data and many more from JioSaavnNoYesUnknownKKBOXGet music libraries, playlists, charts, and perform out of KKBOX's platformOAuthYesUnknownKSoft.Si LyricsAPI to get lyrics for songsapiKeyYesUnknownLastFmMusicapiKeyYesUnknownLyrics.ovhSimple API to retrieve the lyrics of a songNoYesUnknownMixcloudMusicOAuthYesYesMusicBrainzMusicNoYesUnknownMusixmatchMusicapiKeyYesUnknownNapsterMusicapiKeyYesYesOpenwhydDownload curated playlists of streaming tracks (YouTube, SoundCloud, etc...)NoYesNoPhishinA web-based archive of legal live audio recordings of the improvisational rock band PhishapiKeyYesNoRadio BrowserList of internet radio stationsNoYesYesSongkickMusic EventsapiKeyYesUnknownSonglink / OdesliGet all the services on which a song is availableapiKeyYesYesSongsterrProvides guitar, bass and drums tabs and chordsNoYesUnknownSoundCloudWith SoundCloud API you can build applications that will give more power to control your contentOAuthYesUnknownSpotifyView Spotify music catalog, manage users' libraries, get recommendations and moreOAuthYesUnknownTasteDiveSimilar artist API (also works for movies and TV shows)apiKeyYesUnknownTheAudioDBMusicapiKeyYesUnknownVagalumeCrowdsourced lyrics and music knowledgeapiKeyYesUnknown⬆ Back to IndexNewsAPIDescriptionAuthHTTPSCORSapilayer mediastackFree, Simple REST API for Live News & Blog ArticlesapiKeyYesUnknownAssociated PressSearch for news and metadata from Associated PressapiKeyYesUnknownChronicling AmericaProvides access to millions of pages of historic US newspapers from the Library of CongressNoNoUnknownCurrentsLatest news published in various news sources, blogs and forumsapiKeyYesYesFeedbinRSS readerOAuthYesUnknownGNewsSearch for news from various sourcesapiKeyYesYesGraphs for CoronavirusEach Country separately and Worldwide Graphs for Coronavirus. Daily updatesNoYesYesInshorts NewsProvides news from inshortsNoYesUnknownMarketAuxLive stock market news with tagged tickers + sentiment and stats JSON APIapiKeyYesYesNew York TimesThe New York Times Developer NetworkapiKeyYesUnknownNewsHeadlines currently published on a range of news sources and blogsapiKeyYesUnknownNewsDataNews data API for live-breaking news and headlines from reputed  news sourcesapiKeyYesUnknownNewsXGet or Search Latest Breaking News with ML Powered Summaries 🤖apiKeyYesUnknownNPR OnePersonalized news listening experience from NPROAuthYesUnknownSpaceflight NewsSpaceflight related news 🚀NoYesYesThe GuardianAccess all the content the Guardian creates, categorised by tags and sectionapiKeyYesUnknownThe Old ReaderRSS readerapiKeyYesUnknownTheNewsAggregated headlines, top story and live news JSON APIapiKeyYesYesTroveSearch through the National Library of Australia collection of 1000s of digitised newspapersapiKeyYesUnknown⬆ Back to IndexOpen DataAPIDescriptionAuthHTTPSCORS18FUnofficial US Federal Government API DevelopmentNoNoUnknownAPI SetuAn Indian Government platform that provides a lot of APIS for KYC, business, education & employmentNoYesYesArchive.orgThe Internet ArchiveNoYesNoBlack History FactsContribute or search one of the largest black history fact databases on the webapiKeyYesYesBotsArchiveJSON formatted details about Telegram Bots available in databaseNoYesUnknownCallook.infoUnited States ham radio callsignsNoYesUnknownCARTOLocation Information PredictionapiKeyYesUnknownCollegeScoreCard.ed.govData on higher education institutions in the United StatesNoYesUnknownEnigma PublicBroadest collection of public dataapiKeyYesYesFrench Address SearchAddress search via the French GovernmentNoYesUnknownGENESISFederal Statistical Office GermanyOAuthYesUnknownJoshua ProjectPeople groups of the world with the fewest followers of ChristapiKeyYesUnknownKaggleCreate and interact with Datasets, Notebooks, and connect with KaggleapiKeyYesUnknownLinkPreviewGet JSON formatted summary with title, description and preview image for any requested URLapiKeyYesYesLowy Asia Power IndexGet measure resources and influence to rank the relative power of states in AsiaNoYesUnknownMicrolink.ioExtract structured data from any websiteNoYesYesNasdaq Data LinkStock market dataapiKeyYesUnknownNobel PrizeOpen data about nobel prizes and eventsNoYesYesOpen Data MinneapolisSpatial (GIS) and non-spatial city data for MinneapolisNoYesNoopenAFRICALarge datasets repository of African open dataNoYesUnknownOpenCorporatesData on corporate entities and directors in many countriesapiKeyYesUnknownOpenSanctionsData on international sanctions, crime and politically exposed personsNoYesYesPeakMetricsNews articles and public datasetsapiKeyYesUnknownRecreation Information DatabaseRecreational areas, federal lands, historic sites, museums, and other attractions/resources(US)apiKeyYesUnknownScoop.itContent Curation ServiceapiKeyNoUnknownSocrataAccess to Open Data from Governments, Non-profits and NGOs around the worldOAuthYesYesTeleportQuality of Life DataNoYesUnknownUmeå Open DataOpen data of the city Umeå in northen SwedenNoYesYesUniversities ListUniversity names, countries and domainsNoYesUnknownUniversity of OsloCourses, lecture videos, detailed information for courses etc. for the University of Oslo (Norway)NoYesUnknownUPC databaseMore than 1.5 million barcode numbers from all around the worldapiKeyYesUnknownUrban ObservatoryThe largest set of publicly available real time urban data in the UKNoNoNoWikidataCollaboratively edited knowledge base operated by the Wikimedia FoundationOAuthYesUnknownWikipediaMediawiki EncyclopediaNoYesUnknownYelpFind Local BusinessOAuthYesUnknown⬆ Back to IndexOpen Source ProjectsAPIDescriptionAuthHTTPSCORSCountlyCountly web analyticsNoNoUnknownCreative Commons CatalogSearch among openly licensed and public domain worksOAuthYesYesDatamuseWord-finding query engineNoYesUnknownDrupal.orgDrupal.orgNoYesUnknownEvil Insult GeneratorEvil InsultsNoYesYesGitHub Contribution Chart GeneratorCreate an image of your GitHub contributionsNoYesYesGitHub ReadMe StatsAdd dynamically generated statistics to your GitHub profile ReadMeNoYesYesMetabaseAn open source Business Intelligence server to share data and analytics inside your companyNoYesYesShieldsConcise, consistent, and legible badges in SVG and raster formatNoYesUnknown⬆ Back to IndexPatentAPIDescriptionAuthHTTPSCORSEPOEuropean patent search system apiOAuthYesUnknownPatentsView API is intended to explore and visualize trends/patterns across the US innovation landscapeNoYesUnknownTIPOTaiwan patent search system apiapiKeyYesUnknownUSPTOUSA patent api servicesNoYesUnknown⬆ Back to IndexPersonalityAPIDescriptionAuthHTTPSCORSAdvice SlipGenerate random advice slipsNoYesUnknownBiriyani As A ServiceBiriyani images placeholderNoYesNoDev.toAccess Forem articles, users and other resources via APIapiKeyYesUnknownDictumAPI to get access to the collection of the most inspiring expressions of mankindNoYesUnknownFavQs.comFavQs allows you to collect, discover and share your favorite quotesapiKeyYesUnknownFOAASFuck Off As A ServiceNoNoUnknownForismaticInspirational QuotesNoNoUnknownicanhazdadjokeThe largest selection of dad jokes on the internetNoYesUnknownInspirationMotivational and Inspirational quotesNoYesYeskanye.restREST API for random Kanye West quotesNoYesYeskimiquotesTeam radio and interview quotes by Finnish F1 legend Kimi RäikkönenNoYesYesMediumCommunity of readers and writers offering unique perspectives on ideasOAuthYesUnknownProgramming QuotesProgramming Quotes API for open source projectsNoYesUnknownQuotable QuotesQuotable is a free, open source quotations APINoYesUnknownQuote GardenREST API for more than 5000 famous quotesNoYesUnknownquoteclearEver-growing list of James Clear quotes from the 3-2-1 NewsletterNoYesYesQuotes on DesignInspirational QuotesNoYesUnknownStoicism QuoteQuotes about StoicismNoYesUnknownThey Said So QuotesQuotes Trusted by many fortune brands around the worldNoYesUnknownTraitifyAssess, collect and analyze PersonalityNoYesUnknownUdemy(instructor)API for instructors on UdemyapiKeyYesUnknownVadivelu HTTP CodesOn demand HTTP Codes with imagesNoYesNoZen QuotesLarge collection of Zen quotes for inspirationNoYesYes⬆ Back to IndexPhoneAPIDescriptionAuthHTTPSCORSAbstract Phone ValidationValidate phone numbers globallyapiKeyYesYesapilayer numverifyPhone number validationapiKeyYesUnknownCloudmersive ValidateValidate international phone numbersapiKeyYesYesPhone SpecificationRest Api for Phone specificationsNoYesYesVeriphonePhone number validation & carrier lookupapiKeyYesYes⬆ Back to IndexPhotographyAPIDescriptionAuthHTTPSCORSapilayer screenshotlayerURL 2 ImageNoYesUnknownAPITemplate.ioDynamically generate images and PDFs from templates with a simple APIapiKeyYesYesBruzuImage generation with query stringapiKeyYesYesCheetahOPhoto optimization and resizeapiKeyYesUnknownDagpiImage manipulation and processingapiKeyYesUnknownDuplyGenerate, Edit, Scale and Manage Images and Videos Smarter & FasterapiKeyYesYesDynaPicturesGenerate Hundreds of Personalized Images in MinutesapiKeyYesYesFlickrFlickr ServicesOAuthYesUnknownGetty ImagesBuild applications using the world's most powerful imageryOAuthYesUnknownGfycatJiffier GIFsOAuthYesUnknownGiphyGet all your gifsapiKeyYesUnknownGoogle PhotosIntegrate Google Photos with your apps or devicesOAuthYesUnknownImgurImagesOAuthYesUnknownImseaFree image searchNoYesUnknownLorem PicsumImages from UnsplashNoYesUnknownObjectCutImage Background removalapiKeyYesYesPexelsFree Stock Photos and VideosapiKeyYesYesPhotoRoomRemove background from imagesapiKeyYesUnknownPixabayPhotographyapiKeyYesUnknownPlaceKeanuResizable Keanu Reeves placeholder images with grayscale and young Keanu optionsNoYesUnknownReadme typing SVGCustomizable typing and deleting text SVGNoYesUnknownRemove.bgImage Background removalapiKeyYesUnknownReSmush.itPhoto optimizationNoNoUnknownshutterstockStock Photos and VideosOAuthYesUnknownSirvImage management solutions like optimization, manipulation, hostingapiKeyYesUnknownUnsplashPhotographyOAuthYesUnknownWallhavenWallpapersapiKeyYesUnknownWebdamImagesOAuthYesUnknown⬆ Back to IndexProgrammingAPIDescriptionAuthHTTPSCORSCodeforcesGet access to Codeforces dataapiKeyYesUnknownHackerearthFor compiling and running code in several languagesapiKeyYesUnknownJudge0 CEOnline code execution systemapiKeyYesUnknownKONTESTSFor upcoming and ongoing competitive coding contestsNoYesUnknownMintlifyFor programmatically generating documentation for codeapiKeyYesYes⬆ Back to IndexScience & MathAPIDescriptionAuthHTTPSCORSarcsecond.ioMultiple astronomy data sourcesNoYesUnknownarXivCurated research-sharing platform: physics, mathematics, quantitative finance, and economicsNoYesUnknownCOREAccess the world's Open Access research papersapiKeyYesUnknownGBIFGlobal Biodiversity Information FacilityNoYesYesiDigBioAccess millions of museum specimens from organizations around the worldNoYesUnknowninspirehep.netHigh Energy Physics info. systemNoYesUnknownisEven (humor)Check if a number is evenNoYesUnknownISROISRO Space Crafts InformationNoYesNoITISIntegrated Taxonomic Information SystemNoYesUnknownLaunch Library 2Spaceflight launches and events databaseNoYesYesMaterials Platform for Data ScienceCurated experimental data for materials scienceapiKeyYesNoMinor Planet CenterAsterank.com InformationNoNoUnknownNASANASA data, including imageryNoYesNoNASA ADSNASA Astrophysics Data SystemOAuthYesYesNewtonSymbolic and Arithmetic Math CalculatorNoYesNoNoctuaREST API used to access NoctuaSky featuresNoYesUnknownNumbersNumber of the day, random number, number facts and anything else you want to do with numbersapiKeyYesNoNumbersFacts about numbersNoNoNoOcean FactsFacts pertaining to the physical science of OceanographyNoYesUnknownOpen NotifyISS astronauts, current location, etcNoNoNoOpen Science FrameworkRepository and archive for study designs, research materials, data, manuscripts, etcNoYesUnknownPurple AirReal Time Air Quality MonitoringNoYesUnknownRemote CalcDecodes base64 encoding and parses it to return a solution to the calculation in JSONNoYesYesSHAREA free, open, dataset about research and scholarly activitiesNoYesNoSpaceXCompany, vehicle, launchpad and launch dataNoYesNoSpaceXGraphQL, Company, Ships, launchpad and launch dataNoYesUnknownSunrise and SunsetSunset and sunrise times for a given latitude and longitudeNoYesNoTimes AdderWith this API you can add each of the times introduced in the array sendedNoYesNoTLESatellite informationNoYesNoUSGS Earthquake Hazards ProgramEarthquakes data real-timeNoYesNoUSGS Water ServicesWater quality and level info for rivers and lakesNoYesNoWorld BankWorld DataNoYesNoxMathRandom mathematical expressionsNoYesYes⬆ Back to IndexSecurityAPIDescriptionAuthHTTPSCORSApplication Environment VerificationAndroid library and API to verify the safety of user devices, detect rooted devices and other risksapiKeyYesYesBinaryEdgeProvide access to BinaryEdge 40fy scanning platformapiKeyYesYesBitWardenBest open-source password managerOAuthYesUnknownBotdBotd is a browser library for JavaScript bot detectionapiKeyYesYesBugcrowdBugcrowd API for interacting and tracking the reported issues programmaticallyapiKeyYesUnknownCensysSearch engine for Internet connected host and devicesapiKeyYesNoClassifyEncrypting & decrypting text messagesNoYesYesComplete Criminal ChecksProvides data of offenders from all U.S. States and Pureto RicoapiKeyYesYesCRXcavatorChrome extension risk scoringapiKeyYesUnknownDehash.ltHash decryption MD5, SHA1, SHA3, SHA256, SHA384, SHA512NoYesUnknownEmailRepEmail address threat and risk predictionNoYesUnknownEscapeAn API for escaping different kind of queriesNoYesNoFilterListsLists of filters for adblockers and firewallsNoYesUnknownFingerprintJS ProFraud detection API offering highly accurate browser fingerprintingapiKeyYesYesFraudLabs ProScreen order information using AI to detect fraudsapiKeyYesUnknownFullHuntSearchable attack surface database of the entire internetapiKeyYesUnknownGitGuardianScan files for secrets (API Keys, database credentials)apiKeyYesNoGreyNoiseQuery IPs in the GreyNoise dataset and retrieve a subset of the full IP context dataapiKeyYesUnknownHackerOneThe industry’s first hacker API that helps increase productivity towards creative bug bounty huntingapiKeyYesUnknownHashableA REST API to access high level cryptographic functions and methodsNoYesYesHaveIBeenPwnedPasswords which have previously been exposed in data breachesapiKeyYesUnknownIntelligence XPerform OSINT via Intelligence XapiKeyYesUnknownLoginRadiusManaged User Authentication ServiceapiKeyYesYesMicrosoft Security Response Center (MSRC)Programmatic interfaces to engage with the Microsoft Security Response Center (MSRC)NoYesUnknownMozilla http scannerMozilla observatory http scannerNoYesUnknownMozilla tls scannerMozilla observatory tls scannerNoYesUnknownNational Vulnerability DatabaseU.S. National Vulnerability DatabaseNoYesUnknownPasswordinatorGenerate random passwords of varying complexitiesNoYesYesPhishStatsPhishing databaseNoYesUnknownPrivacy.comGenerate merchant-specific and one-time use credit card numbers that link back to your bankapiKeyYesUnknownPulsediveScan, search and collect threat intelligence data in real-timeapiKeyYesUnknownSecurityTrailsDomain and IP related information such as current and historical WHOIS and DNS recordsapiKeyYesUnknownShodanSearch engine for Internet connected devicesapiKeyYesUnknownSpyseAccess data on all Internet assets and build powerful attack surface management applicationsapiKeyYesUnknownThreat JammerRisk scoring service from curated threat intelligence dataapiKeyYesUnknownUK PoliceUK Police dataNoYesUnknownVirusheeVirushee file/data scanningNoYesYesVulDBVulDB API allows to initiate queries for one or more items along with transactional botsapiKeyYesUnknown⬆ Back to IndexShoppingAPIDescriptionAuthHTTPSCORSBest BuyProducts, Buying Options, Categories, Recommendations, Stores and CommerceapiKeyYesUnknownDigi-KeyRetrieve price and inventory of electronic components as well as place ordersOAuthYesUnknownDummy ProductsAn api to fetch dummy e-commerce products JSON data with placeholder imagesapiKeyYesYeseBaySell and Buy on eBayOAuthYesUnknownEtsyManage shop and interact with listingsOAuthYesUnknownFlipkart MarketplaceProduct listing management, Order Fulfilment in the Flipkart MarketplaceOAuthYesYesLazadaRetrieve product ratings and seller performance metricsapiKeyYesUnknownMercadolibreManage sales, ads, products, services and ShopsapiKeyYesUnknownOctopartElectronic part data for manufacturing, design, and sourcingapiKeyYesUnknownOLX PolandIntegrate with local sites by posting, managing adverts and communicating with OLX usersapiKeyYesUnknownRappiManage orders from Rappi's appOAuthYesUnknownShopeeShopee's official API for integration of various services from ShopeeapiKeyYesUnknownTokopediaTokopedia's Official API for integration of various services from TokopediaOAuthYesUnknownWooCommerceWooCommerce REST APIS to create, read, update, and delete data on wordpress website in JSON formatapiKeyYesYes⬆ Back to IndexSocialAPIDescriptionAuthHTTPSCORS4chanSimple image-based bulletin board dedicated to a variety of topicsNoYesYesAyrshareSocial media APIs to post, get analytics, and manage multiple users social media accountsapiKeyYesYesaztroDaily horoscope info for yesterday, today, and tomorrowNoYesUnknownBloggerThe Blogger APIs allows client applications to view and update Blogger contentOAuthYesUnknownCisco SparkTeam Collaboration SoftwareOAuthYesUnknownDangerous Discord DatabaseDatabase of malicious Discord accountsapiKeyYesUnknownDiscordMake bots for Discord, integrate Discord onto an external platformOAuthYesUnknownDisqusCommunicate with Disqus dataOAuthYesUnknownDoge-MemeTop meme posts from r/dogecoin which include 'Meme' flairNoYesYesFacebookFacebook Login, Share on FB, Social Plugins, Analytics and moreOAuthYesUnknownFoursquareInteract with Foursquare users and places (geolocation-based checkins, photos, tips, events, etc)OAuthYesUnknownFuck Off as a ServiceAsks someone to fuck offNoYesUnknownFull ContactGet Social Media profiles and contact InformationOAuthYesUnknownHackerNewsSocial news for CS and entrepreneurshipNoYesUnknownHashnodeA blogging platform built for developersNoYesUnknownInstagramInstagram Login, Share on Instagram, Social Plugins and moreOAuthYesUnknownKakaoKakao Login, Share on KakaoTalk, Social Plugins and moreOAuthYesUnknownLanyardRetrieve your presence on Discord through an HTTP REST API or WebSocketNoYesYesLineLine Login, Share on Line, Social Plugins and moreOAuthYesUnknownLinkedInThe foundation of all digital integrations with LinkedInOAuthYesUnknownMeetup.comData about Meetups from Meetup.comapiKeyYesUnknownMicrosoft GraphAccess the data and intelligence in Microsoft 365, Windows 10, and Enterprise MobilityOAuthYesUnknownNAVERNAVER Login, Share on NAVER, Social Plugins and moreOAuthYesUnknownOpen CollectiveGet Open Collective dataNoYesUnknownPinterestThe world's catalog of ideasOAuthYesUnknownProduct HuntThe best new products in techOAuthYesUnknownRedditHomepage of the internetOAuthYesUnknownRevoltRevolt open source Discord alternativeapiKeyYesUnknownSaiditOpen Source Reddit CloneOAuthYesUnknownSlackTeam Instant MessagingOAuthYesUnknownTamTamBot API to interact with TamTamapiKeyYesUnknownTelegram BotSimplified HTTP version of the MTProto API for botsapiKeyYesUnknownTelegram MTProtoRead and write Telegram dataOAuthYesUnknownTelegraphCreate attractive blogs easily, to shareapiKeyYesUnknownTikTokFetches user info and user's video posts on TikTok platformOAuthYesUnknownTrash NothingA freecycling community with thousands of free items posted every dayOAuthYesYesTumblrRead and write Tumblr DataOAuthYesUnknownTwitchGame Streaming APIOAuthYesUnknownTwitterRead and write Twitter dataOAuthYesNovkRead and write vk dataOAuthYesUnknown⬆ Back to IndexSports & FitnessAPIDescriptionAuthHTTPSCORSAPI-FOOTBALLGet information about Football Leagues & CupsapiKeyYesYesApiMedicApiMedic offers a medical symptom checker API primarily for patientsapiKeyYesUnknownballdontlieBalldontlie provides access to stats data from the NBANoYesYesCanadian Football League (CFL)Official JSON API providing real-time league, team and player statistics about the CFLapiKeyYesNoCity BikesCity Bikes around the worldNoYesUnknownCloudbetOfficial Cloudbet API provides real-time sports odds and betting API to place bets programmaticallyapiKeyYesYesCollegeFootballData.comUnofficial detailed American college football statistics, records, and results APIapiKeyYesUnknownErgast F1F1 data from the beginning of the world championships in 1950NoYesUnknownFitbitFitbit InformationOAuthYesUnknownFootballA simple Open Source Football API to get squads’ stats, best scorers and moreX-Mashape-KeyYesUnknownFootball (Soccer) VideosEmbed codes for goals and highlights from Premier League, Bundesliga, Serie A and many moreNoYesYesFootball StandingsDisplay football standings e.g epl, la liga, serie a etc. The data is based on espn siteNoYesYesFootball-DataFootball data with matches info, players, teams, and competitionsX-Mashape-KeyYesUnknownJCDecaux BikeJCDecaux's self-service bicyclesapiKeyYesUnknownMLB Records and StatsCurrent and historical MLB statisticsNoNoUnknownNBA DataAll NBA Stats DATA, Games, Livescore, Standings, StatisticsapiKeyYesUnknownNBA StatsCurrent and historical NBA StatisticsNoYesUnknownNHL Records and StatsNHL historical data and statisticsNoYesUnknownOddsmagnetOdds history from multiple UK bookmakersNoYesYesOpenLigaDBCrowd sourced sports league resultsNoYesYesPremier League Standings All Current Premier League Standings and StatisticsapiKeyYesUnknownSport DataGet sports data from all over the worldapiKeyYesUnknownSport List & DataList of and resources related to sportsNoYesYesSport PlacesCrowd-source sports places around the worldNoYesNoSport VisionIdentify sport, brands and gear in an image. Also does image sports captioningapiKeyYesYesSportmonks CricketLive cricket score, player statistics and fantasy APIapiKeyYesUnknownSportmonks FootballFootball score/schedule, news api, tv channels, stats, history, display standing e.g. epl, la ligaapiKeyYesUnknownSquiggleFixtures, results and predictions for Australian Football League matchesNoYesYesStravaConnect with athletes, activities and moreOAuthYesUnknownSuredBitsQuery sports data, including teams, players, games, scores and statisticsNoNoNoTheSportsDBCrowd-Sourced Sports Data and ArtworkapiKeyYesYesTredictGet and set activities, health data and moreOAuthYesUnknownWgerWorkout manager data as exercises, muscles or equipmentapiKeyYesUnknown⬆ Back to IndexTest DataAPIDescriptionAuthHTTPSCORSBacon IpsumA Meatier Lorem Ipsum GeneratorNoYesUnknownDicebear AvatarsGenerate random pixel-art avatarsNoYesNoEnglish Random WordsGenerate English Random Words with PronunciationNoYesNoFakeJSONService to generate test and fake dataapiKeyYesYesFakerAPIAPIs collection to get fake dataNoYesYesFakeStoreAPIFake store rest API for your e-commerce or shopping website prototypeNoYesUnknownGeneradorDNIData generator API. Profiles, vehicles, banks and cards, etcapiKeyYesUnknownItsThisForThatGenerate Random startup ideasNoYesNoJSONPlaceholderFake data for testing and prototypingNoNoUnknownLoripsumThe \""lorem ipsum\"" generator that doesn't suckNoNoUnknownMailsacDisposable EmailapiKeyYesUnknownMetaphorsumGenerate demo paragraphs giving number of words and sentencesNoNoUnknownMockarooGenerate fake data to JSON, CSV, TXT, SQL and XMLapiKeyYesUnknownQuickMockerAPI mocking tool to generate contextual, fake or random dataNoYesYesRandom DataRandom data generatorNoYesUnknownRandommerRandom data generatorapiKeyYesYesRandomUserGenerates and list user dataNoYesUnknownRoboHashGenerate random robot/alien avatarsNoYesUnknownSpanish random namesGenerate spanish names (with gender) randomlyNoYesUnknownSpanish random wordsGenerate spanish words randomlyNoYesUnknownThis Person Does not ExistGenerates real-life faces of people who do not existNoYesUnknownToolcartonGenerate random testimonial dataNoYesUnknownUUID GeneratorGenerate UUIDsNoYesNoWhat The CommitRandom commit message generatorNoNoYesYes NoGenerate yes or no randomlyNoYesUnknown⬆ Back to IndexText AnalysisAPIDescriptionAuthHTTPSCORSCode Detection APIDetect, label, format and enrich the code in your app or in your data pipelineOAuthYesUnknownapilayer languagelayerLanguage Detection JSON API supporting 173 languagesOAuthYesUnknownAylien Text AnalysisA collection of information retrieval and natural language APIsapiKeyYesUnknownCloudmersive Natural Language ProcessingNatural language processing and text analysisapiKeyYesYesDetect LanguageDetects text languageapiKeyYesUnknownELINatural Language Processing Tools for Thai LanguageapiKeyYesUnknownGoogle Cloud NaturalNatural language understanding technology, including sentiment, entity and syntax analysisapiKeyYesUnknownHirak OCRImage to text -text recognition- from image more than 100 language, accurate, unlimited requestsapiKeyYesUnknownHirak TranslationTranslate between 21 of most used languages, accurate, unlimited requestsapiKeyYesUnknownLecto TranslationTranslation API with free tier and reasonable pricesapiKeyYesYesLibreTranslateTranslation tool with 17 available languagesNoYesUnknownSemantriaText Analytics with sentiment analysis, categorization & named entity extractionOAuthYesUnknownSentiment AnalysisMultilingual sentiment analysis of texts from different sourcesapiKeyYesYesTisaneText Analytics with focus on detection of abusive content and law enforcement applicationsOAuthYesYesWatson Natural Language UnderstandingNatural language processing for advanced text analysisOAuthYesUnknown⬆ Back to IndexTrackingAPIDescriptionAuthHTTPSCORSAftershipAPI to update, manage and track shipment efficientlyapiKeyYesYesCorreiosIntegration to provide information and prepare shipments using Correio's servicesapiKeyYesUnknownPixelaAPI for recording and tracking habits or effort, routinesX-Mashape-KeyYesYesPostalPinCodeAPI for getting Pincode details in IndiaNoYesUnknownPostmonAn API to query Brazilian ZIP codes and orders easily, quickly and freeNoNoUnknownPostNordProvides information about parcels in transport for Sweden and DenmarkapiKeyNoUnknownUPSShipment and Address informationapiKeyYesUnknownWeCanTrackAutomatically place subids in affiliate links to attribute affiliate conversions to click dataapiKeyYesYesWhatPulseSmall application that measures your keyboard/mouse usageNoYesUnknown⬆ Back to IndexTransportationAPIDescriptionAuthHTTPSCORSADS-B ExchangeAccess real-time and historical data of any and all airborne aircraftNoYesUnknownairportsapiGet name and website-URL for airports by ICAO codeNoYesUnknownAIS HubReal-time data of any marine and inland vessel equipped with AIS tracking systemapiKeyNoUnknownAmadeus for DevelopersTravel Search - Limited usageOAuthYesUnknownapilayer aviationstackReal-time Flight Status & Global Aviation Data APIOAuthYesUnknownAviationAPIFAA Aeronautical Charts and Publications, Airport Information, and Airport WeatherNoYesNoAZ511Access traffic data from the ADOT APIapiKeyYesUnknownBay Area Rapid TransitStations and predicted arrivals for BARTapiKeyNoUnknownBC FerriesSailing times and capacities for BC FerriesNoYesYesBIC-BoxtechContainer technical detail for the global container fleetOAuthYesUnknownBlaBlaCarSearch car sharing tripsapiKeyYesUnknownBoston MBTA TransitStations and predicted arrivals for MBTAapiKeyYesUnknownCommunity TransitTransitland APINoYesUnknownCompare Flight PricesAPI for comparing flight prices across platformsapiKeyYesUnknownCTSCTS Realtime APIapiKeyYesYesGrabTrack deliveries, ride fares, payments and loyalty pointsOAuthYesUnknownGraphHopperA-to-B routing with turn-by-turn instructionsapiKeyYesUnknownIcelandic APIsOpen APIs that deliver services in or regarding IcelandNoYesUnknownImpala Hotel BookingsHotel content, rates and room bookingsapiKeyYesNoIziAudio guide for travellersapiKeyYesUnknownLand Transport Authority DataMall, SingaporeSingapore transport informationapiKeyNoUnknownMetro LisboaDelays in subway linesNoNoNoNavitiaThe open API for building cool stuff with transport dataapiKeyYesUnknownOpen Charge MapGlobal public registry of electric vehicle charging locationsapiKeyYesYesOpenSky NetworkFree real-time ADS-B aviation dataNoYesUnknownRailway Transport for FranceSNCF public APIapiKeyYesUnknownREFUGE RestroomsProvides safe restroom access for transgender, intersex and gender nonconforming individualsNoYesUnknownSabre for DevelopersTravel Search - Limited usageapiKeyYesUnknownSchiphol AirportSchipholapiKeyYesUnknownTankerkoenigGerman realtime gas/diesel pricesapiKeyYesYesTransitLandTransit AggregationNoYesUnknownTransport for Atlanta, USMartaNoNoUnknownTransport for Auckland, New ZealandAuckland TransportNoYesUnknownTransport for BelgiumThe iRail API is a third-party API for Belgian public transport by trainNoYesYesTransport for Berlin, GermanyThird-party VBB APINoYesUnknownTransport for Bordeaux, FranceBordeaux Métropole public transport and more (France)apiKeyYesUnknownTransport for Budapest, HungaryBudapest public transport APINoYesUnknownTransport for Chicago, USChicago Transit Authority (CTA)apiKeyNoUnknownTransport for Czech RepublicCzech transport APINoYesUnknownTransport for Denver, USRTDNoNoUnknownTransport for FinlandFinnish transport APINoYesUnknownTransport for GermanyDeutsche Bahn (DB) APIapiKeyNoUnknownTransport for Grenoble, FranceGrenoble public transportNoNoNoTransport for Hessen, GermanyRMV API (Public Transport in Hessen)NoYesUnknownTransport for Honolulu, USHonolulu Transportation InformationapiKeyNoUnknownTransport for Lisbon, PortugalData about buses routes, parking and trafficapiKeyYesUnknownTransport for London, EnglandTfL APIapiKeyYesUnknownTransport for Los Angeles, USData about positions of Metro vehicles in real time and travel their routesNoYesUnknownTransport for Manchester, EnglandTfGM transport network dataapiKeyYesNoTransport for NorwayTransport APIs and dataset for NorwayNoYesUnknownTransport for Ottawa, CanadaOC Transpo APIapiKeyYesUnknownTransport for Paris, FranceRATP Open Data APINoNoUnknownTransport for Philadelphia, USSEPTA APIsNoNoUnknownTransport for Sao Paulo, BrazilSPTransOAuthNoUnknownTransport for SpainPublic trains of SpainNoYesUnknownTransport for SwedenPublic Transport consumerOAuthYesUnknownTransport for SwitzerlandOfficial Swiss Public Transport Open DataapiKeyYesUnknownTransport for SwitzerlandSwiss public transport APINoYesUnknownTransport for The NetherlandsNS, only trainsapiKeyNoUnknownTransport for The NetherlandsOVAPI, country-wide public transportNoYesUnknownTransport for Toronto, CanadaTTCNoYesUnknownTransport for UKTransport API and dataset for UKapiKeyYesUnknownTransport for United StatesNextBus APINoNoUnknownTransport for Vancouver, CanadaTransLinkOAuthYesUnknownTransport for Washington, USWashington Metro transport APIOAuthYesUnknowntransport.restCommunity maintained, developer-friendly public transport APINoYesYesTripadvisorRating content for a hotel, restaurant, attraction or destinationapiKeyYesUnknownUberUber ride requests and price estimationOAuthYesYesVelib metropolis, Paris, FranceVelib Open Data APINoYesNo⬆ Back to IndexURL ShortenersAPIDescriptionAuthHTTPSCORS1ptA simple URL shortenerNoYesYesBitlyURL shortener and link managementOAuthYesUnknownCleanURIURL shortener serviceNoYesYesClickMeterMonitor, compare and optimize your marketing linksapiKeyYesUnknownClicoURL shortener serviceapiKeyYesUnknownCutt.lyURL shortener serviceapiKeyYesUnknownDrivet URL ShortenerShorten a long URL easily and fastNoYesUnknownFree Url ShortenerFree URL Shortener offers a powerful API to interact with other sitesNoYesUnknownGit.ioGit.io URL shortenerNoYesUnknownGoTinyA lightweight URL shortener, focused on ease-of-use for the developer and end-userNoYesYesKuttFree Modern URL ShortenerapiKeyYesYesMgnet.meTorrent URL shorten APINoYesNoowoA simple link obfuscator/shortenerNoYesUnknownRebrandlyCustom URL shortener for sharing branded linksapiKeyYesUnknownShort LinkShort URLs support so many domainsNoYesUnknownShrtcodeURl Shortener with multiple DomainsNoYesYesShrtlnkSimple and efficient short link creationapiKeyYesYesTinyURLShorten long URLsapiKeyYesNoUrlBaeSimple and efficient short link creationapiKeyYesYes⬆ Back to IndexVehicleAPIDescriptionAuthHTTPSCORSBrazilian Vehicles and PricesVehicles information from Fundação Instituto de Pesquisas Econômicas - FipeNoYesNoHelipaddy sitesHelicopter and passenger drone landing site directory, Helipaddy data and much moreapiKeyYesUnknownKelley Blue BookVehicle info, pricing, configuration, plus much moreapiKeyYesNoMercedes-BenzTelematics data, remotely access vehicle functions, car configurator, locate service dealersapiKeyYesNoNHTSANHTSA Product Information Catalog and Vehicle ListingNoYesUnknownSmartcarLock and unlock vehicles and get data like odometer reading and location. Works on most new carsOAuthYesYes⬆ Back to IndexVideoAPIDescriptionAuthHTTPSCORSAn API of Ice And FireGame Of Thrones APINoYesUnknownBob's BurgersBob's Burgers APINoYesYesBreaking BadBreaking Bad APINoYesUnknownBreaking Bad QuotesSome Breaking Bad quotesNoYesUnknownCatalogopolisDoctor Who APINoYesUnknownCatch The ShowREST API for next-episode.netNoYesUnknownCzech TelevisionTV programme of Czech TVNoNoUnknownDailymotionDailymotion Developer APIOAuthYesUnknownDuneA simple API which provides you with book, character, movie and quotes JSON dataNoYesYesFinal SpaceFinal Space APINoYesYesGame of Thrones QuotesSome Game of Thrones quotesNoYesUnknownHarry Potter CharactesHarry Potter Characters Data with with imageryNoYesUnknownIMDb-APIAPI for receiving movie, serial and cast informationapiKeyYesUnknownIMDbOTUnofficial IMDb Movie / Series InformationNoYesYesJSON2VideoCreate and edit videos programmatically: watermarks,resizing,slideshows,voice-over,text animationsapiKeyYesNoLucifer QuotesReturns Lucifer quotesNoYesUnknownMCU CountdownA Countdown to the next MCU FilmNoYesYesMotivational QuotesRandom Motivational QuotesNoYesUnknownMovie QuoteRandom Movie and Series QuotesNoYesYesOpen Movie DatabaseMovie informationapiKeyYesUnknownOwen Wilson WowAPI for actor Owen Wilson's \""wow\"" exclamations in moviesNoYesYesRon Swanson QuotesTelevisionNoYesUnknownSimklMovie, TV and Anime dataapiKeyYesUnknownSTAPIInformation on all things Star TrekNoNoNoStranger Things QuotesReturns Stranger Things quotesNoYesUnknownStreamCzech internet television, films, series and online videos for freeNoYesNoStromberg QuotesReturns Stromberg quotes and moreNoYesUnknownSWAPIAll the Star Wars data you've ever wantedNoYesYesSWAPIAll things Star WarsNoYesYesSWAPI GraphQLStar Wars GraphQL APINoYesUnknownThe Lord of the RingsThe Lord of the Rings APIapiKeyYesUnknownThe Vampire DiariesTV Show DataapiKeyYesYesThronesApiGame Of Thrones Characters Data with imageryNoYesUnknownTMDbCommunity-based movie dataapiKeyYesUnknownTrailerAddictEasily embed trailers from TrailerAddictapiKeyNoUnknownTraktMovie and TV DataapiKeyYesYesTVDBTelevision dataapiKeyYesUnknownTVMazeTV Show DataNoNoUnknownuNoGSUnofficial Netflix Online Global Search, Search all netflix regions in one placeapiKeyYesYesVimeoVimeo Developer APIOAuthYesUnknownWatchmodeAPI for finding out the streaming availability of movies & showsapiKeyYesUnknownWeb Series Quotes GeneratorAPI generates various Web Series Quote ImagesNoYesYesYouTubeAdd YouTube functionality to your sites and appsOAuthYesUnknown⬆ Back to IndexWeatherAPIDescriptionAuthHTTPSCORS7Timer!Weather, especially for AstroweatherNoNoUnknownAccuWeatherWeather and forecast dataapiKeyNoUnknownAemetWeather and forecast data from SpainapiKeyYesUnknownapilayer weatherstackReal-Time & Historical World Weather Data APIapiKeyYesUnknownAPIXUWeatherapiKeyYesUnknownAQICNAir Quality Index Data for over 1000 citiesapiKeyYesUnknownAviationWeatherNOAA aviation weather forecasts and observationsNoYesUnknownColorfulCloudsWeatherapiKeyYesYesEuskalmetMeteorological data of the Basque CountryapiKeyYesUnknownForecaWeatherOAuthYesUnknownHG WeatherProvides weather forecast data for cities in BrazilapiKeyYesYesHong Kong ObervatoryProvide weather information, earthquake information, and climate dataNoYesUnknownMetaWeatherWeatherNoYesNoMeteorologisk InstituttWeather and climate dataUser-AgentYesUnknownMicro WeatherReal time weather forecasts and historic dataapiKeyYesUnknownODWeatherWeather and weather webcamsNoNoUnknownOikolab70+ years of global, hourly historical and forecast weather data from NOAA and ECMWFapiKeyYesYesOpen-MeteoGlobal weather forecast API for non-commercial useNoYesYesopenSenseMapData from Personal Weather Stations called senseBoxesNoYesYesOpenUVReal-time UV Index ForecastapiKeyYesUnknownOpenWeatherMapWeatherapiKeyYesUnknownQWeatherLocation-based weather dataapiKeyYesYesRainViewerRadar data collected from different websites across the InternetNoYesUnknownStorm GlassGlobal marine weather from multiple sourcesapiKeyYesYesTomorrowWeather API Powered by Proprietary TechnologyapiKeyYesUnknownUS WeatherUS National Weather ServiceNoYesYesVisual CrossingGlobal historical and weather forecast dataapiKeyYesYesweather-apiA RESTful free API to check the weatherNoYesNoWeatherAPIWeather API with other stuff like Astronomy and Geolocation APIapiKeyYesYesWeatherbitWeatherapiKeyYesUnknownYandex.WeatherAssesses weather condition in specific locationsapiKeyYesNo⬆ Back to IndexLicenseMIT (c) 2022 public-apis"
43,43,keras-team/keras,https://github.com/keras-team/keras/blob/master/README.md,Python,"Keras: Deep Learning for humansThis repository hosts the development of the Keras library.Read the documentation at keras.io.About KerasKeras is a deep learning API written in Python,running on top of the machine learning platform TensorFlow.It was developed with a focus on enabling fast experimentation andproviding a delightful developer experience.The purpose of Keras is to give an unfair advantage to any developer looking to ship ML-powered apps.Keras is:Simple -- but not simplistic. Keras reduces developer cognitive loadto free you to focus on the parts of the problem that really matter.Keras focuses on ease of use, debugging speed, code elegance & conciseness,maintainability, and deployability (via TFServing, TFLite, TF.js).Flexible -- Keras adopts the principle of progressive disclosure ofcomplexity: simple workflows should be quick and easy, while arbitrarilyadvanced workflows should be possible via a clear path that builds uponwhat you've already learned.Powerful -- Keras provides industry-strength performance andscalability: it is used by organizations and companies including NASA,YouTube, and Waymo. That's right -- your YouTube recommendations arepowered by Keras, and so is the world's most advanced driverless vehicle.Keras & TensorFlow 2TensorFlow 2 is an end-to-end, open-source machine learning platform.You can think of it as an infrastructure layer fordifferentiable programming.It combines four key abilities:Efficiently executing low-level tensor operations on CPU, GPU, or TPU.Computing the gradient of arbitrary differentiable expressions.Scaling computation to many devices, such as clusters of hundreds of GPUs.Exporting programs (\""graphs\"") to external runtimes such as servers, browsers, mobile and embedded devices.Keras is the high-level API of TensorFlow 2: an approachable, highly-productive interfacefor solving machine learning problems,with a focus on modern deep learning. It provides essential abstractions and building blocks for developingand shipping machine learning solutions with high iteration velocity.Keras empowers engineers and researchers to take full advantage of the scalabilityand cross-platform capabilities of TensorFlow 2: you can run Keras on TPU or on large clusters of GPUs,and you can export your Keras models to run in the browser or on a mobile device.First contact with KerasThe core data structures of Keras are layers and models.The simplest type of model is the Sequential model, a linear stack of layers.For more complex architectures, you should use the Keras functional API,which allows you to build arbitrary graphs of layers or write models entirely from scratch via subclassing.Here is the Sequential model:from tensorflow.keras.models import Sequentialmodel = Sequential()Stacking layers is as easy as .add():from tensorflow.keras.layers import Densemodel.add(Dense(units=64, activation='relu'))model.add(Dense(units=10, activation='softmax'))Once your model looks good, configure its learning process with .compile():model.compile(loss='categorical_crossentropy',              optimizer='sgd',              metrics=['accuracy'])If you need to, you can further configure your optimizer. The Keras philosophy is to keep simple things simple,while allowing the user to be fully in control when they need to be (the ultimate control being the easy extensibility of the source code via subclassing).model.compile(loss=tf.keras.losses.categorical_crossentropy,              optimizer=tf.keras.optimizers.SGD(                  learning_rate=0.01, momentum=0.9, nesterov=True))You can now iterate on your training data in batches:# x_train and y_train are Numpy arrays.model.fit(x_train, y_train, epochs=5, batch_size=32)Evaluate your test loss and metrics in one line:loss_and_metrics = model.evaluate(x_test, y_test, batch_size=128)Or generate predictions on new data:classes = model.predict(x_test, batch_size=128)What you just saw is the most elementary way to use Keras.However, Keras is also a highly-flexible framework suitable to iterate on state-of-the-art research ideas.Keras follows the principle of progressive disclosure of complexity: it makes it easy to get started,yet it makes it possible to handle arbitrarily advanced use cases,only requiring incremental learning at each step.In pretty much the same way that you were able to train & evaluate a simple neural network above in a few lines,you can use Keras to quickly develop new training procedures or exotic model architectures.Here's a low-level training loop example, combining Keras functionality with the TensorFlow GradientTape:import tensorflow as tf# Prepare an optimizer.optimizer = tf.keras.optimizers.Adam()# Prepare a loss function.loss_fn = tf.keras.losses.kl_divergence# Iterate over the batches of a dataset.for inputs, targets in dataset:    # Open a GradientTape.    with tf.GradientTape() as tape:        # Forward pass.        predictions = model(inputs)        # Compute the loss value for this batch.        loss_value = loss_fn(targets, predictions)    # Get gradients of loss wrt the weights.    gradients = tape.gradient(loss_value, model.trainable_weights)    # Update the weights of the model.    optimizer.apply_gradients(zip(gradients, model.trainable_weights))For more in-depth tutorials about Keras, you can check out:Introduction to Keras for engineersIntroduction to Keras for researchersDeveloper guidesOther learning resourcesInstallationKeras comes packaged with TensorFlow 2 as tensorflow.keras.To start using Keras, simply install TensorFlow 2.You can then import Keras as follows:from tensorflow import kerasRelease and compatibilityKeras has nightly releases (keras-nightly on PyPI)and stable releases (keras on PyPI).The nightly Keras releases are usually compatible with the corresponding versionof the tf-nightly releases(e.g. keras-nightly==2.7.0.dev2021100607 should beused with tf-nightly==2.7.0.dev2021100607).We don't maintain backward compatibility for nightly releases.For stable releases, each Kerasversion maps to a specific stable version of TensorFlow.The table below shows the compatibility version mappingbetween TensorFlow versions and Keras versions.All the release branches can be found on GitHub.All the release binaries can be found on Pypi.SupportYou can ask questions and join the development discussion:In the TensorFlow forum.On the Keras mailing list.Opening an issueYou can also post bug reports and feature requests (only)in GitHub issues.Opening a PRWe welcome contributions! Before opening a PR, please readour contributor guide,and the API design guideline."
44,44,AUTOMATIC1111/stable-diffusion-webui,https://github.com/AUTOMATIC1111/stable-diffusion-webui/blob/master/README.md,Python,"Stable Diffusion web UIA browser interface based on Gradio library for Stable Diffusion.FeaturesDetailed feature showcase with images:Original txt2img and img2img modesOne click install and run script (but you still must install python and git)OutpaintingInpaintingColor SketchPrompt MatrixStable Diffusion UpscaleAttention, specify parts of text that the model should pay more attention toa man in a ((tuxedo)) - will pay more attention to tuxedoa man in a (tuxedo:1.21) - alternative syntaxselect text and press Ctrl+Up or Ctrl+Down (or Command+Up or Command+Down if you're on a MacOS) to automatically adjust attention to selected text (code contributed by anonymous user)Loopback, run img2img processing multiple timesX/Y/Z plot, a way to draw a 3 dimensional plot of images with different parametersTextual Inversionhave as many embeddings as you want and use any names you like for themuse multiple embeddings with different numbers of vectors per tokenworks with half precision floating point numberstrain embeddings on 8GB (also reports of 6GB working)Extras tab with:GFPGAN, neural network that fixes facesCodeFormer, face restoration tool as an alternative to GFPGANRealESRGAN, neural network upscalerESRGAN, neural network upscaler with a lot of third party modelsSwinIR and Swin2SR (see here), neural network upscalersLDSR, Latent diffusion super resolution upscalingResizing aspect ratio optionsSampling method selectionAdjust sampler eta values (noise multiplier)More advanced noise setting optionsInterrupt processing at any time4GB video card support (also reports of 2GB working)Correct seeds for batchesLive prompt token length validationGeneration parametersparameters you used to generate images are saved with that imagein PNG chunks for PNG, in EXIF for JPEGcan drag the image to PNG info tab to restore generation parameters and automatically copy them into UIcan be disabled in settingsdrag and drop an image/text-parameters to promptboxRead Generation Parameters Button, loads parameters in promptbox to UISettings pageRunning arbitrary python code from UI (must run with --allow-code to enable)Mouseover hints for most UI elementsPossible to change defaults/mix/max/step values for UI elements via text configTiling support, a checkbox to create images that can be tiled like texturesProgress bar and live image generation previewCan use a separate neural network to produce previews with almost none VRAM or compute requirementNegative prompt, an extra text field that allows you to list what you don't want to see in generated imageStyles, a way to save part of prompt and easily apply them via dropdown laterVariations, a way to generate same image but with tiny differencesSeed resizing, a way to generate same image but at slightly different resolutionCLIP interrogator, a button that tries to guess prompt from an imagePrompt Editing, a way to change prompt mid-generation, say to start making a watermelon and switch to anime girl midwayBatch Processing, process a group of files using img2imgImg2img Alternative, reverse Euler method of cross attention controlHighres Fix, a convenience option to produce high resolution pictures in one click without usual distortionsReloading checkpoints on the flyCheckpoint Merger, a tab that allows you to merge up to 3 checkpoints into oneCustom scripts with many extensions from communityComposable-Diffusion, a way to use multiple prompts at onceseparate prompts using uppercase ANDalso supports weights for prompts: a cat :1.2 AND a dog AND a penguin :2.2No token limit for prompts (original stable diffusion lets you use up to 75 tokens)DeepDanbooru integration, creates danbooru style tags for anime promptsxformers, major speed increase for select cards: (add --xformers to commandline args)via extension: History tab: view, direct and delete images conveniently within the UIGenerate forever optionTraining tabhypernetworks and embeddings optionsPreprocessing images: cropping, mirroring, autotagging using BLIP or deepdanbooru (for anime)Clip skipHypernetworksLoras (same as Hypernetworks but more pretty)A sparate UI where you can choose, with preview, which embeddings, hypernetworks or Loras to add to your promptCan select to load a different VAE from settings screenEstimated completion time in progress barAPISupport for dedicated inpainting model by RunwayMLvia extension: Aesthetic Gradients, a way to generate images with a specific aesthetic by using clip images embeds (implementation of https://github.com/vicgalle/stable-diffusion-aesthetic-gradients)Stable Diffusion 2.0 support - see wiki for instructionsAlt-Diffusion support - see wiki for instructionsNow without any bad letters!Load checkpoints in safetensors formatEased resolution restriction: generated image's domension must be a multiple of 8 rather than 64Now with a license!Reorder elements in the UI from settings screenInstallation and RunningMake sure the required dependencies are met and follow the instructions available for both NVidia (recommended) and AMD GPUs.Alternatively, use online services (like Google Colab):List of Online ServicesInstallation on Windows 10/11 with NVidia-GPUs using release packageDownload sd.webui.zip from v1.0.0-pre and extract it's contents.Run update.bat.Run run.bat.For more details see Install-and-Run-on-NVidia-GPUsAutomatic Installation on WindowsInstall Python 3.10.6 (Newer version of Python does not support torch), checking \""Add Python to PATH\"".Install git.Download the stable-diffusion-webui repository, for example by running git clone https://github.com/AUTOMATIC1111/stable-diffusion-webui.git.Run webui-user.bat from Windows Explorer as normal, non-administrator, user.Automatic Installation on LinuxInstall the dependencies:# Debian-based:sudo apt install wget git python3 python3-venv# Red Hat-based:sudo dnf install wget git python3# Arch-based:sudo pacman -S wget git python3Navigate to the directory you would like the webui to be installed and execute the following command:bash <(wget -qO- https://raw.githubusercontent.com/AUTOMATIC1111/stable-diffusion-webui/master/webui.sh)Run webui.sh.Check webui-user.sh for options.Installation on Apple SiliconFind the instructions here.ContributingHere's how to add code to this repo: ContributingDocumentationThe documentation was moved from this README over to the project's wiki.For the purposes of getting Google and other search engines to crawl the wiki, here's a link to the (not for humans) crawlable wiki.CreditsLicenses for borrowed code can be found in Settings -> Licenses screen, and also in html/licenses.html file.Stable Diffusion - https://github.com/CompVis/stable-diffusion, https://github.com/CompVis/taming-transformersk-diffusion - https://github.com/crowsonkb/k-diffusion.gitGFPGAN - https://github.com/TencentARC/GFPGAN.gitCodeFormer - https://github.com/sczhou/CodeFormerESRGAN - https://github.com/xinntao/ESRGANSwinIR - https://github.com/JingyunLiang/SwinIRSwin2SR - https://github.com/mv-lab/swin2srLDSR - https://github.com/Hafiidz/latent-diffusionMiDaS - https://github.com/isl-org/MiDaSIdeas for optimizations - https://github.com/basujindal/stable-diffusionCross Attention layer optimization - Doggettx - https://github.com/Doggettx/stable-diffusion, original idea for prompt editing.Cross Attention layer optimization - InvokeAI, lstein - https://github.com/invoke-ai/InvokeAI (originally http://github.com/lstein/stable-diffusion)Sub-quadratic Cross Attention layer optimization - Alex Birch (Birch-san/diffusers#1), Amin Rezaei (https://github.com/AminRezaei0x443/memory-efficient-attention)Textual Inversion - Rinon Gal - https://github.com/rinongal/textual_inversion (we're not using his code, but we are using his ideas).Idea for SD upscale - https://github.com/jquesnelle/txt2imghdNoise generation for outpainting mk2 - https://github.com/parlance-zz/g-diffuser-botCLIP interrogator idea and borrowing some code - https://github.com/pharmapsychotic/clip-interrogatorIdea for Composable Diffusion - https://github.com/energy-based-model/Compositional-Visual-Generation-with-Composable-Diffusion-Models-PyTorchxformers - https://github.com/facebookresearch/xformersDeepDanbooru - interrogator for anime diffusers https://github.com/KichangKim/DeepDanbooruSampling in float32 precision from a float16 UNet - marunine for the idea, Birch-san for the example Diffusers implementation (https://github.com/Birch-san/diffusers-play/tree/92feee6)Instruct pix2pix - Tim Brooks (star), Aleksander Holynski (star), Alexei A. Efros (no star) - https://github.com/timothybrooks/instruct-pix2pixSecurity advice - RyotaKUniPC sampler - Wenliang Zhao - https://github.com/wl-zhao/UniPCTAESD - Ollin Boer Bohan - https://github.com/madebyollin/taesdLyCORIS - KohakuBlueleafInitial Gradio script - posted on 4chan by an Anonymous user. Thank you Anonymous user.(You)"
45,45,shadowsocks/shadowsocks,https://github.com/shadowsocks/shadowsocks/blob/rm/README.md,Python,Removed according to regulations.
46,46,zero-to-mastery/start-here-guidelines,https://github.com/zero-to-mastery/start-here-guidelines/blob/master/README.md,Python,"One rule of this community:We don't care if you break things. This is a playground, and we encourage failing often. Use this as a practice ground, and enjoy contributing to projects you create with your fellow students. Many students have gained real-world experience \""working in teams\"" by working on these projects.A Guide to Get Started (used to be the 4 step guide)Check out Andrei's videos on github if you haven't watched it already.On the GitHub page for this repository, click on the button \""Fork.\""Clone your forked repository to your computer:For example, run this command inside your terminal:git clone https://github.com/<your-github-username>/start-here-guidelines.gitReplace <your-github-username>!Learn more about forking and cloning a repo.Move to project directory:cd start-here-guidelinesBefore you make any changes, keep your fork in sync to avoid merge conflicts:git remote add upstream https://github.com/zero-to-mastery/start-here-guidelines.gitgit pull upstream masterIf you run into a merge conflict, you have to resolve the conflict. There are a lot of guides online, or you can watch this tutorial.After adding the upstream and checking that all files are up to date, we now will create new branch before editing any files. There are two ways to do so:git checkout -b <branch-name>git branch <branch-name>git switch <branch-name>On your computer, open your text editor, and add your name to the CONTRIBUTORS.md file.⚠️ IMPORTANT NOTE #1: Add your name somewhere in the middle. Not at the top or bottom in order to avoid the chance of you getting a merge conflict!⚠️ IMPORTANT NOTE #2: Please do NOT edit or remove other people from the list, even to fix their indentation etc. This will likely prevent your PR from being merged.Add the changes with git add, git commit (write a good commit message, if possible):git add CONTRIBUTORS.mdgit commit -m \""Add <your-github-username>\""Replace <your-github-username>!Push your changes to your repository:git push origin <branch-name>Go to the GitHub page of your fork, and make a pull request:Read more about pull requests on the GitHub help pages.Wait until Zerobot or one of the maintainers merges your pull request. If there are any conflicts, you will get a notification and be required to resolve the conflict.Go join a project and start contributing or create your own group apps. Don't be shy and enjoy creating things together (We have over 20 projects for all levels of programmers)! Check out this guide for more information on selecting a project.To see the Zero to Mastery Icon in your GitHub profile, follow these steps (you must complete steps 1 and 2 for this to work).Anatomy of an open-source project:Every open-source community is different.Spending years on one open-source project means you’ve gotten to know one open-source project. Move to a different project, and you might find the vocabulary, norms, and communication styles are completely different.That being said, many open-source projects follow a similar organizational structure. Understanding the different community roles and overall process will help you get quickly oriented to any new project.A typical open-source project has the following types of people:Author: The person(s) or organization that created the project.Owner: The person(s) who has administrative ownership over the organization or repository (not always the same as the original author).Maintainers: Contributors who are responsible for driving the vision and managing the organizational aspects of the project (may also be authors or owners of the project).Contributors: Everyone who has contributed something back to the project.Community Members: People who use the project. They might be active in conversations or express their opinion on the project’s direction.Bigger projects may also have subcommittees or working groups focused on different tasks, such as tooling, triage, community moderation, and event organizing. Look on a project’s website for a “team” page or in the repository for governance documentation to find this information.A project also has documentation. These files are usually listed in the top level of a repository.LICENSE: By definition, every open-source project must have an open-source license. If the project does not have a license, it is not open source.README: The README is the instruction manual that welcomes new community members to the project. It explains why the project is useful and how to get started.CONTRIBUTING: Whereas READMEs help people use the project, contributing docs help people contribute to the project. It explains what types of contributions are needed and how the process works. While not every project has a CONTRIBUTING file, its presence signals that this is a welcoming project to contribute to.CODE_OF_CONDUCT: The code of conduct sets ground rules for participants’ behavior and helps to facilitate a friendly, welcoming environment. While not every project has a CODE_OF_CONDUCT file, its presence signals that this is a welcoming project to contribute to.Other documentation: There might be additional documentation such as tutorials, walkthroughs, or governance policies, especially on bigger projects.Finally, open-source projects use the following tools to organize discussion. Reading through the archives will give you a good picture of how the community thinks and works.Issue tracker: Where people discuss issues related to the project.Pull requests: Where people discuss and review changes that are in progress.Discussion forums or mailing lists: Some projects may use these channels for conversational topics (for example, “How do I…“ or “What do you think about…“ instead of bug reports or feature requests). Others use the issue tracker for all conversations.Synchronous chat channel: Some projects use chat channels (such as Discord or IRC) for casual conversation, collaboration, and quick exchanges.Get all the ZTM Courses, for one monthly subscription here."
47,47,ultralytics/yolov5,https://github.com/ultralytics/yolov5/blob/master/README.md,Python,"              English | 简体中文                                YOLOv5 🚀 is the world's most loved vision AI, representing Ultralytics open-source research into future vision AI methods, incorporating lessons learned and best practices evolved over thousands of hours of research and development.We hope that the resources here will help you get the most out of YOLOv5. Please browse the YOLOv5 Docs for details, raise an issue on GitHub for support, and join our Discord community for questions and discussions!To request an Enterprise License please complete the form at Ultralytics Licensing.                                                      YOLOv8 🚀 NEWWe are thrilled to announce the launch of Ultralytics YOLOv8 🚀, our NEW cutting-edge, state-of-the-art (SOTA) modelreleased at https://github.com/ultralytics/ultralytics.YOLOv8 is designed to be fast, accurate, and easy to use, making it an excellent choice for a wide range ofobject detection, image segmentation and image classification tasks.See the YOLOv8 Docs for details and get started with: pip install ultralytics    DocumentationSee the YOLOv5 Docs for full documentation on training, testing and deployment. See below for quickstart examples.InstallClone repo and install requirements.txt in aPython>=3.8.0 environment, includingPyTorch>=1.8.git clone https://github.com/ultralytics/yolov5  # clonecd yolov5pip install -r requirements.txt  # installInferenceYOLOv5 PyTorch Hub inference. Models download automatically from the latestYOLOv5 release.import torch# Modelmodel = torch.hub.load(\""ultralytics/yolov5\"", \""yolov5s\"")  # or yolov5n - yolov5x6, custom# Imagesimg = \""https://ultralytics.com/images/zidane.jpg\""  # or file, Path, PIL, OpenCV, numpy, list# Inferenceresults = model(img)# Resultsresults.print()  # or .show(), .save(), .crop(), .pandas(), etc.Inference with detect.pydetect.py runs inference on a variety of sources, downloading models automatically fromthe latest YOLOv5 release and saving results to runs/detect.python detect.py --weights yolov5s.pt --source 0                               # webcam                                               img.jpg                         # image                                               vid.mp4                         # video                                               screen                          # screenshot                                               path/                           # directory                                               list.txt                        # list of images                                               list.streams                    # list of streams                                               'path/*.jpg'                    # glob                                               'https://youtu.be/Zgi9g1ksQHc'  # YouTube                                               'rtsp://example.com/media.mp4'  # RTSP, RTMP, HTTP streamTrainingThe commands below reproduce YOLOv5 COCOresults. Modelsand datasets download automatically from the latestYOLOv5 release. Training times for YOLOv5n/s/m/l/x are1/2/4/6/8 days on a V100 GPU (Multi-GPU times faster). Use thelargest --batch-size possible, or pass --batch-size -1 forYOLOv5 AutoBatch. Batch sizes shown for V100-16GB.python train.py --data coco.yaml --epochs 300 --weights '' --cfg yolov5n.yaml  --batch-size 128                                                                 yolov5s                    64                                                                 yolov5m                    40                                                                 yolov5l                    24                                                                 yolov5x                    16TutorialsTrain Custom Data 🚀 RECOMMENDEDTips for Best Training Results ☘️Multi-GPU TrainingPyTorch Hub 🌟 NEWTFLite, ONNX, CoreML, TensorRT Export 🚀NVIDIA Jetson platform Deployment 🌟 NEWTest-Time Augmentation (TTA)Model EnsemblingModel Pruning/SparsityHyperparameter EvolutionTransfer Learning with Frozen LayersArchitecture Summary 🌟 NEWRoboflow for Datasets, Labeling, and Active LearningClearML Logging 🌟 NEWYOLOv5 with Neural Magic's Deepsparse 🌟 NEWComet Logging 🌟 NEWIntegrations                              RoboflowClearML ⭐ NEWComet ⭐ NEWNeural Magic ⭐ NEWLabel and export your custom datasets directly to YOLOv5 for training with RoboflowAutomatically track, visualize and even remotely train YOLOv5 using ClearML (open-source!)Free forever, Comet lets you save YOLOv5 models, resume training, and interactively visualise and debug predictionsRun YOLOv5 inference up to 6x faster with Neural Magic DeepSparseUltralytics HUBExperience seamless AI with Ultralytics HUB ⭐, the all-in-one solution for data visualization, YOLOv5 and YOLOv8 🚀 model training and deployment, without any coding. Transform images into actionable insights and bring your AI visions to life with ease using our cutting-edge platform and user-friendly Ultralytics App. Start your journey for Free now!Why YOLOv5YOLOv5 has been designed to be super easy to get started and simple to learn. We prioritize real-world results.  YOLOv5-P5 640 Figure  Figure NotesCOCO AP val denotes mAP@0.5:0.95 metric measured on the 5000-image COCO val2017 dataset over various inference sizes from 256 to 1536.GPU Speed measures average inference time per image on COCO val2017 dataset using a AWS p3.2xlarge V100 instance at batch-size 32.EfficientDet data from google/automl at batch size 8.Reproduce by python val.py --task study --data coco.yaml --iou 0.7 --weights yolov5n6.pt yolov5s6.pt yolov5m6.pt yolov5l6.pt yolov5x6.ptPretrained CheckpointsModelsize(pixels)mAPval50-95mAPval50SpeedCPU b1(ms)SpeedV100 b1(ms)SpeedV100 b32(ms)params(M)FLOPs@640 (B)YOLOv5n64028.045.7456.30.61.94.5YOLOv5s64037.456.8986.40.97.216.5YOLOv5m64045.464.12248.21.721.249.0YOLOv5l64049.067.343010.12.746.5109.1YOLOv5x64050.768.976612.14.886.7205.7YOLOv5n6128036.054.41538.12.13.24.6YOLOv5s6128044.863.73858.23.612.616.8YOLOv5m6128051.369.388711.16.835.750.0YOLOv5l6128053.771.3178415.810.576.8111.4YOLOv5x6+ TTA1280153655.055.872.772.73136-26.2-19.4-140.7-209.8-  Table NotesAll checkpoints are trained to 300 epochs with default settings. Nano and Small models use hyp.scratch-low.yaml hyps, all others use hyp.scratch-high.yaml.mAPval values are for single-model single-scale on COCO val2017 dataset.Reproduce by python val.py --data coco.yaml --img 640 --conf 0.001 --iou 0.65Speed averaged over COCO val images using a AWS p3.2xlarge instance. NMS times (~1 ms/img) not included.Reproduce by python val.py --data coco.yaml --img 640 --task speed --batch 1TTA Test Time Augmentation includes reflection and scale augmentations.Reproduce by python val.py --data coco.yaml --img 1536 --iou 0.7 --augmentSegmentationOur new YOLOv5 release v7.0 instance segmentation models are the fastest and most accurate in the world, beating all current SOTA benchmarks. We've made them super simple to train, validate and deploy. See full details in our Release Notes and visit our YOLOv5 Segmentation Colab Notebook for quickstart tutorials.  Segmentation CheckpointsWe trained YOLOv5 segmentations models on COCO for 300 epochs at image size 640 using A100 GPUs. We exported all models to ONNX FP32 for CPU speed tests and to TensorRT FP16 for GPU speed tests. We ran all speed tests on Google Colab Pro notebooks for easy reproducibility.Modelsize(pixels)mAPbox50-95mAPmask50-95Train time300 epochsA100 (hours)SpeedONNX CPU(ms)SpeedTRT A100(ms)params(M)FLOPs@640 (B)YOLOv5n-seg64027.623.480:1762.71.22.07.1YOLOv5s-seg64037.631.788:16173.31.47.626.4YOLOv5m-seg64045.037.1108:36427.02.222.070.8YOLOv5l-seg64049.039.966:43 (2x)857.42.947.9147.7YOLOv5x-seg64050.741.462:56 (3x)1579.24.588.8265.7All checkpoints are trained to 300 epochs with SGD optimizer with lr0=0.01 and weight_decay=5e-5 at image size 640 and all default settings.Runs logged to https://wandb.ai/glenn-jocher/YOLOv5_v70_officialAccuracy values are for single-model single-scale on COCO dataset.Reproduce by python segment/val.py --data coco.yaml --weights yolov5s-seg.ptSpeed averaged over 100 inference images using a Colab Pro A100 High-RAM instance. Values indicate inference speed only (NMS adds about 1ms per image). Reproduce by python segment/val.py --data coco.yaml --weights yolov5s-seg.pt --batch 1Export to ONNX at FP32 and TensorRT at FP16 done with export.py. Reproduce by python export.py --weights yolov5s-seg.pt --include engine --device 0 --half  Segmentation Usage Examples  TrainYOLOv5 segmentation training supports auto-download COCO128-seg segmentation dataset with --data coco128-seg.yaml argument and manual download of COCO-segments dataset with bash data/scripts/get_coco.sh --train --val --segments and then python train.py --data coco.yaml.# Single-GPUpython segment/train.py --data coco128-seg.yaml --weights yolov5s-seg.pt --img 640# Multi-GPU DDPpython -m torch.distributed.run --nproc_per_node 4 --master_port 1 segment/train.py --data coco128-seg.yaml --weights yolov5s-seg.pt --img 640 --device 0,1,2,3ValValidate YOLOv5s-seg mask mAP on COCO dataset:bash data/scripts/get_coco.sh --val --segments  # download COCO val segments split (780MB, 5000 images)python segment/val.py --weights yolov5s-seg.pt --data coco.yaml --img 640  # validatePredictUse pretrained YOLOv5m-seg.pt to predict bus.jpg:python segment/predict.py --weights yolov5m-seg.pt --source data/images/bus.jpgmodel = torch.hub.load(    \""ultralytics/yolov5\"", \""custom\"", \""yolov5m-seg.pt\"")  # load from PyTorch Hub (WARNING: inference not yet supported)ExportExport YOLOv5s-seg model to ONNX and TensorRT:python export.py --weights yolov5s-seg.pt --include onnx engine --img 640 --device 0ClassificationYOLOv5 release v6.2 brings support for classification model training, validation and deployment! See full details in our Release Notes and visit our YOLOv5 Classification Colab Notebook for quickstart tutorials.  Classification CheckpointsWe trained YOLOv5-cls classification models on ImageNet for 90 epochs using a 4xA100 instance, and we trained ResNet and EfficientNet models alongside with the same default training settings to compare. We exported all models to ONNX FP32 for CPU speed tests and to TensorRT FP16 for GPU speed tests. We ran all speed tests on Google Colab Pro for easy reproducibility.Modelsize(pixels)acctop1acctop5Training90 epochs4xA100 (hours)SpeedONNX CPU(ms)SpeedTensorRT V100(ms)params(M)FLOPs@224 (B)YOLOv5n-cls22464.685.47:593.30.52.50.5YOLOv5s-cls22471.590.28:096.60.65.41.4YOLOv5m-cls22475.992.910:0615.50.912.93.9YOLOv5l-cls22478.094.011:5626.91.426.58.5YOLOv5x-cls22479.094.415:0454.31.848.115.9ResNet1822470.389.56:4711.20.511.73.7ResNet3422473.991.88:3320.60.921.87.4ResNet5022476.893.411:1023.41.025.68.5ResNet10122478.594.317:1042.11.944.515.9EfficientNet_b022475.192.413:0312.51.35.31.0EfficientNet_b122476.493.217:0414.91.67.81.5EfficientNet_b222476.693.417:1015.91.69.11.7EfficientNet_b322477.794.019:1918.91.912.22.4  Table Notes (click to expand)All checkpoints are trained to 90 epochs with SGD optimizer with lr0=0.001 and weight_decay=5e-5 at image size 224 and all default settings.Runs logged to https://wandb.ai/glenn-jocher/YOLOv5-Classifier-v6-2Accuracy values are for single-model single-scale on ImageNet-1k dataset.Reproduce by python classify/val.py --data ../datasets/imagenet --img 224Speed averaged over 100 inference images using a Google Colab Pro V100 High-RAM instance.Reproduce by python classify/val.py --data ../datasets/imagenet --img 224 --batch 1Export to ONNX at FP32 and TensorRT at FP16 done with export.py. Reproduce by python export.py --weights yolov5s-cls.pt --include engine onnx --imgsz 224  Classification Usage Examples  TrainYOLOv5 classification training supports auto-download of MNIST, Fashion-MNIST, CIFAR10, CIFAR100, Imagenette, Imagewoof, and ImageNet datasets with the --data argument. To start training on MNIST for example use --data mnist.# Single-GPUpython classify/train.py --model yolov5s-cls.pt --data cifar100 --epochs 5 --img 224 --batch 128# Multi-GPU DDPpython -m torch.distributed.run --nproc_per_node 4 --master_port 1 classify/train.py --model yolov5s-cls.pt --data imagenet --epochs 5 --img 224 --device 0,1,2,3ValValidate YOLOv5m-cls accuracy on ImageNet-1k dataset:bash data/scripts/get_imagenet.sh --val  # download ImageNet val split (6.3G, 50000 images)python classify/val.py --weights yolov5m-cls.pt --data ../datasets/imagenet --img 224  # validatePredictUse pretrained YOLOv5s-cls.pt to predict bus.jpg:python classify/predict.py --weights yolov5s-cls.pt --source data/images/bus.jpgmodel = torch.hub.load(    \""ultralytics/yolov5\"", \""custom\"", \""yolov5s-cls.pt\"")  # load from PyTorch HubExportExport a group of trained YOLOv5s-cls, ResNet and EfficientNet models to ONNX and TensorRT:python export.py --weights yolov5s-cls.pt resnet50.pt efficientnet_b0.pt --include onnx engine --img 224EnvironmentsGet started in seconds with our verified environments. Click each icon below for details.                                              ContributeWe love your input! We want to make contributing to YOLOv5 as easy and transparent as possible. Please see our Contributing Guide to get started, and fill out the YOLOv5 Survey to send us feedback on your experiences. Thank you to all our contributors!LicenseUltralytics offers two licensing options to accommodate diverse use cases:AGPL-3.0 License: This OSI-approved open-source license is ideal for students and enthusiasts, promoting open collaboration and knowledge sharing. See the LICENSE file for more details.Enterprise License: Designed for commercial use, this license permits seamless integration of Ultralytics software and AI models into commercial goods and services, bypassing the open-source requirements of AGPL-3.0. If your scenario involves embedding our solutions into a commercial offering, reach out through Ultralytics Licensing.ContactFor YOLOv5 bug reports and feature requests please visit GitHub Issues, and join our Discord community for questions and discussions!                                                      "
48,48,josephmisiti/awesome-machine-learning,https://github.com/josephmisiti/awesome-machine-learning/blob/master/README.md,Python,"Awesome Machine Learning  A curated list of awesome machine learning frameworks, libraries and software (by language). Inspired by awesome-php.If you want to contribute to this list (please do), send me a pull request or contact me @josephmisiti.Also, a listed repository should be deprecated if:Repository's owner explicitly says that \""this library is not maintained\"".Not committed for a long time (2~3 years).Further resources:For a list of free machine learning books available for download, go here.For a list of professional machine learning events, go here.For a list of (mostly) free machine learning courses available online, go here.For a list of blogs and newsletters on data science and machine learning, go here.For a list of free-to-attend meetups and local events, go here.Table of ContentsFrameworks and LibrariesAwesome Machine Learning Table of ContentsFrameworks and LibrariesToolsAPLGeneral-Purpose Machine LearningCGeneral-Purpose Machine LearningComputer VisionC++Computer VisionGeneral-Purpose Machine LearningNatural Language ProcessingSpeech RecognitionSequence AnalysisGesture DetectionCommon LispGeneral-Purpose Machine LearningClojureNatural Language ProcessingGeneral-Purpose Machine LearningDeep LearningData AnalysisData VisualizationInteropMiscExtraCrystalGeneral-Purpose Machine LearningElixirGeneral-Purpose Machine LearningNatural Language ProcessingErlangGeneral-Purpose Machine LearningFortranGeneral-Purpose Machine LearningData Analysis / Data VisualizationGoNatural Language ProcessingGeneral-Purpose Machine LearningSpatial analysis and geometryData Analysis / Data VisualizationComputer visionReinforcement learningHaskellGeneral-Purpose Machine LearningJavaNatural Language ProcessingGeneral-Purpose Machine LearningSpeech RecognitionData Analysis / Data VisualizationDeep LearningJavascriptNatural Language ProcessingData Analysis / Data VisualizationGeneral-Purpose Machine LearningMiscDemos and ScriptsJuliaGeneral-Purpose Machine LearningNatural Language ProcessingData Analysis / Data VisualizationMisc Stuff / PresentationsKotlinDeep LearningLuaGeneral-Purpose Machine LearningDemos and ScriptsMatlabComputer VisionNatural Language ProcessingGeneral-Purpose Machine LearningData Analysis / Data Visualization.NETComputer VisionNatural Language ProcessingGeneral-Purpose Machine LearningData Analysis / Data VisualizationObjective CGeneral-Purpose Machine LearningOCamlGeneral-Purpose Machine LearningOpenCVComputer VisionText-DetectionPerlData Analysis / Data VisualizationGeneral-Purpose Machine LearningPerl 6Data Analysis / Data VisualizationGeneral-Purpose Machine LearningPHPNatural Language ProcessingGeneral-Purpose Machine LearningPythonComputer VisionNatural Language ProcessingGeneral-Purpose Machine LearningData Analysis / Data VisualizationMisc Scripts / iPython Notebooks / CodebasesNeural NetworksSurvival AnalysisFederated LearningKaggle Competition Source CodeReinforcement LearningRubyNatural Language ProcessingGeneral-Purpose Machine LearningData Analysis / Data VisualizationMiscRustGeneral-Purpose Machine LearningRGeneral-Purpose Machine LearningData Analysis / Data VisualizationSASGeneral-Purpose Machine LearningData Analysis / Data VisualizationNatural Language ProcessingDemos and ScriptsScalaNatural Language ProcessingData Analysis / Data VisualizationGeneral-Purpose Machine LearningSchemeNeural NetworksSwiftGeneral-Purpose Machine LearningTensorFlowGeneral-Purpose Machine LearningToolsNeural NetworksMiscCreditsAPLGeneral-Purpose Machine Learningnaive-apl - Naive Bayesian Classifier implementation in APL. [Deprecated]CGeneral-Purpose Machine LearningDarknet - Darknet is an open source neural network framework written in C and CUDA. It is fast, easy to install, and supports CPU and GPU computation.Recommender - A C library for product recommendations/suggestions using collaborative filtering (CF).Hybrid Recommender System - A hybrid recommender system based upon scikit-learn algorithms. [Deprecated]neonrvm - neonrvm is an open source machine learning library based on RVM technique. It's written in C programming language and comes with Python programming language bindings.cONNXr - An ONNX runtime written in pure C (99) with zero dependencies focused on small embedded devices. Run inference on your machine learning models no matter which framework you train it with. Easy to install and compiles everywhere, even in very old devices.libonnx - A lightweight, portable pure C99 onnx inference engine for embedded devices with hardware acceleration support.Computer VisionCCV - C-based/Cached/Core Computer Vision Library, A Modern Computer Vision Library.VLFeat - VLFeat is an open and portable library of computer vision algorithms, which has a Matlab toolbox.C++Computer VisionDLib - DLib has C++ and Python interfaces for face detection and training general object detectors.EBLearn - Eblearn is an object-oriented C++ library that implements various machine learning models [Deprecated]OpenCV - OpenCV has C++, C, Python, Java and MATLAB interfaces and supports Windows, Linux, Android and Mac OS.VIGRA - VIGRA is a genertic cross-platform C++ computer vision and machine learning library for volumes of arbitrary dimensionality with Python bindings.Openpose - A real-time multi-person keypoint detection library for body, face, hands, and foot estimationGeneral-Purpose Machine LearningSpeedster -Automatically apply SOTA optimization techniques to achieve the maximum inference speed-up on your hardware. [DEEP LEARNING]BanditLib - A simple Multi-armed Bandit library. [Deprecated]Caffe - A deep learning framework developed with cleanliness, readability, and speed in mind. [DEEP LEARNING]CatBoost - General purpose gradient boosting on decision trees library with categorical features support out of the box. It is easy to install, contains fast inference implementation and supports CPU and GPU (even multi-GPU) computation.CNTK - The Computational Network Toolkit (CNTK) by Microsoft Research, is a unified deep-learning toolkit that describes neural networks as a series of computational steps via a directed graph.CUDA - This is a fast C++/CUDA implementation of convolutional [DEEP LEARNING]DeepDetect - A machine learning API and server written in C++11. It makes state of the art machine learning easy to work with and integrate into existing applications.Distributed Machine learning Tool Kit (DMTK) - A distributed machine learning (parameter server) framework by Microsoft. Enables training models on large data sets across multiple machines. Current tools bundled with it include: LightLDA and Distributed (Multisense) Word Embedding.DLib - A suite of ML tools designed to be easy to imbed in other applications.DSSTNE - A software library created by Amazon for training and deploying deep neural networks using GPUs which emphasizes speed and scale over experimental flexibility.DyNet - A dynamic neural network library working well with networks that have dynamic structures that change for every training instance. Written in C++ with bindings in Python.Fido - A highly-modular C++ machine learning library for embedded electronics and robotics.igraph - General purpose graph library.Intel® oneAPI Data Analytics Library - A high performance software library developed by Intel and optimized for Intel's architectures. Library provides algorithmic building blocks for all stages of data analytics and allows to process data in batch, online and distributed modes.LightGBM - Microsoft's fast, distributed, high performance gradient boosting (GBDT, GBRT, GBM or MART) framework based on decision tree algorithms, used for ranking, classification and many other machine learning tasks.libfm - A generic approach that allows to mimic most factorization models by feature engineering.MLDB - The Machine Learning Database is a database designed for machine learning. Send it commands over a RESTful API to store data, explore it using SQL, then train machine learning models and expose them as APIs.mlpack - A scalable C++ machine learning library.MXNet - Lightweight, Portable, Flexible Distributed/Mobile Deep Learning with Dynamic, Mutation-aware Dataflow Dep Scheduler; for Python, R, Julia, Go, JavaScript and more.N2D2 - CEA-List's CAD framework for designing and simulating Deep Neural Network, and building full DNN-based applications on embedded platformsoneDNN - An open-source cross-platform performance library for deep learning applications.ParaMonte - A general-purpose library with C/C++ interface for Bayesian data analysis and visualization via serial/parallel Monte Carlo and MCMC simulations. Documentation can be found here.proNet-core - A general-purpose network embedding framework: pair-wise representations optimization Network Edit.PyCaret - An open-source, low-code machine learning library in Python that automates machine learning workflows.PyCUDA - Python interface to CUDAROOT - A modular scientific software framework. It provides all the functionalities needed to deal with big data processing, statistical analysis, visualization and storage.shark - A fast, modular, feature-rich open-source C++ machine learning library.Shogun - The Shogun Machine Learning Toolbox.sofia-ml - Suite of fast incremental algorithms.Stan - A probabilistic programming language implementing full Bayesian statistical inference with Hamiltonian Monte Carlo sampling.Timbl - A software package/C++ library implementing several memory-based learning algorithms, among which IB1-IG, an implementation of k-nearest neighbor classification, and IGTree, a decision-tree approximation of IB1-IG. Commonly used for NLP.Vowpal Wabbit (VW) - A fast out-of-core learning system.Warp-CTC - A fast parallel implementation of Connectionist Temporal Classification (CTC), on both CPU and GPU.XGBoost - A parallelized optimized general purpose gradient boosting library.ThunderGBM - A fast library for GBDTs and Random Forests on GPUs.ThunderSVM - A fast SVM library on GPUs and CPUs.LKYDeepNN - A header-only C++11 Neural Network library. Low dependency, native traditional chinese document.xLearn - A high performance, easy-to-use, and scalable machine learning package, which can be used to solve large-scale machine learning problems. xLearn is especially useful for solving machine learning problems on large-scale sparse data, which is very common in Internet services such as online advertising and recommender systems.Featuretools - A library for automated feature engineering. It excels at transforming transactional and relational datasets into feature matrices for machine learning using reusable feature engineering \""primitives\"".skynet - A library for learning neural networks, has C-interface, net set in JSON. Written in C++ with bindings in Python, C++ and C#.Feast - A feature store for the management, discovery, and access of machine learning features. Feast provides a consistent view of feature data for both model training and model serving.Hopsworks - A data-intensive platform for AI with the industry's first open-source feature store. The Hopsworks Feature Store provides both a feature warehouse for training and batch based on Apache Hive and a feature serving database, based on MySQL Cluster, for online applications.Polyaxon - A platform for reproducible and scalable machine learning and deep learning.QuestDB A relational column-oriented database designed for real-time analytics on time series and event data.Phoenix Uncover insights, surface problems, monitor and fine tune your generative LLM, CV and tabular models.Natural Language ProcessingBLLIP Parser - BLLIP Natural Language Parser (also known as the Charniak-Johnson parser).colibri-core - C++ library, command line tools, and Python binding for extracting and working with basic linguistic constructions such as n-grams and skipgrams in a quick and memory-efficient way.CRF++ - Open source implementation of Conditional Random Fields (CRFs) for segmenting/labeling sequential data & other Natural Language Processing tasks. [Deprecated]CRFsuite - CRFsuite is an implementation of Conditional Random Fields (CRFs) for labeling sequential data. [Deprecated]frog - Memory-based NLP suite developed for Dutch: PoS tagger, lemmatiser, dependency parser, NER, shallow parser, morphological analyzer.libfolia - C++ library for the FoLiA formatMeTA - MeTA : ModErn Text Analysis is a C++ Data Sciences Toolkit that facilitates mining big text data.MIT Information Extraction Toolkit - C, C++, and Python tools for named entity recognition and relation extractionucto - Unicode-aware regular-expression based tokenizer for various languages. Tool and C++ library. Supports FoLiA format.Speech RecognitionKaldi - Kaldi is a toolkit for speech recognition written in C++ and licensed under the Apache License v2.0. Kaldi is intended for use by speech recognition researchers.Sequence AnalysisToPS - This is an object-oriented framework that facilitates the integration of probabilistic models for sequences over a user defined alphabet. [Deprecated]Gesture Detectiongrt - The Gesture Recognition Toolkit (GRT) is a cross-platform, open-source, C++ machine learning library designed for real-time gesture recognition.Common LispGeneral-Purpose Machine Learningmgl - Neural networks (boltzmann machines, feed-forward and recurrent nets), Gaussian Processes.mgl-gpr - Evolutionary algorithms. [Deprecated]cl-libsvm - Wrapper for the libsvm support vector machine library. [Deprecated]cl-online-learning - Online learning algorithms (Perceptron, AROW, SCW, Logistic Regression).cl-random-forest - Implementation of Random Forest in Common Lisp.ClojureNatural Language ProcessingClojure-openNLP - Natural Language Processing in Clojure (opennlp).Infections-clj - Rails-like inflection library for Clojure and ClojureScript.General-Purpose Machine Learningscicloj.ml -  A idiomatic Clojure machine learning library based on tech.ml.dataset with a unique approach for immutable data processing pipelines.clj-ml - A machine learning library for Clojure built on top of Weka and friends.clj-boost - Wrapper for XGBoostTouchstone - Clojure A/B testing library.Clojush - The Push programming language and the PushGP genetic programming system implemented in Clojure.lambda-ml - Simple, concise implementations of machine learning techniques and utilities in Clojure.Infer - Inference and machine learning in Clojure. [Deprecated]Encog - Clojure wrapper for Encog (v3) (Machine-Learning framework that specializes in neural-nets). [Deprecated]Fungp - A genetic programming library for Clojure. [Deprecated]Statistiker - Basic Machine Learning algorithms in Clojure. [Deprecated]clortex - General Machine Learning library using Numenta’s Cortical Learning Algorithm. [Deprecated]comportex - Functionally composable Machine Learning library using Numenta’s Cortical Learning Algorithm. [Deprecated]Deep LearningMXNet - Bindings to Apache MXNet - part of the MXNet projectDeep Diamond - A fast Clojure Tensor & Deep Learning libraryjutsu.ai - Clojure wrapper for deeplearning4j with some added syntactic sugar.cortex - Neural networks, regression and feature learning in Clojure.Flare - Dynamic Tensor Graph library in Clojure (think PyTorch, DynNet, etc.)dl4clj - Clojure wrapper for Deeplearning4j.Data Analysistech.ml.dataset - Clojure dataframe library and pipeline for data processing and machine learningTablecloth - A dataframe grammar wrapping tech.ml.dataset, inspired by several R librariesPanthera - Clojure API wrapping Python's Pandas libraryIncanter - Incanter is a Clojure-based, R-like platform for statistical computing and graphics.PigPen - Map-Reduce for Clojure.Geni - a Clojure dataframe library that runs on Apache SparkData VisualizationHanami : Clojure(Script) library and framework for creating interactive visualization applications based in Vega-Lite (VGL) and/or Vega (VG) specifications. Automatic framing and layouts along with a powerful templating system for abstracting visualization specsSaite -  Clojure(Script) client/server application for dynamic interactive explorations and the creation of live shareable documents capturing them using Vega/Vega-Lite, CodeMirror, markdown, and LaTeXOz - Data visualisation using Vega/Vega-Lite and Hiccup, and a live-reload platform for literate-programmingEnvision - Clojure Data Visualisation library, based on Statistiker and D3.Pink Gorilla Notebook - A Clojure/Clojurescript notebook application/-library based on Gorilla-REPLclojupyter -  A Jupyter kernel for Clojure - run Clojure code in Jupyter Lab, Notebook and Console.notespace - Notebook experience in your Clojure namespaceDelight - A listener that streams your spark events logs to delight, a free and improved spark UIInteropJava Interop - Clojure has Native Java Interop from which Java's ML ecosystem can be accessedJavaScript Interop - ClojureScript has Native JavaScript Interop from which JavaScript's ML ecosystem can be accessedLibpython-clj - Interop with PythonClojisR - Interop with R and Renjin (R on the JVM)MiscNeanderthal - Fast Clojure Matrix Library (native CPU, GPU, OpenCL, CUDA)kixistats - A library of statistical distribution sampling and transducing functionsfastmath - A collection of functions for mathematical and statistical computing, macine learning, etc., wrapping several JVM librariesmatlib - a Clojure library of optimisation and control theory tools and convenience functions based on Neanderthal.ExtraScicloj - Curated list of ML related resources for Clojure.CrystalGeneral-Purpose Machine Learningmachine - Simple machine learning algorithm.crystal-fann - FANN (Fast Artificial Neural Network) binding.ElixirGeneral-Purpose Machine LearningSimple Bayes - A Simple Bayes / Naive Bayes implementation in Elixir.emel - A simple and functional machine learning library written in Elixir.Tensorflex - Tensorflow bindings for the Elixir programming language.Natural Language ProcessingStemmer - An English (Porter2) stemming implementation in Elixir.ErlangGeneral-Purpose Machine LearningDisco - Map Reduce in Erlang. [Deprecated]FortranGeneral-Purpose Machine Learningneural-fortran - A parallel neural net microframework.Read the paper here.Data Analysis / Data VisualizationParaMonte - A general-purpose Fortran library for Bayesian data analysis and visualization via serial/parallel Monte Carlo and MCMC simulations. Documentation can be found here.GoNatural Language ProcessingCybertron - Cybertron: the home planet of the Transformers in Go.snowball - Snowball Stemmer for Go.word-embedding - Word Embeddings: the full implementation of word2vec, GloVe in Go.sentences - Golang implementation of Punkt sentence tokenizer.go-ngram - In-memory n-gram index with compression. [Deprecated]paicehusk - Golang implementation of the Paice/Husk Stemming Algorithm. [Deprecated]go-porterstemmer - A native Go clean room implementation of the Porter Stemming algorithm. [Deprecated]General-Purpose Machine LearningSpago - Self-contained Machine Learning and Natural Language Processing library in Go.birdland - A recommendation library in Go.eaopt - An evolutionary optimization library.leaves - A pure Go implementation of the prediction part of GBRTs, including XGBoost and LightGBM.gobrain - Neural Networks written in Go.go-featureprocessing - Fast and convenient feature processing for low latency machine learning in Go.go-mxnet-predictor - Go binding for MXNet c_predict_api to do inference with a pre-trained model.go-ml-benchmarks — benchmarks of machine learning inference for Go.go-ml-transpiler - An open source Go transpiler for machine learning models.golearn - Machine learning for Go.goml - Machine learning library written in pure Go.gorgonia - Deep learning in Go.goro - A high-level machine learning library in the vein of Keras.gorse - An offline recommender system backend based on collaborative filtering written in Go.therfoo - An embedded deep learning library for Go.neat - Plug-and-play, parallel Go framework for NeuroEvolution of Augmenting Topologies (NEAT). [Deprecated]go-pr - Pattern recognition package in Go lang. [Deprecated]go-ml - Linear / Logistic regression, Neural Networks, Collaborative Filtering and Gaussian Multivariate Distribution. [Deprecated]GoNN - GoNN is an implementation of Neural Network in Go Language, which includes BPNN, RBF, PCN. [Deprecated]bayesian - Naive Bayesian Classification for Golang. [Deprecated]go-galib - Genetic Algorithms library written in Go / Golang. [Deprecated]Cloudforest - Ensembles of decision trees in Go/Golang. [Deprecated]go-dnn - Deep Neural Networks for Golang (powered by MXNet)Spatial analysis and geometrygo-geom - Go library to handle geometries.gogeo - Spherical geometry in Go.Data Analysis / Data Visualizationdataframe-go - Dataframes for machine-learning and statistics (similar to pandas).gota - Dataframes.gonum/mat - A linear algebra package for Go.gonum/optimize - Implementations of optimization algorithms.gonum/plot - A plotting library.gonum/stat - A statistics library.SVGo - The Go Language library for SVG generation.glot - Glot is a plotting library for Golang built on top of gnuplot.globe - Globe wireframe visualization.gonum/graph - General-purpose graph library.go-graph - Graph library for Go/Golang language. [Deprecated]RF - Random forests implementation in Go. [Deprecated]Computer visionGoCV - Package for computer vision using OpenCV 4 and beyond.Reinforcement learninggold - A reinforcement learning library.HaskellGeneral-Purpose Machine Learninghaskell-ml - Haskell implementations of various ML algorithms. [Deprecated]HLearn - a suite of libraries for interpreting machine learning models according to their algebraic structure. [Deprecated]hnn - Haskell Neural Network library.hopfield-networks - Hopfield Networks for unsupervised learning in Haskell. [Deprecated]DNNGraph - A DSL for deep neural networks. [Deprecated]LambdaNet - Configurable Neural Networks in Haskell. [Deprecated]JavaNatural Language ProcessingCortical.io - Retina: an API performing complex NLP operations (disambiguation, classification, streaming text filtering, etc...) as quickly and intuitively as the brain.IRIS - Cortical.io's FREE NLP, Retina API Analysis Tool (written in JavaFX!) - See the Tutorial Video.CoreNLP - Stanford CoreNLP provides a set of natural language analysis tools which can take raw English language text input and give the base forms of words.Stanford Parser - A natural language parser is a program that works out the grammatical structure of sentences.Stanford POS Tagger - A Part-Of-Speech Tagger (POS Tagger).Stanford Name Entity Recognizer - Stanford NER is a Java implementation of a Named Entity Recognizer.Stanford Word Segmenter - Tokenization of raw text is a standard pre-processing step for many NLP tasks.Tregex, Tsurgeon and Semgrex - Tregex is a utility for matching patterns in trees, based on tree relationships and regular expression matches on nodes (the name is short for \""tree regular expressions\"").Stanford Phrasal: A Phrase-Based Translation SystemStanford English Tokenizer - Stanford Phrasal is a state-of-the-art statistical phrase-based machine translation system, written in Java.Stanford Tokens Regex - A tokenizer divides text into a sequence of tokens, which roughly correspond to \""words\"".Stanford Temporal Tagger - SUTime is a library for recognizing and normalizing time expressions.Stanford SPIED - Learning entities from unlabeled text starting with seed sets using patterns in an iterative fashion.Twitter Text Java - A Java implementation of Twitter's text processing library.MALLET - A Java-based package for statistical natural language processing, document classification, clustering, topic modelling, information extraction, and other machine learning applications to text.OpenNLP - a machine learning based toolkit for the processing of natural language text.LingPipe - A tool kit for processing text using computational linguistics.ClearTK - ClearTK provides a framework for developing statistical natural language processing (NLP) components in Java and is built on top of Apache UIMA. [Deprecated]Apache cTAKES - Apache Clinical Text Analysis and Knowledge Extraction System (cTAKES) is an open-source natural language processing system for information extraction from electronic medical record clinical free-text.NLP4J - The NLP4J project provides software and resources for natural language processing. The project started at the Center for Computational Language and EducAtion Research, and is currently developed by the Center for Language and Information Research at Emory University. [Deprecated]CogcompNLP - This project collects a number of core libraries for Natural Language Processing (NLP) developed in the University of Illinois' Cognitive Computation Group, for example illinois-core-utilities which provides a set of NLP-friendly data structures and a number of NLP-related utilities that support writing NLP applications, running experiments, etc, illinois-edison a library for feature extraction from illinois-core-utilities data structures and many other packages.General-Purpose Machine Learningaerosolve - A machine learning library by Airbnb designed from the ground up to be human friendly.AMIDST Toolbox - A Java Toolbox for Scalable Probabilistic Machine Learning.Chips-n-Salsa - A Java library for genetic algorithms, evolutionary computation, and stochastic local search, with a focus on self-adaptation / self-tuning, as well as parallel execution.Datumbox - Machine Learning framework for rapid development of Machine Learning and Statistical applications.ELKI - Java toolkit for data mining. (unsupervised: clustering, outlier detection etc.)Encog - An advanced neural network and machine learning framework. Encog contains classes to create a wide variety of networks, as well as support classes to normalize and process data for these neural networks. Encog trainings using multithreaded resilient propagation. Encog can also make use of a GPU to further speed processing time. A GUI based workbench is also provided to help model and train neural networks.FlinkML in Apache Flink - Distributed machine learning library in Flink.H2O - ML engine that supports distributed learning on Hadoop, Spark or your laptop via APIs in R, Python, Scala, REST/JSON.htm.java - General Machine Learning library using Numenta’s Cortical Learning Algorithm.liblinear-java - Java version of liblinear.Mahout - Distributed machine learning.Meka - An open source implementation of methods for multi-label classification and evaluation (extension to Weka).MLlib in Apache Spark - Distributed machine learning library in Spark.Hydrosphere Mist - a service for deployment Apache Spark MLLib machine learning models as realtime, batch or reactive web services.Neuroph - Neuroph is lightweight Java neural network framework.ORYX - Lambda Architecture Framework using Apache Spark and Apache Kafka with a specialization for real-time large-scale machine learning.Samoa SAMOA is a framework that includes distributed machine learning for data streams with an interface to plug-in different stream processing platforms.RankLib - RankLib is a library of learning to rank algorithms. [Deprecated]rapaio - statistics, data mining and machine learning toolbox in Java.RapidMiner - RapidMiner integration into Java code.Stanford Classifier - A classifier is a machine learning tool that will take data items and place them into one of k classes.Smile - Statistical Machine Intelligence & Learning Engine.SystemML - flexible, scalable machine learning (ML) language.Tribou - a machine learning library written in Java by Oracle.Weka - Weka is a collection of machine learning algorithms for data mining tasks.LBJava - Learning Based Java is a modelling language for the rapid development of software systems, offers a convenient, declarative syntax for classifier and constraint definition directly in terms of the objects in the programmer's application.knn-java-library - Just a simple implementation of K-Nearest Neighbors algorithm using with a bunch of similarity measures.Speech RecognitionCMU Sphinx - Open Source Toolkit For Speech Recognition purely based on Java speech recognition library.Data Analysis / Data VisualizationFlink - Open source platform for distributed stream and batch data processing.Hadoop - Hadoop/HDFS.Onyx - Distributed, masterless, high performance, fault tolerant data processing. Written entirely in Clojure.Spark - Spark is a fast and general engine for large-scale data processing.Storm - Storm is a distributed realtime computation system.Impala - Real-time Query for Hadoop.DataMelt - Mathematics software for numeric computation, statistics, symbolic calculations, data analysis and data visualization.Dr. Michael Thomas Flanagan's Java Scientific Library. [Deprecated]Deep LearningDeeplearning4j - Scalable deep learning for industry with parallel GPUs.Keras Beginner Tutorial - Friendly guide on using Keras to implement a simple Neural Network in Python.deepjavalibrary/djl - Deep Java Library (DJL) is an open-source, high-level, engine-agnostic Java framework for deep learning, designed to be easy to get started with and simple to use for Java developers.JavaScriptNatural Language ProcessingTwitter-text - A JavaScript implementation of Twitter's text processing library.natural - General natural language facilities for node.Knwl.js - A Natural Language Processor in JS.Retext - Extensible system for analyzing and manipulating natural language.NLP Compromise - Natural Language processing in the browser.nlp.js - An NLP library built in node over Natural, with entity extraction, sentiment analysis, automatic language identify, and so more.Data Analysis / Data VisualizationD3.jsHigh ChartsNVD3.jsdc.jschartjsdimpleamChartsD3xter - Straight forward plotting built on D3. [Deprecated]statkit - Statistics kit for JavaScript. [Deprecated]datakit - A lightweight framework for data analysis in JavaScriptscience.js - Scientific and statistical computing in JavaScript. [Deprecated]Z3d - Easily make interactive 3d plots built on Three.js [Deprecated]Sigma.js - JavaScript library dedicated to graph drawing.C3.js - customizable library based on D3.js for easy chart drawing.Datamaps - Customizable SVG map/geo visualizations using D3.js. [Deprecated]ZingChart - library written on Vanilla JS for big data visualization.cheminfo - Platform for data visualization and analysis, using the visualizer project.Learn JS DataAnyChartFusionChartsNivo - built on top of the awesome d3 and Reactjs librariesGeneral-Purpose Machine LearningAuto ML - Automated machine learning, data formatting, ensembling, and hyperparameter optimization for competitions and exploration- just give it a .csv file! [Deprecated]Convnet.js - ConvNetJS is a JavaScript library for training Deep Learning models[DEEP LEARNING] [Deprecated]Clusterfck - Agglomerative hierarchical clustering implemented in JavaScript for Node.js and the browser. [Deprecated]Clustering.js - Clustering algorithms implemented in JavaScript for Node.js and the browser. [Deprecated]Decision Trees - NodeJS Implementation of Decision Tree using ID3 Algorithm. [Deprecated]DN2A - Digital Neural Networks Architecture. [Deprecated]figue - K-means, fuzzy c-means and agglomerative clustering.Gaussian Mixture Model - Unsupervised machine learning with multivariate Gaussian mixture model.Node-fann - FANN (Fast Artificial Neural Network Library) bindings for Node.js [Deprecated]Keras.js - Run Keras models in the browser, with GPU support provided by WebGL 2.Kmeans.js - Simple JavaScript implementation of the k-means algorithm, for node.js and the browser. [Deprecated]LDA.js - LDA topic modelling for Node.jsLearning.js - JavaScript implementation of logistic regression/c4.5 decision tree [Deprecated]machinelearn.js - Machine Learning library for the web, Node.js and developersmil-tokyo - List of several machine learning libraries.Node-SVM - Support Vector Machine for Node.jsBrain - Neural networks in JavaScript [Deprecated]Brain.js - Neural networks in JavaScript - continued community fork of Brain.Bayesian-Bandit - Bayesian bandit implementation for Node and the browser. [Deprecated]Synaptic - Architecture-free neural network library for Node.js and the browser.kNear - JavaScript implementation of the k nearest neighbors algorithm for supervised learning.NeuralN - C++ Neural Network library for Node.js. It has advantage on large dataset and multi-threaded training. [Deprecated]kalman - Kalman filter for JavaScript. [Deprecated]shaman - Node.js library with support for both simple and multiple linear regression. [Deprecated]ml.js - Machine learning and numerical analysis tools for Node.js and the Browser!ml5 - Friendly machine learning for the web!Pavlov.js - Reinforcement learning using Markov Decision Processes.MXNet - Lightweight, Portable, Flexible Distributed/Mobile Deep Learning with Dynamic, Mutation-aware Dataflow Dep Scheduler; for Python, R, Julia, Go, JavaScript and more.TensorFlow.js - A WebGL accelerated, browser based JavaScript library for training and deploying ML models.JSMLT - Machine learning toolkit with classification and clustering for Node.js; supports visualization (see visualml.io).xgboost-node - Run XGBoost model and make predictions in Node.js.Netron - Visualizer for machine learning models.tensor-js - A deep learning library for the browser, accelerated by WebGL and WebAssembly.WebDNN - Fast Deep Neural Network JavaScript Framework. WebDNN uses next generation JavaScript API, WebGPU for GPU execution, and WebAssembly for CPU execution.Miscstdlib - A standard library for JavaScript and Node.js, with an emphasis on numeric computing. The library provides a collection of robust, high performance libraries for mathematics, statistics, streams, utilities, and more.sylvester - Vector and Matrix math for JavaScript. [Deprecated]simple-statistics - A JavaScript implementation of descriptive, regression, and inference statistics. Implemented in literate JavaScript with no dependencies, designed to work in all modern browsers (including IE) as well as in Node.js.regression-js - A javascript library containing a collection of least squares fitting methods for finding a trend in a set of data.Lyric - Linear Regression library. [Deprecated]GreatCircle - Library for calculating great circle distance.MLPleaseHelp - MLPleaseHelp is a simple ML resource search engine. You can use this search engine right now at https://jgreenemi.github.io/MLPleaseHelp/, provided via GitHub Pages.Pipcook - A JavaScript application framework for machine learning and its engineering.Demos and ScriptsThe Bot - Example of how the neural network learns to predict the angle between two points created with Synaptic.Half Beer - Beer glass classifier created with Synaptic.NSFWJS - Indecent content checker with TensorFlow.jsRock Paper Scissors - Rock Paper Scissors trained in the browser with TensorFlow.jsHeroes Wear Masks - A fun TensorFlow.js-based oracle that tells, whether one wears a face mask or not. It can even tell when one wears the mask incorrectly.JuliaGeneral-Purpose Machine LearningMachineLearning - Julia Machine Learning library. [Deprecated]MLBase - A set of functions to support the development of machine learning algorithms.PGM - A Julia framework for probabilistic graphical models.DA - Julia package for Regularized Discriminant Analysis.Regression - Algorithms for regression analysis (e.g. linear regression and logistic regression). [Deprecated]Local Regression - Local regression, so smooooth!Naive Bayes - Simple Naive Bayes implementation in Julia. [Deprecated]Mixed Models - A Julia package for fitting (statistical) mixed-effects models.Simple MCMC - basic MCMC sampler implemented in Julia. [Deprecated]Distances - Julia module for Distance evaluation.Decision Tree - Decision Tree Classifier and Regressor.Neural - A neural network in Julia.MCMC - MCMC tools for Julia. [Deprecated]Mamba - Markov chain Monte Carlo (MCMC) for Bayesian analysis in Julia.GLM - Generalized linear models in Julia.Gaussian Processes - Julia package for Gaussian processes.Online Learning [Deprecated]GLMNet - Julia wrapper for fitting Lasso/ElasticNet GLM models using glmnet.Clustering - Basic functions for clustering data: k-means, dp-means, etc.SVM - SVM for Julia. [Deprecated]Kernel Density - Kernel density estimators for Julia.MultivariateStats - Methods for dimensionality reduction.NMF - A Julia package for non-negative matrix factorization.ANN - Julia artificial neural networks. [Deprecated]Mocha - Deep Learning framework for Julia inspired by Caffe. [Deprecated]XGBoost - eXtreme Gradient Boosting Package in Julia.ManifoldLearning - A Julia package for manifold learning and nonlinear dimensionality reduction.MXNet - Lightweight, Portable, Flexible Distributed/Mobile Deep Learning with Dynamic, Mutation-aware Dataflow Dep Scheduler; for Python, R, Julia, Go, JavaScript and more.Merlin - Flexible Deep Learning Framework in Julia.ROCAnalysis - Receiver Operating Characteristics and functions for evaluation probabilistic binary classifiers.GaussianMixtures - Large scale Gaussian Mixture Models.ScikitLearn - Julia implementation of the scikit-learn API.Knet - Koç University Deep Learning Framework.Flux - Relax! Flux is the ML library that doesn't make you tensorMLJ - A Julia machine learning framework.Natural Language ProcessingTopic Models - TopicModels for Julia. [Deprecated]Text Analysis - Julia package for text analysis.Word Tokenizers - Tokenizers for Natural Language Processing in JuliaCorpus Loaders - A Julia package providing a variety of loaders for various NLP corpora.Embeddings - Functions and data dependencies for loading various word embeddingsLanguages - Julia package for working with various human languagesWordNet - A Julia package for Princeton's WordNetData Analysis / Data VisualizationGraph Layout - Graph layout algorithms in pure Julia.LightGraphs - Graph modelling and analysis.Data Frames Meta - Metaprogramming tools for DataFrames.Julia Data - library for working with tabular data in Julia. [Deprecated]Data Read - Read files from Stata, SAS, and SPSS.Hypothesis Tests - Hypothesis tests for Julia.Gadfly - Crafty statistical graphics for Julia.Stats - Statistical tests for Julia.RDataSets - Julia package for loading many of the data sets available in R.DataFrames - library for working with tabular data in Julia.Distributions - A Julia package for probability distributions and associated functions.Data Arrays - Data structures that allow missing values. [Deprecated]Time Series - Time series toolkit for Julia.Sampling - Basic sampling algorithms for Julia.Misc Stuff / PresentationsDSP - Digital Signal Processing (filtering, periodograms, spectrograms, window functions).JuliaCon Presentations - Presentations for JuliaCon.SignalProcessing - Signal Processing tools for Julia.Images - An image library for Julia.DataDeps - Reproducible data setup for reproducible science.KotlinDeep LearningKotlinDL - Deep learning framework written in Kotlin.LuaGeneral-Purpose Machine LearningTorch7cephes - Cephes mathematical functions library, wrapped for Torch. Provides and wraps the 180+ special mathematical functions from the Cephes mathematical library, developed by Stephen L. Moshier. It is used, among many other places, at the heart of SciPy. [Deprecated]autograd - Autograd automatically differentiates native Torch code. Inspired by the original Python version.graph - Graph package for Torch. [Deprecated]randomkit - Numpy's randomkit, wrapped for Torch. [Deprecated]signal - A signal processing toolbox for Torch-7. FFT, DCT, Hilbert, cepstrums, stft.nn - Neural Network package for Torch.torchnet - framework for torch which provides a set of abstractions aiming at encouraging code re-use as well as encouraging modular programming.nngraph - This package provides graphical computation for nn library in Torch7.nnx - A completely unstable and experimental package that extends Torch's builtin nn library.rnn - A Recurrent Neural Network library that extends Torch's nn. RNNs, LSTMs, GRUs, BRNNs, BLSTMs, etc.dpnn - Many useful features that aren't part of the main nn package.dp - A deep learning library designed for streamlining research and development using the Torch7 distribution. It emphasizes flexibility through the elegant use of object-oriented design patterns. [Deprecated]optim - An optimization library for Torch. SGD, Adagrad, Conjugate-Gradient, LBFGS, RProp and more.unsup - A package for unsupervised learning in Torch. Provides modules that are compatible with nn (LinearPsd, ConvPsd, AutoEncoder, ...), and self-contained algorithms (k-means, PCA). [Deprecated]manifold - A package to manipulate manifolds.svm - Torch-SVM library. [Deprecated]lbfgs - FFI Wrapper for liblbfgs. [Deprecated]vowpalwabbit - An old vowpalwabbit interface to torch. [Deprecated]OpenGM - OpenGM is a C++ library for graphical modelling, and inference. The Lua bindings provide a simple way of describing graphs, from Lua, and then optimizing them with OpenGM. [Deprecated]spaghetti - Spaghetti (sparse linear) module for torch7 by @MichaelMathieu [Deprecated]LuaSHKit - A Lua wrapper around the Locality sensitive hashing library SHKit [Deprecated]kernel smoothing - KNN, kernel-weighted average, local linear regression smoothers. [Deprecated]cutorch - Torch CUDA Implementation.cunn - Torch CUDA Neural Network Implementation.imgraph - An image/graph library for Torch. This package provides routines to construct graphs on images, segment them, build trees out of them, and convert them back to images. [Deprecated]videograph - A video/graph library for Torch. This package provides routines to construct graphs on videos, segment them, build trees out of them, and convert them back to videos. [Deprecated]saliency - code and tools around integral images. A library for finding interest points based on fast integral histograms. [Deprecated]stitch - allows us to use hugin to stitch images and apply same stitching to a video sequence. [Deprecated]sfm - A bundle adjustment/structure from motion package. [Deprecated]fex - A package for feature extraction in Torch. Provides SIFT and dSIFT modules. [Deprecated]OverFeat - A state-of-the-art generic dense feature extractor. [Deprecated]wav2letter - a simple and efficient end-to-end Automatic Speech Recognition (ASR) system from Facebook AI Research.Numeric LuaLunatic PythonSciLuaLua - Numerical Algorithms [Deprecated]Lunum [Deprecated]Keras GPT Copilot - A python package that integrates an LLM copilot inside the keras model development workflow.Demos and ScriptsCore torch7 demos repository.linear-regression, logistic-regressionface detector (training and detection as separate demos)mst-based-segmentertrain-a-digit-classifiertrain-autoencoderoptical flow demotrain-on-housenumberstrain-on-cifartracking with deep netskinect demofilter-bank visualizationsaliency-networksTraining a Convnet for the Galaxy-Zoo Kaggle challenge(CUDA demo)torch-datasets - Scripts to load several popular datasets including:BSR 500CIFAR-10COILStreet View House NumbersMNISTNORBAtari2600 - Scripts to generate a dataset with static frames from the Arcade Learning Environment.MatlabComputer VisionContourlets - MATLAB source code that implements the contourlet transform and its utility functions.Shearlets - MATLAB code for shearlet transform.Curvelets - The Curvelet transform is a higher dimensional generalization of the Wavelet transform designed to represent images at different scales and different angles.Bandlets - MATLAB code for bandlet transform.mexopencv - Collection and a development kit of MATLAB mex functions for OpenCV library.Natural Language ProcessingNLP - A NLP library for Matlab.General-Purpose Machine LearningTraining a deep autoencoder or a classifieron MNIST digits - Training a deep autoencoder or a classifieron MNIST digits[DEEP LEARNING].Convolutional-Recursive Deep Learning for 3D Object Classification - Convolutional-Recursive Deep Learning for 3D Object Classification[DEEP LEARNING].Spider - The spider is intended to be a complete object orientated environment for machine learning in Matlab.LibSVM - A Library for Support Vector Machines.ThunderSVM - An Open-Source SVM Library on GPUs and CPUsLibLinear - A Library for Large Linear Classification.Machine Learning Module - Class on machine w/ PDF, lectures, codeCaffe - A deep learning framework developed with cleanliness, readability, and speed in mind.Pattern Recognition Toolbox - A complete object-oriented environment for machine learning in Matlab.Pattern Recognition and Machine Learning - This package contains the matlab implementation of the algorithms described in the book Pattern Recognition and Machine Learning by C. Bishop.Optunity - A library dedicated to automated hyperparameter optimization with a simple, lightweight API to facilitate drop-in replacement of grid search. Optunity is written in Python but interfaces seamlessly with MATLAB.MXNet - Lightweight, Portable, Flexible Distributed/Mobile Deep Learning with Dynamic, Mutation-aware Dataflow Dep Scheduler; for Python, R, Julia, Go, JavaScript and more.Machine Learning in MatLab/Octave - examples of popular machine learning algorithms (neural networks, linear/logistic regressions, K-Means, etc.) with code examples and mathematics behind them being explained.Data Analysis / Data VisualizationParaMonte - A general-purpose MATLAB library for Bayesian data analysis and visualization via serial/parallel Monte Carlo and MCMC simulations. Documentation can be found here.matlab_bgl - MatlabBGL is a Matlab package for working with graphs.gaimc - Efficient pure-Matlab implementations of graph algorithms to complement MatlabBGL's mex functions..NETComputer VisionOpenCVDotNet - A wrapper for the OpenCV project to be used with .NET applications.Emgu CV - Cross platform wrapper of OpenCV which can be compiled in Mono to be run on Windows, Linus, Mac OS X, iOS, and Android.AForge.NET - Open source C# framework for developers and researchers in the fields of Computer Vision and Artificial Intelligence. Development has now shifted to GitHub.Accord.NET - Together with AForge.NET, this library can provide image processing and computer vision algorithms to Windows, Windows RT and Windows Phone. Some components are also available for Java and Android.Natural Language ProcessingStanford.NLP for .NET - A full port of Stanford NLP packages to .NET and also available precompiled as a NuGet package.General-Purpose Machine LearningAccord-Framework -The Accord.NET Framework is a complete framework for building machine learning, computer vision, computer audition, signal processing and statistical applications.Accord.MachineLearning - Support Vector Machines, Decision Trees, Naive Bayesian models, K-means, Gaussian Mixture models and general algorithms such as Ransac, Cross-validation and Grid-Search for machine-learning applications. This package is part of the Accord.NET Framework.DiffSharp - An automatic differentiation (AD) library providing exact and efficient derivatives (gradients, Hessians, Jacobians, directional derivatives, and matrix-free Hessian- and Jacobian-vector products) for machine learning and optimization applications. Operations can be nested to any level, meaning that you can compute exact higher-order derivatives and differentiate functions that are internally making use of differentiation, for applications such as hyperparameter optimization.Encog - An advanced neural network and machine learning framework. Encog contains classes to create a wide variety of networks, as well as support classes to normalize and process data for these neural networks. Encog trains using multithreaded resilient propagation. Encog can also make use of a GPU to further speed processing time. A GUI based workbench is also provided to help model and train neural networks.GeneticSharp - Multi-platform genetic algorithm library for .NET Core and .NET Framework. The library has several implementations of GA operators, like: selection, crossover, mutation, reinsertion and termination.Infer.NET - Infer.NET is a framework for running Bayesian inference in graphical models. One can use Infer.NET to solve many different kinds of machine learning problems, from standard problems like classification, recommendation or clustering through to customized solutions to domain-specific problems. Infer.NET has been used in a wide variety of domains including information retrieval, bioinformatics, epidemiology, vision, and many others.ML.NET - ML.NET is a cross-platform open-source machine learning framework which makes machine learning accessible to .NET developers. ML.NET was originally developed in Microsoft Research and evolved into a significant framework over the last decade and is used across many product groups in Microsoft like Windows, Bing, PowerPoint, Excel and more.Neural Network Designer - DBMS management system and designer for neural networks. The designer application is developed using WPF, and is a user interface which allows you to design your neural network, query the network, create and configure chat bots that are capable of asking questions and learning from your feedback. The chat bots can even scrape the internet for information to return in their output as well as to use for learning.Synapses - Neural network library in F#.Vulpes - Deep belief and deep learning implementation written in F# and leverages CUDA GPU execution with Alea.cuBase.MxNet.Sharp - .NET Standard bindings for Apache MxNet with Imperative, Symbolic and Gluon Interface for developing, training and deploying Machine Learning models in C#. https://mxnet.tech-quantum.com/Data Analysis / Data Visualizationnuml - numl is a machine learning library intended to ease the use of using standard modelling techniques for both prediction and clustering.Math.NET Numerics - Numerical foundation of the Math.NET project, aiming to provide methods and algorithms for numerical computations in science, engineering and everyday use. Supports .Net 4.0, .Net 3.5 and Mono on Windows, Linux and Mac; Silverlight 5, WindowsPhone/SL 8, WindowsPhone 8.1 and Windows 8 with PCL Portable Profiles 47 and 344; Android/iOS with Xamarin.Sho - Sho is an interactive environment for data analysis and scientific computing that lets you seamlessly connect scripts (in IronPython) with compiled code (in .NET) to enable fast and flexible prototyping. The environment includes powerful and efficient libraries for linear algebra as well as data visualization that can be used from any .NET language, as well as a feature-rich interactive shell for rapid development.Objective CGeneral-Purpose Machine LearningYCML - A Machine Learning framework for Objective-C and Swift (OS X / iOS).MLPNeuralNet - Fast multilayer perceptron neural network library for iOS and Mac OS X. MLPNeuralNet predicts new examples by trained neural networks. It is built on top of the Apple's Accelerate Framework, using vectorized operations and hardware acceleration if available. [Deprecated]MAChineLearning - An Objective-C multilayer perceptron library, with full support for training through backpropagation. Implemented using vDSP and vecLib, it's 20 times faster than its Java equivalent. Includes sample code for use from Swift.BPN-NeuralNetwork - It implemented 3 layers of neural networks ( Input Layer, Hidden Layer and Output Layer ) and it was named Back Propagation Neural Networks (BPN). This network can be used in products recommendation, user behavior analysis, data mining and data analysis. [Deprecated]Multi-Perceptron-NeuralNetwork - it implemented multi-perceptrons neural network (ニューラルネットワーク) based on Back Propagation Neural Networks (BPN) and designed unlimited-hidden-layers.KRHebbian-Algorithm - It is a non-supervisor and self-learning algorithm (adjust the weights) in the neural network of Machine Learning. [Deprecated]KRKmeans-Algorithm - It implemented K-Means  clustering and classification algorithm. It could be used in data mining and image compression. [Deprecated]KRFuzzyCMeans-Algorithm - It implemented Fuzzy C-Means (FCM) the fuzzy clustering / classification algorithm on Machine Learning. It could be used in data mining and image compression. [Deprecated]OCamlGeneral-Purpose Machine LearningOml - A general statistics and machine learning library.GPR - Efficient Gaussian Process Regression in OCaml.Libra-Tk - Algorithms for learning and inference with discrete probabilistic models.TensorFlow - OCaml bindings for TensorFlow.OpenCVOpenSource-Computer-VisionOpenCV - A OpenSource Computer Vision LibraryPerlData Analysis / Data VisualizationPerl Data Language, a pluggable architecture for data and image processing, which canbe used for machine learning.General-Purpose Machine LearningMXnet for Deep Learning, in Perl,also released in CPAN.Perl Data Language,using AWS machine learning platform from Perl.Algorithm::SVMLight,implementation of Support Vector Machines with SVMLight under it. [Deprecated]Several machine learning and artificial intelligence models areincluded in the AInamespace. For instance, you canfind Naïve Bayes.Perl 6Support Vector MachinesNaïve BayesData Analysis / Data VisualizationPerl Data Language,a pluggable architecture for data and image processing, which canbeused for machine learning.General-Purpose Machine LearningPHPNatural Language Processingjieba-php - Chinese Words Segmentation Utilities.General-Purpose Machine LearningPHP-ML - Machine Learning library for PHP. Algorithms, Cross Validation, Neural Network, Preprocessing, Feature Extraction and much more in one library.PredictionBuilder - A library for machine learning that builds predictions using a linear regression.Rubix ML - A high-level machine learning (ML) library that lets you build programs that learn from data using the PHP language.19 Questions - A machine learning / bayesian inference assigning attributes to objects.PythonComputer VisionScikit-Image - A collection of algorithms for image processing in Python.Scikit-Opt - Swarm Intelligence in Python (Genetic Algorithm, Particle Swarm Optimization, Simulated Annealing, Ant Colony Algorithm, Immune Algorithm, Artificial Fish Swarm Algorithm in Python)SimpleCV - An open source computer vision framework that gives access to several high-powered computer vision libraries, such as OpenCV. Written on Python and runs on Mac, Windows, and Ubuntu Linux.Vigranumpy - Python bindings for the VIGRA C++ computer vision library.OpenFace - Free and open source face recognition with deep neural networks.PCV - Open source Python module for computer vision. [Deprecated]face_recognition - Face recognition library that recognizes and manipulates faces from Python or from the command line.deepface - A lightweight face recognition and facial attribute analysis (age, gender, emotion and race) framework for Python covering cutting-edge models such as VGG-Face, FaceNet, OpenFace, DeepFace, DeepID, Dlib and ArcFace.retinaface - deep learning based cutting-edge facial detector for Python coming with facial landmarksdockerface - Easy to install and use deep learning Faster R-CNN face detection for images and video in a docker container. [Deprecated]Detectron - FAIR's software system that implements state-of-the-art object detection algorithms, including Mask R-CNN. It is written in Python and powered by the Caffe2 deep learning framework. [Deprecated]detectron2 - FAIR's next-generation research platform for object detection and segmentation. It is a ground-up rewrite of the previous version, Detectron, and is powered by the PyTorch deep learning framework.albumentations - А fast and framework agnostic image augmentation library that implements a diverse set of augmentation techniques. Supports classification, segmentation, detection out of the box. Was used to win a number of Deep Learning competitions at Kaggle, Topcoder and those that were a part of the CVPR workshops.pytessarct - Python-tesseract is an optical character recognition (OCR) tool for python. That is, it will recognize and \""read\"" the text embedded in images. Python-tesseract is a wrapper for Google's Tesseract-OCR Engine.imutils - A library containing Convenience functions to make basic image processing operations such as translation, rotation, resizing, skeletonization, and displaying Matplotlib images easier with OpenCV and Python.PyTorchCV - A PyTorch-Based Framework for Deep Learning in Computer Vision.joliGEN - Generative AI Image Toolset with GANs and Diffusion for Real-World Applications.Self-supervised learningneural-style-pt - A PyTorch implementation of Justin Johnson's neural-style (neural style transfer).Detecto - Train and run a computer vision model with 5-10 lines of code.neural-dream - A PyTorch implementation of DeepDream.Openpose - A real-time multi-person keypoint detection library for body, face, hands, and foot estimationDeep High-Resolution-Net - A PyTorch implementation of CVPR2019 paper \""Deep High-Resolution Representation Learning for Human Pose Estimation\""dream-creator - A PyTorch implementation of DeepDream. Allows individuals to quickly and easily train their own custom GoogleNet models with custom datasets for DeepDream.Lucent - Tensorflow and OpenAI Clarity's Lucid adapted for PyTorch.lightly - Lightly is a computer vision framework for self-supervised learning.Learnergy - Energy-based machine learning models built upon PyTorch.OpenVisionAPI - Open source computer vision API based on open source models.IoT Owl - Light face detection and recognition system with huge possibilities, based on Microsoft Face API and TensorFlow made for small IoT devices like raspberry pi.Exadel CompreFace - face recognition system that can be easily integrated into any system without prior machine learning skills. CompreFace provides REST API for face recognition, face verification, face detection, face mask detection, landmark detection, age, and gender recognition and is easily deployed with docker.computer-vision-in-action - as known as L0CV, is a new generation of computer vision open source online learning media, a cross-platform interactive learning framework integrating graphics, source code and HTML. the L0CV ecosystem — Notebook, Datasets, Source Code, and from Diving-in to Advanced — as well as the L0CV Hub.timm - PyTorch image models, scripts, pretrained weights -- ResNet, ResNeXT, EfficientNet, EfficientNetV2, NFNet, Vision Transformer, MixNet, MobileNet-V3/V2, RegNet, DPN, CSPNet, and more.Natural Language Processingpkuseg-python - A better version of Jieba, developed by Peking University.NLTK - A leading platform for building Python programs to work with human language data.Pattern - A web mining module for the Python programming language. It has tools for natural language processing, machine learning, among others.Quepy - A python framework to transform natural language questions to queries in a database query language.TextBlob - Providing a consistent API for diving into common natural language processing (NLP) tasks. Stands on the giant shoulders of NLTK and Pattern, and plays nicely with both.YAlign - A sentence aligner, a friendly tool for extracting parallel sentences from comparable corpora. [Deprecated]jieba - Chinese Words Segmentation Utilities.SnowNLP - A library for processing Chinese text.spammy - A library for email Spam filtering built on top of NLTKloso - Another Chinese segmentation library. [Deprecated]genius - A Chinese segment based on Conditional Random Field.KoNLPy - A Python package for Korean natural language processing.nut - Natural language Understanding Toolkit. [Deprecated]Rosetta - Text processing tools and wrappers (e.g. Vowpal Wabbit)BLLIP Parser - Python bindings for the BLLIP Natural Language Parser (also known as the Charniak-Johnson parser). [Deprecated]PyNLPl - Python Natural Language Processing Library. General purpose NLP library for Python. Also contains some specific modules for parsing common NLP formats, most notably for FoLiA, but also ARPA language models, Moses phrasetables, GIZA++ alignments.PySS3 - Python package that implements a novel white-box machine learning model for text classification, called SS3. Since SS3 has the ability to visually explain its rationale, this package also comes with easy-to-use interactive visualizations tools (online demos).python-ucto - Python binding to ucto (a unicode-aware rule-based tokenizer for various languages).python-frog - Python binding to Frog, an NLP suite for Dutch. (pos tagging, lemmatisation, dependency parsing, NER)python-zpar - Python bindings for ZPar, a statistical part-of-speech-tagger, constituency parser, and dependency parser for English.colibri-core - Python binding to C++ library for extracting and working with basic linguistic constructions such as n-grams and skipgrams in a quick and memory-efficient way.spaCy - Industrial strength NLP with Python and Cython.PyStanfordDependencies - Python interface for converting Penn Treebank trees to Stanford Dependencies.Distance - Levenshtein and Hamming distance computation. [Deprecated]Fuzzy Wuzzy - Fuzzy String Matching in Python.Neofuzz - Blazing fast, lightweight and customizable fuzzy and semantic text search in Python with fuzzywuzzy/thefuzz compatible API.jellyfish - a python library for doing approximate and phonetic matching of strings.editdistance - fast implementation of edit distance.textacy - higher-level NLP built on Spacy.stanford-corenlp-python - Python wrapper for Stanford CoreNLP [Deprecated]CLTK - The Classical Language Toolkit.Rasa - A \""machine learning framework to automate text-and voice-based conversations.\""yase - Transcode sentence (or other sequence) to list of word vector .Polyglot - Multilingual text (NLP) processing toolkit.DrQA - Reading Wikipedia to answer open-domain questions.Dedupe - A python library for accurate and scalable fuzzy matching, record deduplication and entity-resolution.Snips NLU - Natural Language Understanding library for intent classification and entity extractionNeuroNER - Named-entity recognition using neural networks providing state-of-the-art-resultsDeepPavlov - conversational AI library with many pre-trained Russian NLP models.BigARTM - topic modelling platform.NALP - A Natural Adversarial Language Processing framework built over Tensorflow.DL Translate - A deep learning-based translation library between 50 languages, built with transformers.Haystack - A framework for building industrial-strength applications with Transformer models and LLMs.General-Purpose Machine LearningAim -> An easy-to-use & supercharged open-source AI metadata tracker.RexMex -> A general purpose recommender metrics library for fair evaluation.ChemicalX -> A PyTorch based deep learning library for drug pair scoringMicrosoft ML for Apache Spark -> A distributed machine learning framework Apache SparkShapley -> A data-driven framework to quantify the value of classifiers in a machine learning ensemble.igel -> A delightful machine learning tool that allows you to train/fit, test and use models without writing codeML Model building -> A Repository Containing Classification, Clustering, Regression, Recommender Notebooks with illustration to make them.ML/DL project templatePyTorch Geometric Temporal -> A temporal extension of PyTorch Geometric for dynamic graph representation learning.Little Ball of Fur -> A graph sampling extension library for NetworkX with a Scikit-Learn like API.Karate Club -> An unsupervised machine learning extension library for NetworkX with a Scikit-Learn like API.Auto_ViML -> Automatically Build Variant Interpretable ML models fast! Auto_ViML is pronounced \""auto vimal\"", is a comprehensive and scalable Python AutoML toolkit with imbalanced handling, ensembling, stacking and built-in feature selection. Featured in Medium article.PyOD -> Python Outlier Detection, comprehensive and scalable Python toolkit for detecting outlying objects in multivariate data. Featured for Advanced models, including Neural Networks/Deep Learning and Outlier Ensembles.steppy -> Lightweight, Python library for fast and reproducible machine learning experimentation. Introduces a very simple interface that enables clean machine learning pipeline design.steppy-toolkit -> Curated collection of the neural networks, transformers and models that make your machine learning work faster and more effective.CNTK - Microsoft Cognitive Toolkit (CNTK), an open source deep-learning toolkit. Documentation can be found here.Couler - Unified interface for constructing and managing machine learning workflows on different workflow engines, such as Argo Workflows, Tekton Pipelines, and Apache Airflow.auto_ml - Automated machine learning for production and analytics. Lets you focus on the fun parts of ML, while outputting production-ready code, and detailed analytics of your dataset and results. Includes support for NLP, XGBoost, CatBoost, LightGBM, and soon, deep learning.dtaidistance - High performance library for time series distances (DTW) and time series clustering.einops - Deep learning operations reinvented (for pytorch, tensorflow, jax and others).machine learning - automated build consisting of a web-interface, and set of programmatic-interface API, for support vector machines. Corresponding dataset(s) are stored into a SQL database, then generated model(s) used for prediction(s), are stored into a NoSQL datastore.XGBoost - Python bindings for eXtreme Gradient Boosting (Tree) Library.ChefBoost - a lightweight decision tree framework for Python with categorical feature support covering regular decision tree algorithms such as ID3, C4.5, CART, CHAID and regression tree; also some advanved bagging and boosting techniques such as gradient boosting, random forest and adaboost.Apache SINGA - An Apache Incubating project for developing an open source machine learning library.Bayesian Methods for Hackers - Book/iPython notebooks on Probabilistic Programming in Python.Featureforge A set of tools for creating and testing machine learning features, with a scikit-learn compatible API.MLlib in Apache Spark - Distributed machine learning library in SparkHydrosphere Mist - a service for deployment Apache Spark MLLib machine learning models as realtime, batch or reactive web services.Towhee - A Python module that encode unstructured data into embeddings.scikit-learn - A Python module for machine learning built on top of SciPy.metric-learn - A Python module for metric learning.OpenMetricLearning - A PyTorch-based framework to train and validate the models producing high-quality embeddings.Intel(R) Extension for Scikit-learn - A seamless way to speed up your Scikit-learn applications with no accuracy loss and code changes.SimpleAI Python implementation of many of the artificial intelligence algorithms described in the book \""Artificial Intelligence, a Modern Approach\"". It focuses on providing an easy to use, well documented and tested library.astroML - Machine Learning and Data Mining for Astronomy.graphlab-create - A library with various machine learning models (regression, clustering, recommender systems, graph analytics, etc.) implemented on top of a disk-backed DataFrame.BigML - A library that contacts external servers.pattern - Web mining module for Python.NuPIC - Numenta Platform for Intelligent Computing.Pylearn2 - A Machine Learning library based on Theano. [Deprecated]keras - High-level neural networks frontend for TensorFlow, CNTK and Theano.Lasagne - Lightweight library to build and train neural networks in Theano.hebel - GPU-Accelerated Deep Learning Library in Python. [Deprecated]Chainer - Flexible neural network framework.prophet - Fast and automated time series forecasting framework by Facebook.gensim - Topic Modelling for Humans.tweetopic - Blazing fast short-text-topic-modelling for Python.topicwizard - Interactive topic model visualization/interpretation framework.topik - Topic modelling toolkit. [Deprecated]PyBrain - Another Python Machine Learning Library.Brainstorm - Fast, flexible and fun neural networks. This is the successor of PyBrain.Surprise - A scikit for building and analyzing recommender systems.implicit - Fast Python Collaborative Filtering for Implicit Datasets.LightFM -  A Python implementation of a number of popular recommendation algorithms for both implicit and explicit feedback.Crab - A flexible, fast recommender engine. [Deprecated]python-recsys - A Python library for implementing a Recommender System.thinking bayes - Book on Bayesian Analysis.Image-to-Image Translation with Conditional Adversarial Networks - Implementation of image to image (pix2pix) translation from the paper by isola et al.[DEEP LEARNING]Restricted Boltzmann Machines -Restricted Boltzmann Machines in Python. [DEEP LEARNING]Bolt - Bolt Online Learning Toolbox. [Deprecated]CoverTree - Python implementation of cover trees, near-drop-in replacement for scipy.spatial.kdtree [Deprecated]nilearn - Machine learning for NeuroImaging in Python.neuropredict - Aimed at novice machine learners and non-expert programmers, this package offers easy (no coding needed) and comprehensive machine learning (evaluation and full report of predictive performance WITHOUT requiring you to code) in Python for NeuroImaging and any other type of features. This is aimed at absorbing much of the ML workflow, unlike other packages like nilearn and pymvpa, which require you to learn their API and code to produce anything useful.imbalanced-learn - Python module to perform under sampling and oversampling with various techniques.imbalanced-ensemble - Python toolbox for quick implementation, modification, evaluation, and visualization of ensemble learning algorithms for class-imbalanced data. Supports out-of-the-box multi-class imbalanced (long-tailed) classification.Shogun - The Shogun Machine Learning Toolbox.Pyevolve - Genetic algorithm framework. [Deprecated]Caffe - A deep learning framework developed with cleanliness, readability, and speed in mind.breze - Theano based library for deep and recurrent neural networks.Cortex - Open source platform for deploying machine learning models in production.pyhsmm - library for approximate unsupervised inference in Bayesian Hidden Markov Models (HMMs) and explicit-duration Hidden semi-Markov Models (HSMMs), focusing on the Bayesian Nonparametric extensions, the HDP-HMM and HDP-HSMM, mostly with weak-limit approximations.SKLL - A wrapper around scikit-learn that makes it simpler to conduct experiments.neurolabSpearmint - Spearmint is a package to perform Bayesian optimization according to the algorithms outlined in the paper: Practical Bayesian Optimization of Machine Learning Algorithms. Jasper Snoek, Hugo Larochelle and Ryan P. Adams. Advances in Neural Information Processing Systems, 2012. [Deprecated]Pebl - Python Environment for Bayesian Learning. [Deprecated]Theano - Optimizing GPU-meta-programming code generating array oriented optimizing math compiler in Python.TensorFlow - Open source software library for numerical computation using data flow graphs.pomegranate - Hidden Markov Models for Python, implemented in Cython for speed and efficiency.python-timbl - A Python extension module wrapping the full TiMBL C++ programming interface. Timbl is an elaborate k-Nearest Neighbours machine learning toolkit.deap - Evolutionary algorithm framework.pydeep - Deep Learning In Python. [Deprecated]mlxtend - A library consisting of useful tools for data science and machine learning tasks.neon - Nervana's high-performance Python-based Deep Learning framework [DEEP LEARNING]. [Deprecated]Optunity - A library dedicated to automated hyperparameter optimization with a simple, lightweight API to facilitate drop-in replacement of grid search.Neural Networks and Deep Learning - Code samples for my book \""Neural Networks and Deep Learning\"" [DEEP LEARNING].Annoy - Approximate nearest neighbours implementation.TPOT - Tool that automatically creates and optimizes machine learning pipelines using genetic programming. Consider it your personal data science assistant, automating a tedious part of machine learning.pgmpy A python library for working with Probabilistic Graphical Models.DIGITS - The Deep Learning GPU Training System (DIGITS) is a web application for training deep learning models.Orange - Open source data visualization and data analysis for novices and experts.MXNet - Lightweight, Portable, Flexible Distributed/Mobile Deep Learning with Dynamic, Mutation-aware Dataflow Dep Scheduler; for Python, R, Julia, Go, JavaScript and more.milk - Machine learning toolkit focused on supervised classification. [Deprecated]TFLearn - Deep learning library featuring a higher-level API for TensorFlow.REP - an IPython-based environment for conducting data-driven research in a consistent and reproducible way. REP is not trying to substitute scikit-learn, but extends it and provides better user experience. [Deprecated]rgf_python - Python bindings for Regularized Greedy Forest (Tree) Library.skbayes - Python package for Bayesian Machine Learning with scikit-learn API.fuku-ml - Simple machine learning library, including Perceptron, Regression, Support Vector Machine, Decision Tree and more, it's easy to use and easy to learn for beginners.Xcessiv - A web-based application for quick, scalable, and automated hyperparameter tuning and stacked ensembling.PyTorch - Tensors and Dynamic neural networks in Python with strong GPU accelerationPyTorch Lightning - The lightweight PyTorch wrapper for high-performance AI research.PyTorch Lightning Bolts - Toolbox of models, callbacks, and datasets for AI/ML researchers.skorch - A scikit-learn compatible neural network library that wraps PyTorch.ML-From-Scratch - Implementations of Machine Learning models from scratch in Python with a focus on transparency. Aims to showcase the nuts and bolts of ML in an accessible way.Edward - A library for probabilistic modelling, inference, and criticism. Built on top of TensorFlow.xRBM - A library for Restricted Boltzmann Machine (RBM) and its conditional variants in Tensorflow.CatBoost - General purpose gradient boosting on decision trees library with categorical features support out of the box. It is easy to install, well documented and supports CPU and GPU (even multi-GPU) computation.stacked_generalization - Implementation of machine learning stacking technique as a handy library in Python.modAL - A modular active learning framework for Python, built on top of scikit-learn.Cogitare: A Modern, Fast, and Modular Deep Learning and Machine Learning framework for Python.Parris - Parris, the automated infrastructure setup tool for machine learning algorithms.neonrvm - neonrvm is an open source machine learning library based on RVM technique. It's written in C programming language and comes with Python programming language bindings.Turi Create - Machine learning from Apple. Turi Create simplifies the development of custom machine learning models. You don't have to be a machine learning expert to add recommendations, object detection, image classification, image similarity or activity classification to your app.xLearn - A high performance, easy-to-use, and scalable machine learning package, which can be used to solve large-scale machine learning problems. xLearn is especially useful for solving machine learning problems on large-scale sparse data, which is very common in Internet services such as online advertisement and recommender systems.mlens - A high performance, memory efficient, maximally parallelized ensemble learning, integrated with scikit-learn.Thampi - Machine Learning Prediction System on AWS LambdaMindsDB - Open Source framework to streamline use of neural networks.Microsoft Recommenders: Examples and best practices for building recommendation systems, provided as Jupyter notebooks. The repo contains some of the latest state of the art algorithms from Microsoft Research as well as from other companies and institutions.StellarGraph: Machine Learning on Graphs, a Python library for machine learning on graph-structured (network-structured) data.BentoML: Toolkit for package and deploy machine learning models for serving in productionMiraiML: An asynchronous engine for continuous & autonomous machine learning, built for real-time usage.numpy-ML: Reference implementations of ML models written in numpyNeuraxle: A framework providing the right abstractions to ease research, development, and deployment of your ML pipelines.Cornac - A comparative framework for multimodal recommender systems with a focus on models leveraging auxiliary data.JAX - JAX is Autograd and XLA, brought together for high-performance machine learning research.Catalyst - High-level utils for PyTorch DL & RL research. It was developed with a focus on reproducibility, fast experimentation and code/ideas reusing. Being able to research/develop something new, rather than write another regular train loop.Fastai - High-level wrapper built on the top of Pytorch which supports vision, text, tabular data and collaborative filtering.scikit-multiflow - A machine learning framework for multi-output/multi-label and stream data.Lightwood - A Pytorch based framework that breaks down machine learning problems into smaller blocks that can be glued together seamlessly with objective to build predictive models with one line of code.bayeso - A simple, but essential Bayesian optimization package, written in Python.mljar-supervised - An Automated Machine Learning (AutoML) python package for tabular data. It can handle: Binary Classification, MultiClass Classification and Regression. It provides explanations and markdown reports.evostra - A fast Evolution Strategy implementation in Python.Determined - Scalable deep learning training platform, including integrated support for distributed training, hyperparameter tuning, experiment tracking, and model management.PySyft - A Python library for secure and private Deep Learning built on PyTorch and TensorFlow.PyGrid - Peer-to-peer network of data owners and data scientists who can collectively train AI models using PySyftsktime - A unified framework for machine learning with time seriesOPFython - A Python-inspired implementation of the Optimum-Path Forest classifier.Opytimizer - Python-based meta-heuristic optimization techniques.Gradio - A Python library for quickly creating and sharing demos of models. Debug models interactively in your browser, get feedback from collaborators, and generate public links without deploying anything.Hub - Fastest unstructured dataset management for TensorFlow/PyTorch. Stream & version-control data. Store even petabyte-scale data in a single numpy-like array on the cloud accessible on any machine. Visit activeloop.ai for more info.Synthia - Multidimensional synthetic data generation in Python.ByteHub - An easy-to-use, Python-based feature store. Optimized for time-series data.Backprop - Backprop makes it simple to use, finetune, and deploy state-of-the-art ML models.River: A framework for general purpose online machine learning.FEDOT: An AutoML framework for the automated design of composite modelling pipelines. It can handle classification, regression, and time series forecasting tasks on different types of data (including multi-modal datasets).Sklearn-genetic-opt: An AutoML package for hyperparameters tuning using evolutionary algorithms, with built-in callbacks, plotting, remote logging and more.Evidently: Interactive reports to analyze machine learning models during validation or production monitoring.Streamlit: Streamlit is an framework to create beautiful data apps in hours, not weeks.Optuna: Optuna is an automatic hyperparameter optimization software framework, particularly designed for machine learning.Deepchecks: Validation & testing of machine learning models and data during model development, deployment, and production. This includes checks and suites related to various types of issues, such as model performance, data integrity, distribution mismatches, and more.Shapash : Shapash is a Python library that provides several types of visualization that display explicit labels that everyone can understand.Eurybia: Eurybia monitors data and model drift over time and securizes model deployment with data validation.Colossal-AI: An open-source deep learning system for large-scale model training and inference with high efficiency and low cost.dirty_cat - facilitates machine-learning on dirty, non-curated categories. It provides transformers and encoders robust to morphological variants, such as typos.Upgini: Free automated data & feature enrichment library for machine learning - automatically searches through thousands of ready-to-use features from public and community shared data sources and enriches your training dataset with only the accuracy improving features.AutoML-Implementation-for-Static-and-Dynamic-Data-Analytics: A tutorial to help machine learning researchers to automatically obtain optimized machine learning models with the optimal learning performance on any specific task.SKBEL: A Python library for Bayesian Evidential Learning (BEL) in order to estimate the uncertainty of a prediction.NannyML: Python library capable of fully capturing the impact of data drift on performance. Allows estimation of post-deployment model performance without access to targets.cleanlab: The standard data-centric AI package for data quality and machine learning with messy, real-world data and labels.AutoGluon: AutoML for Image, Text, Tabular, Time-Series, and MultiModal Data.PyBroker - Algorithmic Trading with Machine Learning.Frouros: Frouros is an open source Python library for drift detection in machine learning systems.Data Analysis / Data VisualizationDataVisualization - A GitHub Repository Where you can Learn Datavisualizatoin Basics to Intermediate level.Cartopy - Cartopy is a Python package designed for geospatial data processing in order to produce maps and other geospatial data analyses.SciPy - A Python-based ecosystem of open-source software for mathematics, science, and engineering.NumPy - A fundamental package for scientific computing with Python.AutoViz AutoViz performs automatic visualization of any dataset with a single line of Python code. Give it any input file (CSV, txt or JSON) of any size and AutoViz will visualize it. See Medium article.Numba - Python JIT (just in time) compiler to LLVM aimed at scientific Python by the developers of Cython and NumPy.Mars - A tensor-based framework for large-scale data computation which is often regarded as a parallel and distributed version of NumPy.NetworkX - A high-productivity software for complex networks.igraph - binding to igraph library - General purpose graph library.Pandas - A library providing high-performance, easy-to-use data structures and data analysis tools.ParaMonte - A general-purpose Python library for Bayesian data analysis and visualization via serial/parallel Monte Carlo and MCMC simulations. Documentation can be found here.Vaex - A high performance Python library for lazy Out-of-Core DataFrames (similar to Pandas), to visualize and explore big tabular datasets. Documentation can be found here.Open Mining - Business Intelligence (BI) in Python (Pandas web interface) [Deprecated]PyMC - Markov Chain Monte Carlo sampling toolkit.zipline - A Pythonic algorithmic trading library.PyDy - Short for Python Dynamics, used to assist with workflow in the modelling of dynamic motion based around NumPy, SciPy, IPython, and matplotlib.SymPy - A Python library for symbolic mathematics.statsmodels - Statistical modelling and econometrics in Python.astropy - A community Python library for Astronomy.matplotlib - A Python 2D plotting library.bokeh - Interactive Web Plotting for Python.plotly - Collaborative web plotting for Python and matplotlib.altair - A Python to Vega translator.d3py - A plotting library for Python, based on D3.js.PyDexter - Simple plotting for Python. Wrapper for D3xterjs; easily render charts in-browser.ggplot - Same API as ggplot2 for R. [Deprecated]ggfortify - Unified interface to ggplot2 popular R packages.Kartograph.py - Rendering beautiful SVG maps in Python.pygal - A Python SVG Charts Creator.PyQtGraph - A pure-python graphics and GUI library built on PyQt4 / PySide and NumPy.pycascading [Deprecated]Petrel - Tools for writing, submitting, debugging, and monitoring Storm topologies in pure Python.Blaze - NumPy and Pandas interface to Big Data.emcee - The Python ensemble sampling toolkit for affine-invariant MCMC.windML - A Python Framework for Wind Energy Analysis and Prediction.vispy - GPU-based high-performance interactive OpenGL 2D/3D data visualization library.cerebro2 A web-based visualization and debugging platform for NuPIC. [Deprecated]NuPIC Studio An all-in-one NuPIC Hierarchical Temporal Memory visualization and debugging super-tool! [Deprecated]SparklingPandas Pandas on PySpark (POPS).Seaborn - A python visualization library based on matplotlib.ipychart - The power of Chart.js in Jupyter Notebook.bqplot - An API for plotting in Jupyter (IPython).pastalog - Simple, realtime visualization of neural network training performance.Superset - A data exploration platform designed to be visual, intuitive, and interactive.Dora - Tools for exploratory data analysis in Python.Ruffus - Computation Pipeline library for python.SOMPY - Self Organizing Map written in Python (Uses neural networks for data analysis).somoclu Massively parallel self-organizing maps: accelerate training on multicore CPUs, GPUs, and clusters, has python API.HDBScan - implementation of the hdbscan algorithm in Python - used for clusteringvisualize_ML - A python package for data exploration and data analysis. [Deprecated]scikit-plot - A visualization library for quick and easy generation of common plots in data analysis and machine learning.Bowtie - A dashboard library for interactive visualizations using flask socketio and react.lime - Lime is about explaining what machine learning classifiers (or models) are doing. It is able to explain any black box classifier, with two or more classes.PyCM - PyCM is a multi-class confusion matrix library written in Python that supports both input data vectors and direct matrix, and a proper tool for post-classification model evaluation that supports most classes and overall statistics parametersDash - A framework for creating analytical web applications built on top of Plotly.js, React, and FlaskLambdo - A workflow engine for solving machine learning problems by combining in one analysis pipeline (i) feature engineering and machine learning (ii) model training and prediction (iii) table population and column evaluation via user-defined (Python) functions.TensorWatch - Debugging and visualization tool for machine learning and data science. It extensively leverages Jupyter Notebook to show real-time visualizations of data in running processes such as machine learning training.dowel - A little logger for machine learning research. Output any object to the terminal, CSV, TensorBoard, text logs on disk, and more with just one call to logger.log().Misc Scripts / iPython Notebooks / CodebasesMiniGrad – A minimal, educational, Pythonic implementation of autograd (~100 loc).Map/Reduce implementations of common ML algorithms: Jupyter notebooks that cover how to implement from scratch different ML algorithms (ordinary least squares, gradient descent, k-means, alternating least squares), using Python NumPy, and how to then make these implementations scalable using Map/Reduce and Spark.BioPy - Biologically-Inspired and Machine Learning Algorithms in Python. [Deprecated]CAEs for Data Assimilation - Convolutional autoencoders for 3D image/field compression applied to reduced order Data Assimilation.handsonml - Fundamentals of machine learning in python.SVM Explorer - Interactive SVM Explorer, using Dash and scikit-learnpattern_classificationthinking stats 2hyperoptnumpic2012-paper-diginormA gallery of interesting IPython notebooksipython-notebooksdata-science-ipython-notebooks - Continually updated Data Science Python Notebooks: Spark, Hadoop MapReduce, HDFS, AWS, Kaggle, scikit-learn, matplotlib, pandas, NumPy, SciPy, and various command lines.decision-weightsSarah Palin LDA - Topic Modelling the Sarah Palin emails.Diffusion Segmentation - A collection of image segmentation algorithms based on diffusion methods.Scipy Tutorials - SciPy tutorials. This is outdated, check out scipy-lecture-notes.Crab - A recommendation engine library for Python.BayesPy - Bayesian Inference Tools in Python.scikit-learn tutorials - Series of notebooks for learning scikit-learn.sentiment-analyzer - Tweets Sentiment Analyzersentiment_classifier - Sentiment classifier using word sense disambiguation.group-lasso - Some experiments with the coordinate descent algorithm used in the (Sparse) Group Lasso model.jProcessing - Kanji / Hiragana / Katakana to Romaji Converter. Edict Dictionary & parallel sentences Search. Sentence Similarity between two JP Sentences. Sentiment Analysis of Japanese Text. Run Cabocha(ISO--8859-1 configured) in Python.mne-python-notebooks - IPython notebooks for EEG/MEG data processing using mne-python.Neon Course - IPython notebooks for a complete course around understanding Nervana's Neon.pandas cookbook - Recipes for using Python's pandas library.climin - Optimization library focused on machine learning, pythonic implementations of gradient descent, LBFGS, rmsprop, adadelta and others.Allen Downey’s Data Science Course - Code for Data Science at Olin College, Spring 2014.Allen Downey’s Think Bayes Code - Code repository for Think Bayes.Allen Downey’s Think Complexity Code - Code for Allen Downey's book Think Complexity.Allen Downey’s Think OS Code - Text and supporting code for Think OS: A Brief Introduction to Operating Systems.Python Programming for the Humanities - Course for Python programming for the Humanities, assuming no prior knowledge. Heavy focus on text processing / NLP.GreatCircle - Library for calculating great circle distance.Optunity examples - Examples demonstrating how to use Optunity in synergy with machine learning libraries.Dive into Machine Learning  with Python Jupyter notebook and scikit-learn - \""I learned Python by hacking first, and getting serious later. I wanted to do this with Machine Learning. If this is your style, join me in getting a bit ahead of yourself.\""TDB - TensorDebugger (TDB) is a visual debugger for deep learning. It features interactive, node-by-node debugging and visualization for TensorFlow.Suiron - Machine Learning for RC Cars.Introduction to machine learning with scikit-learn - IPython notebooks from Data School's video tutorials on scikit-learn.Practical XGBoost in Python - comprehensive online course about using XGBoost in Python.Introduction to Machine Learning with Python - Notebooks and code for the book \""Introduction to Machine Learning with Python\""Pydata book - Materials and IPython notebooks for \""Python for Data Analysis\"" by Wes McKinney, published by O'Reilly MediaHomemade Machine Learning - Python examples of popular machine learning algorithms with interactive Jupyter demos and math being explainedProdmodel - Build tool for data science pipelines.the-elements-of-statistical-learning - This repository contains Jupyter notebooks implementing the algorithms found in the book and summary of the textbook.Hyperparameter-Optimization-of-Machine-Learning-Algorithms - Code for hyperparameter tuning/optimization of machine learning and deep learning algorithms.Heart_Disease-Prediction - Given clinical parameters about a patient, can we predict whether or not they have heart disease?Flight Fare Prediction - This basically to gauge the understanding of Machine Learning Workflow and Regression technique in specific.Keras Tuner - An easy-to-use, scalable hyperparameter optimization framework that solves the pain points of hyperparameter search.Neural Networksnn_builder - nn_builder is a python package that lets you build neural networks in 1 lineNeuralTalk - NeuralTalk is a Python+numpy project for learning Multimodal Recurrent Neural Networks that describe images with sentences.Neuron - Neuron is simple class for time series predictions. It's utilize LNU (Linear Neural Unit), QNU (Quadratic Neural Unit), RBF (Radial Basis Function), MLP (Multi Layer Perceptron), MLP-ELM (Multi Layer Perceptron - Extreme Learning Machine) neural networks learned with Gradient descent or LeLevenberg–Marquardt algorithm.NeuralTalk - NeuralTalk is a Python+numpy project for learning Multimodal Recurrent Neural Networks that describe images with sentences. [Deprecated]Neuron - Neuron is simple class for time series predictions. It's utilize LNU (Linear Neural Unit), QNU (Quadratic Neural Unit), RBF (Radial Basis Function), MLP (Multi Layer Perceptron), MLP-ELM (Multi Layer Perceptron - Extreme Learning Machine) neural networks learned with Gradient descent or LeLevenberg–Marquardt algorithm. [Deprecated]Data Driven Code - Very simple implementation of neural networks for dummies in python without using any libraries, with detailed comments.Machine Learning, Data Science and Deep Learning with Python - LiveVideo course that covers machine learning, Tensorflow, artificial intelligence, and neural networks.TResNet: High Performance GPU-Dedicated Architecture - TResNet models were designed and optimized to give the best speed-accuracy tradeoff out there on GPUs.TResNet: Simple and powerful neural network library for python - Variety of supported types of Artificial Neural Network and learning algorithms.Jina AI An easier way to build neural search in the cloud. Compatible with Jupyter Notebooks.sequitur PyTorch library for creating and training sequence autoencoders in just two lines of codeSpiking Neural NetworksRockpool - A machine learning library for spiking neural networks. Supports training with both torch and jax pipelines, and deployment to neuromorphic hardware.Sinabs - A deep learning library for spiking neural networks which is based on PyTorch, focuses on fast training and supports inference on neuromorphic hardware.Tonic - A library that makes downloading publicly available neuromorphic datasets a breeze and provides event-based data transformation/augmentation pipelines.Python Survival Analysislifelines - lifelines is a complete survival analysis library, written in pure PythonScikit-Survival - scikit-survival is a Python module for survival analysis built on top of scikit-learn. It allows doing survival analysis while utilizing the power of scikit-learn, e.g., for pre-processing or doing cross-validation.Federated LearningFlower - A unified approach to federated learning, analytics, and evaluation. Federate any workload, any ML framework, and any programming language.PySyft - A Python library for secure and private Deep Learning.Tensorflow-Federated A federated learning framework for machine learning and other computations on decentralized data.Kaggle Competition Source Codeopen-solution-home-credit -> source code and experiments results for Home Credit Default Risk.open-solution-googleai-object-detection -> source code and experiments results for Google AI Open Images - Object Detection Track.open-solution-salt-identification -> source code and experiments results for TGS Salt Identification Challenge.open-solution-ship-detection -> source code and experiments results for Airbus Ship Detection Challenge.open-solution-data-science-bowl-2018 -> source code and experiments results for 2018 Data Science Bowl.open-solution-value-prediction -> source code and experiments results for Santander Value Prediction Challenge.open-solution-toxic-comments -> source code for Toxic Comment Classification Challenge.wiki challenge - An implementation of Dell Zhang's solution to Wikipedia's Participation Challenge on Kaggle.kaggle insults - Kaggle Submission for \""Detecting Insults in Social Commentary\"".kaggle_acquire-valued-shoppers-challenge - Code for the Kaggle acquire valued shoppers challenge.kaggle-cifar - Code for the CIFAR-10 competition at Kaggle, uses cuda-convnet.kaggle-blackbox - Deep learning made easy.kaggle-accelerometer - Code for Accelerometer Biometric Competition at Kaggle.kaggle-advertised-salaries - Predicting job salaries from ads - a Kaggle competition.kaggle amazon - Amazon access control challenge.kaggle-bestbuy_big - Code for the Best Buy competition at Kaggle.kaggle-bestbuy_smallKaggle Dogs vs. Cats - Code for Kaggle Dogs vs. Cats competition.Kaggle Galaxy Challenge - Winning solution for the Galaxy Challenge on Kaggle.Kaggle Gender - A Kaggle competition: discriminate gender based on handwriting.Kaggle Merck - Merck challenge at Kaggle.Kaggle Stackoverflow - Predicting closed questions on Stack Overflow.kaggle_acquire-valued-shoppers-challenge - Code for the Kaggle acquire valued shoppers challenge.wine-quality - Predicting wine quality.Reinforcement LearningDeepMind Lab - DeepMind Lab is a 3D learning environment based on id Software's Quake III Arena via ioquake3 and other open source software. Its primary purpose is to act as a testbed for research in artificial intelligence, especially deep reinforcement learning.Gym - OpenAI Gym is a toolkit for developing and comparing reinforcement learning algorithms.Serpent.AI - Serpent.AI is a game agent framework that allows you to turn any video game you own into a sandbox to develop AI and machine learning experiments. For both researchers and hobbyists.ViZDoom - ViZDoom allows developing AI bots that play Doom using only the visual information (the screen buffer). It is primarily intended for research in machine visual learning, and deep reinforcement learning, in particular.Roboschool - Open-source software for robot simulation, integrated with OpenAI Gym.Retro - Retro Games in GymSLM Lab - Modular Deep Reinforcement Learning framework in PyTorch.Coach - Reinforcement Learning Coach by Intel® AI Lab enables easy experimentation with state of the art Reinforcement Learning algorithmsgarage - A toolkit for reproducible reinforcement learning researchmetaworld - An open source robotics benchmark for meta- and multi-task reinforcement learningacme - An Open Source Distributed Framework for Reinforcement Learning that makes build and train your agents easily.Spinning Up - An educational resource designed to let anyone learn to become a skilled practitioner in deep reinforcement learningMaze - Application-oriented deep reinforcement learning framework addressing real-world decision problems.RLlib - RLlib is an industry level, highly scalable RL library for tf and torch, based on Ray. It's used by companies like Amazon and Microsoft to solve real-world decision making problems at scale.DI-engine - DI-engine is a generalized Decision Intelligence engine. It supports most basic deep reinforcement learning (DRL) algorithms, such as DQN, PPO, SAC, and domain-specific algorithms like QMIX in multi-agent RL, GAIL in inverse RL, and RND in exploration problems.RubyNatural Language ProcessingAwesome NLP with Ruby - Curated link list for practical natural language processing in Ruby.Treat - Text Retrieval and Annotation Toolkit, definitely the most comprehensive toolkit I’ve encountered so far for Ruby.Stemmer - Expose libstemmer_c to Ruby. [Deprecated]Raspell - raspell is an interface binding for ruby. [Deprecated]UEA Stemmer - Ruby port of UEALite Stemmer - a conservative stemmer for search and indexing.Twitter-text-rb - A library that does auto linking and extraction of usernames, lists and hashtags in tweets.General-Purpose Machine LearningAwesome Machine Learning with Ruby - Curated list of ML related resources for Ruby.Ruby Machine Learning - Some Machine Learning algorithms, implemented in Ruby. [Deprecated]Machine Learning Ruby [Deprecated]jRuby Mahout - JRuby Mahout is a gem that unleashes the power of Apache Mahout in the world of JRuby. [Deprecated]CardMagic-Classifier - A general classifier module to allow Bayesian and other types of classifications.rb-libsvm - Ruby language bindings for LIBSVM which is a Library for Support Vector Machines.Scoruby - Creates Random Forest classifiers from PMML files.rumale - Rumale is a machine learning library in RubyData Analysis / Data Visualizationrsruby - Ruby - R bridge.data-visualization-ruby - Source code and supporting content for my Ruby Manor presentation on Data Visualisation with Ruby. [Deprecated]ruby-plot - gnuplot wrapper for Ruby, especially for plotting ROC curves into SVG files. [Deprecated]plot-rb - A plotting library in Ruby built on top of Vega and D3. [Deprecated]scruffy - A beautiful graphing toolkit for Ruby.SciRubyGlean - A data management tool for humans. [Deprecated]BiorubyArel [Deprecated]MiscBig Data For ChimpsListof - Community based data collection, packed in gem. Get list of pretty much anything (stop words, countries, non words) in txt, JSON or hash. Demo/Search for a listRustGeneral-Purpose Machine Learningsmartcore - \""The Most Advanced Machine Learning Library In Rust.\""linfa - a comprehensive toolkit to build Machine Learning applications with Rustdeeplearn-rs - deeplearn-rs provides simple networks that use matrix multiplication, addition, and ReLU under the MIT license.rustlearn - a machine learning framework featuring logistic regression, support vector machines, decision trees and random forests.rusty-machine - a pure-rust machine learning library.leaf - open source framework for machine intelligence, sharing concepts from TensorFlow and Caffe. Available under the MIT license. [Deprecated]RustNN - RustNN is a feedforward neural network library. [Deprecated]RusticSOM - A Rust library for Self Organising Maps (SOM).RGeneral-Purpose Machine Learningahaz - ahaz: Regularization for semiparametric additive hazards regression. [Deprecated]arules - arules: Mining Association Rules and Frequent Itemsetsbiglasso - biglasso: Extending Lasso Model Fitting to Big Data in R.bmrm - bmrm: Bundle Methods for Regularized Risk Minimization Package.Boruta - Boruta: A wrapper algorithm for all-relevant feature selection.bst - bst: Gradient Boosting.C50 - C50: C5.0 Decision Trees and Rule-Based Models.caret - Classification and Regression Training: Unified interface to ~150 ML algorithms in R.caretEnsemble - caretEnsemble: Framework for fitting multiple caret models as well as creating ensembles of such models. [Deprecated]CatBoost - General purpose gradient boosting on decision trees library with categorical features support out of the box for R.Clever Algorithms For Machine LearningCORElearn - CORElearn: Classification, regression, feature evaluation and ordinal evaluation.-* CoxBoost - CoxBoost: Cox models by likelihood based boosting for a single survival endpoint or competing risks [Deprecated]Cubist - Cubist: Rule- and Instance-Based Regression Modelling.e1071 - e1071: Misc Functions of the Department of Statistics (e1071), TU Wienearth - earth: Multivariate Adaptive Regression Spline Modelselasticnet - elasticnet: Elastic-Net for Sparse Estimation and Sparse PCA.ElemStatLearn - ElemStatLearn: Data sets, functions and examples from the book: \""The Elements of Statistical Learning, Data Mining, Inference, and Prediction\"" by Trevor Hastie, Robert Tibshirani and Jerome Friedman Prediction\"" by Trevor Hastie, Robert Tibshirani and Jerome Friedman.evtree - evtree: Evolutionary Learning of Globally Optimal Trees.forecast - forecast: Timeseries forecasting using ARIMA, ETS, STLM, TBATS, and neural network models.forecastHybrid - forecastHybrid: Automatic ensemble and cross validation of ARIMA, ETS, STLM, TBATS, and neural network models from the \""forecast\"" package.fpc - fpc: Flexible procedures for clustering.frbs - frbs: Fuzzy Rule-based Systems for Classification and Regression Tasks. [Deprecated]GAMBoost - GAMBoost: Generalized linear and additive models by likelihood based boosting. [Deprecated]gamboostLSS - gamboostLSS: Boosting Methods for GAMLSS.gbm - gbm: Generalized Boosted Regression Models.glmnet - glmnet: Lasso and elastic-net regularized generalized linear models.glmpath - glmpath: L1 Regularization Path for Generalized Linear Models and Cox Proportional Hazards Model.GMMBoost - GMMBoost: Likelihood-based Boosting for Generalized mixed models. [Deprecated]grplasso - grplasso: Fitting user specified models with Group Lasso penalty.grpreg - grpreg: Regularization paths for regression models with grouped covariates.h2o - A framework for fast, parallel, and distributed machine learning algorithms at scale -- Deeplearning, Random forests, GBM, KMeans, PCA, GLM.hda - hda: Heteroscedastic Discriminant Analysis. [Deprecated]Introduction to Statistical Learningipred - ipred: Improved Predictors.kernlab - kernlab: Kernel-based Machine Learning Lab.klaR - klaR: Classification and visualization.L0Learn - L0Learn: Fast algorithms for best subset selection.lars - lars: Least Angle Regression, Lasso and Forward Stagewise. [Deprecated]lasso2 - lasso2: L1 constrained estimation aka ‘lasso’.LiblineaR - LiblineaR: Linear Predictive Models Based On The Liblinear C/C++ Library.LogicReg - LogicReg: Logic Regression.Machine Learning For Hackersmaptree - maptree: Mapping, pruning, and graphing tree models. [Deprecated]mboost - mboost: Model-Based Boosting.medley - medley: Blending regression models, using a greedy stepwise approach.mlr - mlr: Machine Learning in R.ncvreg - ncvreg: Regularization paths for SCAD- and MCP-penalized regression models.nnet - nnet: Feed-forward Neural Networks and Multinomial Log-Linear Models. [Deprecated]pamr - pamr: Pam: prediction analysis for microarrays. [Deprecated]party - party: A Laboratory for Recursive Partitioningpartykit - partykit: A Toolkit for Recursive Partitioning.penalized - penalized: L1 (lasso and fused lasso) and L2 (ridge) penalized estimation in GLMs and in the Cox model.penalizedLDA - penalizedLDA: Penalized classification using Fisher's linear discriminant. [Deprecated]penalizedSVM - penalizedSVM: Feature Selection SVM using penalty functions.quantregForest - quantregForest: Quantile Regression Forests.randomForest - randomForest: Breiman and Cutler's random forests for classification and regression.randomForestSRC - randomForestSRC: Random Forests for Survival, Regression and Classification (RF-SRC).rattle - rattle: Graphical user interface for data mining in R.rda - rda: Shrunken Centroids Regularized Discriminant Analysis.rdetools - rdetools: Relevant Dimension Estimation (RDE) in Feature Spaces. [Deprecated]REEMtree - REEMtree: Regression Trees with Random Effects for Longitudinal (Panel) Data. [Deprecated]relaxo - relaxo: Relaxed Lasso. [Deprecated]rgenoud - rgenoud: R version of GENetic Optimization Using DerivativesRmalschains - Rmalschains: Continuous Optimization using Memetic Algorithms with Local Search Chains (MA-LS-Chains) in R.rminer - rminer: Simpler use of data mining methods (e.g. NN and SVM) in classification and regression. [Deprecated]ROCR - ROCR: Visualizing the performance of scoring classifiers. [Deprecated]RoughSets - RoughSets: Data Analysis Using Rough Set and Fuzzy Rough Set Theories. [Deprecated]rpart - rpart: Recursive Partitioning and Regression Trees.RPMM - RPMM: Recursively Partitioned Mixture Model.RSNNS - RSNNS: Neural Networks in R using the Stuttgart Neural Network Simulator (SNNS).RWeka - RWeka: R/Weka interface.RXshrink - RXshrink: Maximum Likelihood Shrinkage via Generalized Ridge or Least Angle Regression.sda - sda: Shrinkage Discriminant Analysis and CAT Score Variable Selection. [Deprecated]spectralGraphTopology - spectralGraphTopology: Learning Graphs from Data via Spectral Constraints.SuperLearner - Multi-algorithm ensemble learning packages.svmpath - svmpath: svmpath: the SVM Path algorithm. [Deprecated]tgp - tgp: Bayesian treed Gaussian process models. [Deprecated]tree - tree: Classification and regression trees.varSelRF - varSelRF: Variable selection using random forests.XGBoost.R - R binding for eXtreme Gradient Boosting (Tree) Library.Optunity - A library dedicated to automated hyperparameter optimization with a simple, lightweight API to facilitate drop-in replacement of grid search. Optunity is written in Python but interfaces seamlessly to R.igraph - binding to igraph library - General purpose graph library.MXNet - Lightweight, Portable, Flexible Distributed/Mobile Deep Learning with Dynamic, Mutation-aware Dataflow Dep Scheduler; for Python, R, Julia, Go, JavaScript and more.TDSP-Utilities - Two data science utilities in R from Microsoft: 1) Interactive Data Exploration, Analysis, and Reporting (IDEAR) ; 2) Automated Modelling and Reporting (AMR).Data Manipulation | Data Analysis | Data Visualizationdplyr - A data manipulation package that helps to solve the most common data manipulation problems.ggplot2 - A data visualization package based on the grammar of graphics.tmap for visualizing geospatial data with static maps and leaflet for interactive mapstm and quanteda are the main packages for managing,  analyzing, and visualizing textual data.shiny is the basis for truly interactive displays and dashboards in R. However, some measure of interactivity can be achieved with htmlwidgets bringing javascript libraries to R. These include, plotly, dygraphs, highcharter, and several others.SASGeneral-Purpose Machine LearningVisual Data Mining and Machine Learning - Interactive, automated, and programmatic modelling with the latest machine learning algorithms in and end-to-end analytics environment, from data prep to deployment. Free trial available.Enterprise Miner - Data mining and machine learning that creates deployable models using a GUI or code.Factory Miner - Automatically creates deployable machine learning models across numerous market or customer segments using a GUI.Data Analysis / Data VisualizationSAS/STAT - For conducting advanced statistical analysis.University Edition - FREE! Includes all SAS packages necessary for data analysis and visualization, and includes online SAS courses.Natural Language ProcessingContextual Analysis - Add structure to unstructured text using a GUI.Sentiment Analysis - Extract sentiment from text using a GUI.Text Miner - Text mining using a GUI or code.Demos and ScriptsML_Tables - Concise cheat sheets containing machine learning best practices.enlighten-apply - Example code and materials that illustrate applications of SAS machine learning techniques.enlighten-integration - Example code and materials that illustrate techniques for integrating SAS with other analytics technologies in Java, PMML, Python and R.enlighten-deep - Example code and materials that illustrate using neural networks with several hidden layers in SAS.dm-flow - Library of SAS Enterprise Miner process flow diagrams to help you learn by example about specific data mining topics.ScalaNatural Language ProcessingScalaNLP - ScalaNLP is a suite of machine learning and numerical computing libraries.Breeze - Breeze is a numerical processing library for Scala.Chalk - Chalk is a natural language processing library. [Deprecated]FACTORIE - FACTORIE is a toolkit for deployable probabilistic modelling, implemented as a software library in Scala. It provides its users with a succinct language for creating relational factor graphs, estimating parameters and performing inference.Montague - Montague is a semantic parsing library for Scala with an easy-to-use DSL.Spark NLP - Natural language processing library built on top of Apache Spark ML to provide simple, performant, and accurate NLP annotations for machine learning pipelines, that scale easily in a distributed environment.Data Analysis / Data VisualizationNDScala - N-dimensional arrays in Scala 3. Think NumPy ndarray, but with compile-time type-checking/inference over shapes, tensor/axis labels & numeric data typesMLlib in Apache Spark - Distributed machine learning library in SparkHydrosphere Mist - a service for deployment Apache Spark MLLib machine learning models as realtime, batch or reactive web services.Scalding - A Scala API for Cascading.Summing Bird - Streaming MapReduce with Scalding and Storm.Algebird - Abstract Algebra for Scala.xerial - Data management utilities for Scala. [Deprecated]PredictionIO - PredictionIO, a machine learning server for software developers and data engineers.BIDMat - CPU and GPU-accelerated matrix library intended to support large-scale exploratory data analysis.Flink - Open source platform for distributed stream and batch data processing.Spark Notebook - Interactive and Reactive Data Science using Scala and Spark.General-Purpose Machine LearningMicrosoft ML for Apache Spark -> A distributed machine learning framework Apache SparkONNX-Scala - An ONNX (Open Neural Network eXchange) API and backend for typeful, functional deep learning in Scala (3).DeepLearning.scala - Creating statically typed dynamic neural networks from object-oriented & functional programming constructs.Conjecture - Scalable Machine Learning in Scalding.brushfire - Distributed decision tree ensemble learning in Scala.ganitha - Scalding powered machine learning. [Deprecated]adam - A genomics processing engine and specialized file format built using Apache Avro, Apache Spark and Parquet. Apache 2 licensed.bioscala - Bioinformatics for the Scala programming languageBIDMach - CPU and GPU-accelerated Machine Learning Library.Figaro - a Scala library for constructing probabilistic models.H2O Sparkling Water - H2O and Spark interoperability.FlinkML in Apache Flink - Distributed machine learning library in Flink.DynaML - Scala Library/REPL for Machine Learning Research.Saul - Flexible Declarative Learning-Based Programming.SwiftLearner - Simply written algorithms to help study ML or write your own implementations.Smile - Statistical Machine Intelligence and Learning Engine.doddle-model - An in-memory machine learning library built on top of Breeze. It provides immutable objects and exposes its functionality through a scikit-learn-like API.TensorFlow Scala -   Strongly-typed Scala API for TensorFlow.SchemeNeural Networkslayer - Neural network inference from the command line, implemented in CHICKEN Scheme.SwiftGeneral-Purpose Machine LearningBender - Fast Neural Networks framework built on top of Metal. Supports TensorFlow models.Swift AI - Highly optimized artificial intelligence and machine learning library written in Swift.Swift for Tensorflow - a next-generation platform for machine learning, incorporating the latest research across machine learning, compilers, differentiable programming, systems design, and beyond.BrainCore - The iOS and OS X neural network framework.swix - A bare bones library that includes a general matrix language and wraps some OpenCV for iOS development. [Deprecated]AIToolbox - A toolbox framework of AI modules written in Swift: Graphs/Trees, Linear Regression, Support Vector Machines, Neural Networks, PCA, KMeans, Genetic Algorithms, MDP, Mixture of Gaussians.MLKit - A simple Machine Learning Framework written in Swift. Currently features Simple Linear Regression, Polynomial Regression, and Ridge Regression.Swift Brain - The first neural network / machine learning library written in Swift. This is a project for AI algorithms in Swift for iOS and OS X development. This project includes algorithms focused on Bayes theorem, neural networks, SVMs, Matrices, etc...Perfect TensorFlow - Swift Language Bindings of TensorFlow. Using native TensorFlow models on both macOS / Linux.PredictionBuilder - A library for machine learning that builds predictions using a linear regression.Awesome CoreML - A curated list of pretrained CoreML models.Awesome Core ML Models - A curated list of machine learning models in CoreML format.TensorFlowGeneral-Purpose Machine LearningAwesome Keras - A curated list of awesome Keras projects, libraries and resources.Awesome TensorFlow - A list of all things related to TensorFlow.Golden TensorFlow - A page of content on TensorFlow, including academic papers and links to related topics.ToolsNeural Networkslayer - Neural network inference from the command lineMiscSynthical - AI-powered collaborative research environment. You can use it to get recommendations of articles based on reading history, simplify papers, find out what articles are trending, search articles by meaning (not just keywords), create and share folders of articles, see lists of articles from specific companies and universities, and add highlights.Humanloop – Humanloop is a platform for prompt experimentation, finetuning models for better performance, cost optimization, and collecting model generated data and user feedback.Qdrant – Qdrant is open source vector similarity search engine with extended filtering support, written in Rust.milvus – Milvus is open source vector database for production AI, written in Go and C++, scalable and blazing fast for billions of embedding vectors.Weaviate – Weaviate is an open source vector search engine and vector database. Weaviate uses machine learning to vectorize and store data, and to find answers to natural language queries. With Weaviate you can also bring your custom ML models to production scale.txtai - Build semantic search applications and workflows.MLReef - MLReef is an end-to-end development platform using the power of git to give structure and deep collaboration possibilities to the ML development process.Pinecone - Vector database for applications that require real-time, scalable vector embedding and similarity search.CatalyzeX - Browser extension (Chrome and Firefox) that automatically finds and shows code implementations for machine learning papers anywhere: Google, Twitter, Arxiv, Scholar, etc.ML Workspace - All-in-one web-based IDE for machine learning and data science. The workspace is deployed as a docker container and is preloaded with a variety of popular data science libraries (e.g., Tensorflow, PyTorch) and dev tools (e.g., Jupyter, VS Code).Notebooks - A starter kit for Jupyter notebooks and machine learning. Companion docker images consist of all combinations of python versions, machine learning frameworks (Keras, PyTorch and Tensorflow) and CPU/CUDA versions.DVC - Data Science Version Control is an open-source version control system for machine learning projects with pipelines support. It makes ML projects reproducible and shareable.DVClive - Python library for experiment metrics logging into simply formatted local files.VDP - open source visual data ETL to streamline the end-to-end visual data processing pipeline: extract unstructured visual data from pre-built data sources, transform it into analysable structured insights by Vision AI models imported from various ML platforms, and load the insights into warehouses or applications.Kedro - Kedro is a data and development workflow framework that implements best practices for data pipelines with an eye towards productionizing machine learning models.guild.ai - Tool to log, analyze, compare and \""optimize\"" experiments. It's cross-platform and framework independent, and provided integrated visualizers such as tensorboard.Sacred - Python tool to help  you configure, organize, log and reproduce experiments. Like a notebook lab in the context of Chemistry/Biology. The community has built multiple add-ons leveraging the proposed standard.Comet -  ML platform for tracking experiments, hyper-parameters, artifacts and more. It's deeply integrated with over 15+ deep learning frameworks and orchestration tools. Users can also use the platform to monitor their models in production.MLFlow - platform to manage the ML lifecycle, including experimentation, reproducibility and deployment. Framework and language agnostic, take a look at all the built-in integrations.Weights & Biases - Machine learning experiment tracking, dataset versioning, hyperparameter search, visualization, and collaborationMore tools to improve the ML lifecycle: Catalyst, PachydermIO. The following are GitHub-alike and targeting teams Weights & Biases, Neptune.ai, Comet.ml, Valohai.ai, DAGsHub.Arize AI - Model validaiton and performance monitoring, drift detection, explainability, visualization across structured and unstructured dataMachineLearningWithTensorFlow2ed - a book on general purpose machine learning techniques regression, classification, unsupervised clustering, reinforcement learning, auto encoders, convolutional neural networks, RNNs, LSTMs, using TensorFlow 1.14.1.m2cgen - A tool that allows the conversion of ML models into native code (Java, C, Python, Go, JavaScript, Visual Basic, C#, R, PowerShell, PHP, Dart) with zero dependencies.CML - A library for doing continuous integration with ML projects. Use GitHub Actions & GitLab CI to train and evaluate models in production like environments and automatically generate visual reports with metrics and graphs in pull/merge requests. Framework & language agnostic.Pythonizr - An online tool to generate boilerplate machine learning code that uses scikit-learn.Flyte - Flyte makes it easy to create concurrent, scalable, and maintainable workflows for machine learning and data processing.Chaos Genius - ML powered analytics engine for outlier/anomaly detection and root cause analysis.MLEM - Version and deploy your ML models following GitOps principlesDockerDL - Ready to use deeplearning docker images.Aqueduct - Aqueduct enables you to easily define, run, and manage AI & ML tasks on any cloud infrastructure.Ambrosia - Ambrosia helps you clean up your LLM datasets using other LLMs.BooksDistributed Machine Learning Patterns  - This book teaches you how to take machine learning models from your personal laptop to large distributed clusters. You’ll explore key concepts and patterns behind successful distributed machine learning systems, and learn technologies like TensorFlow, Kubernetes, Kubeflow, and Argo Workflows directly from a key maintainer and contributor, with real-world scenarios and hands-on projects.Grokking Machine Learning - Grokking Machine Learning teaches you how to apply ML to your projects using only standard Python code and high school-level math.Machine Learning Bookcamp - Learn the essentials of machine learning by completing a carefully designed set of real-world projects.Hands-On Machine Learning with Scikit-Learn, Keras, and TensorFlow - Through a recent series of breakthroughs, deep learning has boosted the entire field of machine learning. Now, even programmers who know close to nothing about this technology can use simple, efficient tools to implement programs capable of learning from data. This bestselling book uses concrete examples, minimal theory, and production-ready Python frameworks (Scikit-Learn, Keras, and TensorFlow) to help you gain an intuitive understanding of the concepts and tools for building intelligent systems.Netron - An opensource viewer for neural network, deep learning and machine learning modelsTeachable Machine - Train Machine Learning models on the fly to recognize your own images, sounds, & poses.Model Zoo - Discover open source deep learning code and pretrained models.CreditsSome of the python libraries were cut-and-pasted from vintaReferences for Go were mostly cut-and-pasted from gopherdata"
49,49,geekcomputers/Python,https://github.com/geekcomputers/Python/blob/master/README.md,Python,"My Python Eggs 🐍 😄I do not consider myself as a programmer. I create these little programs as experiments to play with Python, or to solve problems for myself. I would gladly accept pointers from others to improve, simplify, or make the code more efficient. If you would like to make any comments then please feel free to email me: craig@geekcomputers.co.uk.This repository contains a collection of Python scripts that are designed to reduce human workload and serve as educational examples for beginners to get started with Python. The code documentation is aligned correctly for viewing in Notepad++ 🗒️Feel free to explore the scripts and use them for your learning and automation needs!List of Scripts:batch_file_rename.py - Batch rename a group of files in a specified directory, changing their extensions.create_dir_if_not_there.py - Check if a directory exists in the user's home directory. Create it if it doesn't exist.Fast Youtube Downloader - Download YouTube videos quickly with parallel threads using aria2c.Google Image Downloader - Query a given term and retrieve images from the Google Image database.dir_test.py - Test if the directory testdir exists. If not, create it.env_check.py - Check if all the required environment variables are set.blackjack.py - Casino Blackjack-21 game in Python.fileinfo.py - Show file information for a given file.folder_size.py - Scan the current directory and all subdirectories and display their sizes.logs.py - Search for all *.log files in a directory, zip them using the specified program, and date stamp them.move_files_over_x_days.py - Move all files over a specified age (in days) from the source directory to the destination directory.nslookup_check.py - Open the file server_list.txt and perform nslookup for each server to check the DNS entry.osinfo.py - Display information about the operating system on which the script is running.ping_servers.py - Ping the servers associated with the specified application group.ping_subnet.py - Scan the final range of a given IP subnet for available addresses.powerdown_startup.py - Ping machines in the server list. Load the putty session if the machine is up, or notify if it is not.puttylogs.py - Zip all the logs in the given directory.script_count.py - Scan the scripts directory and count the different types of scripts.get_youtube_view.py - Get more views for YouTube videos and repeat songs on YouTube.script_listing.py - List all files in a given directory and its subdirectories.testlines.py - Open a file and print out 100 lines of the set line variable.tweeter.py - Tweet text or a picture from the terminal.serial_scanner.py - List available serial ports in use on Linux and Windows systems.get_youtube_view.py - Get more views for YouTube videos and repeat songs on YouTube.CountMillionCharacter.py and CountMillionCharacter2.0 - Get character count of a text file.xkcd_downloader.py - Download the latest XKCD comic and place them in a new folder called \""comics\"".timymodule.py - An alternative to Python's 'timeit' module and easier to use.calculator.py - Implement a calculator using Python's eval() function.Google_News.py - Use BeautifulSoup to provide latest news headlines along with news links.cricket_live_score - Use BeautifulSoup to provide live cricket scores.youtube.py - Take a song name as input and fetch the YouTube URL of the best matching song and play it.site_health.py - Check the health of a remote server.SimpleStopWatch.py - Simple stop watch implementation using Python's time module.Changemac.py - Change your MAC address, generate a random MAC address, or enter input as a new MAC address on Linux (Successfully Tested in Ubuntu 18.04).whatsapp-monitor.py - Use Selenium to give online status updates about your contacts in WhatsApp on the terminal.whatsapp-chat-analyzer.py - WhatsApp group/individual chat analyzer that visualizes chat activity using matplotlib.JARVIS.py - Control Windows programs with your voice.Images Downloader - Download images from webpages on Unix-based systems.space_invader.py.py - Classical 2D space invader game to recall your childhood memories.Test Case Generator - Generate different types of test cases with a clean and friendly UI, used in competitive programming and software testing.Note: The content in this repository belongs to the respective authors and creators. I'm just providing a formatted README.md for better presentation."
50,50,donnemartin/system-design-primer,https://github.com/donnemartin/system-design-primer/blob/master/README-ja.md,Python,"English ∙ 日本語 ∙ 简体中文 ∙ 繁體中文 | العَرَبِيَّة‎ ∙ বাংলা ∙ Português do Brasil ∙ Deutsch ∙ ελληνικά ∙ עברית ∙ Italiano ∙ 한국어 ∙ فارسی ∙ Polski ∙ русский язык ∙ Español ∙ ภาษาไทย ∙ Türkçe ∙ tiếng Việt ∙ Français | Add Translationシステム設計入門    動機・目的大規模システムのシステム設計を学ぶシステム設計面接課題に備える大規模システムの設計を学ぶスケーラブルなシステムのシステム設計を学ぶことは、より良いエンジニアになることに資するでしょう。システム設計はとても広範なトピックを含みます。システム設計原理については インターネット上には膨大な量の文献が散らばっています。このリポジトリは大規模システム構築に必要な知識を学ぶことができる 文献リストを体系的にまとめたもの です。オープンソースコミュニティから学ぶこのプロジェクトは、これからもずっと更新されていくオープンソースプロジェクトの初期段階にすぎません。Contributions は大歓迎です！システム設計面接課題に備えるコード技術面接に加えて、システム設計に関する知識は、多くのテック企業における 技術採用面接プロセス で 必要不可欠な要素 です。システム設計面接での頻出質問に備え、自分の解答と模範解答:ディスカッション、コードそして図表などを比較して学びましょう。面接準備に役立つその他のトピック:学習指針システム設計面接課題にどのように準備するかシステム設計課題例 とその解答オブジェクト指向設計課題例、 とその解答その他のシステム設計面接課題例暗記カード    このAnki用フラッシュカードデッキ は、間隔反復を活用して、システム設計のキーコンセプトの学習を支援します。システム設計デッキシステム設計練習課題デッキオブジェクト指向練習課題デッキ外出先や移動中の勉強に役立つでしょう。コーディング技術課題用の問題: 練習用インタラクティブアプリケーションコード技術面接用の問題を探している場合はこちら    姉妹リポジトリの Interactive Coding Challengesも見てみてください。追加の暗記デッキカードも入っています。Coding deckコントリビュートコミュニティから学ぶプルリクエスト等の貢献は積極的にお願いします:エラー修正セクション内容改善新規セクション追加翻訳する現在、内容の改善が必要な作業中のコンテンツはこちらです。コントリビュートの前にContributing Guidelinesを読みましょう。システム設計目次賛否も含めた様々なシステム設計の各トピックの概要。 全てはトレードオフの関係にあります。それぞれのセクションはより学びを深めるような他の文献へのリンクが貼られています。    システム設計トピック: まずはここからStep 1: スケーラビリティに関する動画を見るStep 2: スケーラビリティに関する記事を読む次のステップパフォーマンス vs スケーラビリティレイテンシー vs スループット可用性 vs 一貫性CAP理論CP - 一貫性(consistency)と分割性(partition)耐性AP - 可用性(availability)と分割性(partition)耐性一貫性 パターン弱い一貫性結果整合性強い一貫性可用性 パターンフェイルオーバーレプリケーションドメインネームシステム(DNS)コンテンツデリバリーネットワーク(CDN)プッシュCDNプルCDNロードバランサーアクティブ/パッシブ構成アクティブ/アクティブ構成Layer 4 ロードバランシングLayer 7 ロードバランシング水平スケーリングリバースプロキシ (WEBサーバー)ロードバランサー vs リバースプロキシアプリケーションレイヤーマイクロサービスサービスディスカバリーデータベースリレーショナルデータベースマネジメントシステム (RDBMS)マスター/スレーブ レプリケーションマスター/マスター レプリケーションフェデレーションシャーディングデノーマライゼーションSQL チューニングNoSQLキー/バリューストアドキュメントストアワイドカラムストアグラフ データベースSQL or NoSQLキャッシュクライアントキャッシングCDNキャッシングWebサーバーキャッシングデータベースキャッシングアプリケーションキャッシングデータベースクエリレベルでキャッシングするオブジェクトレベルでキャッシングするいつキャッシュを更新するのかキャッシュアサイドライトスルーライトビハインド (ライトバック)リフレッシュアヘッド非同期処理メッセージキュータスクキューバックプレッシャー通信伝送制御プロトコル (TCP)ユーザデータグラムプロトコル (UDP)遠隔手続呼出 (RPC)Representational state transfer (REST)セキュリティ補遺2の乗数表全てのプログラマーが知るべきレイテンシー値他のシステム設計面接例題実世界でのアーキテクチャ各企業のアーキテクチャ企業のエンジニアブログ作業中クレジット連絡情報ライセンス学習指針学習スパンに応じてみるべきトピックス (short, medium, long)Q: 面接のためには、ここにあるものすべてをやらないといけないのでしょうか？A: いえ、ここにあるすべてをやる必要はありません。面接で何を聞かれるかは以下の条件によって変わってきます:どれだけの技術経験があるかあなたの技術背景が何であるかどのポジションのために面接を受けているかどの企業の面接を受けているか運より経験のある候補者は一般的にシステム設計についてより深い知識を有していることを要求されるでしょう。システムアーキテクトやチームリーダーは各メンバーの持つような知識よりは深い見識を持っているべきでしょう。一流テック企業では複数回の設計面接を課されることが多いです。まずは広く始めて、そこからいくつかの分野に絞って深めていくのがいいでしょう。様々なシステム設計のトピックについて少しずつ知っておくことはいいことです。以下の学習ガイドを自分の学習に当てられる時間、技術経験、どの職位、どの会社に応募しているかなどを加味して自分用に調整して使うといいでしょう。短期間 - 幅広く システム設計トピックを学ぶ。いくつかの 面接課題を解くことで対策する。中期間 - 幅広く そして それなりに深くシステム設計トピックを学ぶ。多くの 面接課題を解くことで対策する。長期間 - 幅広く そして もっと深くシステム設計トピックを学ぶ。ほぼ全ての 面接課題を解くことで対策する。短期間中期間長期間システム設計トピック を読み、システム動作機序について広く知る👍👍👍次のリンク先のいくつかのページを読んで 各企業のエンジニアリングブログ 応募する会社について知る👍👍👍次のリンク先のいくつかのページを読む 実世界でのアーキテクチャ👍👍👍復習する システム設計面接課題にどのように準備するか👍👍👍とりあえず一周する システム設計課題例SomeManyMostとりあえず一周する オブジェクト指向設計問題と解答SomeManyMost復習する その他システム設計面接での質問例SomeManyMostシステム設計面接にどのようにして臨めばいいかシステム設計面接試験問題にどのように取り組むかシステム設計面接は open-ended conversation(Yes/Noでは答えられない口頭質問)です。 自分で会話を組み立てることを求められます。以下のステップに従って議論を組み立てることができるでしょう。この過程を確かなものにするために、次のセクションシステム設計課題例とその解答 を以下の指針に従って読み込むといいでしょう。ステップ 1: そのシステム使用例の概要、制約、推計値等を聞き出し、まとめるシステム仕様の要求事項を聞き出し、問題箇所を特定しましょう。使用例と制約を明確にするための質問を投げかけましょう。要求する推計値についても議論しておきましょう。誰がそのサービスを使うのか？どのように使うのか？何人のユーザーがいるのか？システムはどのような機能を果たすのか？システムへの入力と出力は？どれだけの容量のデータを捌く必要があるのか？一秒間に何リクエストの送信が想定されるか？読み書き比率の推定値はいくら程度か？ステップ 2: より高レベルのシステム設計を組み立てる重要なコンポーネントを全て考慮した高レベルのシステム設計概要を組み立てる。主要なコンポーネントと接続をスケッチして書き出す考えの裏付けをするステップ 3: 核となるコンポーネントを設計するそれぞれの主要なコンポーネントについての詳細を学ぶ。例えば、url短縮サービスの設計を問われた際には次のようにするといいでしょう:元のURLのハッシュ化したものを作り、それを保存するMD5 と Base62ハッシュ衝突SQL もしくは NoSQLデータベーススキーマハッシュ化されたURLを元のURLに再翻訳するデータベース参照API & オブジェクト指向の設計ステップ 4: システム設計のスケール与えられた制約条件からボトルネックとなりそうなところを割り出し、明確化する。  例えば、スケーラビリティの問題解決のために以下の要素を考慮する必要があるだろうか？ロードバランサー水平スケーリングキャッシングデータベースシャーディング取りうる解決策とそのトレードオフについて議論をしよう。全てのことはトレードオフの関係にある。ボトルネックについてはスケーラブルなシステム設計の原理を読むといいでしょう。ちょっとした暗算問題ちょっとした推計値を手計算ですることを求められることもあるかもしれません。補遺の以下の項目が役に立つでしょう:チラ裏計算でシステム設計する2の乗数表全てのプログラマーが知っておくべきレイテンシの参考値文献とその他の参考資料以下のリンク先ページを見てどのような質問を投げかけられるか概要を頭に入れておきましょう:システム設計面接で成功するには？システム設計面接アーキテクチャ、システム設計面接への導入システム設計課題例とその解答頻出のシステム設計面接課題と参考解答、コード及びダイアグラム解答は solutions/ フォルダ以下にリンクが貼られている問題Pastebin.com (もしくは Bit.ly) を設計する解答Twitterタイムライン (もしくはFacebookフィード)を設計するTwitter検索(もしくはFacebook検索)機能を設計する解答ウェブクローラーを設計する解答Mint.comを設計する解答SNSサービスのデータ構造を設計する解答検索エンジンのキー/バリュー構造を設計する解答Amazonのカテゴリ毎の売り上げランキングを設計する解答AWS上で100万人規模のユーザーを捌くサービスを設計する解答システム設計問題を追加するContributePastebin.com (もしくは Bit.ly) を設計する問題と解答を見るTwitterタイムライン&検索 (もしくはFacebookフィード&検索)を設計する問題と解答を見るウェブクローラーの設計問題と解答を見るMint.comの設計問題と解答を見るSNSサービスのデータ構造を設計する問題と解答を見る検索エンジンのキー/バリュー構造を設計する問題と解答を見るAmazonのカテゴリ毎の売り上げランキングを設計する問題と解答を見るAWS上で100万人規模のユーザーを捌くサービスを設計する問題と解答を見るオブジェクト指向設計問題と解答頻出のオブジェクト指向システム設計面接課題と参考解答、コード及びダイアグラム解答は solutions/ フォルダ以下にリンクが貼られている備考: このセクションは作業中です問題ハッシュマップの設計解答LRUキャッシュの設計解答コールセンターの設計解答カードのデッキの設計解答駐車場の設計解答チャットサーバーの設計解答円形配列の設計Contributeオブジェクト指向システム設計問題を追加するContributeシステム設計トピックス: まずはここからシステム設計の勉強は初めて？まず初めに、よく使われる設計原理について、それらが何であるか、どのように用いられるか、長所短所について基本的な知識を得る必要がありますステップ 1: スケーラビリティに関する動画を観て復習するHarvardでのスケーラビリティの講義ここで触れられているトピックス:垂直スケーリング水平スケーリングキャッシングロードバランシングデータベースレプリケーションデータベースパーティションステップ 2: スケーラビリティに関する資料を読んで復習するスケーラビリティここで触れられているトピックス:クローンデータベースキャッシュ非同期次のステップ次に、ハイレベルでのトレードオフについてみていく:パフォーマンス vs スケーラビリティレイテンシ vs スループット可用性 vs 一貫性全てはトレードオフの関係にあるというのを肝に命じておきましょう。それから、より深い内容、DNSやCDNそしてロードバランサーなどについて学習を進めていきましょう。パフォーマンス vs スケーラビリティリソースが追加されるのにつれて パフォーマンス が向上する場合そのサービスは スケーラブル であると言えるでしょう。一般的に、パフォーマンスを向上させるというのはすなわち計算処理を増やすことを意味しますが、データセットが増えた時などより大きな処理を捌けるようになることでもあります。1パフォーマンスvsスケーラビリティをとらえる他の考え方:パフォーマンス での問題を抱えている時、あなたのシステムは一人のユーザーにとって遅いと言えるでしょう。スケーラビリティ での問題を抱えているとき、一人のユーザーにとっては速いですが、多くのリクエストがある時には遅くなってしまうでしょう。その他の参考資料、ページスケーラビリティについてスケーラビリティ、可用性、安定性、パターンレイテンシー vs スループットレイテンシー とはなにがしかの動作を行う、もしくは結果を算出するのに要する時間スループット とはそのような動作や結果算出が単位時間に行われる回数一般的に、 最大限のスループット を 許容範囲内のレイテンシー で実現することを目指すのが普通だ。その他の参考資料、ページレイテンシー vs スループットを理解する可用性 vs 一貫性CAP 理論      Source: CAP theorem revisited分散型コンピュータシステムにおいては下の三つのうち二つまでしか同時に保証することはできない。:一貫性 - 全ての読み込みは最新の書き込みもしくはエラーを受け取る可用性 - 受け取る情報が最新のものだという保証はないが、全てのリクエストはレスポンスを必ず受け取る分断耐性 - ネットワーク問題によって順不同の分断が起きてもシステムが動作を続けるネットワークは信頼できないので、分断耐性は必ず保証しなければなりません。つまりソフトウェアシステムとしてのトレードオフは、一貫性を取るか、可用性を取るかを考えなければなりません。CP - 一貫性と分断耐性(consistency and partition tolerance)分断されたノードからのレスポンスを待ち続けているとタイムアウトエラーに陥る可能性があります。CPはあなたのサービスがアトミックな読み書き（不可分操作）を必要とする際にはいい選択肢でしょう。AP - 可用性と分断耐性(availability and partition tolerance)レスポンスはノード上にあるデータで最新のものを返します。つまり、最新版のデータが返されるとは限りません。分断が解消された後も、書き込みが反映されるのには時間がかかります。結果整合性　を求めるサービスの際にはAPを採用するのがいいでしょう。もしくは、外部エラーに関わらずシステムが稼働する必要がある際にも同様です。その他の参考資料、ページCAP 理論を振り返る平易な英語でのCAP 理論のイントロCAP FAQ一貫性パターン同じデータの複製が複数ある状態では、クライアントが一貫したデータ表示を受け取るために、どのようにそれらを同期すればいいのかという課題があります。 CAP 理論 における一貫性の定義を思い出してみましょう。全ての読み取りは最新の書き込みデータもしくはエラーを受け取るはずです。弱い一貫性書き込み後の読み取りでは、その最新の書き込みを読めたり読めなかったりする。ベストエフォート型のアプローチに基づく。このアプローチはmemcachedなどのシステムに見られます。弱い一貫性はリアルタイム性が必要なユースケース、例えばVoIP、ビデオチャット、リアルタイムマルチプレイヤーゲームなどと相性がいいでしょう。例えば、電話に出ているときに数秒間音声が受け取れなくなったとしたら、その後に接続が回復してもその接続が切断されていた間に話されていたことは聞き取れないというような感じです。結果整合性書き込みの後、読み取りは最終的にはその結果を読み取ることができる(ミリ秒ほど遅れてというのが一般的です)。データは非同期的に複製されます。このアプローチはDNSやメールシステムなどに採用されています。結果整合性は多くのリクエストを捌くサービスと相性がいいでしょう。強い一貫性書き込みの後、読み取りはそれを必ず読むことができます。データは同期的に複製されます。このアプローチはファイルシステムやRDBMSなどで採用されています。トランザクションを扱うサービスでは強い一貫性が必要でしょう。その他の参考資料、ページデータセンター間でのトランザクション可用性パターン高い可用性を担保するには主に次の二つのパターンがあります: フェイルオーバー と レプリケーション です。フェイルオーバーアクティブ・パッシブアクティブ・パッシブフェイルオーバーにおいては、周期信号はアクティブもしくはスタンバイ中のパッシブなサーバーに送られます。周期信号が中断された時には、パッシブだったサーバーがアクティブサーバーのIPアドレスを引き継いでサービスを再開します。起動までのダウンタイムはパッシブサーバーが「ホット」なスタンバイ状態にあるか、「コールド」なスタンバイ状態にあるかで変わります。アクティブなサーバーのみがトラフィックを捌きます。アクティブ・パッシブフェイルオーバーはマスター・スレーブフェイルオーバーと呼ばれることもあります。アクティブ・アクティブアクティブアクティブ構成では両方のサーバーがトラフィックを捌くことで負荷を分散します。これらのサーバーがパブリックなものの場合、DNSは両方のサーバーのパブリックIPを知っている必要があります。もし、プライベートなものな場合、アプリケーションロジックが両方のサーバーの情報について知っている必要があります。アクティブ・アクティブなフェイルオーバーはマスター・マスターフェイルオーバーと呼ばれることもあります。短所: フェイルオーバーフェイルオーバーではより多くのハードウェアを要し、複雑さが増します。最新の書き込みがパッシブサーバーに複製される前にアクティブが落ちると、データ欠損が起きる潜在可能性があります。レプリケーションマスター・スレーブ　と　マスター・マスターこのトピックは データベース セクションにおいてより詳細に解説されています:マスター・スレーブ レプリケーションマスター・マスター レプリケーションドメインネームシステム      Source: DNS security presentationドメインネームシステム (DNS) は www.example.com などのドメインネームをIPアドレスへと翻訳します。DNSは少数のオーソライズされたサーバーが上位に位置する階層的構造です。あなたのルーターもしくはISPは検索をする際にどのDNSサーバーに接続するかという情報を提供します。低い階層のDNSサーバーはその経路マップをキャッシュします。ただ、この情報は伝搬遅延によって陳腐化する可能性があります。DNSの結果はあなたのブラウザもしくはOSに一定期間（time to live (TTL)に設定された期間）キャッシュされます。NS record (name server) - あなたのドメイン・サブドメインでのDNSサーバーを特定します。MX record (mail exchange) - メッセージを受け取るメールサーバーを特定します。A record (address) - IPアドレスに名前をつけます。CNAME (canonical) - 他の名前もしくは　CNAME (example.com を www.example.com) もしくは A recordへと名前を指し示す。CloudFlare や Route 53 などのサービスはマネージドDNSサービスを提供しています。いくつかのDNSサービスでは様々な手法を使ってトラフィックを捌くことができます:加重ラウンドロビントラフィックがメンテナンス中のサーバーに行くのを防ぎます様々なクラスターサイズに応じて調整しますA/B テストレイテンシーベース地理ベース欠点: DNS上記で示されているようなキャッシングによって緩和されているとはいえ、DNSサーバーへの接続には少し遅延が生じる。DNSサーバーは、政府、ISP企業,そして大企業に管理されているが、それらの管理は複雑である。DNSサービスはDDoS attackの例で、IPアドレスなしにユーザーがTwitterなどにアクセスできなくなったように、攻撃を受ける可能性がある。その他の参考資料、ページDNS アーキテクチャWikipediaDNS 記事コンテンツデリバリーネットワーク(Content delivery network)      Source: Why use a CDNコンテンツデリバリーネットワーク(CDN)は世界中に配置されたプロキシサーバーのネットワークがユーザーに一番地理的に近いサーバーからコンテンツを配信するシステムのことです。AmazonのCloudFrontなどは例外的にダイナミックなコンテンツも配信しますが、一般的に、HTML/CSS/JS、写真、そして動画などの静的ファイルがCDNを通じて配信されます。そのサイトのDNSがクライアントにどのサーバーと交信するかという情報を伝えます。CDNを用いてコンテンツを配信することで以下の二つの理由でパフォーマンスが劇的に向上します:ユーザーは近くにあるデータセンターから受信できるバックエンドサーバーはCDNが処理してくれるリクエストに関しては処理する必要がなくなりますプッシュCDNプッシュCDNではサーバーデータに更新があった時には必ず、新しいコンテンツを受け取る方式です。コンテンツを用意し、CDNに直接アップロードし、URLをCDNを指すように指定するところまで、全て自分で責任を負う形です。コンテンツがいつ期限切れになるのか更新されるのかを設定することができます。コンテンツは新規作成時、更新時のみアップロードされることでトラフィックは最小化される一方、ストレージは最大限消費されてしまいます。トラフィックの少ない、もしくは頻繁にはコンテンツが更新されないサイトの場合にはプッシュCDNと相性がいいでしょう。コンテンツは定期的に再びプルされるのではなく、CDNに一度のみ配置されます。プルCDNプルCDNでは一人目のユーザーがリクエストした時に、新しいコンテンツをサービスのサーバーから取得します。コンテンツは自分のサーバーに保存して、CDNを指すURLを書き換えます。結果として、CDNにコンテンツがキャッシュされるまではリクエスト処理が遅くなります。time-to-live (TTL) はコンテンツがどれだけの期間キャッシュされるかを規定します。プルCDNはCDN 上でのストレージスペースを最小化しますが、有効期限が切れたファイルが更新前にプルされてしまうことで冗長なトラフィックに繋がってしまう可能性があります。大規模なトラフィックのあるサイトではプルCDNが相性がいいでしょう。というのも、トラフィックの大部分は最近リクエストされ、CDNに残っているコンテンツにアクセスするものであることが多いからです。欠点: CDNCDNのコストはトラフィック量によって変わります。もちろん、CDNを使わない場合のコストと比較するべきでしょう。TTLが切れる前にコンテンツが更新されると陳腐化する恐れがあります。CDNでは静的コンテンツがCDNを指すようにURLを更新する必要があります。その他の参考資料、ページグローバルに分散されたコンテンツデリバリーネットワークプッシュCDNとプルCDNの違いWikipediaロードバランサー      Source: Scalable system design patternsロードバランサーは入力されるクライアントのリクエストをアプリケーションサーバーやデータベースへと分散させる。どのケースでもロードバランサーはサーバー等計算リソースからのレスポンスを適切なクライアントに返す。ロードバランサーは以下のことに効果的です:リクエストが状態の良くないサーバーに行くのを防ぐリクエストを過剰に送るのを防ぐ特定箇所の欠陥でサービスが落ちることを防ぐロードバランサーは (費用の高い) ハードウェアもしくはHAProxyなどのソフトウェアで実現できる。他の利点としては:SSL termination - 入力されるリクエストを解読する、また、サーバーレスポンスを暗号化することでバックエンドのサーバーがこのコストが高くつきがちな処理を請け負わなくていいように肩代わりします。X.509 certificates をそれぞれのサーバーにインストールする必要をなくしますセッション管理 - クッキーを取り扱うウェブアプリがセッション情報を保持していない時などに、特定のクライアントのリクエストを同じインスタンスへと流します。障害に対応するために、アクティブ・パッシブ もしくは アクティブ・アクティブ モードのどちらにおいても、複数のロードバランサーを配置するのが一般的です。ロードバランサーは以下のような種々のメトリックを用いてトラフィックルーティングを行うことができます:ランダムLeast loadedセッション/クッキーラウンドロビンもしくは加重ラウンドロビンLayer 4Layer 7Layer 4 ロードバランシングLayer 4 ロードバランサーは トランスポートレイヤー を参照してどのようにリクエストを配分するか判断します。一般的に、トランスポートレイヤーとしては、ソース、送信先IPアドレス、ヘッダーに記述されたポート番号が含まれますが、パケットの中身のコンテンツは含みません。 Layer 4 ロードバランサーはネットワークパケットを上流サーバーへ届け、上流サーバーから配信することでネットワークアドレス変換 Network Address Translation (NAT) を実現します。Layer 7 ロードバランシングLayer 7 ロードバランサーは アプリケーションレイヤー を参照してどのようにリクエストを配分するか判断します。ヘッダー、メッセージ、クッキーなどのコンテンツのことです。Layer 7 ロードバランサーはネットワークトラフィックの終端を受け持ち メッセージを読み込み、ロードバランシングの判断をし、選択したサーバーとの接続を繋ぎます。例えば layer 7 ロードバランサーは動画のトラフィックを直接、そのデータをホストしているサーバーにつなぐと同時に、決済処理などのより繊細なトラフィックをセキュリティ強化されたサーバーに流すということもできる。柔軟性とのトレードオフになりますが、 layer 4 ロードバランサーではLayer 7ロードバランサーよりも所要時間、計算リソースを少なく済ませることができます。ただし、昨今の汎用ハードウェアではパフォーマンスは最小限のみしか発揮できないでしょう。水平スケーリングロードバランサーでは水平スケーリングによってパフォーマンスと可用性を向上させることができます。手頃な汎用マシンを追加することによってスケールアウトさせる方が、一つのサーバーをより高価なマシンにスケールアップする（垂直スケーリング）より費用対効果も高くなり、結果的に可用性も高くなります。また、汎用ハードウェアを扱える人材を雇う方が、特化型の商用ハードウェアを扱える人材を雇うよりも簡単でしょう。欠点: 水平スケーリング水平的にスケーリングしていくと、複雑さが増す上に、サーバーのクローニングが必要になる。サーバーはステートレスである必要がある: ユーザーに関連するセッションや、プロフィール写真などのデータを持ってはいけないセッションは一元的なデータベース (SQL、 NoSQL)などのデータストアにストアされるか キャッシュ (Redis、 Memcached)に残す必要があります。キャッシュやデータベースなどの下流サーバーは上流サーバーがスケールアウトするにつれてより多くの同時接続を保たなければなりません。欠点: ロードバランサーロードバランサーはリソースが不足していたり、設定が適切でない場合、システム全体のボトルネックになる可能性があります。単一障害点を除こうとしてロードバランサーを導入した結果、複雑さが増してしまうことになります。ロードバランサーが一つだけだとそこが単一障害点になってしまいます。一方で、ロードバランサーを複数にすると、さらに複雑さが増してしまいます。その他の参考資料、ページNGINX アーキテクチャHAProxy アーキテクチャガイドスケーラビリティWikipediaLayer 4 ロードバランシングLayer 7 ロードバランシングELB listener configリバースプロキシ(webサーバー)      Source: Wikipedia  リバースプロキシサーバーは内部サービスをまとめて外部に統一されたインターフェースを提供するウェブサーバーです。クライアントからのリクエストはそれに対応するサーバーに送られて、その後レスポンスをリバースプロキシがクライアントに返します。他には以下のような利点があります:より堅牢なセキュリティ - バックエンドサーバーの情報を隠したり、IPアドレスをブラックリスト化したり、クライアントごとの接続数を制限したりできます。スケーラビリティや柔軟性が増します - クライアントはリバースプロキシのIPしか見ないので、裏でサーバーをスケールしたり、設定を変えやすくなります。SSL termination - 入力されるリクエストを解読し、サーバーのレスポンスを暗号化することでサーバーがこのコストのかかりうる処理をしなくて済むようになります。X.509 証明書 を各サーバーにインストールする必要がなくなります。圧縮 - サーバーレスポンスを圧縮できますキャッシング - キャッシュされたリクエストに対して、レスポンスを返します静的コンテンツ - 静的コンテンツを直接送信することができます。HTML/CSS/JS写真動画などなどロードバランサー vs リバースプロキシ複数のサーバーがある時にはロードバランサーをデプロイすると役に立つでしょう。 しばしば、ロードバランサーは同じ機能を果たすサーバー群へのトラフィックを捌きます。リバースプロキシでは、上記に述べたような利点を、単一のウェブサーバーやアプリケーションレイヤーに対しても示すことができます。NGINX や HAProxy などの技術はlayer 7 リバースプロキシとロードバランサーの両方をサポートします。欠点: リバースプロキシリバースプロキシを導入するとシステムの複雑性が増します。単一のリバースプロキシは単一障害点になりえます。一方で、複数のリバースプロキシを導入すると(例: フェイルオーバー) 複雑性はより増します。その他の参考資料、ページリバースプロキシ vs ロードバランサーNGINX アーキテクチャHAProxy アーキテクチャ ガイドWikipediaアプリケーション層      Source: Intro to architecting systems for scaleウェブレイヤーをアプリケーション層 (プラットフォーム層とも言われる) と分離することでそれぞれの層を独立にスケール、設定することができるようになります。新しいAPIをアプリケーション層に追加する際に、不必要にウェブサーバーを追加する必要がなくなります。単一責任の原則 では、小さい自律的なサービスが協調して動くように提唱しています。小さいサービスの小さいチームが急成長のためにより積極的な計画を立てられるようにするためです。アプリケーション層は非同期処理もサポートします。マイクロサービス独立してデプロイできる、小規模なモジュール様式であるマイクロサービスもこの議論に関係してくる技術でしょう。それぞれのサービスは独自のプロセスを処理し、明確で軽量なメカニズムで通信して、その目的とする機能を実現します。1例えばPinterestでは以下のようなマイクロサービスに分かれています。ユーザープロフィール、フォロワー、フィード、検索、写真アップロードなどです。サービスディスカバリーConsul、 Etcd、 Zookeeper などのシステムでは、登録されているサービスの名前、アドレス、ポートの情報を監視することで、サービス同士が互いを見つけやすくしています。サービスの完全性の確認には Health checks が便利で、これには HTTP エンドポイントがよく使われます。 Consul と Etcd のいずれも組み込みの key-value store を持っており、設定データや共有データなどのデータを保存しておくことに使われます。欠点: アプリケーション層アーキテクチャ、運用、そしてプロセスを考慮すると、緩く結び付けられたアプリケーション層を追加するには、モノリシックなシステムとは異なるアプローチが必要です。マイクロサービスはデプロイと運用の点から見ると複雑性が増すことになります。その他の参考資料、ページスケールするシステムアーキテクチャを設計するためのイントロシステム設計インタビューを紐解くサービス指向アーキテクチャZookeeperのイントロダクションマイクロサービスを作るために知っておきたいことデータベース      Source: Scaling up to your first 10 million usersリレーショナルデータベースマネジメントシステム (RDBMS)SQLなどのリレーショナルデータベースはテーブルに整理されたデータの集合である。ACID はリレーショナルデータベースにおけるトランザクションのプロパティの集合である不可分性 - それぞれのトランザクションはあるかないかのいずれかである一貫性 - どんなトランザクションもデータベースをある確かな状態から次の状態に遷移させる。独立性 - 同時にトランザクションを処理することは、連続的にトランザクションを処理するのと同じ結果をもたらす。永続性 - トランザクションが処理されたら、そのように保存されるリレーショナルデータベースをスケールさせるためにはたくさんの技術がある: マスター・スレーブ レプリケーション、 マスター・マスター レプリケーション、 federation、 シャーディング、 非正規化、 そして SQL チューニングマスタースレーブ レプリケーションマスターデータベースが読み取りと書き込みを処理し、書き込みを一つ以上のスレーブデータベースに複製します。スレーブデータベースは読み取りのみを処理します。スレーブデータベースは木構造のように追加のスレーブにデータを複製することもできます。マスターデータベースがオフラインになった場合には、いずれかのスレーブがマスターに昇格するか、新しいマスターデータベースが追加されるまでは読み取り専用モードで稼働します。      Source: Scalability, availability, stability, patterns欠点: マスタースレーブ レプリケーションスレーブをマスターに昇格させるには追加のロジックが必要になる。マスタースレーブ レプリケーション、マスターマスター レプリケーションの 両方 の欠点は欠点: レプリケーションを参照マスターマスター レプリケーションいずれのマスターも読み取り書き込みの両方に対応する。書き込みに関してはそれぞれ協調する。いずれかのマスターが落ちても、システム全体としては読み書き両方に対応したまま運用できる。      Source: Scalability, availability, stability, patterns欠点: マスターマスター レプリケーションロードバランサーを導入するか、アプリケーションロジックを変更することでどこに書き込むかを指定しなければならない。大体のマスターマスターシステムは、一貫性が緩い（ACID原理を守っていない）もしくは、同期する時間がかかるために書き込みのレイテンシーが増加してしまっている。書き込みノードが追加され、レイテンシーが増加するにつれ書き込みの衝突の可能性が増える。マスタースレーブ レプリケーション、マスターマスター レプリケーションの 両方 の欠点は欠点: レプリケーション を参照欠点: レプリケーション新しいデータ書き込みを複製する前にマスターが落ちた場合にはそのデータが失われてしまう可能性がある。書き込みは読み取りレプリカにおいてリプレイされる。書き込みが多い場合、複製ノードが書き込みの処理のみで行き詰まって、読み取りの処理を満足に行えない可能性がある。読み取りスレーブノードの数が多ければ多いほど、複製しなければならない数も増え、複製時間が伸びてしまいます。システムによっては、マスターへの書き込みはマルチスレッドで並列処理できる一方、スレーブへの複製は単一スレッドで連続的に処理しなければならない場合があります。レプリケーションでは追加のハードウェアが必要になり、複雑性も増します。その他の参考資料、ページ: レプリケーションスケーラビリティ、 可用性、 スタビリティ パターンマルチマスター レプリケーションFederation      Source: Scaling up to your first 10 million usersフェデレーション (もしくは機能分割化とも言う) はデータベースを機能ごとに分割する。例えば、モノリシックな単一データベースの代わりに、データベースを フォーラム、 ユーザー、 プロダクト のように三つにすることで、データベース一つあたりの書き込み・読み取りのトラフィックが減り、その結果レプリケーションのラグも短くなります。データベースが小さくなることで、メモリーに収まるデータが増えます。キャッシュの局所性が高まるため、キャッシュヒット率も上がります。単一の中央マスターで書き込みを直列化したりしないため、並列で書き込みを処理することができ、スループットの向上が期待できます。欠点: federation大規模な処理やテーブルを要するスキーマの場合、フェデレーションは効果的とは言えないでしょう。どのデータベースに読み書きをするのかを指定するアプリケーションロジックを更新しなければなりません。server linkで二つのデータベースからのデータを連結するのはより複雑になるでしょう。フェデレーションでは追加のハードウェアが必要になり、複雑性も増します。その他の参考資料、ページ: federationScaling up to your first 10 million usersシャーディング      Source: Scalability, availability, stability, patternsシャーディングでは異なるデータベースにそれぞれがデータのサブセット断片のみを持つようにデータを分割します。ユーザーデータベースを例にとると、ユーザー数が増えるにつれてクラスターにはより多くの断片が加えられることになります。federationの利点に似ていて、シャーディングでは読み書きのトラフィックを減らし、レプリケーションを減らし、キャッシュヒットを増やすことができます。インデックスサイズも減らすことができます。一般的にはインデックスサイズを減らすと、パフォーマンスが向上しクエリ速度が速くなります。なにがしかのデータを複製する機能がなければデータロスにつながりますが、もし、一つのシャードが落ちても、他のシャードが動いていることになります。フェデレーションと同じく、単一の中央マスターが書き込みの処理をしなくても、並列で書き込みを処理することができ、スループットの向上が期待できます。ユーザーテーブルをシャードする一般的な方法は、ユーザーのラストネームイニシャルでシャードするか、ユーザーの地理的配置でシャードするなどです。欠点: シャーディングシャードに対応するようにアプリケーションロジックを変更しなければなりません。結果としてSQLクエリが複雑になります。シャードではデータ配分がいびつになってしまう可能性があります。例えば、標準ユーザーの集合を持つシャードがある場合、そのシャードが他のシャードよりも重い負荷を負うことになります。リバランシングをすると複雑性がより増します。consistent hashing に基づいたシャーディングでは、通信データを削減することもできます。複数のシャードからのデータを連結するのはより複雑です。シャーディングでは追加のハードウェアが必要になり、複雑性も増します。その他の参考資料、ページ: シャーディングシャードの登場シャードデータベースアーキテクチャConsistent hashing非正規化非正規化では、書き込みのパフォーマンスをいくらか犠牲にして読み込みのパフォーマンスを向上させようとします。計算的に重いテーブルの結合などをせずに、複数のテーブルに冗長なデータのコピーが書き込まれるのを許容します。いくつかのRDBMS例えば、PostgreSQL やOracleはこの冗長な情報を取り扱い、一貫性を保つためのmaterialized views という機能をサポートしています。フェデレーション や シャーディングなどのテクニックによってそれぞれのデータセンターに分配されたデータを合一させることはとても複雑な作業です。非正規化によってそのような複雑な処理をしなくて済むようになります。多くのシステムで、100対1あるいは1000対1くらいになるくらい読み取りの方が、書き込みのトラフィックよりも多いことでしょう。読み込みを行うために、複雑なデータベースのジョイン処理が含まれるものは計算的に高価につきますし、ディスクの処理時間で膨大な時間を費消してしまうことになります。欠点: 非正規化データが複製される。冗長なデータの複製が同期されるように制約が存在し、そのことでデータベース全体の設計が複雑化する。非正規化されたデータベースは過大な書き込みを処理しなければならない場合、正規化されているそれよりもパフォーマンスにおいて劣る可能性がある。その他の参考資料、ページ: 非正規化DenormalizationSQLチューニングSQLチューニングは広範な知識を必要とする分野で多くの 本 が書かれています。ボトルネックを明らかにし、シミュレートする上で、 ベンチマーク を定め、 プロファイル することはとても重要です。ベンチマーク - abなどのツールを用いて、高負荷の状況をシミュレーションしてみましょう。プロファイル - slow query log などのツールを用いて、パフォーマンス状況の確認をしましょう。ベンチマークとプロファイルをとることで以下のような効率化の選択肢をとることになるでしょう。スキーマを絞るMySQLはアクセス速度向上のため、ディスク上の連続したブロックへデータを格納しています。長さの決まったフィールドに対しては VARCHAR よりも CHAR を使うようにしましょう。CHAR の方が効率的に速くランダムにデータにアクセスできます。 一方、 VARCHAR では次のデータに移る前にデータの末尾を検知しなければならないために速度が犠牲になります。ブログの投稿など、大きなテキストには TEXT を使いましょう。 TEXT ではブーリアン型の検索も可能です。 TEXT フィールドには、テキストブロックが配置されている、ディスク上の場所へのポインターが保存されます。2の32乗や40億以下を超えない程度の大きな数には INT を使いましょう。通貨に関しては小数点表示上のエラーを避けるために DECIMAL を使いましょう。大きな BLOBS を保存するのは避けましょう。どこからそのオブジェクトを取ってくることができるかの情報を保存しましょう。VARCHAR(255) は8ビットで数えられる最大の文字数です。一部のDBMSでは、1バイトの利用効率を最大化するためにこの文字数がよく使われます。検索性能向上のため 、可能であれば NOT NULL 制約を設定しましょう。インデックスを効果的に用いるクエリ(SELECT、 GROUP BY、 ORDER BY、 JOIN) の対象となる列にインデックスを使うことで速度を向上できるかもしれません。インデックスは通常、平衡探索木であるB木の形で表されます。B木によりデータは常にソートされた状態になります。また検索、順次アクセス、挿入、削除を対数時間で行えます。インデックスを配置することはデータをメモリーに残すことにつながりより容量を必要とします。インデックスの更新も必要になるため書き込みも遅くなります。大量のデータをロードする際には、インデックスを切ってからデータをロードして再びインデックスをビルドした方が速いことがあります。高負荷なジョインを避けるパフォーマンス上必要なところには非正規化を適用するテーブルのパーティションテーブルを分割し、ホットスポットを独立したテーブルに分離してメモリーに乗せられるようにする。クエリキャッシュを調整する場合によってはクエリキャッシュ がパフォーマンス問題 を引き起こす可能性があるその他の参考資料、ページ: SQLチューニングMySQLクエリを最適化するためのTipsVARCHAR(255)をやたらよく見かけるのはなんで？null値はどのようにパフォーマンスに影響するのか？Slow query logNoSQLNoSQL は key-value store、 document-store、 wide column store、 もしくは graph databaseによって表現されるデータアイテムの集合です。データは一般的に正規化されておらず、アプリケーション側でジョインが行われます。大部分のNoSQLは真のACIDトランザクションを持たず、 結果整合性 的な振る舞いの方を好みます。BASE はしばしばNoSQLデータベースのプロパティを説明するために用いられます。CAP Theorem と対照的に、BASEは一貫性よりも可用性を優先します。Basically available - システムは可用性を保証します。Soft state - システムの状態は入力がなくても時間経過とともに変化する可能性があります。結果整合性 - システム全体は時間経過とともにその間に入力がないという前提のもと、一貫性が達成されます。SQLか？NoSQLか？ を選択するのに加えて、どのタイプのNoSQLがどの使用例に最も適するかを理解するのはとても有益です。このセクションでは キーバリューストア、 ドキュメントストア、 ワイドカラムストア、 と グラフデータベース について触れていきます。キーバリューストア概要: ハッシュテーブルキーバリューストアでは一般的にO(1)の読み書きができ、それらはメモリないしSSDで裏付けられています。データストアはキーを 辞書的順序 で保持することでキーの効率的な取得を可能にしています。キーバリューストアではメタデータを値とともに保持することが可能です。キーバリューストアはハイパフォーマンスな挙動が可能で、単純なデータモデルやインメモリーキャッシュレイヤーなどのデータが急速に変わる場合などに使われます。単純な処理のみに機能が制限されているので、追加の処理機能が必要な場合にはその複雑性はアプリケーション層に載せることになります。キーバリューストアはもっと複雑なドキュメントストアや、グラフデータベースなどの基本です。その他の参考資料、ページ: キーバリューストアキーバリューデータベースキーバリューストアの欠点Redisアーキテクチャメムキャッシュアーキテクチャドキュメントストア概要: ドキュメントがバリューとして保存されたキーバリューストアドキュメントストアはオブジェクトに関する全ての情報を持つドキュメント(XML、 JSON、 binaryなど)を中心に据えたシステムです。ドキュメントストアでは、ドキュメント自身の内部構造に基づいた、APIもしくはクエリ言語を提供します。 メモ：多くのキーバリューストアでは、値のメタデータを扱う機能を含んでいますが、そのことによって二つドキュメントストアとの境界線が曖昧になってしまっています。以上のことを実現するために、ドキュメントはコレクション、タグ、メタデータやディレクトリなどとして整理されています。ドキュメント同士はまとめてグループにできるものの、それぞれで全く異なるフィールドを持つ可能性があります。MongoDB や CouchDB などのドキュメントストアも、複雑なクエリを処理するためのSQLのような言語を提供しています。DynamoDB はキーバリューとドキュメントの両方をサポートしています。ドキュメントストアは高い柔軟性を担保するので、頻繁に変化するデータを扱う時に用いられます。その他の参考資料、ページ:  ドキュメントストアドキュメント指向 データベースMongoDB アーキテクチャCouchDB アーキテクチャElasticsearch アーキテクチャワイドカラムストア      Source: SQL & NoSQL, a brief history概要: ネストされたマップ カラムファミリー<行キー、 カラム<ColKey、 Value、 Timestamp>>ワイドカラムストアのデータの基本単位はカラム（ネーム・バリューのペア）です。それぞれのカラムはカラムファミリーとして（SQLテーブルのように）グループ化することができます。スーパーカラムファミリーはカラムファミリーの集合です。それぞれのカラムには行キーでアクセスすることができます。同じ行キーを持つカラムは同じ行として認識されます。それぞれの値は、バージョン管理とコンフリクトが起きた時のために、タイムスタンプを含みます。GoogleはBigtableを初のワイドカラムストアとして発表しました。それがオープンソースでHadoopなどでよく使われるHBase やFacebookによるCassandra などのプロジェクトに影響を与えました。BigTable、HBaseやCassandraなどのストアはキーを辞書形式で保持することで選択したキーレンジでのデータ取得を効率的にします。ワイドカラムストアは高い可用性とスケーラビリティを担保します。これらはとても大規模なデータセットを扱うことによく使われます。その他の参考資料、ページ:  ワイドカラムストアSQL & NoSQL簡単に歴史をさらうBigtable アーキテクチャHBase アーキテクチャCassandra アーキテクチャグラフデータベース      Source: Graph database概要: グラフグラフデータベースでは、それぞれのノードがレコードで、それぞれのアークは二つのノードを繋ぐ関係性として定義されます。グラフデータベースは多数の外部キーや多対多などの複雑な関係性を表すのに最適です。グラフデータベースはSNSなどのサービスの複雑な関係性モデルなどについて高いパフォーマンスを発揮します。比較的新しく、まだ一般的には用いられていないので、開発ツールやリソースを探すのが他の方法に比べて難しいかもしれません。多くのグラフはREST APIsを通じてのみアクセスできます。その他の参考資料、ページ:  グラフGraphデータベースNeo4jFlockDBその他の参考資料、ページ:  NoSQL基本用語の説明NoSQLデータベースについて調査と選択ガイドスケーラビリティNoSQLのイントロダクションNoSQLパターンSQLか？NoSQLか？      Source: Transitioning from RDBMS to NoSQLSQL を選ぶ理由:構造化されたデータ厳格なスキーマリレーショナルデータ複雑なジョインをする必要性トランザクションスケールする際のパターンが明確なとき開発者の数、コミュニティ、コード等がより充実しているインデックスによるデータ探索はとても速いNoSQL を選ぶ理由:準構造化されたデータダイナミックないし、フレキシブルなスキーマノンリレーショナルなデータ複雑なジョインをする必要がないデータの多くのTB (もしくは PB) を保存する集中的、大規模なデータ負荷に耐えられるIOPSについては極めて高いスループットを示すNoSQLに適するサンプルデータ:急激なクリックストリームやログデータの収集リーダーボードやスコアリングデータショッピングカートなどの一時的情報頻繁にアクセスされる ('ホットな') テーブルメタデータやルックアップテーブルその他の参考資料、ページ:  　SQLもしくはNoSQL最初の1000万ユーザーにスケールアップするためにSQLとNoSQLの違いキャッシュ      Source: Scalable system design patternsキャッシュはページの読み込み時間を削減し、サーバーやデータベースへの負荷を低減することができます。このモデルでは、実際の処理を保存するために、ディスパッチャーがまず以前にリクエストが送信されたかどうかを確認し、直前の結果を受け取ります。データベースはそのパーティションに渡って統合された読み取り書き込みの分配を要求しますが、人気アイテムはその分配を歪めてシステム全体のボトルネックになってしまうことがあります。データベースの前にキャッシュを差し込むことでこのように、均一でない負荷やトラフィックの急激な増加を吸収することができます。クライアントキャッシングキャッシュはOSやブラウザーなどのクライアントサイド、サーバーサイド もしくは独立のキャッシュレイヤーに設置することができます。CDNキャッシングCDN もキャッシュの一つとして考えることができます。Webサーバーキャッシングリバースプロキシ や Varnish などのキャッシュは静的そして動的なコンテンツを直接配信することができます。 webサーバーもリクエストをキャッシュしてアプリケーションサーバーに接続することなしにレスポンスを返すことができます。データベースキャッシングデータベースは普通、一般的な使用状況に適するようなキャッシングの設定を初期状態で持っています。この設定を特定の仕様に合わせて調整することでパフォーマンスを向上させることができます。アプリケーションキャッシングメムキャッシュなどのIn-memoryキャッシュやRedisはアプリケーションとデータストレージの間のキーバリューストアです。データはRAMで保持されるため、データがディスクで保存される一般的なデータベースよりもだいぶ速いです。RAM容量はディスクよりも限られているので、least recently used (LRU)などのcache invalidation アルゴリズムが 'コールド' なエントリを弾き、'ホット' なデータをRAMに保存します。Redisはさらに以下のような機能を備えています:パージステンス設定ソート済みセット、リストなどの組み込みデータ構造キャッシュには様々なレベルのものがありますが、いずれも大きく二つのカテゴリーのいずれかに分類することができます: データベースクエリ と オブジェクト です:行レベルクエリレベルFully-formed serializable objectsFully-rendered HTML一般的に、ファイルベースキャッシングはクローンを作り出してオートスケーリングを難しくしてしまうので避けるべきです。データベースクエリレベルでのキャッシングデータベースをクエリする際には必ずクエリをキーとしてハッシュして結果をキャッシュに保存しましょう。この手法はキャッシュ期限切れ問題に悩むことになります:複雑なクエリによりキャッシュされた結果を削除することが困難テーブルセルなどのデータ断片が変化した時に、その変化したセルを含むかもしれない全てのキャッシュされたクエリを削除する必要がある。オブジェクトレベルでのキャッシングデータをアプリケーションコードでそうするように、オブジェクトとして捉えてみましょう。アプリケーションに、データベースからのデータセットをクラスインスタンスやデータ構造として組み立てさせます。:そのデータが変更されたら、オブジェクトをキャッシュから削除すること非同期処理を許容します: ワーカーがキャッシュされたオブジェクトの中で最新のものを集めてきます何をキャッシュするか:ユーザーのセッション完全にレンダーされたウェブページアクテビティストリームユーザーグラフデータいつキャッシュを更新するかキャッシュに保存できる容量は限られているため、自分のケースではどのキャッシュ手法が一番いいかは検討する必要があります。キャッシュアサイド      Source: From cache to in-memory data gridアプリケーションはストレージへの読み書きの処理をします。キャッシュはストレージとは直接やりとりをしません。アプリケーションは以下のことをします:キャッシュの中のエントリを参照しますが、結果としてキャッシュミスになりますデータベースからエントリを取得しますエントリをキャッシュに追加しますエントリを返しますdef get_user(self, user_id):    user = cache.get(\""user.{0}\"", user_id)    if user is None:        user = db.query(\""SELECT * FROM users WHERE user_id = {0}\"", user_id)        if user is not None:            key = \""user.{0}\"".format(user_id)            cache.set(key, json.dumps(user))    return userMemcached は通常このように使われる。その後のキャッシュデータ読み込みは速いです。キャッシュアサイドはレージーローディングであるとも言われます。リクエストされたデータのみがキャッシュされ、リクエストされていないデータでキャッシュが溢れるのを防止します。欠点: キャッシュアサイド各キャッシュミスは三つのトリップを呼び出すことになり、体感できるほどの遅延が起きてしまいます。データベースのデータが更新されるとキャッシュデータは古いものになってしまいます。time-to-live (TTL)を設定することでキャッシュエントリの更新を強制的に行う、もしくはライトスルーを採用することでこの問題は緩和できます。ノードが落ちると、新規の空のノードで代替されることでレイテンシーが増加することになります。ライトスルー      Source: Scalability, availability, stability, patternsアプリケーションはキャッシュをメインのデータストアとして使い、そこにデータの読み書きを行います。一方、キャッシュはデータベースへの読み書きを担当します。アプリケーションはキャッシュにあるエントリを追加・更新しますキャッシュは同期的にデータストアに書き込みを行いますエントリを返しますアプリケーションコード:set_user(12345, {\""foo\"":\""bar\""})キャッシュコード:def set_user(user_id, values):    user = db.query(\""UPDATE Users WHERE id = {0}\"", user_id, values)    cache.set(user_id, user)ライトスルーは書き込み処理のせいで全体としては遅いオペレーションですが、書き込まれたばかりのデータに関する読み込みは速いです。ユーザー側は一般的にデータ更新時の方が読み込み時よりもレイテンシーに許容的です。キャッシュ内のデータは最新版で保たれます。欠点: ライトスルーノードが落ちたこと、もしくはスケーリングによって新しいノードが作成された時に、新しいノードはデータベース内のエントリーが更新されるまではエントリーをキャッシュしません。キャッシュアサイドとライトスルーを併用することでこの問題を緩和できます。書き込まれたデータの大部分は一度も読み込まれることはありません。このデータはTTLによって圧縮することができます。ライトビハインド (ライトバック)      Source: Scalability, availability, stability, patternsライトビハインドではアプリケーションは以下のことをします:キャッシュのエントリーを追加・更新しますデータストアへの書き込みを非同期的に行うことで、書き込みパフォーマンスを向上させます。欠点: ライトビハインドキャッシュがデータストア内のコンテンツにヒットする前にキャッシュが落ちるとデータ欠損が起きる可能性があります。キャッシュアサイドやライトスルーよりも実装が複雑になります。リフレッシュアヘッド      Source: From cache to in-memory data grid期限切れよりも前に、直近でアクセスされた全てのキャッシュエントリを自動的に更新するように設定することができます。もしどのアイテムが将来必要になるのかを正確に予測することができるのならば、リードスルーよりもレイテンシーを削減することができます。欠点: リフレッシュアヘッドどのアイテムが必要になるかの予測が正確でない場合にはリフレッシュアヘッドがない方がレイテンシーは良いという結果になってしまいます。欠点: キャッシュcache invalidationなどを用いて、データベースなどの真のデータとキャッシュの間の一貫性を保つ必要があります。Redisやmemcachedを追加することでアプリケーション構成を変更する必要があります。Cache invalidationも難しいですがそれに加えて、いつキャッシュを更新するかという複雑な問題にも悩まされることになります。その他の参考資料、ページFrom cache to in-memory data gridスケーラブルなシステムデザインパターンスケールできるシステムを設計するためのイントロダクションスケーラビリティ、可用性、安定性、パターンスケーラビリティAWS ElastiCacheのストラテジーWikipedia非同期処理      Source: Intro to architecting systems for scale非同期のワークフローはもし、連続的に行われるとリクエスト時間を圧迫してしまうような重い処理を別で処理する手法です。また、定期的にデータを集合させるなどの時間がかかるような処理を前もって処理しておくことにも役立ちます。メッセージキューメッセージキューはメッセージを受け取り、保存し、配信します。もし、処理がインラインで行うには遅すぎる場合、以下のようなワークフローでメッセージキューを用いるといいでしょう:アプリケーションはジョブをキューに配信し、ユーザーにジョブステータスを伝えます。ワーカーがジョブキューから受け取って、処理を行い、終了したらそのシグナルを返します。ユーザーの処理が止まることはなく、ジョブはバックグラウンドで処理されます。この間に、クライアントはオプションとして、タスクが完了したかのように見せるために小規模の処理を行います。例えば、ツイートを投稿するときに、ツイートはすぐにあなたのタイムラインに反映されたように見えますが、そのツイートが実際に全てのフォロワーに配信されるまでにはもう少し時間がかかっているでしょう。Redis はシンプルなメッセージ仲介としてはいいですが、メッセージが失われてしまう可能性があります。RabbitMQ はよく使われていますが、'AMQP'プロトコルに対応して、自前のノードを立てる必要があります。Amazon SQS という選択肢もありますが、レイテンシーが高く、メッセージが重複して配信されてしまう可能性があります。タスクキュータスクキューはタスクとその関連するデータを受け取り、処理した上でその結果を返します。スケジュール管理をできるほか、バックグラウンドでとても重いジョブをこなすこともできます。Celery はスケジューリングとpythonのサポートがあります。バックプレッシャーもし、キューが拡大しすぎると、メモリーよりもキューの方が大きくなりキャッシュミスが起こり、ディスク読み出しにつながり、パフォーマンスが低下することにつながります。バックプレッシャーはキューサイズを制限することで回避することができ、高いスループットを確保しキューにすでにあるジョブについてのレスポンス時間を短縮できます。キューがいっぱいになると、クライアントはサーバービジーもしくはHTTP 503をレスポンスとして受け取りまた後で時間をおいてアクセスするようにメッセージを受け取ります。クライアントはexponential backoffなどによって後ほど再度時間を置いてリクエストすることができます。欠点: 非同期処理キューを用いることで遅延が起こり、複雑さも増すため、あまり重くない計算処理やリアルタイムワークフローにおいては同期処理の方がいいでしょう。その他の参考資料、ページIt's all a numbers gameオーバーロードした時にバックプレッシャーを適用するLittle's lawメッセージキューとタスクキューの違いとは？通信      Source: OSI 7 layer modelHypertext transfer protocol (HTTP)HTTP はクライアントとサーバー間でのデータをエンコードして転送するための手法です。リクエスト・レスポンスに関わるプロトコルです。クライアントがリクエストをサーバーに投げ、サーバーがリクエストに関係するコンテンツと完了ステータス情報をレスポンスとして返します。HTTPは自己完結するので、間にロードバランサー、キャッシュ、エンクリプション、圧縮などのどんな中間ルーターが入っても動くようにできています。基本的なHTTPリクエストはHTTP動詞(メソッド)とリソース(エンドポイント)で成り立っています。以下がよくあるHTTP動詞です。:動詞詳細冪等性*セーフキャッシュできるかGETリソースを読み取るYesYesYesPOSTリソースを作成するもしくはデータを処理するトリガーNoNoYes レスポンスが新しい情報を含む場合PUTリソースを作成もしくは入れ替えるYesNoNoPATCHリソースを部分的に更新するNoNoYes レスポンスが新しい情報を含む場合DELETEリソースを削除するYesNoNo何度呼んでも同じ結果が返ってくることHTTPはTCP や UDP などの低級プロトコルに依存しているアプリケーションレイヤーのプロトコルである。その他の参考資料、ページ: HTTPHTTPってなに?HTTP と TCPの違いPUT と PATCHの違い伝送制御プロトコル (TCP)      Source: How to make a multiplayer gameTCPはIP networkの上で成り立つ接続プロトコルです。接続はhandshakeによって開始、解除されます。全ての送信されたパケットは欠損なしで送信先に送信された順番で到達するように以下の方法で保証されています:シーケンス番号とchecksum fieldsが全てのパケットに用意されているAcknowledgementパケットと自動再送信もし送信者が正しいレスポンスを受け取らなかったとき、パケットを再送信します。複数のタイムアウトがあったとき、接続は解除されます。TCP はフロー制御 と 輻輳制御も実装しています。これらの機能によって速度は低下し、一般的にUDPよりも非効率な転送手段になっています。ハイスループットを実現するために、ウェブサーバーはかなり大きな数のTCP接続を開いておくことがあり、そのことでメモリー使用が圧迫されます。ウェブサーバスレッドと例えばmemcached サーバーの間で多数のコネクションを保っておくことは高くつくかもしれません。可能なところではUDPに切り替えるだけでなくコネクションプーリングなども役立つかもしれません。TCPは高い依存性を要し、時間制約が厳しくないものに適しているでしょう。ウェブサーバー、データベース情報、SMTP、FTPやSSHなどの例に適用されます。以下の時にUDPよりもTCPを使うといいでしょう:全てのデータが欠損することなしに届いてほしいネットワークスループットの最適な自動推測をしてオペレーションしたいユーザデータグラムプロトコル (UDP)      Source: How to make a multiplayer gameUDPはコネクションレスです。データグラム（パケットのようなもの）はデータグラムレベルでの保証しかされません。データグラムは順不同で受け取り先に到着したりそもそも着かなかったりします。UDPは輻輳制御をサポートしません。TCPにおいてはサポートされているこれらの保証がないため、UDPは一般的に、TCPよりも効率的です。UDPはサブネット上のすべての機器にデータグラムを送信することができます。これはDHCP において役に立ちます。というのも、クライアントはまだIPアドレスを取得していないので、IPアドレスを必要とするTCPによるストリームができないからです。UDPは信頼性の面では劣りますが、VoIP、ビデオチャット、ストリーミングや同時通信マルチプレイヤーゲームなどのリアルタイム性が重視される時にはとても効果的です。TCPよりもUDPを使うのは:レイテンシーを最低限に抑えたい時データ欠損よりも、データ遅延を重視するときエラー修正を自前で実装したいときその他の参考資料、ページ: TCP と UDPゲームプログラミングのためのネットワークTCP と UDP プロトコルの主な違いTCP と UDPの違いTransmission control protocolUser datagram protocolFacebookのメムキャッシュスケーリング遠隔手続呼出 (RPC)      Source: Crack the system design interviewRPCではクライアントがリモートサーバーなどの異なるアドレス空間でプロシージャーが処理されるようにします。プロシージャーはローカルでのコールのように、クライアントからサーバーにどのように通信するかという詳細を省いた状態でコードが書かれます。リモートのコールは普通、ローカルのコールよりも遅く、信頼性に欠けるため、RPCコールをローカルコールと区別させておくことが好ましいでしょう。人気のRPCフレームワークは以下です。Protobuf、 Thrift、AvroRPC は リクエストレスポンスプロトコル:クライアントプログラム - クライアントスタブプロシージャーを呼び出します。パラメータはローカルでのプロシージャーコールのようにスタックへとプッシュされていきます。クライアントスタブプロシージャー - プロシージャIDとアーギュメントをパックしてリクエストメッセージにします。クライアント通信モジュール - OSがクライアントからサーバーへとメッセージを送ります。サーバー通信モジュール - OSが受け取ったパケットをサーバースタブプロシージャーに受け渡します。サーバースタブプロシージャー -  結果を展開し、プロシージャーIDにマッチするサーバープロシージャーを呼び出し、結果を返します。サーバーレスポンスは上記のステップを逆順で繰り返します。Sample RPC calls:GET /someoperation?data=anIdPOST /anotheroperation{  \""data\"":\""anId\"";  \""anotherdata\"": \""another value\""}RPCは振る舞いを公開することに焦点を当てています。RPCは内部通信パフォーマンスを理由として使われることが多いです。というのも、使用する状況に合わせてネイティブコールを自作することができるからです。ネイティブライブラリー (aka SDK) を呼ぶのは以下の時:ターゲットのプラットフォームを知っている時ロジックがどのようにアクセスされるのかを管理したいときライブラリー外でエラーがどのようにコントロールされるかを管理したい時パフォーマンスとエンドユーザーエクスペリエンスが最優先の時REST プロトコルに従うHTTP APIはパブリックAPIにおいてよく用いられます。欠点: RPCRPCクライアントとはサービス実装により厳密に左右されることになります。新しいオペレーション、使用例があるたびに新しくAPIが定義されなければなりません。RPCをデバッグするのは難しい可能性があります。既存のテクノロジーをそのまま使ってサービスを構築することはできないかもしれません。例えば、SquidなどのサーバーにRPCコールが正しくキャッシュ されるように追加で骨を折る必要があるかもしれません。Representational state transfer (REST)RESTは、クライアントがサーバーによってマネージされるリソースに対して処理を行うクライアント・サーバーモデルを支持するアーキテキチャスタイルです。サーバーは操作できるもしくは新しいリソースレプレゼンテーションを受け取ることができるようなリソースやアクションのレプレゼンテーションを提供します。すべての通信はステートレスでキャッシュ可能でなければなりません。RESTful なインターフェースには次の四つの特徴があります:特徴的なリソース (URI in HTTP) - どのオペレーションであっても同じURIを使う。HTTP動詞によって変わる (Verbs in HTTP) - 動詞、ヘッダー、ボディを使う自己説明的なエラーメッセージ (status response in HTTP) - ステータスコードを使い、新しく作ったりしないこと。HATEOAS (HTML interface for HTTP) - 自分のwebサービスがブラウザで完全にアクセスできること。サンプル REST コール:GET /someresources/anIdPUT /someresources/anId{\""anotherdata\"": \""another value\""}RESTはデータを公開することに焦点を当てています。クライアントとサーバーのカップリングを最小限にするもので、パブリックAPIなどによく用いられます。RESTはURI、 representation through headers、そして、GET、POST、PUT、 DELETE、PATCHなどのHTTP動詞等のよりジェネリックで統一されたメソッドを用います。ステートレスであるのでRESTは水平スケーリングやパーティショニングに最適です。欠点: RESTRESTはデータ公開に焦点を当てているので、リソースが自然に整理されていなかったり、シンプルなヒエラルキーで表せられない時にはよい選択肢とは言えないかもしれません。例えば、とあるイベントのセットにマッチするすべての更新情報を返すと言った処理は簡単にはパスで表現することができません。RESTでは、URIパス、クエリパラメータ、そして場合によってはリクエストボディなどによって実装されることが多いでしょう。RESTは少数の動詞に依存しています(GET、POST、PUT、DELETE、そして PATCH) が時には使いたい事例に合わないことがあります。例えば、期限の切れたドキュメントをアーカイブに移したい場合などはこれらの動詞の中には綺麗にはフィットしません。ネストされたヒエラルキーの中にあるリソースをとってくるのはシングルビューを描画するのにクライアントとサーバー間で数回やりとりしなければなりません。例として、ブログエントリーのコンテンツとそれに対するコメントを表示する場合などです。様々なネットワーク環境で動作する可能性が考えられるモバイルアプリケーションにおいてはこのような複数のやり取りは好ましくありません。時が経つにつれて、APIレスポンスにより多くのフィールドが与えられて、古いクライアントはすでにいらないものも含めてすべてのデータフィールドを受け取ることになります。そのことで、ペイロードが大きくなりすぎて、レイテンシーも拡大することになります。RPCとREST比較OperationRPCRESTサインアップPOST /signupPOST /personsリザインPOST /resign{\""personid\"": \""1234\""}DELETE /persons/1234Person読み込みGET /readPerson?personid=1234GET /persons/1234Personのアイテムリスト読み込みGET /readUsersItemsList?personid=1234GET /persons/1234/itemsPersonのアイテムへのアイテム追加POST /addItemToUsersItemsList{\""personid\"": \""1234\"";\""itemid\"": \""456\""}POST /persons/1234/items{\""itemid\"": \""456\""}アイテム更新POST /modifyItem{\""itemid\"": \""456\"";\""key\"": \""value\""}PUT /items/456{\""key\"": \""value\""}アイテム削除POST /removeItem{\""itemid\"": \""456\""}DELETE /items/456  Source: Do you really know why you prefer REST over RPCその他の参考資料、ページ: REST と RPCDo you really know why you prefer REST over RPCWhen are RPC-ish approaches more appropriate than REST?REST vs JSON-RPCDebunking the myths of RPC and RESTWhat are the drawbacks of using RESTCrack the system design interviewThriftWhy REST for internal use and not RPCセキュリティこのセクションは更新が必要です。contributingしてください！セキュリティは幅広いトピックです。十分な経験、セキュリティ分野のバックグラウンドがなくても、セキュリティの知識を要する職に応募するのでない限り、基本以上のことを知る必要はないでしょう。情報伝達、保存における暗号化XSS や SQL injectionを防ぐために、全てのユーザー入力もしくはユーザーに露出される入力パラメーターをサニタイズするSQL injectionを防ぐためにパラメータ化されたクエリを用いる。least privilegeの原理を用いるその他の参考資料、ページ:開発者のためのセキュリティガイドOWASP top ten補遺暗算で、推計値を求める必要があることも時にはあります。例えば、ディスクから100枚イメージ分のサムネイルを作る時間を求めたり、その時にどれだけディスクメモリーが消費されるかなどの値です。2の乗数表 と 全てのプログラマーが知るべきレイテンシー値 は良い参考になるでしょう。2の乗数表乗数           厳密な値         約        Bytes---------------------------------------------------------------7                             1288                             25610                           1024   1 thousand           1 KB16                         65,536                       64 KB20                      1,048,576   1 million            1 MB30                  1,073,741,824   1 billion            1 GB32                  4,294,967,296                        4 GB40              1,099,511,627,776   1 trillion           1 TBその他の参考資料、ページ:2の乗数表全てのプログラマーが知るべきレイテンシー値Latency Comparison Numbers--------------------------L1 cache reference                           0.5 nsBranch mispredict                            5   nsL2 cache reference                           7   ns                      14x L1 cacheMutex lock/unlock                           25   nsMain memory reference                      100   ns                      20x L2 cache, 200x L1 cacheCompress 1K bytes with Zippy            10,000   ns       10 usSend 1 KB bytes over 1 Gbps network     10,000   ns       10 usRead 4 KB randomly from SSD*           150,000   ns      150 us          ~1GB/sec SSDRead 1 MB sequentially from memory     250,000   ns      250 usRound trip within same datacenter      500,000   ns      500 usRead 1 MB sequentially from SSD*     1,000,000   ns    1,000 us    1 ms  ~1GB/sec SSD, 4X memoryDisk seek                           10,000,000   ns   10,000 us   10 ms  20x datacenter roundtripRead 1 MB sequentially from 1 Gbps  10,000,000   ns   10,000 us   10 ms  40x memory, 10X SSDRead 1 MB sequentially from disk    30,000,000   ns   30,000 us   30 ms 120x memory, 30X SSDSend packet CA->Netherlands->CA    150,000,000   ns  150,000 us  150 msNotes-----1 ns = 10^-9 seconds1 us = 10^-6 seconds = 1,000 ns1 ms = 10^-3 seconds = 1,000 us = 1,000,000 ns上記表に基づいた役に立つ数値:ディスクからの連続読み取り速度 30 MB/s1 Gbps Ethernetからの連続読み取り速度　100 MB/sSSDからの連続読み取り速度 1 GB/smain memoryからの連続読み取り速度 4 GB/s1秒で地球6-7周できる1秒でデータセンターと2000周やりとりできるレイテンシーの視覚的表その他の参考資料、ページ:全てのプログラマーが知るべきレイテンシー値 - 1全てのプログラマーが知るべきレイテンシー値 - 2Designs, lessons, and advice from building large distributed systemsSoftware Engineering Advice from Building Large-Scale Distributed Systems他のシステム設計面接例題頻出のシステム設計面接課題とその解答へのリンク質問解答Dropboxのようなファイル同期サービスを設計するyoutube.comGoogleのような検索エンジンの設計queue.acm.orgstackexchange.comardendertat.comstanford.eduGoogleのようなスケーラブルなwebクローラーの設計quora.comGoogle docsの設計code.google.comneil.fraser.nameRedisのようなキーバリューストアの設計slideshare.netMemcachedのようなキャッシュシステムの設計slideshare.netAmazonのようなレコメンデーションシステムの設計hulu.comijcai13.orgBitlyのようなURL短縮サービスの設計n00tc0d3r.blogspot.comWhatsAppのようなチャットアプリの設計highscalability.comInstagramのような写真共有サービスの設計highscalability.comhighscalability.comFacebookニュースフィードの設計quora.comquora.comslideshare.netFacebookタイムラインの設計facebook.comhighscalability.comFacebookチャットの設計erlang-factory.comfacebook.comFacebookのようなgraph検索の設計facebook.comfacebook.comfacebook.comCloudFlareのようなCDNの設計cmu.eduTwitterのトレンド機能の設計michael-noll.comsnikolov .wordpress.comランダムID発行システムの設計blog.twitter.comgithub.com一定のインターバル時間での上位k件を返すucsb.eduwpi.edu複数のデータセンターからデータを配信するサービスの設計highscalability.comオンラインの複数プレイヤーカードゲームの設計indieflashblog.combuildnewgames.comガーベッジコレクションシステムの設計stuffwithstuff.comwashington.eduシステム設計例題を追加するContribute実世界のアーキテクチャ世の中のシステムがどのように設計されているかについての記事      Source: Twitter timelines at scale以下の記事の重箱の隅をつつくような細かい詳細にこだわらないこと。むしろ共通の原理、技術、パターンを探ることそれぞれのコンポーネントでどんな問題が解決され、コンポーネントはどこでうまく使えもしくは使えないかを知ること学んだことを復習すること種類システム参考ページデータ処理MapReduce - Googleの分散データ処理システムresearch.google.comデータ処理Spark - Databricksの分散データ処理システムslideshare.netデータ処理Storm - Twitterの分散データ処理システムslideshare.netデータストアBigtable - Googleのカラム指向分散データベースharvard.eduデータストアHBase - Bigtableのオープンソース実装slideshare.netデータストアCassandra - Facebookのカラム指向分散データベースslideshare.netデータストアDynamoDB - Amazonのドキュメント指向分散データベースharvard.eduデータストアMongoDB - ドキュメント指向分散データベースslideshare.netデータストアSpanner - Googleのグローバル分散データベースresearch.google.comデータストアMemcached - 分散メモリーキャッシングシステムslideshare.netデータストアRedis - 永続性とバリュータイプを兼ね備えた分散メモリーキャッシングシステムslideshare.netファイルシステムGoogle File System (GFS) - 分散ファイルシステムresearch.google.comファイルシステムHadoop File System (HDFS) - GFSのオープンソース実装apache.orgMiscChubby - 疎結合の分散システムをロックするGoogleのサービスresearch.google.comMiscDapper - 分散システムを追跡するインフラresearch.google.comMiscKafka - LinkedInによるPub/subメッセージキューslideshare.netMiscZookeeper - 同期を可能にする中央集権インフラとサービスslideshare.netアーキテクチャを追加するContribute各企業のアーキテクチャ企業参考ページAmazonAmazon architectureCinchcastProducing 1,500 hours of audio every dayDataSiftRealtime datamining At 120,000 tweets per secondDropBoxHow we've scaled DropboxESPNOperating At 100,000 duh nuh nuhs per secondGoogleGoogle architectureInstagram14 million users, terabytes of photosWhat powers InstagramJustin.tvJustin.Tv's live video broadcasting architectureFacebookScaling memcached at FacebookTAO: Facebook’s distributed data store for the social graphFacebook’s photo storageFlickrFlickr architectureMailboxFrom 0 to one million users in 6 weeksPinterestFrom 0 To 10s of billions of page views a month18 million visitors, 10x growth, 12 employeesPlayfish50 million monthly users and growingPlentyOfFishPlentyOfFish architectureSalesforceHow they handle 1.3 billion transactions a dayStack OverflowStack Overflow architectureTripAdvisor40M visitors, 200M dynamic page views, 30TB dataTumblr15 billion page views a monthTwitterMaking Twitter 10000 percent fasterStoring 250 million tweets a day using MySQL150M active users, 300K QPS, a 22 MB/S firehoseTimelines at scaleBig and small data at TwitterOperations at Twitter: scaling beyond 100 million usersUberHow Uber scales their real-time market platformWhatsAppThe WhatsApp architecture Facebook bought for $19 billionYouTubeYouTube scalabilityYouTube architecture企業のエンジニアブログ面接を受ける企業のアーキテクチャ投げられる質問は同じ分野から来ることもあるでしょうAirbnb EngineeringAtlassian DevelopersAutodesk EngineeringAWS BlogBitly Engineering BlogBox BlogsCloudera Developer BlogDropbox Tech BlogEngineering at QuoraEbay Tech BlogEvernote Tech BlogEtsy Code as CraftFacebook EngineeringFlickr CodeFoursquare Engineering BlogGitHub Engineering BlogGoogle Research BlogGroupon Engineering BlogHeroku Engineering BlogHubspot Engineering BlogHigh ScalabilityInstagram EngineeringIntel Software BlogJane Street Tech BlogLinkedIn EngineeringMicrosoft EngineeringMicrosoft Python EngineeringNetflix Tech BlogPaypal Developer BlogPinterest Engineering BlogQuora EngineeringReddit BlogSalesforce Engineering BlogSlack Engineering BlogSpotify LabsTwilio Engineering BlogTwitter EngineeringUber Engineering BlogYahoo Engineering BlogYelp Engineering BlogZynga Engineering Blogその他の参考資料、ページ:kilimchoi/engineering-blogsここにあるリストは比較的小規模なものにとどめ、kilimchoi/engineering-blogsにより詳細に記すことで重複しないようにしておくことにする。エンジニアブログへのリンクを追加する場合はここではなく、engineering-blogsレボジトリに追加することを検討してください。進行中の作業セクションの追加や、進行中の作業を手伝っていただける場合はこちら!MapReduceによる分散コンピューティングConsistent hashingScatter gatherContributeクレジットクレジット及び、参照ページは適時このリポジトリ内に記載してありますSpecial thanks to:Hired in techCracking the coding interviewHigh scalabilitycheckcheckzz/system-design-interviewshashank88/system_designmmcgrana/services-engineeringSystem design cheat sheetA distributed systems reading listCracking the system design interviewContact infoFeel free to contact me to discuss any issues, questions, or comments.My contact info can be found on my GitHub page.LicenseI am providing code and resources in this repository to you under an open source license.  Because this is my personal repository, the license you receive to my code and resources is from me and not my employer (Facebook).Copyright 2017 Donne MartinCreative Commons Attribution 4.0 International License (CC BY 4.0)http://creativecommons.org/licenses/by/4.0/"
51,51,scikit-learn/scikit-learn,https://github.com/scikit-learn/scikit-learn/blob/main/README.rst,Python,"         scikit-learn is a Python module for machine learning built on top ofSciPy and is distributed under the 3-Clause BSD license.The project was started in 2007 by David Cournapeau as a Google Summerof Code project, and since then many volunteers have contributed. Seethe About us pagefor a list of core contributors.It is currently maintained by a team of volunteers.Website: https://scikit-learn.orgInstallationDependenciesscikit-learn requires:Python (>= 3.8)NumPy (>= 1.17.3)SciPy (>= 1.5.0)joblib (>= 1.1.1)threadpoolctl (>= 2.0.0)Scikit-learn 0.20 was the last version to support Python 2.7 and Python 3.4.scikit-learn 1.0 and later require Python 3.7 or newer.scikit-learn 1.1 and later require Python 3.8 or newer.Scikit-learn plotting capabilities (i.e., functions start with plot_ andclasses end with \""Display\"") require Matplotlib (>= 3.1.3).For running the examples Matplotlib >= 3.1.3 is required.A few examples require scikit-image >= 0.16.2, a few examplesrequire pandas >= 1.0.5, some examples require seaborn >=0.9.0 and plotly >= 5.14.0.User installationIf you already have a working installation of numpy and scipy,the easiest way to install scikit-learn is using pip:pip install -U scikit-learnor conda:conda install -c conda-forge scikit-learnThe documentation includes more detailed installation instructions.ChangelogSee the changelogfor a history of notable changes to scikit-learn.DevelopmentWe welcome new contributors of all experience levels. The scikit-learncommunity goals are to be helpful, welcoming, and effective. TheDevelopment Guidehas detailed information about contributing code, documentation, tests, andmore. We've included some basic information in this README.Important linksOfficial source code repo: https://github.com/scikit-learn/scikit-learnDownload releases: https://pypi.org/project/scikit-learn/Issue tracker: https://github.com/scikit-learn/scikit-learn/issuesSource codeYou can check the latest sources with the command:git clone https://github.com/scikit-learn/scikit-learn.gitContributingTo learn more about making a contribution to scikit-learn, please see ourContributing guide.TestingAfter installation, you can launch the test suite from outside the sourcedirectory (you will need to have pytest >= 7.1.2 installed):pytest sklearnSee the web page https://scikit-learn.org/dev/developers/contributing.html#testing-and-improving-test-coveragefor more information.Random number generation can be controlled during testing by settingthe SKLEARN_SEED environment variable.Submitting a Pull RequestBefore opening a Pull Request, have a look at thefull Contributing page to make sure your code complieswith our guidelines: https://scikit-learn.org/stable/developers/index.htmlProject HistoryThe project was started in 2007 by David Cournapeau as a Google Summerof Code project, and since then many volunteers have contributed. Seethe About us pagefor a list of core contributors.The project is currently maintained by a team of volunteers.Note: scikit-learn was previously referred to as scikits.learn.Help and SupportDocumentationHTML documentation (stable release): https://scikit-learn.orgHTML documentation (development version): https://scikit-learn.org/dev/FAQ: https://scikit-learn.org/stable/faq.htmlCommunicationMailing list: https://mail.python.org/mailman/listinfo/scikit-learnGitter: https://gitter.im/scikit-learn/scikit-learnLogos & Branding: https://github.com/scikit-learn/scikit-learn/tree/main/doc/logosBlog: https://blog.scikit-learn.orgCalendar: https://blog.scikit-learn.org/calendar/Twitter: https://twitter.com/scikit_learnStack Overflow: https://stackoverflow.com/questions/tagged/scikit-learnGithub Discussions: https://github.com/scikit-learn/scikit-learn/discussionsWebsite: https://scikit-learn.orgLinkedIn: https://www.linkedin.com/company/scikit-learnYouTube: https://www.youtube.com/channel/UCJosFjYm0ZYVUARxuOZqnnw/playlistsFacebook: https://www.facebook.com/scikitlearnofficial/Instagram: https://www.instagram.com/scikitlearnofficial/TikTok: https://www.tiktok.com/@scikit.learnCitationIf you use scikit-learn in a scientific publication, we would appreciate citations: https://scikit-learn.org/stable/about.html#citing-scikit-learn"
52,52,AUTOMATIC1111/stable-diffusion-webui,https://github.com/AUTOMATIC1111/stable-diffusion-webui/blob/master/README.md,Python,"Stable Diffusion web UIA browser interface based on Gradio library for Stable Diffusion.FeaturesDetailed feature showcase with images:Original txt2img and img2img modesOne click install and run script (but you still must install python and git)OutpaintingInpaintingColor SketchPrompt MatrixStable Diffusion UpscaleAttention, specify parts of text that the model should pay more attention toa man in a ((tuxedo)) - will pay more attention to tuxedoa man in a (tuxedo:1.21) - alternative syntaxselect text and press Ctrl+Up or Ctrl+Down (or Command+Up or Command+Down if you're on a MacOS) to automatically adjust attention to selected text (code contributed by anonymous user)Loopback, run img2img processing multiple timesX/Y/Z plot, a way to draw a 3 dimensional plot of images with different parametersTextual Inversionhave as many embeddings as you want and use any names you like for themuse multiple embeddings with different numbers of vectors per tokenworks with half precision floating point numberstrain embeddings on 8GB (also reports of 6GB working)Extras tab with:GFPGAN, neural network that fixes facesCodeFormer, face restoration tool as an alternative to GFPGANRealESRGAN, neural network upscalerESRGAN, neural network upscaler with a lot of third party modelsSwinIR and Swin2SR (see here), neural network upscalersLDSR, Latent diffusion super resolution upscalingResizing aspect ratio optionsSampling method selectionAdjust sampler eta values (noise multiplier)More advanced noise setting optionsInterrupt processing at any time4GB video card support (also reports of 2GB working)Correct seeds for batchesLive prompt token length validationGeneration parametersparameters you used to generate images are saved with that imagein PNG chunks for PNG, in EXIF for JPEGcan drag the image to PNG info tab to restore generation parameters and automatically copy them into UIcan be disabled in settingsdrag and drop an image/text-parameters to promptboxRead Generation Parameters Button, loads parameters in promptbox to UISettings pageRunning arbitrary python code from UI (must run with --allow-code to enable)Mouseover hints for most UI elementsPossible to change defaults/mix/max/step values for UI elements via text configTiling support, a checkbox to create images that can be tiled like texturesProgress bar and live image generation previewCan use a separate neural network to produce previews with almost none VRAM or compute requirementNegative prompt, an extra text field that allows you to list what you don't want to see in generated imageStyles, a way to save part of prompt and easily apply them via dropdown laterVariations, a way to generate same image but with tiny differencesSeed resizing, a way to generate same image but at slightly different resolutionCLIP interrogator, a button that tries to guess prompt from an imagePrompt Editing, a way to change prompt mid-generation, say to start making a watermelon and switch to anime girl midwayBatch Processing, process a group of files using img2imgImg2img Alternative, reverse Euler method of cross attention controlHighres Fix, a convenience option to produce high resolution pictures in one click without usual distortionsReloading checkpoints on the flyCheckpoint Merger, a tab that allows you to merge up to 3 checkpoints into oneCustom scripts with many extensions from communityComposable-Diffusion, a way to use multiple prompts at onceseparate prompts using uppercase ANDalso supports weights for prompts: a cat :1.2 AND a dog AND a penguin :2.2No token limit for prompts (original stable diffusion lets you use up to 75 tokens)DeepDanbooru integration, creates danbooru style tags for anime promptsxformers, major speed increase for select cards: (add --xformers to commandline args)via extension: History tab: view, direct and delete images conveniently within the UIGenerate forever optionTraining tabhypernetworks and embeddings optionsPreprocessing images: cropping, mirroring, autotagging using BLIP or deepdanbooru (for anime)Clip skipHypernetworksLoras (same as Hypernetworks but more pretty)A sparate UI where you can choose, with preview, which embeddings, hypernetworks or Loras to add to your promptCan select to load a different VAE from settings screenEstimated completion time in progress barAPISupport for dedicated inpainting model by RunwayMLvia extension: Aesthetic Gradients, a way to generate images with a specific aesthetic by using clip images embeds (implementation of https://github.com/vicgalle/stable-diffusion-aesthetic-gradients)Stable Diffusion 2.0 support - see wiki for instructionsAlt-Diffusion support - see wiki for instructionsNow without any bad letters!Load checkpoints in safetensors formatEased resolution restriction: generated image's domension must be a multiple of 8 rather than 64Now with a license!Reorder elements in the UI from settings screenInstallation and RunningMake sure the required dependencies are met and follow the instructions available for both NVidia (recommended) and AMD GPUs.Alternatively, use online services (like Google Colab):List of Online ServicesInstallation on Windows 10/11 with NVidia-GPUs using release packageDownload sd.webui.zip from v1.0.0-pre and extract it's contents.Run update.bat.Run run.bat.For more details see Install-and-Run-on-NVidia-GPUsAutomatic Installation on WindowsInstall Python 3.10.6 (Newer version of Python does not support torch), checking \""Add Python to PATH\"".Install git.Download the stable-diffusion-webui repository, for example by running git clone https://github.com/AUTOMATIC1111/stable-diffusion-webui.git.Run webui-user.bat from Windows Explorer as normal, non-administrator, user.Automatic Installation on LinuxInstall the dependencies:# Debian-based:sudo apt install wget git python3 python3-venv# Red Hat-based:sudo dnf install wget git python3# Arch-based:sudo pacman -S wget git python3Navigate to the directory you would like the webui to be installed and execute the following command:bash <(wget -qO- https://raw.githubusercontent.com/AUTOMATIC1111/stable-diffusion-webui/master/webui.sh)Run webui.sh.Check webui-user.sh for options.Installation on Apple SiliconFind the instructions here.ContributingHere's how to add code to this repo: ContributingDocumentationThe documentation was moved from this README over to the project's wiki.For the purposes of getting Google and other search engines to crawl the wiki, here's a link to the (not for humans) crawlable wiki.CreditsLicenses for borrowed code can be found in Settings -> Licenses screen, and also in html/licenses.html file.Stable Diffusion - https://github.com/CompVis/stable-diffusion, https://github.com/CompVis/taming-transformersk-diffusion - https://github.com/crowsonkb/k-diffusion.gitGFPGAN - https://github.com/TencentARC/GFPGAN.gitCodeFormer - https://github.com/sczhou/CodeFormerESRGAN - https://github.com/xinntao/ESRGANSwinIR - https://github.com/JingyunLiang/SwinIRSwin2SR - https://github.com/mv-lab/swin2srLDSR - https://github.com/Hafiidz/latent-diffusionMiDaS - https://github.com/isl-org/MiDaSIdeas for optimizations - https://github.com/basujindal/stable-diffusionCross Attention layer optimization - Doggettx - https://github.com/Doggettx/stable-diffusion, original idea for prompt editing.Cross Attention layer optimization - InvokeAI, lstein - https://github.com/invoke-ai/InvokeAI (originally http://github.com/lstein/stable-diffusion)Sub-quadratic Cross Attention layer optimization - Alex Birch (Birch-san/diffusers#1), Amin Rezaei (https://github.com/AminRezaei0x443/memory-efficient-attention)Textual Inversion - Rinon Gal - https://github.com/rinongal/textual_inversion (we're not using his code, but we are using his ideas).Idea for SD upscale - https://github.com/jquesnelle/txt2imghdNoise generation for outpainting mk2 - https://github.com/parlance-zz/g-diffuser-botCLIP interrogator idea and borrowing some code - https://github.com/pharmapsychotic/clip-interrogatorIdea for Composable Diffusion - https://github.com/energy-based-model/Compositional-Visual-Generation-with-Composable-Diffusion-Models-PyTorchxformers - https://github.com/facebookresearch/xformersDeepDanbooru - interrogator for anime diffusers https://github.com/KichangKim/DeepDanbooruSampling in float32 precision from a float16 UNet - marunine for the idea, Birch-san for the example Diffusers implementation (https://github.com/Birch-san/diffusers-play/tree/92feee6)Instruct pix2pix - Tim Brooks (star), Aleksander Holynski (star), Alexei A. Efros (no star) - https://github.com/timothybrooks/instruct-pix2pixSecurity advice - RyotaKUniPC sampler - Wenliang Zhao - https://github.com/wl-zhao/UniPCTAESD - Ollin Boer Bohan - https://github.com/madebyollin/taesdLyCORIS - KohakuBlueleafInitial Gradio script - posted on 4chan by an Anonymous user. Thank you Anonymous user.(You)"
53,53,yandex-praktikum/backend_test_homework,https://github.com/yandex-praktikum/backend_test_homework/blob/master/README.md,Python,backend_test_homework
54,54,deepfakes/faceswap,https://github.com/deepfakes/faceswap/blob/master/README.md,Python,"deepfakes_faceswap  FaceSwap is a tool that utilizes deep learning to recognize and swap faces in pictures and videos.      Emma Stone/Scarlett Johansson FaceSwap using the Phaze-A model  Jennifer Lawrence/Steve Buscemi FaceSwap using the Villain model Make sure you check out INSTALL.md before getting started.deepfakes_faceswapManifestoFaceSwap has ethical uses.How To setup and run the projectOverviewExtractTrainConvertGUIGeneral notes:Help I need support!Discord ServerFaceSwap ForumDonatePatreonOne time Donations@torzdf@andenixaHow to contributeFor people interested in the generative modelsFor devsFor non-dev advanced usersFor end-usersFor hatersAbout github.com/deepfakesWhat is this repo?Why this repo?Why is it named 'deepfakes' if it is not /u/deepfakes?What if /u/deepfakes feels bad about that?About machine learningHow does a computer know how to recognize/shape faces? How does machine learning work? What is a neural network?ManifestoFaceSwap has ethical uses.When faceswapping was first developed and published, the technology was groundbreaking, it was a huge step in AI development. It was also completely ignored outside of academia because the code was confusing and fragmentary. It required a thorough understanding of complicated AI techniques and took a lot of effort to figure it out. Until one individual brought it together into a single, cohesive collection. It ran, it worked, and as is so often the way with new technology emerging on the internet, it was immediately used to create inappropriate content. Despite the inappropriate uses the software was given originally, it was the first AI code that anyone could download, run and learn by experimentation without having a Ph.D. in math, computer theory, psychology, and more. Before \""deepfakes\"" these techniques were like black magic, only practiced by those who could understand all of the inner workings as described in esoteric and endlessly complicated books and papers.\""Deepfakes\"" changed all that and anyone could participate in AI development. To us, developers, the release of this code opened up a fantastic learning opportunity. It allowed us to build on ideas developed by others, collaborate with a variety of skilled coders, experiment with AI whilst learning new skills and ultimately contribute towards an emerging technology which will only see more mainstream use as it progresses.Are there some out there doing horrible things with similar software? Yes. And because of this, the developers have been following strict ethical standards. Many of us don't even use it to create videos, we just tinker with the code to see what it does. Sadly, the media concentrates only on the unethical uses of this software. That is, unfortunately, the nature of how it was first exposed to the public, but it is not representative of why it was created, how we use it now, or what we see in its future. Like any technology, it can be used for good or it can be abused. It is our intention to develop FaceSwap in a way that its potential for abuse is minimized whilst maximizing its potential as a tool for learning, experimenting and, yes, for legitimate faceswapping.We are not trying to denigrate celebrities or to demean anyone. We are programmers, we are engineers, we are Hollywood VFX artists, we are activists, we are hobbyists, we are human beings. To this end, we feel that it's time to come out with a standard statement of what this software is and isn't as far as us developers are concerned.FaceSwap is not for creating inappropriate content.FaceSwap is not for changing faces without consent or with the intent of hiding its use.FaceSwap is not for any illicit, unethical, or questionable purposes.FaceSwap exists to experiment and discover AI techniques, for social or political commentary, for movies, and for any number of ethical and reasonable uses.We are very troubled by the fact that FaceSwap can be used for unethical and disreputable things. However, we support the development of tools and techniques that can be used ethically as well as provide education and experience in AI for anyone who wants to learn it hands-on. We will take a zero tolerance approach to anyone using this software for any unethical purposes and will actively discourage any such uses.How To setup and run the projectFaceSwap is a Python program that will run on multiple Operating Systems including Windows, Linux, and MacOS.See INSTALL.md for full installation instructions. You will need a modern GPU with CUDA support for best performance. Many AMD GPUs are supported through DirectML (Windows) and ROCm (Linux).OverviewThe project has multiple entry points. You will have to:Gather photos and/or videosExtract faces from your raw photosTrain a model on the faces extracted from the photos/videosConvert your sources with the modelCheck out USAGE.md for more detailed instructions.ExtractFrom your setup folder, run python faceswap.py extract. This will take photos from src folder and extract faces into extract folder.TrainFrom your setup folder, run python faceswap.py train. This will take photos from two folders containing pictures of both faces and train a model that will be saved inside the models folder.ConvertFrom your setup folder, run python faceswap.py convert. This will take photos from original folder and apply new faces into modified folder.GUIAlternatively, you can run the GUI by running python faceswap.py guiGeneral notes:All of the scripts mentioned have -h/--help options with arguments that they will accept. You're smart, you can figure out how this works, right?!NB: there is a conversion tool for video. This can be accessed by running python tools.py effmpeg -h. Alternatively, you can use ffmpeg to convert video into photos, process images, and convert images back to the video.Some tips:Reusing existing models will train much faster than starting from nothing.If there is not enough training data, start with someone who looks similar, then switch the data.Help I need support!Discord ServerYour best bet is to join the FaceSwap Discord server where there are plenty of users willing to help. Please note that, like this repo, this is a SFW Server!FaceSwap ForumAlternatively, you can post questions in the FaceSwap Forum. Please do not post general support questions in this repo as they are liable to be deleted without response.DonateThe developers work tirelessly to improve and develop FaceSwap. Many hours have been put in to provide the software as it is today, but this is an extremely time-consuming process with no financial reward. If you enjoy using the software, please consider donating to the devs, so they can spend more time implementing improvements.PatreonThe best way to support us is through our Patreon page:One time DonationsAlternatively you can give a one off donation to any of our Devs:@torzdfThere is very little FaceSwap code that hasn't been touched by torzdf. He is responsible for implementing the GUI, FAN aligner, MTCNN detector and porting the Villain, DFL-H128 and DFaker models to FaceSwap, as well as significantly improving many areas of the code.Bitcoin: bc1qpm22suz59ylzk0j7qk5e4c7cnkjmve2rmtrnc6Ethereum: 0xd3e954dC241B87C4E8E1A801ada485DC1d530F01Monero: 45dLrtQZ2pkHizBpt3P3yyJKkhcFHnhfNYPMSnz3yVEbdWm3Hj6Kr5TgmGAn3Far8LVaQf1th2n3DJVTRkfeB5ZkHxWozSXPaypal: @andenixaCreator of the Unbalanced and OHR models, as well as expanding various capabilities within the training process. Andenixa is currently working on new models and will take requests for donations.Paypal: How to contributeFor people interested in the generative modelsGo to the 'faceswap-model' to discuss/suggest/commit alternatives to the current algorithm.For devsRead this README entirelyFork the repoPlay with itCheck issues with the 'dev' tagFor devs more interested in computer vision and openCV, look at issues with the 'opencv' tag. Also feel free to add your own alternatives/improvementsFor non-dev advanced usersRead this README entirelyClone the repoPlay with itCheck issues with the 'advuser' tagAlso go to the 'faceswap Forum' and help others.For end-usersGet the code here and play with it if you canYou can also go to the faceswap Forum and help or get help from others.Be patient. This is a relatively new technology for developers as well. Much effort is already being put into making this program easy to use for the average user. It just takes time!Notice Any issue related to running the code has to be opened in the faceswap Forum!For hatersSorry, no time for that.About github.com/deepfakesWhat is this repo?It is a community repository for active users.Why this repo?The joshua-wu repo seems not active. Simple bugs like missing http:// in front of urls have not been solved since days.Why is it named 'deepfakes' if it is not /u/deepfakes?Because a typosquat would have happened sooner or later as project growsBecause we wanted to recognize the original authorBecause it will better federate contributors and usersWhat if /u/deepfakes feels bad about that?This is a friendly typosquat, and it is fully dedicated to the project. If /u/deepfakes wants to take over this repo/user and drive the project, he is welcomed to do so (Raise an issue, and he will be contacted on Reddit). Please do not send /u/deepfakes messages for help with the code you find here.About machine learningHow does a computer know how to recognize/shape faces? How does machine learning work? What is a neural network?It's complicated. Here's a good video that makes the process understandable:Here's a slightly more in depth video that tries to explain the basic functioning of a neural network:tl;dr: training data + trial and error"
55,55,geekcomputers/Python,https://github.com/geekcomputers/Python/blob/master/README.md,Python,"My Python Eggs 🐍 😄I do not consider myself as a programmer. I create these little programs as experiments to play with Python, or to solve problems for myself. I would gladly accept pointers from others to improve, simplify, or make the code more efficient. If you would like to make any comments then please feel free to email me: craig@geekcomputers.co.uk.This repository contains a collection of Python scripts that are designed to reduce human workload and serve as educational examples for beginners to get started with Python. The code documentation is aligned correctly for viewing in Notepad++ 🗒️Feel free to explore the scripts and use them for your learning and automation needs!List of Scripts:batch_file_rename.py - Batch rename a group of files in a specified directory, changing their extensions.create_dir_if_not_there.py - Check if a directory exists in the user's home directory. Create it if it doesn't exist.Fast Youtube Downloader - Download YouTube videos quickly with parallel threads using aria2c.Google Image Downloader - Query a given term and retrieve images from the Google Image database.dir_test.py - Test if the directory testdir exists. If not, create it.env_check.py - Check if all the required environment variables are set.blackjack.py - Casino Blackjack-21 game in Python.fileinfo.py - Show file information for a given file.folder_size.py - Scan the current directory and all subdirectories and display their sizes.logs.py - Search for all *.log files in a directory, zip them using the specified program, and date stamp them.move_files_over_x_days.py - Move all files over a specified age (in days) from the source directory to the destination directory.nslookup_check.py - Open the file server_list.txt and perform nslookup for each server to check the DNS entry.osinfo.py - Display information about the operating system on which the script is running.ping_servers.py - Ping the servers associated with the specified application group.ping_subnet.py - Scan the final range of a given IP subnet for available addresses.powerdown_startup.py - Ping machines in the server list. Load the putty session if the machine is up, or notify if it is not.puttylogs.py - Zip all the logs in the given directory.script_count.py - Scan the scripts directory and count the different types of scripts.get_youtube_view.py - Get more views for YouTube videos and repeat songs on YouTube.script_listing.py - List all files in a given directory and its subdirectories.testlines.py - Open a file and print out 100 lines of the set line variable.tweeter.py - Tweet text or a picture from the terminal.serial_scanner.py - List available serial ports in use on Linux and Windows systems.get_youtube_view.py - Get more views for YouTube videos and repeat songs on YouTube.CountMillionCharacter.py and CountMillionCharacter2.0 - Get character count of a text file.xkcd_downloader.py - Download the latest XKCD comic and place them in a new folder called \""comics\"".timymodule.py - An alternative to Python's 'timeit' module and easier to use.calculator.py - Implement a calculator using Python's eval() function.Google_News.py - Use BeautifulSoup to provide latest news headlines along with news links.cricket_live_score - Use BeautifulSoup to provide live cricket scores.youtube.py - Take a song name as input and fetch the YouTube URL of the best matching song and play it.site_health.py - Check the health of a remote server.SimpleStopWatch.py - Simple stop watch implementation using Python's time module.Changemac.py - Change your MAC address, generate a random MAC address, or enter input as a new MAC address on Linux (Successfully Tested in Ubuntu 18.04).whatsapp-monitor.py - Use Selenium to give online status updates about your contacts in WhatsApp on the terminal.whatsapp-chat-analyzer.py - WhatsApp group/individual chat analyzer that visualizes chat activity using matplotlib.JARVIS.py - Control Windows programs with your voice.Images Downloader - Download images from webpages on Unix-based systems.space_invader.py.py - Classical 2D space invader game to recall your childhood memories.Test Case Generator - Generate different types of test cases with a clean and friendly UI, used in competitive programming and software testing.Note: The content in this repository belongs to the respective authors and creators. I'm just providing a formatted README.md for better presentation."
56,56,matterport/Mask_RCNN,https://github.com/matterport/Mask_RCNN/blob/master/README.md,Python,"Mask R-CNN for Object Detection and SegmentationThis is an implementation of Mask R-CNN on Python 3, Keras, and TensorFlow. The model generates bounding boxes and segmentation masks for each instance of an object in the image. It's based on Feature Pyramid Network (FPN) and a ResNet101 backbone.The repository includes:Source code of Mask R-CNN built on FPN and ResNet101.Training code for MS COCOPre-trained weights for MS COCOJupyter notebooks to visualize the detection pipeline at every stepParallelModel class for multi-GPU trainingEvaluation on MS COCO metrics (AP)Example of training on your own datasetThe code is documented and designed to be easy to extend. If you use it in your research, please consider citing this repository (bibtex below). If you work on 3D vision, you might find our recently released Matterport3D dataset useful as well.This dataset was created from 3D-reconstructed spaces captured by our customers who agreed to make them publicly available for academic use. You can see more examples here.Getting Starteddemo.ipynb Is the easiest way to start. It shows an example of using a model pre-trained on MS COCO to segment objects in your own images.It includes code to run object detection and instance segmentation on arbitrary images.train_shapes.ipynb shows how to train Mask R-CNN on your own dataset. This notebook introduces a toy dataset (Shapes) to demonstrate training on a new dataset.(model.py, utils.py, config.py): These files contain the main Mask RCNN implementation.inspect_data.ipynb. This notebook visualizes the different pre-processing stepsto prepare the training data.inspect_model.ipynb This notebook goes in depth into the steps performed to detect and segment objects. It provides visualizations of every step of the pipeline.inspect_weights.ipynbThis notebooks inspects the weights of a trained model and looks for anomalies and odd patterns.Step by Step DetectionTo help with debugging and understanding the model, there are 3 notebooks(inspect_data.ipynb, inspect_model.ipynb,inspect_weights.ipynb) that provide a lot of visualizations and allow running the model step by step to inspect the output at each point. Here are a few examples:1. Anchor sorting and filteringVisualizes every step of the first stage Region Proposal Network and displays positive and negative anchors along with anchor box refinement.2. Bounding Box RefinementThis is an example of final detection boxes (dotted lines) and the refinement applied to them (solid lines) in the second stage.3. Mask GenerationExamples of generated masks. These then get scaled and placed on the image in the right location.4.Layer activationsOften it's useful to inspect the activations at different layers to look for signs of trouble (all zeros or random noise).5. Weight HistogramsAnother useful debugging tool is to inspect the weight histograms. These are included in the inspect_weights.ipynb notebook.6. Logging to TensorBoardTensorBoard is another great debugging and visualization tool. The model is configured to log losses and save weights at the end of every epoch.6. Composing the different pieces into a final resultTraining on MS COCOWe're providing pre-trained weights for MS COCO to make it easier to start. You canuse those weights as a starting point to train your own variation on the network.Training and evaluation code is in samples/coco/coco.py. You can import thismodule in Jupyter notebook (see the provided notebooks for examples) or youcan run it directly from the command line as such:# Train a new model starting from pre-trained COCO weightspython3 samples/coco/coco.py train --dataset=/path/to/coco/ --model=coco# Train a new model starting from ImageNet weightspython3 samples/coco/coco.py train --dataset=/path/to/coco/ --model=imagenet# Continue training a model that you had trained earlierpython3 samples/coco/coco.py train --dataset=/path/to/coco/ --model=/path/to/weights.h5# Continue training the last model you trained. This will find# the last trained weights in the model directory.python3 samples/coco/coco.py train --dataset=/path/to/coco/ --model=lastYou can also run the COCO evaluation code with:# Run COCO evaluation on the last trained modelpython3 samples/coco/coco.py evaluate --dataset=/path/to/coco/ --model=lastThe training schedule, learning rate, and other parameters should be set in samples/coco/coco.py.Training on Your Own DatasetStart by reading this blog post about the balloon color splash sample. It covers the process starting from annotating images to training to using the results in a sample application.In summary, to train the model on your own dataset you'll need to extend two classes:ConfigThis class contains the default configuration. Subclass it and modify the attributes you need to change.DatasetThis class provides a consistent way to work with any dataset.It allows you to use new datasets for training without having to changethe code of the model. It also supports loading multiple datasets at thesame time, which is useful if the objects you want to detect are notall available in one dataset.See examples in samples/shapes/train_shapes.ipynb, samples/coco/coco.py, samples/balloon/balloon.py, and samples/nucleus/nucleus.py.Differences from the Official PaperThis implementation follows the Mask RCNN paper for the most part, but there are a few cases where we deviated in favor of code simplicity and generalization. These are some of the differences we're aware of. If you encounter other differences, please do let us know.Image Resizing: To support training multiple images per batch we resize all images to the same size. For example, 1024x1024px on MS COCO. We preserve the aspect ratio, so if an image is not square we pad it with zeros. In the paper the resizing is done such that the smallest side is 800px and the largest is trimmed at 1000px.Bounding Boxes: Some datasets provide bounding boxes and some provide masks only. To support training on multiple datasets we opted to ignore the bounding boxes that come with the dataset and generate them on the fly instead. We pick the smallest box that encapsulates all the pixels of the mask as the bounding box. This simplifies the implementation and also makes it easy to apply image augmentations that would otherwise be harder to apply to bounding boxes, such as image rotation.To validate this approach, we compared our computed bounding boxes to those provided by the COCO dataset.We found that ~2% of bounding boxes differed by 1px or more, ~0.05% differed by 5px or more,and only 0.01% differed by 10px or more.Learning Rate: The paper uses a learning rate of 0.02, but we found that to betoo high, and often causes the weights to explode, especially when using a small batchsize. It might be related to differences between how Caffe and TensorFlow computegradients (sum vs mean across batches and GPUs). Or, maybe the official model uses gradientclipping to avoid this issue. We do use gradient clipping, but don't set it too aggressively.We found that smaller learning rates converge faster anyway so we go with that.CitationUse this bibtex to cite this repository:@misc{matterport_maskrcnn_2017,  title={Mask R-CNN for object detection and instance segmentation on Keras and TensorFlow},  author={Waleed Abdulla},  year={2017},  publisher={Github},  journal={GitHub repository},  howpublished={\\url{https://github.com/matterport/Mask_RCNN}},}ContributingContributions to this repository are welcome. Examples of things you can contribute:Speed Improvements. Like re-writing some Python code in TensorFlow or Cython.Training on other datasets.Accuracy Improvements.Visualizations and examples.You can also join our team and help us build even more projects like this one.RequirementsPython 3.4, TensorFlow 1.3, Keras 2.0.8 and other common packages listed in requirements.txt.MS COCO Requirements:To train or test on MS COCO, you'll also need:pycocotools (installation instructions below)MS COCO DatasetDownload the 5K minivaland the 35K validation-minus-minivalsubsets. More details in the original Faster R-CNN implementation.If you use Docker, the code has been verified to work onthis Docker container.InstallationClone this repositoryInstall dependenciespip3 install -r requirements.txtRun setup from the repository root directorypython3 setup.py installDownload pre-trained COCO weights (mask_rcnn_coco.h5) from the releases page.(Optional) To train or test on MS COCO install pycocotools from one of these repos. They are forks of the original pycocotools with fixes for Python3 and Windows (the official repo doesn't seem to be active anymore).Linux: https://github.com/waleedka/cocoWindows: https://github.com/philferriere/cocoapi.You must have the Visual C++ 2015 build tools on your path (see the repo for additional details)Projects Using this ModelIf you extend this model to other datasets or build projects that use it, we'd love to hear from you.4K Video Demo by Karol Majek.Images to OSM: Improve OpenStreetMap by adding baseball, soccer, tennis, football, and basketball fields.Splash of Color. A blog post explaining how to train this model from scratch and use it to implement a color splash effect.Segmenting Nuclei in Microscopy Images. Built for the 2018 Data Science BowlCode is in the samples/nucleus directory.Detection and Segmentation for Surgery Robots by the NUS Control & Mechatronics Lab.Reconstructing 3D buildings from aerial LiDARA proof of concept project by Esri, in collaboration with Nvidia and Miami-Dade County. Along with a great write up and code by Dmitry Kudinov, Daniel Hedges, and Omar Maher.Usiigaci: Label-free Cell Tracking in Phase Contrast MicroscopyA project from Japan to automatically track cells in a microfluidics platform. Paper is pending, but the source code is released. Characterization of Arctic Ice-Wedge Polygons in Very High Spatial Resolution Aerial ImageryResearch project to understand the complex processes between degradations in the Arctic and climate change. By Weixing Zhang, Chandi Witharana, Anna Liljedahl, and Mikhail Kanevskiy.Mask-RCNN ShinyA computer vision class project by HU Shiyu to apply the color pop effect on people with beautiful results.Mapping Challenge: Convert satellite imagery to maps for use by humanitarian organisations.GRASS GIS Addon to generate vector masks from geospatial imagery. Based on a Master's thesis by Ondřej Pešek."
57,57,donnemartin/data-science-ipython-notebooks,https://github.com/donnemartin/data-science-ipython-notebooks/blob/master/README.md,Python,"      data-science-ipython-notebooksIndexdeep-learningtensorflowtheanokerascaffescikit-learnstatistical-inference-scipypandasmatplotlibnumpypython-datakaggle-and-business-analysessparkmapreduce-pythonamazon web servicescommand linesmiscnotebook-installationcreditscontributingcontact-infolicense  deep-learningIPython Notebook(s) demonstrating deep learning functionality.  tensor-flow-tutorialsAdditional TensorFlow tutorials:pkmital/tensorflow_tutorialsnlintz/TensorFlow-Tutorialsalrojo/tensorflow-tutorialBinRoot/TensorFlow-Booktuanavu/tensorflow-basic-tutorialsNotebookDescriptiontsf-basicsLearn basic operations in TensorFlow, a library for various kinds of perceptual and language understanding tasks from Google.tsf-linearImplement linear regression in TensorFlow.tsf-logisticImplement logistic regression in TensorFlow.tsf-nnImplement nearest neighboars in TensorFlow.tsf-alexImplement AlexNet in TensorFlow.tsf-cnnImplement convolutional neural networks in TensorFlow.tsf-mlpImplement multilayer perceptrons in TensorFlow.tsf-rnnImplement recurrent neural networks in TensorFlow.tsf-gpuLearn about basic multi-GPU computation in TensorFlow.tsf-gvizLearn about graph visualization in TensorFlow.tsf-lvizLearn about loss visualization in TensorFlow.tensor-flow-exercisesNotebookDescriptiontsf-not-mnistLearn simple data curation by creating a pickle with formatted datasets for training, development and testing in TensorFlow.tsf-fully-connectedProgressively train deeper and more accurate models using logistic regression and neural networks in TensorFlow.tsf-regularizationExplore regularization techniques by training fully connected networks to classify notMNIST characters in TensorFlow.tsf-convolutionsCreate convolutional neural networks in TensorFlow.tsf-word2vecTrain a skip-gram model over Text8 data in TensorFlow.tsf-lstmTrain a LSTM character model over Text8 data in TensorFlow.  theano-tutorialsNotebookDescriptiontheano-introIntro to Theano, which allows you to define, optimize, and evaluate mathematical expressions involving multi-dimensional arrays efficiently. It can use GPUs and perform efficient symbolic differentiation.theano-scanLearn scans, a mechanism to perform loops in a Theano graph.theano-logisticImplement logistic regression in Theano.theano-rnnImplement recurrent neural networks in Theano.theano-mlpImplement multilayer perceptrons in Theano.  keras-tutorialsNotebookDescriptionkerasKeras is an open source neural network library written in Python. It is capable of running on top of either Tensorflow or Theano.setupLearn about the tutorial goals and how to set up your Keras environment.intro-deep-learning-annGet an intro to deep learning with Keras and Artificial Neural Networks (ANN).theanoLearn about Theano by working with weights matrices and gradients.keras-ottoLearn about Keras by looking at the Kaggle Otto challenge.ann-mnistReview a simple implementation of ANN for MNIST using Keras.conv-netsLearn about Convolutional Neural Networks (CNNs) with Keras.conv-net-1Recognize handwritten digits from MNIST using Keras - Part 1.conv-net-2Recognize handwritten digits from MNIST using Keras - Part 2.keras-modelsUse pre-trained models such as VGG16, VGG19, ResNet50, and Inception v3 with Keras.auto-encodersLearn about Autoencoders with Keras.rnn-lstmLearn about Recurrent Neural Networks (RNNs) with Keras.lstm-sentence-genLearn about RNNs using Long Short Term Memory (LSTM) networks with Keras.deep-learning-miscNotebookDescriptiondeep-dreamCaffe-based computer vision program which uses a convolutional neural network to find and enhance patterns in images.  scikit-learnIPython Notebook(s) demonstrating scikit-learn functionality.NotebookDescriptionintroIntro notebook to scikit-learn.  Scikit-learn adds Python support for large, multi-dimensional arrays and matrices, along with a large library of high-level mathematical functions to operate on these arrays.knnImplement k-nearest neighbors in scikit-learn.linear-regImplement linear regression in scikit-learn.svmImplement support vector machine classifiers with and without kernels in scikit-learn.random-forestImplement random forest classifiers and regressors in scikit-learn.k-meansImplement k-means clustering in scikit-learn.pcaImplement principal component analysis in scikit-learn.gmmImplement Gaussian mixture models in scikit-learn.validationImplement validation and model selection in scikit-learn.  statistical-inference-scipyIPython Notebook(s) demonstrating statistical inference with SciPy functionality.NotebookDescriptionscipySciPy is a collection of mathematical algorithms and convenience functions built on the Numpy extension of Python. It adds significant power to the interactive Python session by providing the user with high-level commands and classes for manipulating and visualizing data.effect-sizeExplore statistics that quantify effect size by analyzing the difference in height between men and women.  Uses data from the Behavioral Risk Factor Surveillance System (BRFSS) to estimate the mean and standard deviation of height for adult women and men in the United States.samplingExplore random sampling by analyzing the average weight of men and women in the United States using BRFSS data.hypothesisExplore hypothesis testing by analyzing the difference of first-born babies compared with others.  pandasIPython Notebook(s) demonstrating pandas functionality.NotebookDescriptionpandasSoftware library written for data manipulation and analysis in Python. Offers data structures and operations for manipulating numerical tables and time series.github-data-wranglingLearn how to load, clean, merge, and feature engineer by analyzing GitHub data from the Viz repo.Introduction-to-PandasIntroduction to Pandas.Introducing-Pandas-ObjectsLearn about Pandas objects.Data Indexing and SelectionLearn about data indexing and selection in Pandas.Operations-in-PandasLearn about operating on data in Pandas.Missing-ValuesLearn about handling missing data in Pandas.Hierarchical-IndexingLearn about hierarchical indexing in Pandas.Concat-And-AppendLearn about combining datasets: concat and append in Pandas.Merge-and-JoinLearn about combining datasets: merge and join in Pandas.Aggregation-and-GroupingLearn about aggregation and grouping in Pandas.Pivot-TablesLearn about pivot tables in Pandas.Working-With-StringsLearn about vectorized string operations in Pandas.Working-with-Time-SeriesLearn about working with time series in pandas.Performance-Eval-and-QueryLearn about high-performance Pandas: eval() and query() in Pandas.  matplotlibIPython Notebook(s) demonstrating matplotlib functionality.NotebookDescriptionmatplotlibPython 2D plotting library which produces publication quality figures in a variety of hardcopy formats and interactive environments across platforms.matplotlib-appliedApply matplotlib visualizations to Kaggle competitions for exploratory data analysis.  Learn how to create bar plots, histograms, subplot2grid, normalized plots, scatter plots, subplots, and kernel density estimation plots.Introduction-To-MatplotlibIntroduction to Matplotlib.Simple-Line-PlotsLearn about simple line plots in Matplotlib.Simple-Scatter-PlotsLearn about simple scatter plots in Matplotlib.Errorbars.ipynbLearn about visualizing errors in Matplotlib.Density-and-Contour-PlotsLearn about density and contour plots in Matplotlib.Histograms-and-BinningsLearn about histograms, binnings, and density in Matplotlib.Customizing-LegendsLearn about customizing plot legends in Matplotlib.Customizing-ColorbarsLearn about customizing colorbars in Matplotlib.Multiple-SubplotsLearn about multiple subplots in Matplotlib.Text-and-AnnotationLearn about text and annotation in Matplotlib.Customizing-TicksLearn about customizing ticks in Matplotlib.Settings-and-StylesheetsLearn about customizing Matplotlib: configurations and stylesheets.Three-Dimensional-PlottingLearn about three-dimensional plotting in Matplotlib.Geographic-Data-With-BasemapLearn about geographic data with basemap in Matplotlib.Visualization-With-SeabornLearn about visualization with Seaborn.  numpyIPython Notebook(s) demonstrating NumPy functionality.NotebookDescriptionnumpyAdds Python support for large, multi-dimensional arrays and matrices, along with a large library of high-level mathematical functions to operate on these arrays.Introduction-to-NumPyIntroduction to NumPy.Understanding-Data-TypesLearn about data types in Python.The-Basics-Of-NumPy-ArraysLearn about the basics of NumPy arrays.Computation-on-arrays-ufuncsLearn about computations on NumPy arrays: universal functions.Computation-on-arrays-aggregatesLearn about aggregations: min, max, and everything in between in NumPy.Computation-on-arrays-broadcastingLearn about computation on arrays: broadcasting in NumPy.Boolean-Arrays-and-MasksLearn about comparisons, masks, and boolean logic in NumPy.Fancy-IndexingLearn about fancy indexing in NumPy.SortingLearn about sorting arrays in NumPy.Structured-Data-NumPyLearn about structured data: NumPy's structured arrays.  python-dataIPython Notebook(s) demonstrating Python functionality geared towards data analysis.NotebookDescriptiondata structuresLearn Python basics with tuples, lists, dicts, sets.data structure utilitiesLearn Python operations such as slice, range, xrange, bisect, sort, sorted, reversed, enumerate, zip, list comprehensions.functionsLearn about more advanced Python features: Functions as objects, lambda functions, closures, *args, **kwargs currying, generators, generator expressions, itertools.datetimeLearn how to work with Python dates and times: datetime, strftime, strptime, timedelta.loggingLearn about Python logging with RotatingFileHandler and TimedRotatingFileHandler.pdbLearn how to debug in Python with the interactive source code debugger.unit testsLearn how to test in Python with Nose unit tests.  kaggle-and-business-analysesIPython Notebook(s) used in kaggle competitions and business analyses.NotebookDescriptiontitanicPredict survival on the Titanic.  Learn data cleaning, exploratory data analysis, and machine learning.churn-analysisPredict customer churn.  Exercise logistic regression, gradient boosting classifers, support vector machines, random forests, and k-nearest-neighbors.  Includes discussions of confusion matrices, ROC plots, feature importances, prediction probabilities, and calibration/descrimination.  sparkIPython Notebook(s) demonstrating spark and HDFS functionality.NotebookDescriptionsparkIn-memory cluster computing framework, up to 100 times faster for certain applications and is well suited for machine learning algorithms.hdfsReliably stores very large files across machines in a large cluster.  mapreduce-pythonIPython Notebook(s) demonstrating Hadoop MapReduce with mrjob functionality.NotebookDescriptionmapreduce-pythonRuns MapReduce jobs in Python, executing jobs locally or on Hadoop clusters. Demonstrates Hadoop Streaming in Python code with unit test and mrjob config file to analyze Amazon S3 bucket logs on Elastic MapReduce.  Disco is another python-based alternative.  awsIPython Notebook(s) demonstrating Amazon Web Services (AWS) and AWS tools functionality.Also check out:SAWS: A Supercharged AWS command line interface (CLI).Awesome AWS: A curated list of libraries, open source repos, guides, blogs, and other resources.NotebookDescriptionbotoOfficial AWS SDK for Python.s3cmdInteracts with S3 through the command line.s3distcpCombines smaller files and aggregates them together by taking in a pattern and target file.  S3DistCp can also be used to transfer large volumes of data from S3 to your Hadoop cluster.s3-parallel-putUploads multiple files to S3 in parallel.redshiftActs as a fast data warehouse built on top of technology from massive parallel processing (MPP).kinesisStreams data in real time with the ability to process thousands of data streams per second.lambdaRuns code in response to events, automatically managing compute resources.  commandsIPython Notebook(s) demonstrating various command lines for Linux, Git, etc.NotebookDescriptionlinuxUnix-like and mostly POSIX-compliant computer operating system.  Disk usage, splitting files, grep, sed, curl, viewing running processes, terminal syntax highlighting, and Vim.anacondaDistribution of the Python programming language for large-scale data processing, predictive analytics, and scientific computing, that aims to simplify package management and deployment.ipython notebookWeb-based interactive computational environment where you can combine code execution, text, mathematics, plots and rich media into a single document.gitDistributed revision control system with an emphasis on speed, data integrity, and support for distributed, non-linear workflows.rubyUsed to interact with the AWS command line and for Jekyll, a blog framework that can be hosted on GitHub Pages.jekyllSimple, blog-aware, static site generator for personal, project, or organization sites.  Renders Markdown or Textile and Liquid templates, and produces a complete, static website ready to be served by Apache HTTP Server, Nginx or another web server.pelicanPython-based alternative to Jekyll.djangoHigh-level Python Web framework that encourages rapid development and clean, pragmatic design. It can be useful to share reports/analyses and for blogging. Lighter-weight alternatives include Pyramid, Flask, Tornado, and Bottle.miscIPython Notebook(s) demonstrating miscellaneous functionality.NotebookDescriptionregexRegular expression cheat sheet useful in data wrangling.algorithmiaAlgorithmia is a marketplace for algorithms. This notebook showcases 4 different algorithms: Face Detection, Content Summarizer, Latent Dirichlet Allocation and Optical Character Recognition.notebook-installationanacondaAnaconda is a free distribution of the Python programming language for large-scale data processing, predictive analytics, and scientific computing that aims to simplify package management and deployment.Follow instructions to install Anaconda or the more lightweight miniconda.dev-setupFor detailed instructions, scripts, and tools to set up your development environment for data analysis, check out the dev-setup repo.running-notebooksTo view interactive content or to modify elements within the IPython notebooks, you must first clone or download the repository then run the notebook.  More information on IPython Notebooks can be found here.$ git clone https://github.com/donnemartin/data-science-ipython-notebooks.git$ cd data-science-ipython-notebooks$ jupyter notebookNotebooks tested with Python 2.7.x.creditsPython for Data Analysis: Data Wrangling with Pandas, NumPy, and IPython by Wes McKinneyPyCon 2015 Scikit-learn Tutorial by Jake VanderPlasPython Data Science Handbook by Jake VanderPlasParallel Machine Learning with scikit-learn and IPython by Olivier GriselStatistical Interference Using Computational Methods in Python by Allen DowneyTensorFlow Examples by Aymeric DamienTensorFlow Tutorials by Parag K MitalTensorFlow Tutorials by Nathan LintzTensorFlow Tutorials by Alexander R JohansenTensorFlow Book by Nishant ShuklaSummer School 2015 by mila-udemKeras tutorials by Valerio MaggioKaggleYhat BlogcontributingContributions are welcome!  For bug reports or requests please submit an issue.contact-infoFeel free to contact me to discuss any issues, questions, or comments.Email: donne.martin@gmail.comTwitter: @donne_martinGitHub: donnemartinLinkedIn: donnemartinWebsite: donnemartin.comlicenseThis repository contains a variety of content; some developed by Donne Martin, and some from third-parties.  The third-party content is distributed under the license provided by those parties.The content developed by Donne Martin is distributed under the following license:I am providing code and resources in this repository to you under an open source license.  Because this is my personal repository, the license you receive to my code and resources is from me and not my employer (Facebook).Copyright 2015 Donne MartinLicensed under the Apache License, Version 2.0 (the \""License\"");you may not use this file except in compliance with the License.You may obtain a copy of the License at   http://www.apache.org/licenses/LICENSE-2.0Unless required by applicable law or agreed to in writing, softwaredistributed under the License is distributed on an \""AS IS\"" BASIS,WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.See the License for the specific language governing permissions andlimitations under the License."
58,58,AntonOsika/gpt-engineer,https://github.com/AntonOsika/gpt-engineer/blob/main/README.md,Python,"GPT EngineerSpecify what you want it to build, the AI asks for clarification, and then builds it.GPT Engineer is made to be easy to adapt, extend, and make your agent learn how you want your code to look. It generates an entire codebase based on a prompt.DemoProject philosophySimple to get valueFlexible and easy to add new own \""AI steps\"". See steps.py.Incrementally build towards a user experience of:high level promptinggiving feedback to the AI that it will remember over timeFast handovers back and forth between AI and humanSimplicity, all computation is \""resumable\"" and persisted to the filesystemUsageChoose either stable or development.For stable release:python -m pip install gpt-engineerFor development:git clone https://github.com/AntonOsika/gpt-engineer.gitcd gpt-engineerpython -m pip install -e .(or: make install && source venv/bin/activate for a venv)API KeyEither just:export OPENAI_API_KEY=[your api key]Or:Create a copy of .env.template named .envAdd your OPENAI_API_KEY in .envCheck the Windows README for windows usage.RunningCreate an empty folder. If inside the repo, you can run:cp -r projects/example/ projects/my-new-projectFill in the prompt file in your new foldergpt-engineer projects/my-new-project(Note, gpt-engineer --help lets you see all available options. For example --steps use_feedback lets you improve/fix code in a project)By running gpt-engineer you agree to our terms.ResultsCheck the generated files in projects/my-new-project/workspaceAlternativesYou can check Docker instructions to use Docker, or simplydo everything in your browser:FeaturesYou can specify the \""identity\"" of the AI agent by editing the files in the preprompts folder.Editing the preprompts, and evolving how you write the project prompt, is how you make the agent remember things between projects.Each step in steps.py will have its communication history with GPT4 stored in the logs folder, and can be rerun with scripts/rerun_edited_message_logs.py.VisionThe gpt-engineer community is building the open platform for devs to tinker with and build their personal code-generation toolbox.If you are interested in contributing to this, we would be interested in having you.If you want to see our broader ambitions, check out the roadmap, and joindiscordto get input on how you can contribute to it.We are currently looking for more maintainers and community organizers. Email anton.osika@gmail.com if you are interested in an official role.Example              Demo.mov          "
59,59,faif/python-patterns,https://github.com/faif/python-patterns/blob/master/README.md,Python,"python-patternsA collection of design patterns and idioms in Python.Current PatternsCreational Patterns:PatternDescriptionabstract_factoryuse a generic function with specific factoriesborga singleton with shared-state among instancesbuilderinstead of using multiple constructors, builder object receives parameters and returns constructed objectsfactorydelegate a specialized function/method to create instanceslazy_evaluationlazily-evaluated property pattern in Pythonpoolpreinstantiate and maintain a group of instances of the same typeprototypeuse a factory and clones of a prototype for new instances (if instantiation is expensive)Structural Patterns:PatternDescription3-tierdata<->business logic<->presentation separation (strict relationships)adapteradapt one interface to another using a white-listbridgea client-provider middleman to soften interface changescompositelets clients treat individual objects and compositions uniformlydecoratorwrap functionality with other functionality in order to affect outputsfacadeuse one class as an API to a number of othersflyweighttransparently reuse existing instances of objects with similar/identical statefront_controllersingle handler requests coming to the applicationmvcmodel<->view<->controller (non-strict relationships)proxyan object funnels operations to something elseBehavioral Patterns:PatternDescriptionchain_of_responsibilityapply a chain of successive handlers to try and process the datacataloggeneral methods will call different specialized methods based on construction parameterchaining_methodcontinue callback next object methodcommandbundle a command and arguments to call lateriteratortraverse a container and access the container's elementsiterator (alt. impl.)traverse a container and access the container's elementsmediatoran object that knows how to connect other objects and act as a proxymementogenerate an opaque token that can be used to go back to a previous stateobserverprovide a callback for notification of events/changes to datapublish_subscribea source syndicates events/data to 0+ registered listenersregistrykeep track of all subclasses of a given classspecificationbusiness rules can be recombined by chaining the business rules together using boolean logicstatelogic is organized into a discrete number of potential states and the next state that can be transitioned tostrategyselectable operations over the same datatemplatean object imposes a structure but takes pluggable componentsvisitorinvoke a callback for all items of a collectionDesign for Testability Patterns:PatternDescriptiondependency_injection3 variants of dependency injectionFundamental Patterns:PatternDescriptiondelegation_patternan object handles a request by delegating to a second object (the delegate)Others:PatternDescriptionblackboardarchitectural model, assemble different sub-system knowledge to build a solution, AI approach - non gang of four patterngraph_searchgraphing algorithms - non gang of four patternhsmhierarchical state machine - non gang of four patternVideosDesign Patterns in Python by Peter UllrichSebastian Buczyński - Why you don't need design patterns in Python?You Don't Need That!Pluggable Libs Through Design PatternsContributingWhen an implementation is added or modified, please review the following guidelines:DocstringsAdd module level description in form of a docstring with links to corresponding references or other useful information.Add \""Examples in Python ecosystem\"" section if you know some. It shows how patterns could be applied to real-world problems.facade.py has a good example of detailed description,but sometimes the shorter one as in template.py would suffice.Python 2 compatibilityTo see Python 2 compatible versions of some patterns please check-out the legacy tag.Update READMEWhen everything else is done - update corresponding part of README.Travis CIPlease run tox or tox -e ci37 before submitting a patch to be sure your changes will pass CI.You can also run flake8 or pytest commands manually. Examples can be found in tox.ini.Contributing via issue triage You can triage issues and pull requests which may include reproducing bug reports or asking for vital information, such as version numbers or reproduction instructions. If you would like to start triaging issues, one easy way to get started is to subscribe to python-patterns on CodeTriage."
60,60,donnemartin/system-design-primer,https://github.com/donnemartin/system-design-primer/blob/master/README-ja.md,Python,"English ∙ 日本語 ∙ 简体中文 ∙ 繁體中文 | العَرَبِيَّة‎ ∙ বাংলা ∙ Português do Brasil ∙ Deutsch ∙ ελληνικά ∙ עברית ∙ Italiano ∙ 한국어 ∙ فارسی ∙ Polski ∙ русский язык ∙ Español ∙ ภาษาไทย ∙ Türkçe ∙ tiếng Việt ∙ Français | Add Translationシステム設計入門    動機・目的大規模システムのシステム設計を学ぶシステム設計面接課題に備える大規模システムの設計を学ぶスケーラブルなシステムのシステム設計を学ぶことは、より良いエンジニアになることに資するでしょう。システム設計はとても広範なトピックを含みます。システム設計原理については インターネット上には膨大な量の文献が散らばっています。このリポジトリは大規模システム構築に必要な知識を学ぶことができる 文献リストを体系的にまとめたもの です。オープンソースコミュニティから学ぶこのプロジェクトは、これからもずっと更新されていくオープンソースプロジェクトの初期段階にすぎません。Contributions は大歓迎です！システム設計面接課題に備えるコード技術面接に加えて、システム設計に関する知識は、多くのテック企業における 技術採用面接プロセス で 必要不可欠な要素 です。システム設計面接での頻出質問に備え、自分の解答と模範解答:ディスカッション、コードそして図表などを比較して学びましょう。面接準備に役立つその他のトピック:学習指針システム設計面接課題にどのように準備するかシステム設計課題例 とその解答オブジェクト指向設計課題例、 とその解答その他のシステム設計面接課題例暗記カード    このAnki用フラッシュカードデッキ は、間隔反復を活用して、システム設計のキーコンセプトの学習を支援します。システム設計デッキシステム設計練習課題デッキオブジェクト指向練習課題デッキ外出先や移動中の勉強に役立つでしょう。コーディング技術課題用の問題: 練習用インタラクティブアプリケーションコード技術面接用の問題を探している場合はこちら    姉妹リポジトリの Interactive Coding Challengesも見てみてください。追加の暗記デッキカードも入っています。Coding deckコントリビュートコミュニティから学ぶプルリクエスト等の貢献は積極的にお願いします:エラー修正セクション内容改善新規セクション追加翻訳する現在、内容の改善が必要な作業中のコンテンツはこちらです。コントリビュートの前にContributing Guidelinesを読みましょう。システム設計目次賛否も含めた様々なシステム設計の各トピックの概要。 全てはトレードオフの関係にあります。それぞれのセクションはより学びを深めるような他の文献へのリンクが貼られています。    システム設計トピック: まずはここからStep 1: スケーラビリティに関する動画を見るStep 2: スケーラビリティに関する記事を読む次のステップパフォーマンス vs スケーラビリティレイテンシー vs スループット可用性 vs 一貫性CAP理論CP - 一貫性(consistency)と分割性(partition)耐性AP - 可用性(availability)と分割性(partition)耐性一貫性 パターン弱い一貫性結果整合性強い一貫性可用性 パターンフェイルオーバーレプリケーションドメインネームシステム(DNS)コンテンツデリバリーネットワーク(CDN)プッシュCDNプルCDNロードバランサーアクティブ/パッシブ構成アクティブ/アクティブ構成Layer 4 ロードバランシングLayer 7 ロードバランシング水平スケーリングリバースプロキシ (WEBサーバー)ロードバランサー vs リバースプロキシアプリケーションレイヤーマイクロサービスサービスディスカバリーデータベースリレーショナルデータベースマネジメントシステム (RDBMS)マスター/スレーブ レプリケーションマスター/マスター レプリケーションフェデレーションシャーディングデノーマライゼーションSQL チューニングNoSQLキー/バリューストアドキュメントストアワイドカラムストアグラフ データベースSQL or NoSQLキャッシュクライアントキャッシングCDNキャッシングWebサーバーキャッシングデータベースキャッシングアプリケーションキャッシングデータベースクエリレベルでキャッシングするオブジェクトレベルでキャッシングするいつキャッシュを更新するのかキャッシュアサイドライトスルーライトビハインド (ライトバック)リフレッシュアヘッド非同期処理メッセージキュータスクキューバックプレッシャー通信伝送制御プロトコル (TCP)ユーザデータグラムプロトコル (UDP)遠隔手続呼出 (RPC)Representational state transfer (REST)セキュリティ補遺2の乗数表全てのプログラマーが知るべきレイテンシー値他のシステム設計面接例題実世界でのアーキテクチャ各企業のアーキテクチャ企業のエンジニアブログ作業中クレジット連絡情報ライセンス学習指針学習スパンに応じてみるべきトピックス (short, medium, long)Q: 面接のためには、ここにあるものすべてをやらないといけないのでしょうか？A: いえ、ここにあるすべてをやる必要はありません。面接で何を聞かれるかは以下の条件によって変わってきます:どれだけの技術経験があるかあなたの技術背景が何であるかどのポジションのために面接を受けているかどの企業の面接を受けているか運より経験のある候補者は一般的にシステム設計についてより深い知識を有していることを要求されるでしょう。システムアーキテクトやチームリーダーは各メンバーの持つような知識よりは深い見識を持っているべきでしょう。一流テック企業では複数回の設計面接を課されることが多いです。まずは広く始めて、そこからいくつかの分野に絞って深めていくのがいいでしょう。様々なシステム設計のトピックについて少しずつ知っておくことはいいことです。以下の学習ガイドを自分の学習に当てられる時間、技術経験、どの職位、どの会社に応募しているかなどを加味して自分用に調整して使うといいでしょう。短期間 - 幅広く システム設計トピックを学ぶ。いくつかの 面接課題を解くことで対策する。中期間 - 幅広く そして それなりに深くシステム設計トピックを学ぶ。多くの 面接課題を解くことで対策する。長期間 - 幅広く そして もっと深くシステム設計トピックを学ぶ。ほぼ全ての 面接課題を解くことで対策する。短期間中期間長期間システム設計トピック を読み、システム動作機序について広く知る👍👍👍次のリンク先のいくつかのページを読んで 各企業のエンジニアリングブログ 応募する会社について知る👍👍👍次のリンク先のいくつかのページを読む 実世界でのアーキテクチャ👍👍👍復習する システム設計面接課題にどのように準備するか👍👍👍とりあえず一周する システム設計課題例SomeManyMostとりあえず一周する オブジェクト指向設計問題と解答SomeManyMost復習する その他システム設計面接での質問例SomeManyMostシステム設計面接にどのようにして臨めばいいかシステム設計面接試験問題にどのように取り組むかシステム設計面接は open-ended conversation(Yes/Noでは答えられない口頭質問)です。 自分で会話を組み立てることを求められます。以下のステップに従って議論を組み立てることができるでしょう。この過程を確かなものにするために、次のセクションシステム設計課題例とその解答 を以下の指針に従って読み込むといいでしょう。ステップ 1: そのシステム使用例の概要、制約、推計値等を聞き出し、まとめるシステム仕様の要求事項を聞き出し、問題箇所を特定しましょう。使用例と制約を明確にするための質問を投げかけましょう。要求する推計値についても議論しておきましょう。誰がそのサービスを使うのか？どのように使うのか？何人のユーザーがいるのか？システムはどのような機能を果たすのか？システムへの入力と出力は？どれだけの容量のデータを捌く必要があるのか？一秒間に何リクエストの送信が想定されるか？読み書き比率の推定値はいくら程度か？ステップ 2: より高レベルのシステム設計を組み立てる重要なコンポーネントを全て考慮した高レベルのシステム設計概要を組み立てる。主要なコンポーネントと接続をスケッチして書き出す考えの裏付けをするステップ 3: 核となるコンポーネントを設計するそれぞれの主要なコンポーネントについての詳細を学ぶ。例えば、url短縮サービスの設計を問われた際には次のようにするといいでしょう:元のURLのハッシュ化したものを作り、それを保存するMD5 と Base62ハッシュ衝突SQL もしくは NoSQLデータベーススキーマハッシュ化されたURLを元のURLに再翻訳するデータベース参照API & オブジェクト指向の設計ステップ 4: システム設計のスケール与えられた制約条件からボトルネックとなりそうなところを割り出し、明確化する。  例えば、スケーラビリティの問題解決のために以下の要素を考慮する必要があるだろうか？ロードバランサー水平スケーリングキャッシングデータベースシャーディング取りうる解決策とそのトレードオフについて議論をしよう。全てのことはトレードオフの関係にある。ボトルネックについてはスケーラブルなシステム設計の原理を読むといいでしょう。ちょっとした暗算問題ちょっとした推計値を手計算ですることを求められることもあるかもしれません。補遺の以下の項目が役に立つでしょう:チラ裏計算でシステム設計する2の乗数表全てのプログラマーが知っておくべきレイテンシの参考値文献とその他の参考資料以下のリンク先ページを見てどのような質問を投げかけられるか概要を頭に入れておきましょう:システム設計面接で成功するには？システム設計面接アーキテクチャ、システム設計面接への導入システム設計課題例とその解答頻出のシステム設計面接課題と参考解答、コード及びダイアグラム解答は solutions/ フォルダ以下にリンクが貼られている問題Pastebin.com (もしくは Bit.ly) を設計する解答Twitterタイムライン (もしくはFacebookフィード)を設計するTwitter検索(もしくはFacebook検索)機能を設計する解答ウェブクローラーを設計する解答Mint.comを設計する解答SNSサービスのデータ構造を設計する解答検索エンジンのキー/バリュー構造を設計する解答Amazonのカテゴリ毎の売り上げランキングを設計する解答AWS上で100万人規模のユーザーを捌くサービスを設計する解答システム設計問題を追加するContributePastebin.com (もしくは Bit.ly) を設計する問題と解答を見るTwitterタイムライン&検索 (もしくはFacebookフィード&検索)を設計する問題と解答を見るウェブクローラーの設計問題と解答を見るMint.comの設計問題と解答を見るSNSサービスのデータ構造を設計する問題と解答を見る検索エンジンのキー/バリュー構造を設計する問題と解答を見るAmazonのカテゴリ毎の売り上げランキングを設計する問題と解答を見るAWS上で100万人規模のユーザーを捌くサービスを設計する問題と解答を見るオブジェクト指向設計問題と解答頻出のオブジェクト指向システム設計面接課題と参考解答、コード及びダイアグラム解答は solutions/ フォルダ以下にリンクが貼られている備考: このセクションは作業中です問題ハッシュマップの設計解答LRUキャッシュの設計解答コールセンターの設計解答カードのデッキの設計解答駐車場の設計解答チャットサーバーの設計解答円形配列の設計Contributeオブジェクト指向システム設計問題を追加するContributeシステム設計トピックス: まずはここからシステム設計の勉強は初めて？まず初めに、よく使われる設計原理について、それらが何であるか、どのように用いられるか、長所短所について基本的な知識を得る必要がありますステップ 1: スケーラビリティに関する動画を観て復習するHarvardでのスケーラビリティの講義ここで触れられているトピックス:垂直スケーリング水平スケーリングキャッシングロードバランシングデータベースレプリケーションデータベースパーティションステップ 2: スケーラビリティに関する資料を読んで復習するスケーラビリティここで触れられているトピックス:クローンデータベースキャッシュ非同期次のステップ次に、ハイレベルでのトレードオフについてみていく:パフォーマンス vs スケーラビリティレイテンシ vs スループット可用性 vs 一貫性全てはトレードオフの関係にあるというのを肝に命じておきましょう。それから、より深い内容、DNSやCDNそしてロードバランサーなどについて学習を進めていきましょう。パフォーマンス vs スケーラビリティリソースが追加されるのにつれて パフォーマンス が向上する場合そのサービスは スケーラブル であると言えるでしょう。一般的に、パフォーマンスを向上させるというのはすなわち計算処理を増やすことを意味しますが、データセットが増えた時などより大きな処理を捌けるようになることでもあります。1パフォーマンスvsスケーラビリティをとらえる他の考え方:パフォーマンス での問題を抱えている時、あなたのシステムは一人のユーザーにとって遅いと言えるでしょう。スケーラビリティ での問題を抱えているとき、一人のユーザーにとっては速いですが、多くのリクエストがある時には遅くなってしまうでしょう。その他の参考資料、ページスケーラビリティについてスケーラビリティ、可用性、安定性、パターンレイテンシー vs スループットレイテンシー とはなにがしかの動作を行う、もしくは結果を算出するのに要する時間スループット とはそのような動作や結果算出が単位時間に行われる回数一般的に、 最大限のスループット を 許容範囲内のレイテンシー で実現することを目指すのが普通だ。その他の参考資料、ページレイテンシー vs スループットを理解する可用性 vs 一貫性CAP 理論      Source: CAP theorem revisited分散型コンピュータシステムにおいては下の三つのうち二つまでしか同時に保証することはできない。:一貫性 - 全ての読み込みは最新の書き込みもしくはエラーを受け取る可用性 - 受け取る情報が最新のものだという保証はないが、全てのリクエストはレスポンスを必ず受け取る分断耐性 - ネットワーク問題によって順不同の分断が起きてもシステムが動作を続けるネットワークは信頼できないので、分断耐性は必ず保証しなければなりません。つまりソフトウェアシステムとしてのトレードオフは、一貫性を取るか、可用性を取るかを考えなければなりません。CP - 一貫性と分断耐性(consistency and partition tolerance)分断されたノードからのレスポンスを待ち続けているとタイムアウトエラーに陥る可能性があります。CPはあなたのサービスがアトミックな読み書き（不可分操作）を必要とする際にはいい選択肢でしょう。AP - 可用性と分断耐性(availability and partition tolerance)レスポンスはノード上にあるデータで最新のものを返します。つまり、最新版のデータが返されるとは限りません。分断が解消された後も、書き込みが反映されるのには時間がかかります。結果整合性　を求めるサービスの際にはAPを採用するのがいいでしょう。もしくは、外部エラーに関わらずシステムが稼働する必要がある際にも同様です。その他の参考資料、ページCAP 理論を振り返る平易な英語でのCAP 理論のイントロCAP FAQ一貫性パターン同じデータの複製が複数ある状態では、クライアントが一貫したデータ表示を受け取るために、どのようにそれらを同期すればいいのかという課題があります。 CAP 理論 における一貫性の定義を思い出してみましょう。全ての読み取りは最新の書き込みデータもしくはエラーを受け取るはずです。弱い一貫性書き込み後の読み取りでは、その最新の書き込みを読めたり読めなかったりする。ベストエフォート型のアプローチに基づく。このアプローチはmemcachedなどのシステムに見られます。弱い一貫性はリアルタイム性が必要なユースケース、例えばVoIP、ビデオチャット、リアルタイムマルチプレイヤーゲームなどと相性がいいでしょう。例えば、電話に出ているときに数秒間音声が受け取れなくなったとしたら、その後に接続が回復してもその接続が切断されていた間に話されていたことは聞き取れないというような感じです。結果整合性書き込みの後、読み取りは最終的にはその結果を読み取ることができる(ミリ秒ほど遅れてというのが一般的です)。データは非同期的に複製されます。このアプローチはDNSやメールシステムなどに採用されています。結果整合性は多くのリクエストを捌くサービスと相性がいいでしょう。強い一貫性書き込みの後、読み取りはそれを必ず読むことができます。データは同期的に複製されます。このアプローチはファイルシステムやRDBMSなどで採用されています。トランザクションを扱うサービスでは強い一貫性が必要でしょう。その他の参考資料、ページデータセンター間でのトランザクション可用性パターン高い可用性を担保するには主に次の二つのパターンがあります: フェイルオーバー と レプリケーション です。フェイルオーバーアクティブ・パッシブアクティブ・パッシブフェイルオーバーにおいては、周期信号はアクティブもしくはスタンバイ中のパッシブなサーバーに送られます。周期信号が中断された時には、パッシブだったサーバーがアクティブサーバーのIPアドレスを引き継いでサービスを再開します。起動までのダウンタイムはパッシブサーバーが「ホット」なスタンバイ状態にあるか、「コールド」なスタンバイ状態にあるかで変わります。アクティブなサーバーのみがトラフィックを捌きます。アクティブ・パッシブフェイルオーバーはマスター・スレーブフェイルオーバーと呼ばれることもあります。アクティブ・アクティブアクティブアクティブ構成では両方のサーバーがトラフィックを捌くことで負荷を分散します。これらのサーバーがパブリックなものの場合、DNSは両方のサーバーのパブリックIPを知っている必要があります。もし、プライベートなものな場合、アプリケーションロジックが両方のサーバーの情報について知っている必要があります。アクティブ・アクティブなフェイルオーバーはマスター・マスターフェイルオーバーと呼ばれることもあります。短所: フェイルオーバーフェイルオーバーではより多くのハードウェアを要し、複雑さが増します。最新の書き込みがパッシブサーバーに複製される前にアクティブが落ちると、データ欠損が起きる潜在可能性があります。レプリケーションマスター・スレーブ　と　マスター・マスターこのトピックは データベース セクションにおいてより詳細に解説されています:マスター・スレーブ レプリケーションマスター・マスター レプリケーションドメインネームシステム      Source: DNS security presentationドメインネームシステム (DNS) は www.example.com などのドメインネームをIPアドレスへと翻訳します。DNSは少数のオーソライズされたサーバーが上位に位置する階層的構造です。あなたのルーターもしくはISPは検索をする際にどのDNSサーバーに接続するかという情報を提供します。低い階層のDNSサーバーはその経路マップをキャッシュします。ただ、この情報は伝搬遅延によって陳腐化する可能性があります。DNSの結果はあなたのブラウザもしくはOSに一定期間（time to live (TTL)に設定された期間）キャッシュされます。NS record (name server) - あなたのドメイン・サブドメインでのDNSサーバーを特定します。MX record (mail exchange) - メッセージを受け取るメールサーバーを特定します。A record (address) - IPアドレスに名前をつけます。CNAME (canonical) - 他の名前もしくは　CNAME (example.com を www.example.com) もしくは A recordへと名前を指し示す。CloudFlare や Route 53 などのサービスはマネージドDNSサービスを提供しています。いくつかのDNSサービスでは様々な手法を使ってトラフィックを捌くことができます:加重ラウンドロビントラフィックがメンテナンス中のサーバーに行くのを防ぎます様々なクラスターサイズに応じて調整しますA/B テストレイテンシーベース地理ベース欠点: DNS上記で示されているようなキャッシングによって緩和されているとはいえ、DNSサーバーへの接続には少し遅延が生じる。DNSサーバーは、政府、ISP企業,そして大企業に管理されているが、それらの管理は複雑である。DNSサービスはDDoS attackの例で、IPアドレスなしにユーザーがTwitterなどにアクセスできなくなったように、攻撃を受ける可能性がある。その他の参考資料、ページDNS アーキテクチャWikipediaDNS 記事コンテンツデリバリーネットワーク(Content delivery network)      Source: Why use a CDNコンテンツデリバリーネットワーク(CDN)は世界中に配置されたプロキシサーバーのネットワークがユーザーに一番地理的に近いサーバーからコンテンツを配信するシステムのことです。AmazonのCloudFrontなどは例外的にダイナミックなコンテンツも配信しますが、一般的に、HTML/CSS/JS、写真、そして動画などの静的ファイルがCDNを通じて配信されます。そのサイトのDNSがクライアントにどのサーバーと交信するかという情報を伝えます。CDNを用いてコンテンツを配信することで以下の二つの理由でパフォーマンスが劇的に向上します:ユーザーは近くにあるデータセンターから受信できるバックエンドサーバーはCDNが処理してくれるリクエストに関しては処理する必要がなくなりますプッシュCDNプッシュCDNではサーバーデータに更新があった時には必ず、新しいコンテンツを受け取る方式です。コンテンツを用意し、CDNに直接アップロードし、URLをCDNを指すように指定するところまで、全て自分で責任を負う形です。コンテンツがいつ期限切れになるのか更新されるのかを設定することができます。コンテンツは新規作成時、更新時のみアップロードされることでトラフィックは最小化される一方、ストレージは最大限消費されてしまいます。トラフィックの少ない、もしくは頻繁にはコンテンツが更新されないサイトの場合にはプッシュCDNと相性がいいでしょう。コンテンツは定期的に再びプルされるのではなく、CDNに一度のみ配置されます。プルCDNプルCDNでは一人目のユーザーがリクエストした時に、新しいコンテンツをサービスのサーバーから取得します。コンテンツは自分のサーバーに保存して、CDNを指すURLを書き換えます。結果として、CDNにコンテンツがキャッシュされるまではリクエスト処理が遅くなります。time-to-live (TTL) はコンテンツがどれだけの期間キャッシュされるかを規定します。プルCDNはCDN 上でのストレージスペースを最小化しますが、有効期限が切れたファイルが更新前にプルされてしまうことで冗長なトラフィックに繋がってしまう可能性があります。大規模なトラフィックのあるサイトではプルCDNが相性がいいでしょう。というのも、トラフィックの大部分は最近リクエストされ、CDNに残っているコンテンツにアクセスするものであることが多いからです。欠点: CDNCDNのコストはトラフィック量によって変わります。もちろん、CDNを使わない場合のコストと比較するべきでしょう。TTLが切れる前にコンテンツが更新されると陳腐化する恐れがあります。CDNでは静的コンテンツがCDNを指すようにURLを更新する必要があります。その他の参考資料、ページグローバルに分散されたコンテンツデリバリーネットワークプッシュCDNとプルCDNの違いWikipediaロードバランサー      Source: Scalable system design patternsロードバランサーは入力されるクライアントのリクエストをアプリケーションサーバーやデータベースへと分散させる。どのケースでもロードバランサーはサーバー等計算リソースからのレスポンスを適切なクライアントに返す。ロードバランサーは以下のことに効果的です:リクエストが状態の良くないサーバーに行くのを防ぐリクエストを過剰に送るのを防ぐ特定箇所の欠陥でサービスが落ちることを防ぐロードバランサーは (費用の高い) ハードウェアもしくはHAProxyなどのソフトウェアで実現できる。他の利点としては:SSL termination - 入力されるリクエストを解読する、また、サーバーレスポンスを暗号化することでバックエンドのサーバーがこのコストが高くつきがちな処理を請け負わなくていいように肩代わりします。X.509 certificates をそれぞれのサーバーにインストールする必要をなくしますセッション管理 - クッキーを取り扱うウェブアプリがセッション情報を保持していない時などに、特定のクライアントのリクエストを同じインスタンスへと流します。障害に対応するために、アクティブ・パッシブ もしくは アクティブ・アクティブ モードのどちらにおいても、複数のロードバランサーを配置するのが一般的です。ロードバランサーは以下のような種々のメトリックを用いてトラフィックルーティングを行うことができます:ランダムLeast loadedセッション/クッキーラウンドロビンもしくは加重ラウンドロビンLayer 4Layer 7Layer 4 ロードバランシングLayer 4 ロードバランサーは トランスポートレイヤー を参照してどのようにリクエストを配分するか判断します。一般的に、トランスポートレイヤーとしては、ソース、送信先IPアドレス、ヘッダーに記述されたポート番号が含まれますが、パケットの中身のコンテンツは含みません。 Layer 4 ロードバランサーはネットワークパケットを上流サーバーへ届け、上流サーバーから配信することでネットワークアドレス変換 Network Address Translation (NAT) を実現します。Layer 7 ロードバランシングLayer 7 ロードバランサーは アプリケーションレイヤー を参照してどのようにリクエストを配分するか判断します。ヘッダー、メッセージ、クッキーなどのコンテンツのことです。Layer 7 ロードバランサーはネットワークトラフィックの終端を受け持ち メッセージを読み込み、ロードバランシングの判断をし、選択したサーバーとの接続を繋ぎます。例えば layer 7 ロードバランサーは動画のトラフィックを直接、そのデータをホストしているサーバーにつなぐと同時に、決済処理などのより繊細なトラフィックをセキュリティ強化されたサーバーに流すということもできる。柔軟性とのトレードオフになりますが、 layer 4 ロードバランサーではLayer 7ロードバランサーよりも所要時間、計算リソースを少なく済ませることができます。ただし、昨今の汎用ハードウェアではパフォーマンスは最小限のみしか発揮できないでしょう。水平スケーリングロードバランサーでは水平スケーリングによってパフォーマンスと可用性を向上させることができます。手頃な汎用マシンを追加することによってスケールアウトさせる方が、一つのサーバーをより高価なマシンにスケールアップする（垂直スケーリング）より費用対効果も高くなり、結果的に可用性も高くなります。また、汎用ハードウェアを扱える人材を雇う方が、特化型の商用ハードウェアを扱える人材を雇うよりも簡単でしょう。欠点: 水平スケーリング水平的にスケーリングしていくと、複雑さが増す上に、サーバーのクローニングが必要になる。サーバーはステートレスである必要がある: ユーザーに関連するセッションや、プロフィール写真などのデータを持ってはいけないセッションは一元的なデータベース (SQL、 NoSQL)などのデータストアにストアされるか キャッシュ (Redis、 Memcached)に残す必要があります。キャッシュやデータベースなどの下流サーバーは上流サーバーがスケールアウトするにつれてより多くの同時接続を保たなければなりません。欠点: ロードバランサーロードバランサーはリソースが不足していたり、設定が適切でない場合、システム全体のボトルネックになる可能性があります。単一障害点を除こうとしてロードバランサーを導入した結果、複雑さが増してしまうことになります。ロードバランサーが一つだけだとそこが単一障害点になってしまいます。一方で、ロードバランサーを複数にすると、さらに複雑さが増してしまいます。その他の参考資料、ページNGINX アーキテクチャHAProxy アーキテクチャガイドスケーラビリティWikipediaLayer 4 ロードバランシングLayer 7 ロードバランシングELB listener configリバースプロキシ(webサーバー)      Source: Wikipedia  リバースプロキシサーバーは内部サービスをまとめて外部に統一されたインターフェースを提供するウェブサーバーです。クライアントからのリクエストはそれに対応するサーバーに送られて、その後レスポンスをリバースプロキシがクライアントに返します。他には以下のような利点があります:より堅牢なセキュリティ - バックエンドサーバーの情報を隠したり、IPアドレスをブラックリスト化したり、クライアントごとの接続数を制限したりできます。スケーラビリティや柔軟性が増します - クライアントはリバースプロキシのIPしか見ないので、裏でサーバーをスケールしたり、設定を変えやすくなります。SSL termination - 入力されるリクエストを解読し、サーバーのレスポンスを暗号化することでサーバーがこのコストのかかりうる処理をしなくて済むようになります。X.509 証明書 を各サーバーにインストールする必要がなくなります。圧縮 - サーバーレスポンスを圧縮できますキャッシング - キャッシュされたリクエストに対して、レスポンスを返します静的コンテンツ - 静的コンテンツを直接送信することができます。HTML/CSS/JS写真動画などなどロードバランサー vs リバースプロキシ複数のサーバーがある時にはロードバランサーをデプロイすると役に立つでしょう。 しばしば、ロードバランサーは同じ機能を果たすサーバー群へのトラフィックを捌きます。リバースプロキシでは、上記に述べたような利点を、単一のウェブサーバーやアプリケーションレイヤーに対しても示すことができます。NGINX や HAProxy などの技術はlayer 7 リバースプロキシとロードバランサーの両方をサポートします。欠点: リバースプロキシリバースプロキシを導入するとシステムの複雑性が増します。単一のリバースプロキシは単一障害点になりえます。一方で、複数のリバースプロキシを導入すると(例: フェイルオーバー) 複雑性はより増します。その他の参考資料、ページリバースプロキシ vs ロードバランサーNGINX アーキテクチャHAProxy アーキテクチャ ガイドWikipediaアプリケーション層      Source: Intro to architecting systems for scaleウェブレイヤーをアプリケーション層 (プラットフォーム層とも言われる) と分離することでそれぞれの層を独立にスケール、設定することができるようになります。新しいAPIをアプリケーション層に追加する際に、不必要にウェブサーバーを追加する必要がなくなります。単一責任の原則 では、小さい自律的なサービスが協調して動くように提唱しています。小さいサービスの小さいチームが急成長のためにより積極的な計画を立てられるようにするためです。アプリケーション層は非同期処理もサポートします。マイクロサービス独立してデプロイできる、小規模なモジュール様式であるマイクロサービスもこの議論に関係してくる技術でしょう。それぞれのサービスは独自のプロセスを処理し、明確で軽量なメカニズムで通信して、その目的とする機能を実現します。1例えばPinterestでは以下のようなマイクロサービスに分かれています。ユーザープロフィール、フォロワー、フィード、検索、写真アップロードなどです。サービスディスカバリーConsul、 Etcd、 Zookeeper などのシステムでは、登録されているサービスの名前、アドレス、ポートの情報を監視することで、サービス同士が互いを見つけやすくしています。サービスの完全性の確認には Health checks が便利で、これには HTTP エンドポイントがよく使われます。 Consul と Etcd のいずれも組み込みの key-value store を持っており、設定データや共有データなどのデータを保存しておくことに使われます。欠点: アプリケーション層アーキテクチャ、運用、そしてプロセスを考慮すると、緩く結び付けられたアプリケーション層を追加するには、モノリシックなシステムとは異なるアプローチが必要です。マイクロサービスはデプロイと運用の点から見ると複雑性が増すことになります。その他の参考資料、ページスケールするシステムアーキテクチャを設計するためのイントロシステム設計インタビューを紐解くサービス指向アーキテクチャZookeeperのイントロダクションマイクロサービスを作るために知っておきたいことデータベース      Source: Scaling up to your first 10 million usersリレーショナルデータベースマネジメントシステム (RDBMS)SQLなどのリレーショナルデータベースはテーブルに整理されたデータの集合である。ACID はリレーショナルデータベースにおけるトランザクションのプロパティの集合である不可分性 - それぞれのトランザクションはあるかないかのいずれかである一貫性 - どんなトランザクションもデータベースをある確かな状態から次の状態に遷移させる。独立性 - 同時にトランザクションを処理することは、連続的にトランザクションを処理するのと同じ結果をもたらす。永続性 - トランザクションが処理されたら、そのように保存されるリレーショナルデータベースをスケールさせるためにはたくさんの技術がある: マスター・スレーブ レプリケーション、 マスター・マスター レプリケーション、 federation、 シャーディング、 非正規化、 そして SQL チューニングマスタースレーブ レプリケーションマスターデータベースが読み取りと書き込みを処理し、書き込みを一つ以上のスレーブデータベースに複製します。スレーブデータベースは読み取りのみを処理します。スレーブデータベースは木構造のように追加のスレーブにデータを複製することもできます。マスターデータベースがオフラインになった場合には、いずれかのスレーブがマスターに昇格するか、新しいマスターデータベースが追加されるまでは読み取り専用モードで稼働します。      Source: Scalability, availability, stability, patterns欠点: マスタースレーブ レプリケーションスレーブをマスターに昇格させるには追加のロジックが必要になる。マスタースレーブ レプリケーション、マスターマスター レプリケーションの 両方 の欠点は欠点: レプリケーションを参照マスターマスター レプリケーションいずれのマスターも読み取り書き込みの両方に対応する。書き込みに関してはそれぞれ協調する。いずれかのマスターが落ちても、システム全体としては読み書き両方に対応したまま運用できる。      Source: Scalability, availability, stability, patterns欠点: マスターマスター レプリケーションロードバランサーを導入するか、アプリケーションロジックを変更することでどこに書き込むかを指定しなければならない。大体のマスターマスターシステムは、一貫性が緩い（ACID原理を守っていない）もしくは、同期する時間がかかるために書き込みのレイテンシーが増加してしまっている。書き込みノードが追加され、レイテンシーが増加するにつれ書き込みの衝突の可能性が増える。マスタースレーブ レプリケーション、マスターマスター レプリケーションの 両方 の欠点は欠点: レプリケーション を参照欠点: レプリケーション新しいデータ書き込みを複製する前にマスターが落ちた場合にはそのデータが失われてしまう可能性がある。書き込みは読み取りレプリカにおいてリプレイされる。書き込みが多い場合、複製ノードが書き込みの処理のみで行き詰まって、読み取りの処理を満足に行えない可能性がある。読み取りスレーブノードの数が多ければ多いほど、複製しなければならない数も増え、複製時間が伸びてしまいます。システムによっては、マスターへの書き込みはマルチスレッドで並列処理できる一方、スレーブへの複製は単一スレッドで連続的に処理しなければならない場合があります。レプリケーションでは追加のハードウェアが必要になり、複雑性も増します。その他の参考資料、ページ: レプリケーションスケーラビリティ、 可用性、 スタビリティ パターンマルチマスター レプリケーションFederation      Source: Scaling up to your first 10 million usersフェデレーション (もしくは機能分割化とも言う) はデータベースを機能ごとに分割する。例えば、モノリシックな単一データベースの代わりに、データベースを フォーラム、 ユーザー、 プロダクト のように三つにすることで、データベース一つあたりの書き込み・読み取りのトラフィックが減り、その結果レプリケーションのラグも短くなります。データベースが小さくなることで、メモリーに収まるデータが増えます。キャッシュの局所性が高まるため、キャッシュヒット率も上がります。単一の中央マスターで書き込みを直列化したりしないため、並列で書き込みを処理することができ、スループットの向上が期待できます。欠点: federation大規模な処理やテーブルを要するスキーマの場合、フェデレーションは効果的とは言えないでしょう。どのデータベースに読み書きをするのかを指定するアプリケーションロジックを更新しなければなりません。server linkで二つのデータベースからのデータを連結するのはより複雑になるでしょう。フェデレーションでは追加のハードウェアが必要になり、複雑性も増します。その他の参考資料、ページ: federationScaling up to your first 10 million usersシャーディング      Source: Scalability, availability, stability, patternsシャーディングでは異なるデータベースにそれぞれがデータのサブセット断片のみを持つようにデータを分割します。ユーザーデータベースを例にとると、ユーザー数が増えるにつれてクラスターにはより多くの断片が加えられることになります。federationの利点に似ていて、シャーディングでは読み書きのトラフィックを減らし、レプリケーションを減らし、キャッシュヒットを増やすことができます。インデックスサイズも減らすことができます。一般的にはインデックスサイズを減らすと、パフォーマンスが向上しクエリ速度が速くなります。なにがしかのデータを複製する機能がなければデータロスにつながりますが、もし、一つのシャードが落ちても、他のシャードが動いていることになります。フェデレーションと同じく、単一の中央マスターが書き込みの処理をしなくても、並列で書き込みを処理することができ、スループットの向上が期待できます。ユーザーテーブルをシャードする一般的な方法は、ユーザーのラストネームイニシャルでシャードするか、ユーザーの地理的配置でシャードするなどです。欠点: シャーディングシャードに対応するようにアプリケーションロジックを変更しなければなりません。結果としてSQLクエリが複雑になります。シャードではデータ配分がいびつになってしまう可能性があります。例えば、標準ユーザーの集合を持つシャードがある場合、そのシャードが他のシャードよりも重い負荷を負うことになります。リバランシングをすると複雑性がより増します。consistent hashing に基づいたシャーディングでは、通信データを削減することもできます。複数のシャードからのデータを連結するのはより複雑です。シャーディングでは追加のハードウェアが必要になり、複雑性も増します。その他の参考資料、ページ: シャーディングシャードの登場シャードデータベースアーキテクチャConsistent hashing非正規化非正規化では、書き込みのパフォーマンスをいくらか犠牲にして読み込みのパフォーマンスを向上させようとします。計算的に重いテーブルの結合などをせずに、複数のテーブルに冗長なデータのコピーが書き込まれるのを許容します。いくつかのRDBMS例えば、PostgreSQL やOracleはこの冗長な情報を取り扱い、一貫性を保つためのmaterialized views という機能をサポートしています。フェデレーション や シャーディングなどのテクニックによってそれぞれのデータセンターに分配されたデータを合一させることはとても複雑な作業です。非正規化によってそのような複雑な処理をしなくて済むようになります。多くのシステムで、100対1あるいは1000対1くらいになるくらい読み取りの方が、書き込みのトラフィックよりも多いことでしょう。読み込みを行うために、複雑なデータベースのジョイン処理が含まれるものは計算的に高価につきますし、ディスクの処理時間で膨大な時間を費消してしまうことになります。欠点: 非正規化データが複製される。冗長なデータの複製が同期されるように制約が存在し、そのことでデータベース全体の設計が複雑化する。非正規化されたデータベースは過大な書き込みを処理しなければならない場合、正規化されているそれよりもパフォーマンスにおいて劣る可能性がある。その他の参考資料、ページ: 非正規化DenormalizationSQLチューニングSQLチューニングは広範な知識を必要とする分野で多くの 本 が書かれています。ボトルネックを明らかにし、シミュレートする上で、 ベンチマーク を定め、 プロファイル することはとても重要です。ベンチマーク - abなどのツールを用いて、高負荷の状況をシミュレーションしてみましょう。プロファイル - slow query log などのツールを用いて、パフォーマンス状況の確認をしましょう。ベンチマークとプロファイルをとることで以下のような効率化の選択肢をとることになるでしょう。スキーマを絞るMySQLはアクセス速度向上のため、ディスク上の連続したブロックへデータを格納しています。長さの決まったフィールドに対しては VARCHAR よりも CHAR を使うようにしましょう。CHAR の方が効率的に速くランダムにデータにアクセスできます。 一方、 VARCHAR では次のデータに移る前にデータの末尾を検知しなければならないために速度が犠牲になります。ブログの投稿など、大きなテキストには TEXT を使いましょう。 TEXT ではブーリアン型の検索も可能です。 TEXT フィールドには、テキストブロックが配置されている、ディスク上の場所へのポインターが保存されます。2の32乗や40億以下を超えない程度の大きな数には INT を使いましょう。通貨に関しては小数点表示上のエラーを避けるために DECIMAL を使いましょう。大きな BLOBS を保存するのは避けましょう。どこからそのオブジェクトを取ってくることができるかの情報を保存しましょう。VARCHAR(255) は8ビットで数えられる最大の文字数です。一部のDBMSでは、1バイトの利用効率を最大化するためにこの文字数がよく使われます。検索性能向上のため 、可能であれば NOT NULL 制約を設定しましょう。インデックスを効果的に用いるクエリ(SELECT、 GROUP BY、 ORDER BY、 JOIN) の対象となる列にインデックスを使うことで速度を向上できるかもしれません。インデックスは通常、平衡探索木であるB木の形で表されます。B木によりデータは常にソートされた状態になります。また検索、順次アクセス、挿入、削除を対数時間で行えます。インデックスを配置することはデータをメモリーに残すことにつながりより容量を必要とします。インデックスの更新も必要になるため書き込みも遅くなります。大量のデータをロードする際には、インデックスを切ってからデータをロードして再びインデックスをビルドした方が速いことがあります。高負荷なジョインを避けるパフォーマンス上必要なところには非正規化を適用するテーブルのパーティションテーブルを分割し、ホットスポットを独立したテーブルに分離してメモリーに乗せられるようにする。クエリキャッシュを調整する場合によってはクエリキャッシュ がパフォーマンス問題 を引き起こす可能性があるその他の参考資料、ページ: SQLチューニングMySQLクエリを最適化するためのTipsVARCHAR(255)をやたらよく見かけるのはなんで？null値はどのようにパフォーマンスに影響するのか？Slow query logNoSQLNoSQL は key-value store、 document-store、 wide column store、 もしくは graph databaseによって表現されるデータアイテムの集合です。データは一般的に正規化されておらず、アプリケーション側でジョインが行われます。大部分のNoSQLは真のACIDトランザクションを持たず、 結果整合性 的な振る舞いの方を好みます。BASE はしばしばNoSQLデータベースのプロパティを説明するために用いられます。CAP Theorem と対照的に、BASEは一貫性よりも可用性を優先します。Basically available - システムは可用性を保証します。Soft state - システムの状態は入力がなくても時間経過とともに変化する可能性があります。結果整合性 - システム全体は時間経過とともにその間に入力がないという前提のもと、一貫性が達成されます。SQLか？NoSQLか？ を選択するのに加えて、どのタイプのNoSQLがどの使用例に最も適するかを理解するのはとても有益です。このセクションでは キーバリューストア、 ドキュメントストア、 ワイドカラムストア、 と グラフデータベース について触れていきます。キーバリューストア概要: ハッシュテーブルキーバリューストアでは一般的にO(1)の読み書きができ、それらはメモリないしSSDで裏付けられています。データストアはキーを 辞書的順序 で保持することでキーの効率的な取得を可能にしています。キーバリューストアではメタデータを値とともに保持することが可能です。キーバリューストアはハイパフォーマンスな挙動が可能で、単純なデータモデルやインメモリーキャッシュレイヤーなどのデータが急速に変わる場合などに使われます。単純な処理のみに機能が制限されているので、追加の処理機能が必要な場合にはその複雑性はアプリケーション層に載せることになります。キーバリューストアはもっと複雑なドキュメントストアや、グラフデータベースなどの基本です。その他の参考資料、ページ: キーバリューストアキーバリューデータベースキーバリューストアの欠点Redisアーキテクチャメムキャッシュアーキテクチャドキュメントストア概要: ドキュメントがバリューとして保存されたキーバリューストアドキュメントストアはオブジェクトに関する全ての情報を持つドキュメント(XML、 JSON、 binaryなど)を中心に据えたシステムです。ドキュメントストアでは、ドキュメント自身の内部構造に基づいた、APIもしくはクエリ言語を提供します。 メモ：多くのキーバリューストアでは、値のメタデータを扱う機能を含んでいますが、そのことによって二つドキュメントストアとの境界線が曖昧になってしまっています。以上のことを実現するために、ドキュメントはコレクション、タグ、メタデータやディレクトリなどとして整理されています。ドキュメント同士はまとめてグループにできるものの、それぞれで全く異なるフィールドを持つ可能性があります。MongoDB や CouchDB などのドキュメントストアも、複雑なクエリを処理するためのSQLのような言語を提供しています。DynamoDB はキーバリューとドキュメントの両方をサポートしています。ドキュメントストアは高い柔軟性を担保するので、頻繁に変化するデータを扱う時に用いられます。その他の参考資料、ページ:  ドキュメントストアドキュメント指向 データベースMongoDB アーキテクチャCouchDB アーキテクチャElasticsearch アーキテクチャワイドカラムストア      Source: SQL & NoSQL, a brief history概要: ネストされたマップ カラムファミリー<行キー、 カラム<ColKey、 Value、 Timestamp>>ワイドカラムストアのデータの基本単位はカラム（ネーム・バリューのペア）です。それぞれのカラムはカラムファミリーとして（SQLテーブルのように）グループ化することができます。スーパーカラムファミリーはカラムファミリーの集合です。それぞれのカラムには行キーでアクセスすることができます。同じ行キーを持つカラムは同じ行として認識されます。それぞれの値は、バージョン管理とコンフリクトが起きた時のために、タイムスタンプを含みます。GoogleはBigtableを初のワイドカラムストアとして発表しました。それがオープンソースでHadoopなどでよく使われるHBase やFacebookによるCassandra などのプロジェクトに影響を与えました。BigTable、HBaseやCassandraなどのストアはキーを辞書形式で保持することで選択したキーレンジでのデータ取得を効率的にします。ワイドカラムストアは高い可用性とスケーラビリティを担保します。これらはとても大規模なデータセットを扱うことによく使われます。その他の参考資料、ページ:  ワイドカラムストアSQL & NoSQL簡単に歴史をさらうBigtable アーキテクチャHBase アーキテクチャCassandra アーキテクチャグラフデータベース      Source: Graph database概要: グラフグラフデータベースでは、それぞれのノードがレコードで、それぞれのアークは二つのノードを繋ぐ関係性として定義されます。グラフデータベースは多数の外部キーや多対多などの複雑な関係性を表すのに最適です。グラフデータベースはSNSなどのサービスの複雑な関係性モデルなどについて高いパフォーマンスを発揮します。比較的新しく、まだ一般的には用いられていないので、開発ツールやリソースを探すのが他の方法に比べて難しいかもしれません。多くのグラフはREST APIsを通じてのみアクセスできます。その他の参考資料、ページ:  グラフGraphデータベースNeo4jFlockDBその他の参考資料、ページ:  NoSQL基本用語の説明NoSQLデータベースについて調査と選択ガイドスケーラビリティNoSQLのイントロダクションNoSQLパターンSQLか？NoSQLか？      Source: Transitioning from RDBMS to NoSQLSQL を選ぶ理由:構造化されたデータ厳格なスキーマリレーショナルデータ複雑なジョインをする必要性トランザクションスケールする際のパターンが明確なとき開発者の数、コミュニティ、コード等がより充実しているインデックスによるデータ探索はとても速いNoSQL を選ぶ理由:準構造化されたデータダイナミックないし、フレキシブルなスキーマノンリレーショナルなデータ複雑なジョインをする必要がないデータの多くのTB (もしくは PB) を保存する集中的、大規模なデータ負荷に耐えられるIOPSについては極めて高いスループットを示すNoSQLに適するサンプルデータ:急激なクリックストリームやログデータの収集リーダーボードやスコアリングデータショッピングカートなどの一時的情報頻繁にアクセスされる ('ホットな') テーブルメタデータやルックアップテーブルその他の参考資料、ページ:  　SQLもしくはNoSQL最初の1000万ユーザーにスケールアップするためにSQLとNoSQLの違いキャッシュ      Source: Scalable system design patternsキャッシュはページの読み込み時間を削減し、サーバーやデータベースへの負荷を低減することができます。このモデルでは、実際の処理を保存するために、ディスパッチャーがまず以前にリクエストが送信されたかどうかを確認し、直前の結果を受け取ります。データベースはそのパーティションに渡って統合された読み取り書き込みの分配を要求しますが、人気アイテムはその分配を歪めてシステム全体のボトルネックになってしまうことがあります。データベースの前にキャッシュを差し込むことでこのように、均一でない負荷やトラフィックの急激な増加を吸収することができます。クライアントキャッシングキャッシュはOSやブラウザーなどのクライアントサイド、サーバーサイド もしくは独立のキャッシュレイヤーに設置することができます。CDNキャッシングCDN もキャッシュの一つとして考えることができます。Webサーバーキャッシングリバースプロキシ や Varnish などのキャッシュは静的そして動的なコンテンツを直接配信することができます。 webサーバーもリクエストをキャッシュしてアプリケーションサーバーに接続することなしにレスポンスを返すことができます。データベースキャッシングデータベースは普通、一般的な使用状況に適するようなキャッシングの設定を初期状態で持っています。この設定を特定の仕様に合わせて調整することでパフォーマンスを向上させることができます。アプリケーションキャッシングメムキャッシュなどのIn-memoryキャッシュやRedisはアプリケーションとデータストレージの間のキーバリューストアです。データはRAMで保持されるため、データがディスクで保存される一般的なデータベースよりもだいぶ速いです。RAM容量はディスクよりも限られているので、least recently used (LRU)などのcache invalidation アルゴリズムが 'コールド' なエントリを弾き、'ホット' なデータをRAMに保存します。Redisはさらに以下のような機能を備えています:パージステンス設定ソート済みセット、リストなどの組み込みデータ構造キャッシュには様々なレベルのものがありますが、いずれも大きく二つのカテゴリーのいずれかに分類することができます: データベースクエリ と オブジェクト です:行レベルクエリレベルFully-formed serializable objectsFully-rendered HTML一般的に、ファイルベースキャッシングはクローンを作り出してオートスケーリングを難しくしてしまうので避けるべきです。データベースクエリレベルでのキャッシングデータベースをクエリする際には必ずクエリをキーとしてハッシュして結果をキャッシュに保存しましょう。この手法はキャッシュ期限切れ問題に悩むことになります:複雑なクエリによりキャッシュされた結果を削除することが困難テーブルセルなどのデータ断片が変化した時に、その変化したセルを含むかもしれない全てのキャッシュされたクエリを削除する必要がある。オブジェクトレベルでのキャッシングデータをアプリケーションコードでそうするように、オブジェクトとして捉えてみましょう。アプリケーションに、データベースからのデータセットをクラスインスタンスやデータ構造として組み立てさせます。:そのデータが変更されたら、オブジェクトをキャッシュから削除すること非同期処理を許容します: ワーカーがキャッシュされたオブジェクトの中で最新のものを集めてきます何をキャッシュするか:ユーザーのセッション完全にレンダーされたウェブページアクテビティストリームユーザーグラフデータいつキャッシュを更新するかキャッシュに保存できる容量は限られているため、自分のケースではどのキャッシュ手法が一番いいかは検討する必要があります。キャッシュアサイド      Source: From cache to in-memory data gridアプリケーションはストレージへの読み書きの処理をします。キャッシュはストレージとは直接やりとりをしません。アプリケーションは以下のことをします:キャッシュの中のエントリを参照しますが、結果としてキャッシュミスになりますデータベースからエントリを取得しますエントリをキャッシュに追加しますエントリを返しますdef get_user(self, user_id):    user = cache.get(\""user.{0}\"", user_id)    if user is None:        user = db.query(\""SELECT * FROM users WHERE user_id = {0}\"", user_id)        if user is not None:            key = \""user.{0}\"".format(user_id)            cache.set(key, json.dumps(user))    return userMemcached は通常このように使われる。その後のキャッシュデータ読み込みは速いです。キャッシュアサイドはレージーローディングであるとも言われます。リクエストされたデータのみがキャッシュされ、リクエストされていないデータでキャッシュが溢れるのを防止します。欠点: キャッシュアサイド各キャッシュミスは三つのトリップを呼び出すことになり、体感できるほどの遅延が起きてしまいます。データベースのデータが更新されるとキャッシュデータは古いものになってしまいます。time-to-live (TTL)を設定することでキャッシュエントリの更新を強制的に行う、もしくはライトスルーを採用することでこの問題は緩和できます。ノードが落ちると、新規の空のノードで代替されることでレイテンシーが増加することになります。ライトスルー      Source: Scalability, availability, stability, patternsアプリケーションはキャッシュをメインのデータストアとして使い、そこにデータの読み書きを行います。一方、キャッシュはデータベースへの読み書きを担当します。アプリケーションはキャッシュにあるエントリを追加・更新しますキャッシュは同期的にデータストアに書き込みを行いますエントリを返しますアプリケーションコード:set_user(12345, {\""foo\"":\""bar\""})キャッシュコード:def set_user(user_id, values):    user = db.query(\""UPDATE Users WHERE id = {0}\"", user_id, values)    cache.set(user_id, user)ライトスルーは書き込み処理のせいで全体としては遅いオペレーションですが、書き込まれたばかりのデータに関する読み込みは速いです。ユーザー側は一般的にデータ更新時の方が読み込み時よりもレイテンシーに許容的です。キャッシュ内のデータは最新版で保たれます。欠点: ライトスルーノードが落ちたこと、もしくはスケーリングによって新しいノードが作成された時に、新しいノードはデータベース内のエントリーが更新されるまではエントリーをキャッシュしません。キャッシュアサイドとライトスルーを併用することでこの問題を緩和できます。書き込まれたデータの大部分は一度も読み込まれることはありません。このデータはTTLによって圧縮することができます。ライトビハインド (ライトバック)      Source: Scalability, availability, stability, patternsライトビハインドではアプリケーションは以下のことをします:キャッシュのエントリーを追加・更新しますデータストアへの書き込みを非同期的に行うことで、書き込みパフォーマンスを向上させます。欠点: ライトビハインドキャッシュがデータストア内のコンテンツにヒットする前にキャッシュが落ちるとデータ欠損が起きる可能性があります。キャッシュアサイドやライトスルーよりも実装が複雑になります。リフレッシュアヘッド      Source: From cache to in-memory data grid期限切れよりも前に、直近でアクセスされた全てのキャッシュエントリを自動的に更新するように設定することができます。もしどのアイテムが将来必要になるのかを正確に予測することができるのならば、リードスルーよりもレイテンシーを削減することができます。欠点: リフレッシュアヘッドどのアイテムが必要になるかの予測が正確でない場合にはリフレッシュアヘッドがない方がレイテンシーは良いという結果になってしまいます。欠点: キャッシュcache invalidationなどを用いて、データベースなどの真のデータとキャッシュの間の一貫性を保つ必要があります。Redisやmemcachedを追加することでアプリケーション構成を変更する必要があります。Cache invalidationも難しいですがそれに加えて、いつキャッシュを更新するかという複雑な問題にも悩まされることになります。その他の参考資料、ページFrom cache to in-memory data gridスケーラブルなシステムデザインパターンスケールできるシステムを設計するためのイントロダクションスケーラビリティ、可用性、安定性、パターンスケーラビリティAWS ElastiCacheのストラテジーWikipedia非同期処理      Source: Intro to architecting systems for scale非同期のワークフローはもし、連続的に行われるとリクエスト時間を圧迫してしまうような重い処理を別で処理する手法です。また、定期的にデータを集合させるなどの時間がかかるような処理を前もって処理しておくことにも役立ちます。メッセージキューメッセージキューはメッセージを受け取り、保存し、配信します。もし、処理がインラインで行うには遅すぎる場合、以下のようなワークフローでメッセージキューを用いるといいでしょう:アプリケーションはジョブをキューに配信し、ユーザーにジョブステータスを伝えます。ワーカーがジョブキューから受け取って、処理を行い、終了したらそのシグナルを返します。ユーザーの処理が止まることはなく、ジョブはバックグラウンドで処理されます。この間に、クライアントはオプションとして、タスクが完了したかのように見せるために小規模の処理を行います。例えば、ツイートを投稿するときに、ツイートはすぐにあなたのタイムラインに反映されたように見えますが、そのツイートが実際に全てのフォロワーに配信されるまでにはもう少し時間がかかっているでしょう。Redis はシンプルなメッセージ仲介としてはいいですが、メッセージが失われてしまう可能性があります。RabbitMQ はよく使われていますが、'AMQP'プロトコルに対応して、自前のノードを立てる必要があります。Amazon SQS という選択肢もありますが、レイテンシーが高く、メッセージが重複して配信されてしまう可能性があります。タスクキュータスクキューはタスクとその関連するデータを受け取り、処理した上でその結果を返します。スケジュール管理をできるほか、バックグラウンドでとても重いジョブをこなすこともできます。Celery はスケジューリングとpythonのサポートがあります。バックプレッシャーもし、キューが拡大しすぎると、メモリーよりもキューの方が大きくなりキャッシュミスが起こり、ディスク読み出しにつながり、パフォーマンスが低下することにつながります。バックプレッシャーはキューサイズを制限することで回避することができ、高いスループットを確保しキューにすでにあるジョブについてのレスポンス時間を短縮できます。キューがいっぱいになると、クライアントはサーバービジーもしくはHTTP 503をレスポンスとして受け取りまた後で時間をおいてアクセスするようにメッセージを受け取ります。クライアントはexponential backoffなどによって後ほど再度時間を置いてリクエストすることができます。欠点: 非同期処理キューを用いることで遅延が起こり、複雑さも増すため、あまり重くない計算処理やリアルタイムワークフローにおいては同期処理の方がいいでしょう。その他の参考資料、ページIt's all a numbers gameオーバーロードした時にバックプレッシャーを適用するLittle's lawメッセージキューとタスクキューの違いとは？通信      Source: OSI 7 layer modelHypertext transfer protocol (HTTP)HTTP はクライアントとサーバー間でのデータをエンコードして転送するための手法です。リクエスト・レスポンスに関わるプロトコルです。クライアントがリクエストをサーバーに投げ、サーバーがリクエストに関係するコンテンツと完了ステータス情報をレスポンスとして返します。HTTPは自己完結するので、間にロードバランサー、キャッシュ、エンクリプション、圧縮などのどんな中間ルーターが入っても動くようにできています。基本的なHTTPリクエストはHTTP動詞(メソッド)とリソース(エンドポイント)で成り立っています。以下がよくあるHTTP動詞です。:動詞詳細冪等性*セーフキャッシュできるかGETリソースを読み取るYesYesYesPOSTリソースを作成するもしくはデータを処理するトリガーNoNoYes レスポンスが新しい情報を含む場合PUTリソースを作成もしくは入れ替えるYesNoNoPATCHリソースを部分的に更新するNoNoYes レスポンスが新しい情報を含む場合DELETEリソースを削除するYesNoNo何度呼んでも同じ結果が返ってくることHTTPはTCP や UDP などの低級プロトコルに依存しているアプリケーションレイヤーのプロトコルである。その他の参考資料、ページ: HTTPHTTPってなに?HTTP と TCPの違いPUT と PATCHの違い伝送制御プロトコル (TCP)      Source: How to make a multiplayer gameTCPはIP networkの上で成り立つ接続プロトコルです。接続はhandshakeによって開始、解除されます。全ての送信されたパケットは欠損なしで送信先に送信された順番で到達するように以下の方法で保証されています:シーケンス番号とchecksum fieldsが全てのパケットに用意されているAcknowledgementパケットと自動再送信もし送信者が正しいレスポンスを受け取らなかったとき、パケットを再送信します。複数のタイムアウトがあったとき、接続は解除されます。TCP はフロー制御 と 輻輳制御も実装しています。これらの機能によって速度は低下し、一般的にUDPよりも非効率な転送手段になっています。ハイスループットを実現するために、ウェブサーバーはかなり大きな数のTCP接続を開いておくことがあり、そのことでメモリー使用が圧迫されます。ウェブサーバスレッドと例えばmemcached サーバーの間で多数のコネクションを保っておくことは高くつくかもしれません。可能なところではUDPに切り替えるだけでなくコネクションプーリングなども役立つかもしれません。TCPは高い依存性を要し、時間制約が厳しくないものに適しているでしょう。ウェブサーバー、データベース情報、SMTP、FTPやSSHなどの例に適用されます。以下の時にUDPよりもTCPを使うといいでしょう:全てのデータが欠損することなしに届いてほしいネットワークスループットの最適な自動推測をしてオペレーションしたいユーザデータグラムプロトコル (UDP)      Source: How to make a multiplayer gameUDPはコネクションレスです。データグラム（パケットのようなもの）はデータグラムレベルでの保証しかされません。データグラムは順不同で受け取り先に到着したりそもそも着かなかったりします。UDPは輻輳制御をサポートしません。TCPにおいてはサポートされているこれらの保証がないため、UDPは一般的に、TCPよりも効率的です。UDPはサブネット上のすべての機器にデータグラムを送信することができます。これはDHCP において役に立ちます。というのも、クライアントはまだIPアドレスを取得していないので、IPアドレスを必要とするTCPによるストリームができないからです。UDPは信頼性の面では劣りますが、VoIP、ビデオチャット、ストリーミングや同時通信マルチプレイヤーゲームなどのリアルタイム性が重視される時にはとても効果的です。TCPよりもUDPを使うのは:レイテンシーを最低限に抑えたい時データ欠損よりも、データ遅延を重視するときエラー修正を自前で実装したいときその他の参考資料、ページ: TCP と UDPゲームプログラミングのためのネットワークTCP と UDP プロトコルの主な違いTCP と UDPの違いTransmission control protocolUser datagram protocolFacebookのメムキャッシュスケーリング遠隔手続呼出 (RPC)      Source: Crack the system design interviewRPCではクライアントがリモートサーバーなどの異なるアドレス空間でプロシージャーが処理されるようにします。プロシージャーはローカルでのコールのように、クライアントからサーバーにどのように通信するかという詳細を省いた状態でコードが書かれます。リモートのコールは普通、ローカルのコールよりも遅く、信頼性に欠けるため、RPCコールをローカルコールと区別させておくことが好ましいでしょう。人気のRPCフレームワークは以下です。Protobuf、 Thrift、AvroRPC は リクエストレスポンスプロトコル:クライアントプログラム - クライアントスタブプロシージャーを呼び出します。パラメータはローカルでのプロシージャーコールのようにスタックへとプッシュされていきます。クライアントスタブプロシージャー - プロシージャIDとアーギュメントをパックしてリクエストメッセージにします。クライアント通信モジュール - OSがクライアントからサーバーへとメッセージを送ります。サーバー通信モジュール - OSが受け取ったパケットをサーバースタブプロシージャーに受け渡します。サーバースタブプロシージャー -  結果を展開し、プロシージャーIDにマッチするサーバープロシージャーを呼び出し、結果を返します。サーバーレスポンスは上記のステップを逆順で繰り返します。Sample RPC calls:GET /someoperation?data=anIdPOST /anotheroperation{  \""data\"":\""anId\"";  \""anotherdata\"": \""another value\""}RPCは振る舞いを公開することに焦点を当てています。RPCは内部通信パフォーマンスを理由として使われることが多いです。というのも、使用する状況に合わせてネイティブコールを自作することができるからです。ネイティブライブラリー (aka SDK) を呼ぶのは以下の時:ターゲットのプラットフォームを知っている時ロジックがどのようにアクセスされるのかを管理したいときライブラリー外でエラーがどのようにコントロールされるかを管理したい時パフォーマンスとエンドユーザーエクスペリエンスが最優先の時REST プロトコルに従うHTTP APIはパブリックAPIにおいてよく用いられます。欠点: RPCRPCクライアントとはサービス実装により厳密に左右されることになります。新しいオペレーション、使用例があるたびに新しくAPIが定義されなければなりません。RPCをデバッグするのは難しい可能性があります。既存のテクノロジーをそのまま使ってサービスを構築することはできないかもしれません。例えば、SquidなどのサーバーにRPCコールが正しくキャッシュ されるように追加で骨を折る必要があるかもしれません。Representational state transfer (REST)RESTは、クライアントがサーバーによってマネージされるリソースに対して処理を行うクライアント・サーバーモデルを支持するアーキテキチャスタイルです。サーバーは操作できるもしくは新しいリソースレプレゼンテーションを受け取ることができるようなリソースやアクションのレプレゼンテーションを提供します。すべての通信はステートレスでキャッシュ可能でなければなりません。RESTful なインターフェースには次の四つの特徴があります:特徴的なリソース (URI in HTTP) - どのオペレーションであっても同じURIを使う。HTTP動詞によって変わる (Verbs in HTTP) - 動詞、ヘッダー、ボディを使う自己説明的なエラーメッセージ (status response in HTTP) - ステータスコードを使い、新しく作ったりしないこと。HATEOAS (HTML interface for HTTP) - 自分のwebサービスがブラウザで完全にアクセスできること。サンプル REST コール:GET /someresources/anIdPUT /someresources/anId{\""anotherdata\"": \""another value\""}RESTはデータを公開することに焦点を当てています。クライアントとサーバーのカップリングを最小限にするもので、パブリックAPIなどによく用いられます。RESTはURI、 representation through headers、そして、GET、POST、PUT、 DELETE、PATCHなどのHTTP動詞等のよりジェネリックで統一されたメソッドを用います。ステートレスであるのでRESTは水平スケーリングやパーティショニングに最適です。欠点: RESTRESTはデータ公開に焦点を当てているので、リソースが自然に整理されていなかったり、シンプルなヒエラルキーで表せられない時にはよい選択肢とは言えないかもしれません。例えば、とあるイベントのセットにマッチするすべての更新情報を返すと言った処理は簡単にはパスで表現することができません。RESTでは、URIパス、クエリパラメータ、そして場合によってはリクエストボディなどによって実装されることが多いでしょう。RESTは少数の動詞に依存しています(GET、POST、PUT、DELETE、そして PATCH) が時には使いたい事例に合わないことがあります。例えば、期限の切れたドキュメントをアーカイブに移したい場合などはこれらの動詞の中には綺麗にはフィットしません。ネストされたヒエラルキーの中にあるリソースをとってくるのはシングルビューを描画するのにクライアントとサーバー間で数回やりとりしなければなりません。例として、ブログエントリーのコンテンツとそれに対するコメントを表示する場合などです。様々なネットワーク環境で動作する可能性が考えられるモバイルアプリケーションにおいてはこのような複数のやり取りは好ましくありません。時が経つにつれて、APIレスポンスにより多くのフィールドが与えられて、古いクライアントはすでにいらないものも含めてすべてのデータフィールドを受け取ることになります。そのことで、ペイロードが大きくなりすぎて、レイテンシーも拡大することになります。RPCとREST比較OperationRPCRESTサインアップPOST /signupPOST /personsリザインPOST /resign{\""personid\"": \""1234\""}DELETE /persons/1234Person読み込みGET /readPerson?personid=1234GET /persons/1234Personのアイテムリスト読み込みGET /readUsersItemsList?personid=1234GET /persons/1234/itemsPersonのアイテムへのアイテム追加POST /addItemToUsersItemsList{\""personid\"": \""1234\"";\""itemid\"": \""456\""}POST /persons/1234/items{\""itemid\"": \""456\""}アイテム更新POST /modifyItem{\""itemid\"": \""456\"";\""key\"": \""value\""}PUT /items/456{\""key\"": \""value\""}アイテム削除POST /removeItem{\""itemid\"": \""456\""}DELETE /items/456  Source: Do you really know why you prefer REST over RPCその他の参考資料、ページ: REST と RPCDo you really know why you prefer REST over RPCWhen are RPC-ish approaches more appropriate than REST?REST vs JSON-RPCDebunking the myths of RPC and RESTWhat are the drawbacks of using RESTCrack the system design interviewThriftWhy REST for internal use and not RPCセキュリティこのセクションは更新が必要です。contributingしてください！セキュリティは幅広いトピックです。十分な経験、セキュリティ分野のバックグラウンドがなくても、セキュリティの知識を要する職に応募するのでない限り、基本以上のことを知る必要はないでしょう。情報伝達、保存における暗号化XSS や SQL injectionを防ぐために、全てのユーザー入力もしくはユーザーに露出される入力パラメーターをサニタイズするSQL injectionを防ぐためにパラメータ化されたクエリを用いる。least privilegeの原理を用いるその他の参考資料、ページ:開発者のためのセキュリティガイドOWASP top ten補遺暗算で、推計値を求める必要があることも時にはあります。例えば、ディスクから100枚イメージ分のサムネイルを作る時間を求めたり、その時にどれだけディスクメモリーが消費されるかなどの値です。2の乗数表 と 全てのプログラマーが知るべきレイテンシー値 は良い参考になるでしょう。2の乗数表乗数           厳密な値         約        Bytes---------------------------------------------------------------7                             1288                             25610                           1024   1 thousand           1 KB16                         65,536                       64 KB20                      1,048,576   1 million            1 MB30                  1,073,741,824   1 billion            1 GB32                  4,294,967,296                        4 GB40              1,099,511,627,776   1 trillion           1 TBその他の参考資料、ページ:2の乗数表全てのプログラマーが知るべきレイテンシー値Latency Comparison Numbers--------------------------L1 cache reference                           0.5 nsBranch mispredict                            5   nsL2 cache reference                           7   ns                      14x L1 cacheMutex lock/unlock                           25   nsMain memory reference                      100   ns                      20x L2 cache, 200x L1 cacheCompress 1K bytes with Zippy            10,000   ns       10 usSend 1 KB bytes over 1 Gbps network     10,000   ns       10 usRead 4 KB randomly from SSD*           150,000   ns      150 us          ~1GB/sec SSDRead 1 MB sequentially from memory     250,000   ns      250 usRound trip within same datacenter      500,000   ns      500 usRead 1 MB sequentially from SSD*     1,000,000   ns    1,000 us    1 ms  ~1GB/sec SSD, 4X memoryDisk seek                           10,000,000   ns   10,000 us   10 ms  20x datacenter roundtripRead 1 MB sequentially from 1 Gbps  10,000,000   ns   10,000 us   10 ms  40x memory, 10X SSDRead 1 MB sequentially from disk    30,000,000   ns   30,000 us   30 ms 120x memory, 30X SSDSend packet CA->Netherlands->CA    150,000,000   ns  150,000 us  150 msNotes-----1 ns = 10^-9 seconds1 us = 10^-6 seconds = 1,000 ns1 ms = 10^-3 seconds = 1,000 us = 1,000,000 ns上記表に基づいた役に立つ数値:ディスクからの連続読み取り速度 30 MB/s1 Gbps Ethernetからの連続読み取り速度　100 MB/sSSDからの連続読み取り速度 1 GB/smain memoryからの連続読み取り速度 4 GB/s1秒で地球6-7周できる1秒でデータセンターと2000周やりとりできるレイテンシーの視覚的表その他の参考資料、ページ:全てのプログラマーが知るべきレイテンシー値 - 1全てのプログラマーが知るべきレイテンシー値 - 2Designs, lessons, and advice from building large distributed systemsSoftware Engineering Advice from Building Large-Scale Distributed Systems他のシステム設計面接例題頻出のシステム設計面接課題とその解答へのリンク質問解答Dropboxのようなファイル同期サービスを設計するyoutube.comGoogleのような検索エンジンの設計queue.acm.orgstackexchange.comardendertat.comstanford.eduGoogleのようなスケーラブルなwebクローラーの設計quora.comGoogle docsの設計code.google.comneil.fraser.nameRedisのようなキーバリューストアの設計slideshare.netMemcachedのようなキャッシュシステムの設計slideshare.netAmazonのようなレコメンデーションシステムの設計hulu.comijcai13.orgBitlyのようなURL短縮サービスの設計n00tc0d3r.blogspot.comWhatsAppのようなチャットアプリの設計highscalability.comInstagramのような写真共有サービスの設計highscalability.comhighscalability.comFacebookニュースフィードの設計quora.comquora.comslideshare.netFacebookタイムラインの設計facebook.comhighscalability.comFacebookチャットの設計erlang-factory.comfacebook.comFacebookのようなgraph検索の設計facebook.comfacebook.comfacebook.comCloudFlareのようなCDNの設計cmu.eduTwitterのトレンド機能の設計michael-noll.comsnikolov .wordpress.comランダムID発行システムの設計blog.twitter.comgithub.com一定のインターバル時間での上位k件を返すucsb.eduwpi.edu複数のデータセンターからデータを配信するサービスの設計highscalability.comオンラインの複数プレイヤーカードゲームの設計indieflashblog.combuildnewgames.comガーベッジコレクションシステムの設計stuffwithstuff.comwashington.eduシステム設計例題を追加するContribute実世界のアーキテクチャ世の中のシステムがどのように設計されているかについての記事      Source: Twitter timelines at scale以下の記事の重箱の隅をつつくような細かい詳細にこだわらないこと。むしろ共通の原理、技術、パターンを探ることそれぞれのコンポーネントでどんな問題が解決され、コンポーネントはどこでうまく使えもしくは使えないかを知ること学んだことを復習すること種類システム参考ページデータ処理MapReduce - Googleの分散データ処理システムresearch.google.comデータ処理Spark - Databricksの分散データ処理システムslideshare.netデータ処理Storm - Twitterの分散データ処理システムslideshare.netデータストアBigtable - Googleのカラム指向分散データベースharvard.eduデータストアHBase - Bigtableのオープンソース実装slideshare.netデータストアCassandra - Facebookのカラム指向分散データベースslideshare.netデータストアDynamoDB - Amazonのドキュメント指向分散データベースharvard.eduデータストアMongoDB - ドキュメント指向分散データベースslideshare.netデータストアSpanner - Googleのグローバル分散データベースresearch.google.comデータストアMemcached - 分散メモリーキャッシングシステムslideshare.netデータストアRedis - 永続性とバリュータイプを兼ね備えた分散メモリーキャッシングシステムslideshare.netファイルシステムGoogle File System (GFS) - 分散ファイルシステムresearch.google.comファイルシステムHadoop File System (HDFS) - GFSのオープンソース実装apache.orgMiscChubby - 疎結合の分散システムをロックするGoogleのサービスresearch.google.comMiscDapper - 分散システムを追跡するインフラresearch.google.comMiscKafka - LinkedInによるPub/subメッセージキューslideshare.netMiscZookeeper - 同期を可能にする中央集権インフラとサービスslideshare.netアーキテクチャを追加するContribute各企業のアーキテクチャ企業参考ページAmazonAmazon architectureCinchcastProducing 1,500 hours of audio every dayDataSiftRealtime datamining At 120,000 tweets per secondDropBoxHow we've scaled DropboxESPNOperating At 100,000 duh nuh nuhs per secondGoogleGoogle architectureInstagram14 million users, terabytes of photosWhat powers InstagramJustin.tvJustin.Tv's live video broadcasting architectureFacebookScaling memcached at FacebookTAO: Facebook’s distributed data store for the social graphFacebook’s photo storageFlickrFlickr architectureMailboxFrom 0 to one million users in 6 weeksPinterestFrom 0 To 10s of billions of page views a month18 million visitors, 10x growth, 12 employeesPlayfish50 million monthly users and growingPlentyOfFishPlentyOfFish architectureSalesforceHow they handle 1.3 billion transactions a dayStack OverflowStack Overflow architectureTripAdvisor40M visitors, 200M dynamic page views, 30TB dataTumblr15 billion page views a monthTwitterMaking Twitter 10000 percent fasterStoring 250 million tweets a day using MySQL150M active users, 300K QPS, a 22 MB/S firehoseTimelines at scaleBig and small data at TwitterOperations at Twitter: scaling beyond 100 million usersUberHow Uber scales their real-time market platformWhatsAppThe WhatsApp architecture Facebook bought for $19 billionYouTubeYouTube scalabilityYouTube architecture企業のエンジニアブログ面接を受ける企業のアーキテクチャ投げられる質問は同じ分野から来ることもあるでしょうAirbnb EngineeringAtlassian DevelopersAutodesk EngineeringAWS BlogBitly Engineering BlogBox BlogsCloudera Developer BlogDropbox Tech BlogEngineering at QuoraEbay Tech BlogEvernote Tech BlogEtsy Code as CraftFacebook EngineeringFlickr CodeFoursquare Engineering BlogGitHub Engineering BlogGoogle Research BlogGroupon Engineering BlogHeroku Engineering BlogHubspot Engineering BlogHigh ScalabilityInstagram EngineeringIntel Software BlogJane Street Tech BlogLinkedIn EngineeringMicrosoft EngineeringMicrosoft Python EngineeringNetflix Tech BlogPaypal Developer BlogPinterest Engineering BlogQuora EngineeringReddit BlogSalesforce Engineering BlogSlack Engineering BlogSpotify LabsTwilio Engineering BlogTwitter EngineeringUber Engineering BlogYahoo Engineering BlogYelp Engineering BlogZynga Engineering Blogその他の参考資料、ページ:kilimchoi/engineering-blogsここにあるリストは比較的小規模なものにとどめ、kilimchoi/engineering-blogsにより詳細に記すことで重複しないようにしておくことにする。エンジニアブログへのリンクを追加する場合はここではなく、engineering-blogsレボジトリに追加することを検討してください。進行中の作業セクションの追加や、進行中の作業を手伝っていただける場合はこちら!MapReduceによる分散コンピューティングConsistent hashingScatter gatherContributeクレジットクレジット及び、参照ページは適時このリポジトリ内に記載してありますSpecial thanks to:Hired in techCracking the coding interviewHigh scalabilitycheckcheckzz/system-design-interviewshashank88/system_designmmcgrana/services-engineeringSystem design cheat sheetA distributed systems reading listCracking the system design interviewContact infoFeel free to contact me to discuss any issues, questions, or comments.My contact info can be found on my GitHub page.LicenseI am providing code and resources in this repository to you under an open source license.  Because this is my personal repository, the license you receive to my code and resources is from me and not my employer (Facebook).Copyright 2017 Donne MartinCreative Commons Attribution 4.0 International License (CC BY 4.0)http://creativecommons.org/licenses/by/4.0/"
61,61,AUTOMATIC1111/stable-diffusion-webui,https://github.com/AUTOMATIC1111/stable-diffusion-webui/blob/master/README.md,Python,"Stable Diffusion web UIA browser interface based on Gradio library for Stable Diffusion.FeaturesDetailed feature showcase with images:Original txt2img and img2img modesOne click install and run script (but you still must install python and git)OutpaintingInpaintingColor SketchPrompt MatrixStable Diffusion UpscaleAttention, specify parts of text that the model should pay more attention toa man in a ((tuxedo)) - will pay more attention to tuxedoa man in a (tuxedo:1.21) - alternative syntaxselect text and press Ctrl+Up or Ctrl+Down (or Command+Up or Command+Down if you're on a MacOS) to automatically adjust attention to selected text (code contributed by anonymous user)Loopback, run img2img processing multiple timesX/Y/Z plot, a way to draw a 3 dimensional plot of images with different parametersTextual Inversionhave as many embeddings as you want and use any names you like for themuse multiple embeddings with different numbers of vectors per tokenworks with half precision floating point numberstrain embeddings on 8GB (also reports of 6GB working)Extras tab with:GFPGAN, neural network that fixes facesCodeFormer, face restoration tool as an alternative to GFPGANRealESRGAN, neural network upscalerESRGAN, neural network upscaler with a lot of third party modelsSwinIR and Swin2SR (see here), neural network upscalersLDSR, Latent diffusion super resolution upscalingResizing aspect ratio optionsSampling method selectionAdjust sampler eta values (noise multiplier)More advanced noise setting optionsInterrupt processing at any time4GB video card support (also reports of 2GB working)Correct seeds for batchesLive prompt token length validationGeneration parametersparameters you used to generate images are saved with that imagein PNG chunks for PNG, in EXIF for JPEGcan drag the image to PNG info tab to restore generation parameters and automatically copy them into UIcan be disabled in settingsdrag and drop an image/text-parameters to promptboxRead Generation Parameters Button, loads parameters in promptbox to UISettings pageRunning arbitrary python code from UI (must run with --allow-code to enable)Mouseover hints for most UI elementsPossible to change defaults/mix/max/step values for UI elements via text configTiling support, a checkbox to create images that can be tiled like texturesProgress bar and live image generation previewCan use a separate neural network to produce previews with almost none VRAM or compute requirementNegative prompt, an extra text field that allows you to list what you don't want to see in generated imageStyles, a way to save part of prompt and easily apply them via dropdown laterVariations, a way to generate same image but with tiny differencesSeed resizing, a way to generate same image but at slightly different resolutionCLIP interrogator, a button that tries to guess prompt from an imagePrompt Editing, a way to change prompt mid-generation, say to start making a watermelon and switch to anime girl midwayBatch Processing, process a group of files using img2imgImg2img Alternative, reverse Euler method of cross attention controlHighres Fix, a convenience option to produce high resolution pictures in one click without usual distortionsReloading checkpoints on the flyCheckpoint Merger, a tab that allows you to merge up to 3 checkpoints into oneCustom scripts with many extensions from communityComposable-Diffusion, a way to use multiple prompts at onceseparate prompts using uppercase ANDalso supports weights for prompts: a cat :1.2 AND a dog AND a penguin :2.2No token limit for prompts (original stable diffusion lets you use up to 75 tokens)DeepDanbooru integration, creates danbooru style tags for anime promptsxformers, major speed increase for select cards: (add --xformers to commandline args)via extension: History tab: view, direct and delete images conveniently within the UIGenerate forever optionTraining tabhypernetworks and embeddings optionsPreprocessing images: cropping, mirroring, autotagging using BLIP or deepdanbooru (for anime)Clip skipHypernetworksLoras (same as Hypernetworks but more pretty)A sparate UI where you can choose, with preview, which embeddings, hypernetworks or Loras to add to your promptCan select to load a different VAE from settings screenEstimated completion time in progress barAPISupport for dedicated inpainting model by RunwayMLvia extension: Aesthetic Gradients, a way to generate images with a specific aesthetic by using clip images embeds (implementation of https://github.com/vicgalle/stable-diffusion-aesthetic-gradients)Stable Diffusion 2.0 support - see wiki for instructionsAlt-Diffusion support - see wiki for instructionsNow without any bad letters!Load checkpoints in safetensors formatEased resolution restriction: generated image's domension must be a multiple of 8 rather than 64Now with a license!Reorder elements in the UI from settings screenInstallation and RunningMake sure the required dependencies are met and follow the instructions available for both NVidia (recommended) and AMD GPUs.Alternatively, use online services (like Google Colab):List of Online ServicesInstallation on Windows 10/11 with NVidia-GPUs using release packageDownload sd.webui.zip from v1.0.0-pre and extract it's contents.Run update.bat.Run run.bat.For more details see Install-and-Run-on-NVidia-GPUsAutomatic Installation on WindowsInstall Python 3.10.6 (Newer version of Python does not support torch), checking \""Add Python to PATH\"".Install git.Download the stable-diffusion-webui repository, for example by running git clone https://github.com/AUTOMATIC1111/stable-diffusion-webui.git.Run webui-user.bat from Windows Explorer as normal, non-administrator, user.Automatic Installation on LinuxInstall the dependencies:# Debian-based:sudo apt install wget git python3 python3-venv# Red Hat-based:sudo dnf install wget git python3# Arch-based:sudo pacman -S wget git python3Navigate to the directory you would like the webui to be installed and execute the following command:bash <(wget -qO- https://raw.githubusercontent.com/AUTOMATIC1111/stable-diffusion-webui/master/webui.sh)Run webui.sh.Check webui-user.sh for options.Installation on Apple SiliconFind the instructions here.ContributingHere's how to add code to this repo: ContributingDocumentationThe documentation was moved from this README over to the project's wiki.For the purposes of getting Google and other search engines to crawl the wiki, here's a link to the (not for humans) crawlable wiki.CreditsLicenses for borrowed code can be found in Settings -> Licenses screen, and also in html/licenses.html file.Stable Diffusion - https://github.com/CompVis/stable-diffusion, https://github.com/CompVis/taming-transformersk-diffusion - https://github.com/crowsonkb/k-diffusion.gitGFPGAN - https://github.com/TencentARC/GFPGAN.gitCodeFormer - https://github.com/sczhou/CodeFormerESRGAN - https://github.com/xinntao/ESRGANSwinIR - https://github.com/JingyunLiang/SwinIRSwin2SR - https://github.com/mv-lab/swin2srLDSR - https://github.com/Hafiidz/latent-diffusionMiDaS - https://github.com/isl-org/MiDaSIdeas for optimizations - https://github.com/basujindal/stable-diffusionCross Attention layer optimization - Doggettx - https://github.com/Doggettx/stable-diffusion, original idea for prompt editing.Cross Attention layer optimization - InvokeAI, lstein - https://github.com/invoke-ai/InvokeAI (originally http://github.com/lstein/stable-diffusion)Sub-quadratic Cross Attention layer optimization - Alex Birch (Birch-san/diffusers#1), Amin Rezaei (https://github.com/AminRezaei0x443/memory-efficient-attention)Textual Inversion - Rinon Gal - https://github.com/rinongal/textual_inversion (we're not using his code, but we are using his ideas).Idea for SD upscale - https://github.com/jquesnelle/txt2imghdNoise generation for outpainting mk2 - https://github.com/parlance-zz/g-diffuser-botCLIP interrogator idea and borrowing some code - https://github.com/pharmapsychotic/clip-interrogatorIdea for Composable Diffusion - https://github.com/energy-based-model/Compositional-Visual-Generation-with-Composable-Diffusion-Models-PyTorchxformers - https://github.com/facebookresearch/xformersDeepDanbooru - interrogator for anime diffusers https://github.com/KichangKim/DeepDanbooruSampling in float32 precision from a float16 UNet - marunine for the idea, Birch-san for the example Diffusers implementation (https://github.com/Birch-san/diffusers-play/tree/92feee6)Instruct pix2pix - Tim Brooks (star), Aleksander Holynski (star), Alexei A. Efros (no star) - https://github.com/timothybrooks/instruct-pix2pixSecurity advice - RyotaKUniPC sampler - Wenliang Zhao - https://github.com/wl-zhao/UniPCTAESD - Ollin Boer Bohan - https://github.com/madebyollin/taesdLyCORIS - KohakuBlueleafInitial Gradio script - posted on 4chan by an Anonymous user. Thank you Anonymous user.(You)"
62,62,geekcomputers/Python,https://github.com/geekcomputers/Python/blob/master/README.md,Python,"My Python Eggs 🐍 😄I do not consider myself as a programmer. I create these little programs as experiments to play with Python, or to solve problems for myself. I would gladly accept pointers from others to improve, simplify, or make the code more efficient. If you would like to make any comments then please feel free to email me: craig@geekcomputers.co.uk.This repository contains a collection of Python scripts that are designed to reduce human workload and serve as educational examples for beginners to get started with Python. The code documentation is aligned correctly for viewing in Notepad++ 🗒️Feel free to explore the scripts and use them for your learning and automation needs!List of Scripts:batch_file_rename.py - Batch rename a group of files in a specified directory, changing their extensions.create_dir_if_not_there.py - Check if a directory exists in the user's home directory. Create it if it doesn't exist.Fast Youtube Downloader - Download YouTube videos quickly with parallel threads using aria2c.Google Image Downloader - Query a given term and retrieve images from the Google Image database.dir_test.py - Test if the directory testdir exists. If not, create it.env_check.py - Check if all the required environment variables are set.blackjack.py - Casino Blackjack-21 game in Python.fileinfo.py - Show file information for a given file.folder_size.py - Scan the current directory and all subdirectories and display their sizes.logs.py - Search for all *.log files in a directory, zip them using the specified program, and date stamp them.move_files_over_x_days.py - Move all files over a specified age (in days) from the source directory to the destination directory.nslookup_check.py - Open the file server_list.txt and perform nslookup for each server to check the DNS entry.osinfo.py - Display information about the operating system on which the script is running.ping_servers.py - Ping the servers associated with the specified application group.ping_subnet.py - Scan the final range of a given IP subnet for available addresses.powerdown_startup.py - Ping machines in the server list. Load the putty session if the machine is up, or notify if it is not.puttylogs.py - Zip all the logs in the given directory.script_count.py - Scan the scripts directory and count the different types of scripts.get_youtube_view.py - Get more views for YouTube videos and repeat songs on YouTube.script_listing.py - List all files in a given directory and its subdirectories.testlines.py - Open a file and print out 100 lines of the set line variable.tweeter.py - Tweet text or a picture from the terminal.serial_scanner.py - List available serial ports in use on Linux and Windows systems.get_youtube_view.py - Get more views for YouTube videos and repeat songs on YouTube.CountMillionCharacter.py and CountMillionCharacter2.0 - Get character count of a text file.xkcd_downloader.py - Download the latest XKCD comic and place them in a new folder called \""comics\"".timymodule.py - An alternative to Python's 'timeit' module and easier to use.calculator.py - Implement a calculator using Python's eval() function.Google_News.py - Use BeautifulSoup to provide latest news headlines along with news links.cricket_live_score - Use BeautifulSoup to provide live cricket scores.youtube.py - Take a song name as input and fetch the YouTube URL of the best matching song and play it.site_health.py - Check the health of a remote server.SimpleStopWatch.py - Simple stop watch implementation using Python's time module.Changemac.py - Change your MAC address, generate a random MAC address, or enter input as a new MAC address on Linux (Successfully Tested in Ubuntu 18.04).whatsapp-monitor.py - Use Selenium to give online status updates about your contacts in WhatsApp on the terminal.whatsapp-chat-analyzer.py - WhatsApp group/individual chat analyzer that visualizes chat activity using matplotlib.JARVIS.py - Control Windows programs with your voice.Images Downloader - Download images from webpages on Unix-based systems.space_invader.py.py - Classical 2D space invader game to recall your childhood memories.Test Case Generator - Generate different types of test cases with a clean and friendly UI, used in competitive programming and software testing.Note: The content in this repository belongs to the respective authors and creators. I'm just providing a formatted README.md for better presentation."
63,63,AntonOsika/gpt-engineer,https://github.com/AntonOsika/gpt-engineer/blob/main/README.md,Python,"GPT EngineerSpecify what you want it to build, the AI asks for clarification, and then builds it.GPT Engineer is made to be easy to adapt, extend, and make your agent learn how you want your code to look. It generates an entire codebase based on a prompt.DemoProject philosophySimple to get valueFlexible and easy to add new own \""AI steps\"". See steps.py.Incrementally build towards a user experience of:high level promptinggiving feedback to the AI that it will remember over timeFast handovers back and forth between AI and humanSimplicity, all computation is \""resumable\"" and persisted to the filesystemUsageChoose either stable or development.For stable release:python -m pip install gpt-engineerFor development:git clone https://github.com/AntonOsika/gpt-engineer.gitcd gpt-engineerpython -m pip install -e .(or: make install && source venv/bin/activate for a venv)API KeyEither just:export OPENAI_API_KEY=[your api key]Or:Create a copy of .env.template named .envAdd your OPENAI_API_KEY in .envCheck the Windows README for windows usage.RunningCreate an empty folder. If inside the repo, you can run:cp -r projects/example/ projects/my-new-projectFill in the prompt file in your new foldergpt-engineer projects/my-new-project(Note, gpt-engineer --help lets you see all available options. For example --steps use_feedback lets you improve/fix code in a project)By running gpt-engineer you agree to our terms.ResultsCheck the generated files in projects/my-new-project/workspaceAlternativesYou can check Docker instructions to use Docker, or simplydo everything in your browser:FeaturesYou can specify the \""identity\"" of the AI agent by editing the files in the preprompts folder.Editing the preprompts, and evolving how you write the project prompt, is how you make the agent remember things between projects.Each step in steps.py will have its communication history with GPT4 stored in the logs folder, and can be rerun with scripts/rerun_edited_message_logs.py.VisionThe gpt-engineer community is building the open platform for devs to tinker with and build their personal code-generation toolbox.If you are interested in contributing to this, we would be interested in having you.If you want to see our broader ambitions, check out the roadmap, and joindiscordto get input on how you can contribute to it.We are currently looking for more maintainers and community organizers. Email anton.osika@gmail.com if you are interested in an official role.Example              Demo.mov          "
64,64,facebookresearch/Detectron,https://github.com/facebookresearch/Detectron/blob/main/README.md,Python,"Detectron is deprecated. Please see detectron2, a ground-up rewrite of Detectron in PyTorch.DetectronDetectron is Facebook AI Research's software system that implements state-of-the-art object detection algorithms, including Mask R-CNN. It is written in Python and powered by the Caffe2 deep learning framework.At FAIR, Detectron has enabled numerous research projects, including: Feature Pyramid Networks for Object Detection, Mask R-CNN, Detecting and Recognizing Human-Object Interactions, Focal Loss for Dense Object Detection, Non-local Neural Networks, Learning to Segment Every Thing, Data Distillation: Towards Omni-Supervised Learning, DensePose: Dense Human Pose Estimation In The Wild, and Group Normalization.    Example Mask R-CNN output.IntroductionThe goal of Detectron is to provide a high-quality, high-performancecodebase for object detection research. It is designed to be flexible in orderto support rapid implementation and evaluation of novel research. Detectronincludes implementations of the following object detection algorithms:Mask R-CNN -- Marr Prize at ICCV 2017RetinaNet -- Best Student Paper Award at ICCV 2017Faster R-CNNRPNFast R-CNNR-FCNusing the following backbone network architectures:ResNeXt{50,101,152}ResNet{50,101,152}Feature Pyramid Networks (with ResNet/ResNeXt)VGG16Additional backbone architectures may be easily implemented. For more details about these models, please see References below.Update4/2018: Support Group Normalization - see GN/README.mdLicenseDetectron is released under the Apache 2.0 license. See the NOTICE file for additional details.Citing DetectronIf you use Detectron in your research or wish to refer to the baseline results published in the Model Zoo, please use the following BibTeX entry.@misc{Detectron2018,  author =       {Ross Girshick and Ilija Radosavovic and Georgia Gkioxari and                  Piotr Doll\\'{a}r and Kaiming He},  title =        {Detectron},  howpublished = {\\url{https://github.com/facebookresearch/detectron}},  year =         {2018}}Model Zoo and BaselinesWe provide a large set of baseline results and trained models available for download in the Detectron Model Zoo.InstallationPlease find installation instructions for Caffe2 and Detectron in INSTALL.md.Quick Start: Using DetectronAfter installation, please see GETTING_STARTED.md for brief tutorials covering inference and training with Detectron.Getting HelpTo start, please check the troubleshooting section of our installation instructions as well as our FAQ. If you couldn't find help there, try searching our GitHub issues. We intend the issues page to be a forum in which the community collectively troubleshoots problems.If bugs are found, we appreciate pull requests (including adding Q&A's to FAQ.md and improving our installation instructions and troubleshooting documents). Please see CONTRIBUTING.md for more information about contributing to Detectron.ReferencesData Distillation: Towards Omni-Supervised Learning.Ilija Radosavovic, Piotr Dollár, Ross Girshick, Georgia Gkioxari, and Kaiming He.Tech report, arXiv, Dec. 2017.Learning to Segment Every Thing.Ronghang Hu, Piotr Dollár, Kaiming He, Trevor Darrell, and Ross Girshick.Tech report, arXiv, Nov. 2017.Non-Local Neural Networks.Xiaolong Wang, Ross Girshick, Abhinav Gupta, and Kaiming He.Tech report, arXiv, Nov. 2017.Mask R-CNN.Kaiming He, Georgia Gkioxari, Piotr Dollár, and Ross Girshick.IEEE International Conference on Computer Vision (ICCV), 2017.Focal Loss for Dense Object Detection.Tsung-Yi Lin, Priya Goyal, Ross Girshick, Kaiming He, and Piotr Dollár.IEEE International Conference on Computer Vision (ICCV), 2017.Accurate, Large Minibatch SGD: Training ImageNet in 1 Hour.Priya Goyal, Piotr Dollár, Ross Girshick, Pieter Noordhuis, Lukasz Wesolowski, Aapo Kyrola, Andrew Tulloch, Yangqing Jia, and Kaiming He.Tech report, arXiv, June 2017.Detecting and Recognizing Human-Object Interactions.Georgia Gkioxari, Ross Girshick, Piotr Dollár, and Kaiming He.Tech report, arXiv, Apr. 2017.Feature Pyramid Networks for Object Detection.Tsung-Yi Lin, Piotr Dollár, Ross Girshick, Kaiming He, Bharath Hariharan, and Serge Belongie.IEEE Conference on Computer Vision and Pattern Recognition (CVPR), 2017.Aggregated Residual Transformations for Deep Neural Networks.Saining Xie, Ross Girshick, Piotr Dollár, Zhuowen Tu, and Kaiming He.IEEE Conference on Computer Vision and Pattern Recognition (CVPR), 2017.R-FCN: Object Detection via Region-based Fully Convolutional Networks.Jifeng Dai, Yi Li, Kaiming He, and Jian Sun.Conference on Neural Information Processing Systems (NIPS), 2016.Deep Residual Learning for Image Recognition.Kaiming He, Xiangyu Zhang, Shaoqing Ren, and Jian Sun.IEEE Conference on Computer Vision and Pattern Recognition (CVPR), 2016.Faster R-CNN: Towards Real-Time Object Detection with Region Proposal NetworksShaoqing Ren, Kaiming He, Ross Girshick, and Jian Sun.Conference on Neural Information Processing Systems (NIPS), 2015.Fast R-CNN.Ross Girshick.IEEE International Conference on Computer Vision (ICCV), 2015."
65,65,Jack-Cherish/Machine-Learning,https://github.com/Jack-Cherish/Machine-Learning/blob/master/README-eng.md,Python,"Machine-Learning中文（简体）Rome was not built in a dayBlogMachine-Learning in Practice (Detailed Comments + Training Datasets), Keep updating!Welcome to my[CSDN Column]Follow me on[Zhihu Column]QQ Group for Communication[328127489]My Website: http://cuijiahua.com/Article DebutDebut articles on my website and forward on orther platforms, click here to get the latest development: http://cuijiahua.com/Chapt. 2: K-Nearest Neighbors AlgorithmArticlePersonal WebsiteCSDNZhihuPython3  study notes (I): K-Nearest Neighbors Algorithm (Gorgeous and Splendid Tutorial)Personal WebsiteCSDNZhihuCode1. Entry Level k-NN2. Miss Helen Dating History3. Digits RecognitionChapt. 3: Decision TreeArticlePersonal WebsiteCSDNZhihuPython3  study notes (II): Decision Tree (Basic Concepts): Let's Start from DatingPersonal WebsiteCSDNZhihuPython3  study notes (III): Decision Tree (In Practice): I'm Looking for a Pair of Contact LensesPersonal WebsiteCSDNZhihuCode1. Loan Prediction2. Contact LensesChapt. 4: Navie BayesArticlePersonal WebsiteCSDNZhihuPython3 Python3  study notes (IV): Navie Bayes (Basic Concepts): Comment FilterPersonal WebsiteCSDNZhihuPython3 Python3  study notes (V): Navie Bayes (In Practice): Catalogues of Sina NewsPersonal WebsiteCSDNZhihuCode1. Comment Filter2. Spam Filter3. News CataloguesChapt. 5: Logistic RegressionArticlePersonal WebsiteCSDNZhihuPython3  study notes (VI): Logistic Regression (Basic Concepts): Gradient Ascent AlgorithmPersonal WebsiteCSDNZhihuPython3  study notes (VII): Logistic Regression (In Practice): Prediction of Horse MortalityPersonal WebsiteCSDNZhihuCode1. Entry Level Exercise for Logistic Regression2. Improved Random Gradient Ascent Algorithm3. Prediction of Horse MortalityChapt. 6: SVM (Support Vector Machine)ArticlePersonal WebsiteCSDNZhihuPython3  study notes (VIII): SVM (Basic Concepts): a Handcraft on Linear SVMPersonal WebsiteCSDNZhihuPython3  study notes (IX): SVM (In Practice): Another Handcraft on Nonlinear SVMPersonal WebsiteCSDNZhihuCode1. Simplified SMO Alogrithm2. Complete SMO Alogrithm3. Nonlinear SVM Alogrithm4. Sklearn SVCChapt. 7: AdaBoostArticlePersonal WebsiteCSDNZhihuPython3  study notes (X): Classifier Sharpener -- AdaBoostPersonal WebsiteCSDNZhihuCode1. Training Process of AdaBoost Based On Decision Stump2. AdaBoost on Hard Datasets3. Implement AdaBoost by sklearn4. ROC Curve PlotChapt. 8: Linear RegressionArticlePersonal WebsiteCSDNZhihuPython3  study notes (XI):Personal WebsiteCSDNZhihuPython3  study notes (XII):Personal WebsitenonoCode1. Linear Regression(Ordinary LR + Locally Weighted LR)2. Predicting the Age of Abalones(Ormers)3. Stepwise Regression4. Predicting the Price of Second Hand LegoChapt. 9: Regression TreeArticlePersonal WebsiteCSDNZhihuPython3  study notes (XIII): Regression Tree (Basic Concepts): CART Alogrithm and PruningPersonal WebsitenonoCode1. Regression Tree"
66,66,jenkins-docs/simple-python-pyinstaller-app,https://github.com/jenkins-docs/simple-python-pyinstaller-app/blob/master/README.md,Python,"simple-python-pyinstaller-appThis repository is for theBuild a Python app with PyInstallertutorial in the Jenkins User Documentation.The repository contains a simple Python application which is a command line tool \""add2vals\"" that outputs the addition of two values. If at least one of thevalues is a string, \""add2vals\"" treats both values as a string and insteadconcatenates the values. The \""add2\"" function in the \""calc\"" library (which\""add2vals\"" imports) is accompanied by a set of unit tests. These are tested with pytest to check that this function works as expected and the results are savedto a JUnit XML report.The delivery of the \""add2vals\"" tool through PyInstaller converts this tool intoa standalone executable file for Linux, which you can download through Jenkinsand execute at the command line on Linux machines without Python.The jenkins directory contains an example of the Jenkinsfile (i.e. Pipeline)you'll be creating yourself during the tutorial."
67,67,huggingface/pytorch-image-models,https://github.com/huggingface/pytorch-image-models/blob/main/README.md,Python,"PyTorch Image ModelsSponsorsWhat's NewIntroductionModelsFeaturesResultsGetting Started (Documentation)Train, Validation, Inference ScriptsAwesome PyTorch ResourcesLicensesCitingSponsorsThanks to the following for hardware support:TPU Research Cloud (TRC) (https://sites.research.google/trc/about/)Nvidia (https://www.nvidia.com/en-us/)And a big thanks to all GitHub sponsors who helped with some of my costs before I joined Hugging Face.What's New❗Updates after Oct 10, 2022 are available in version >= 0.9❗Many changes since the last 0.6.x stable releases. They were previewed in 0.8.x dev releases but not everyone transitioned.timm.models.layers moved to timm.layers:from timm.models.layers import name will still work via deprecation mapping (but please transition to timm.layers).import timm.models.layers.module or from timm.models.layers.module import name needs to be changed now.Builder, helper, non-model modules in timm.models have a _ prefix added, ie timm.models.helpers -> timm.models._helpers, there are temporary deprecation mapping files but those will be removed.All models now support architecture.pretrained_tag naming (ex resnet50.rsb_a1).The pretrained_tag is the specific weight variant (different head) for the architecture.Using only architecture defaults to the first weights in the default_cfgs for that model architecture.In adding pretrained tags, many model names that existed to differentiate were renamed to use the tag  (ex: vit_base_patch16_224_in21k -> vit_base_patch16_224.augreg_in21k). There are deprecation mappings for these.A number of models had their checkpoints remaped to match architecture changes needed to better support features_only=True, there are checkpoint_filter_fn methods in any model module that was remapped. These can be passed to timm.models.load_checkpoint(..., filter_fn=timm.models.swin_transformer_v2.checkpoint_filter_fn) to remap your existing checkpoint.The Hugging Face Hub (https://huggingface.co/timm) is now the primary source for timm weights. Model cards include link to papers, original source, license.Previous 0.6.x can be cloned from 0.6.x branch or installed via pip with version.Aug 3, 2023Add GluonCV weights for HRNet w18_small and w18_small_v2. Converted by SeeFunFix selecsls* model naming regressionPatch and position embedding for ViT/EVA works for bfloat16/float16 weights on load (or activations for on-the-fly resize)v0.9.5 release prepJuly 27, 2023Added timm trained seresnextaa201d_32x8d.sw_in12k_ft_in1k_384 weights (and .sw_in12k pretrain) with 87.3% top-1 on ImageNet-1k, best ImageNet ResNet family model I'm aware of.RepViT model and weights (https://arxiv.org/abs/2307.09283) added by wangaoI-JEPA ViT feature weights (no classifier) added by SeeFunSAM-ViT (segment anything) feature weights (no classifier) added by SeeFunAdd support for alternative feat extraction methods and -ve indices to EfficientNetAdd NAdamW optimizerMisc fixesMay 11, 2023timm 0.9 released, transition from 0.8.xdev releasesMay 10, 2023Hugging Face Hub downloading is now default, 1132 models on https://huggingface.co/timm, 1163 weights in timmDINOv2 vit feature backbone weights added thanks to Leng YueFB MAE vit feature backbone weights addedOpenCLIP DataComp-XL L/14 feat backbone weights addedMetaFormer (poolformer-v2, caformer, convformer, updated poolformer (v1)) w/ weights added by Fredo GuanExperimental get_intermediate_layers function on vit/deit models for grabbing hidden states (inspired by DINO impl). This is WIP and may change significantly... feedback welcome.Model creation throws error if pretrained=True and no weights exist (instead of continuing with random initialization)Fix regression with inception / nasnet TF sourced weights with 1001 classes in original classifiersbitsandbytes (https://github.com/TimDettmers/bitsandbytes) optimizers added to factory, use bnb prefix, ie bnbadam8bitMisc cleanup and fixesFinal testing before switching to a 0.9 and bringing timm out of pre-release stateApril 27, 202397% of timm models uploaded to HF Hub and almost all updated to support multi-weight pretrained configsMinor cleanup and refactoring of another batch of models as multi-weight added. More fused_attn (F.sdpa) and features_only support, and torchscript fixes.April 21, 2023Gradient accumulation support added to train script and tested (--grad-accum-steps), thanks Taeksang KimMore weights on HF Hub (cspnet, cait, volo, xcit, tresnet, hardcorenas, densenet, dpn, vovnet, xception_aligned)Added --head-init-scale and --head-init-bias to train.py to scale classiifer head and set fixed bias for fine-tuneRemove all InplaceABN (inplace_abn) use, replaced use in tresnet with standard BatchNorm (modified weights accordingly).April 12, 2023Add ONNX export script, validate script, helpers that I've had kicking around for along time. Tweak 'same' padding for better export w/ recent ONNX + pytorch.Refactor dropout args for vit and vit-like models, separate drop_rate into drop_rate (classifier dropout), proj_drop_rate (block mlp / out projections), pos_drop_rate (position embedding drop), attn_drop_rate (attention dropout). Also add patch dropout (FLIP) to vit and eva models.fused F.scaled_dot_product_attention support to more vit models, add env var (TIMM_FUSED_ATTN) to control, and config interface to enable/disableAdd EVA-CLIP backbones w/ image tower weights, all the way up to 4B param 'enormous' model, and 336x336 OpenAI ViT mode that was missed.April 5, 2023ALL ResNet models pushed to Hugging Face Hub with multi-weight supportAll past timm trained weights added with recipe based tags to differentiateAll ResNet strikes back A1/A2/A3 (seed 0) and R50 example B/C1/C2/D weights availableAdd torchvision v2 recipe weights to existing torchvision originalsSee comparison table in https://huggingface.co/timm/seresnextaa101d_32x8d.sw_in12k_ft_in1k_288#model-comparisonNew ImageNet-12k + ImageNet-1k fine-tunes available for a few anti-aliased ResNet modelsresnetaa50d.sw_in12k_ft_in1k - 81.7 @ 224, 82.6 @ 288resnetaa101d.sw_in12k_ft_in1k - 83.5 @ 224, 84.1 @ 288seresnextaa101d_32x8d.sw_in12k_ft_in1k - 86.0 @ 224, 86.5 @ 288seresnextaa101d_32x8d.sw_in12k_ft_in1k_288 - 86.5 @ 288, 86.7 @ 320March 31, 2023Add first ConvNext-XXLarge CLIP -> IN-1k fine-tune and IN-12k intermediate fine-tunes for convnext-base/large CLIP models.modeltop1top5img_sizeparam_countgmacsmactsconvnext_xxlarge.clip_laion2b_soup_ft_in1k88.61298.704256846.47198.09124.45convnext_large_mlp.clip_laion2b_soup_ft_in12k_in1k_38488.31298.578384200.13101.11126.74convnext_large_mlp.clip_laion2b_soup_ft_in12k_in1k_32087.96898.47320200.1370.2188.02convnext_base.clip_laion2b_augreg_ft_in12k_in1k_38487.13898.21238488.5945.2184.49convnext_base.clip_laion2b_augreg_ft_in12k_in1k86.34497.9725688.5920.0937.55Add EVA-02 MIM pretrained and fine-tuned weights, push to HF hub and update model cards for all EVA models. First model over 90% top-1 (99% top-5)! Check out the original code & weights at https://github.com/baaivision/EVA for more details on their work blending MIM, CLIP w/ many model, dataset, and train recipe tweaks.modeltop1top5param_countimg_sizeeva02_large_patch14_448.mim_m38m_ft_in22k_in1k90.05499.042305.08448eva02_large_patch14_448.mim_in22k_ft_in22k_in1k89.94699.01305.08448eva_giant_patch14_560.m30m_ft_in22k_in1k89.79298.9921014.45560eva02_large_patch14_448.mim_in22k_ft_in1k89.62698.954305.08448eva02_large_patch14_448.mim_m38m_ft_in1k89.5798.918305.08448eva_giant_patch14_336.m30m_ft_in22k_in1k89.5698.9561013.01336eva_giant_patch14_336.clip_ft_in1k89.46698.821013.01336eva_large_patch14_336.in22k_ft_in22k_in1k89.21498.854304.53336eva_giant_patch14_224.clip_ft_in1k88.88298.6781012.56224eva02_base_patch14_448.mim_in22k_ft_in22k_in1k88.69298.72287.12448eva_large_patch14_336.in22k_ft_in1k88.65298.722304.53336eva_large_patch14_196.in22k_ft_in22k_in1k88.59298.656304.14196eva02_base_patch14_448.mim_in22k_ft_in1k88.2398.56487.12448eva_large_patch14_196.in22k_ft_in1k87.93498.504304.14196eva02_small_patch14_336.mim_in22k_ft_in1k85.7497.61422.13336eva02_tiny_patch14_336.mim_in22k_ft_in1k80.65895.5245.76336Multi-weight and HF hub for DeiT and MLP-Mixer based modelsMarch 22, 2023More weights pushed to HF hub along with multi-weight support, including: regnet.py, rexnet.py, byobnet.py, resnetv2.py, swin_transformer.py, swin_transformer_v2.py, swin_transformer_v2_cr.pySwin Transformer models support feature extraction (NCHW feat maps for swinv2_cr_*, and NHWC for all others) and spatial embedding outputs.FocalNet (from https://github.com/microsoft/FocalNet) models and weights added with significant refactoring, feature extraction, no fixed resolution / sizing constraintRegNet weights increased with HF hub push, SWAG, SEER, and torchvision v2 weights. SEER is pretty poor wrt to performance for model size, but possibly useful.More ImageNet-12k pretrained and 1k fine-tuned timm weights:rexnetr_200.sw_in12k_ft_in1k - 82.6 @ 224, 83.2 @ 288rexnetr_300.sw_in12k_ft_in1k - 84.0 @ 224, 84.5 @ 288regnety_120.sw_in12k_ft_in1k - 85.0 @ 224, 85.4 @ 288regnety_160.lion_in12k_ft_in1k - 85.6 @ 224, 86.0 @ 288regnety_160.sw_in12k_ft_in1k - 85.6 @ 224, 86.0 @ 288  (compare to SWAG PT + 1k FT this is same BUT much lower res, blows SEER FT away)Model name deprecation + remapping functionality added (a milestone for bringing 0.8.x out of pre-release). Mappings being added...Minor bug fixes and improvements.Feb 26, 2023Add ConvNeXt-XXLarge CLIP pretrained image tower weights for fine-tune & features (fine-tuning TBD) -- see model cardUpdate convnext_xxlarge default LayerNorm eps to 1e-5 (for CLIP weights, improved stability)0.8.15dev0Feb 20, 2023Add 320x320 convnext_large_mlp.clip_laion2b_ft_320 and convnext_lage_mlp.clip_laion2b_ft_soup_320 CLIP image tower weights for features & fine-tune0.8.13dev0 pypi release for latest changes w/ move to huggingface orgFeb 16, 2023safetensor checkpoint support addedAdd ideas from 'Scaling Vision Transformers to 22 B. Params' (https://arxiv.org/abs/2302.05442) -- qk norm, RmsNorm, parallel blockAdd F.scaled_dot_product_attention support (PyTorch 2.0 only) to vit_*, vit_relpos*, coatnet / maxxvit (to start)Lion optimizer (w/ multi-tensor option) added (https://arxiv.org/abs/2302.06675)gradient checkpointing works with features_only=TrueFeb 7, 2023New inference benchmark numbers added in results folder.Add convnext LAION CLIP trained weights and initial set of in1k fine-tunesconvnext_base.clip_laion2b_augreg_ft_in1k - 86.2% @ 256x256convnext_base.clip_laiona_augreg_ft_in1k_384 - 86.5% @ 384x384convnext_large_mlp.clip_laion2b_augreg_ft_in1k - 87.3% @ 256x256convnext_large_mlp.clip_laion2b_augreg_ft_in1k_384 - 87.9% @ 384x384Add DaViT models. Supports features_only=True. Adapted from https://github.com/dingmyu/davit by Fredo.Use a common NormMlpClassifierHead across MaxViT, ConvNeXt, DaViTAdd EfficientFormer-V2 model, update EfficientFormer, and refactor LeViT (closely related architectures). Weights on HF hub.New EfficientFormer-V2 arch, significant refactor from original at (https://github.com/snap-research/EfficientFormer). Supports features_only=True.Minor updates to EfficientFormer.Refactor LeViT models to stages, add features_only=True support to new conv variants, weight remap required.Move ImageNet meta-data (synsets, indices) from /results to timm/data/_info.Add ImageNetInfo / DatasetInfo classes to provide labelling for various ImageNet classifier layouts in timmUpdate inference.py to use, try: python inference.py /folder/to/images --model convnext_small.in12k --label-type detail --topk 5Ready for 0.8.10 pypi pre-release (final testing).Jan 20, 2023Add two convnext 12k -> 1k fine-tunes at 384x384convnext_tiny.in12k_ft_in1k_384 - 85.1 @ 384convnext_small.in12k_ft_in1k_384 - 86.2 @ 384Push all MaxxViT weights to HF hub, and add new ImageNet-12k -> 1k fine-tunes for rw base MaxViT and CoAtNet 1/2 modelsmodeltop1top5samples / secParams (M)GMACAct (M)maxvit_xlarge_tf_512.in21k_ft_in1k88.5398.6421.76475.77534.141413.22maxvit_xlarge_tf_384.in21k_ft_in1k88.3298.5442.53475.32292.78668.76maxvit_base_tf_512.in21k_ft_in1k88.2098.5350.87119.88138.02703.99maxvit_large_tf_512.in21k_ft_in1k88.0498.4036.42212.33244.75942.15maxvit_large_tf_384.in21k_ft_in1k87.9898.5671.75212.03132.55445.84maxvit_base_tf_384.in21k_ft_in1k87.9298.54104.71119.6573.80332.90maxvit_rmlp_base_rw_384.sw_in12k_ft_in1k87.8198.37106.55116.1470.97318.95maxxvitv2_rmlp_base_rw_384.sw_in12k_ft_in1k87.4798.37149.49116.0972.98213.74coatnet_rmlp_2_rw_384.sw_in12k_ft_in1k87.3998.31160.8073.8847.69209.43maxvit_rmlp_base_rw_224.sw_in12k_ft_in1k86.8998.02375.86116.1423.1592.64maxxvitv2_rmlp_base_rw_224.sw_in12k_ft_in1k86.6498.02501.03116.0924.2062.77maxvit_base_tf_512.in1k86.6097.9250.75119.88138.02703.99coatnet_2_rw_224.sw_in12k_ft_in1k86.5797.89631.8873.8715.0949.22maxvit_large_tf_512.in1k86.5297.8836.04212.33244.75942.15coatnet_rmlp_2_rw_224.sw_in12k_ft_in1k86.4997.90620.5873.8815.1854.78maxvit_base_tf_384.in1k86.2997.80101.09119.6573.80332.90maxvit_large_tf_384.in1k86.2397.6970.56212.03132.55445.84maxvit_small_tf_512.in1k86.1097.7688.6369.1367.26383.77maxvit_tiny_tf_512.in1k85.6797.58144.2531.0533.49257.59maxvit_small_tf_384.in1k85.5497.46188.3569.0235.87183.65maxvit_tiny_tf_384.in1k85.1197.38293.4630.9817.53123.42maxvit_large_tf_224.in1k84.9396.97247.71211.7943.68127.35coatnet_rmlp_1_rw2_224.sw_in12k_ft_in1k84.9096.961025.4541.728.1140.13maxvit_base_tf_224.in1k84.8596.99358.25119.4724.0495.01maxxvit_rmlp_small_rw_256.sw_in1k84.6397.06575.5366.0114.6758.38coatnet_rmlp_2_rw_224.sw_in1k84.6196.74625.8173.8815.1854.78maxvit_rmlp_small_rw_224.sw_in1k84.4996.76693.8264.9010.7549.30maxvit_small_tf_224.in1k84.4396.83647.9668.9311.6653.17maxvit_rmlp_tiny_rw_256.sw_in1k84.2396.78807.2129.156.7746.92coatnet_1_rw_224.sw_in1k83.6296.38989.5941.728.0434.60maxvit_tiny_rw_224.sw_in1k83.5096.501100.5329.065.1133.11maxvit_tiny_tf_224.in1k83.4196.591004.9430.925.6035.78coatnet_rmlp_1_rw_224.sw_in1k83.3696.451093.0341.697.8535.47maxxvitv2_nano_rw_256.sw_in1k83.1196.331276.8823.706.2623.05maxxvit_rmlp_nano_rw_256.sw_in1k83.0396.341341.2416.784.3726.05maxvit_rmlp_nano_rw_256.sw_in1k82.9696.261283.2415.504.4731.92maxvit_nano_rw_256.sw_in1k82.9396.231218.1715.454.4630.28coatnet_bn_0_rw_224.sw_in1k82.3996.191600.1427.444.6722.04coatnet_0_rw_224.sw_in1k82.3995.841831.2127.444.4318.73coatnet_rmlp_nano_rw_224.sw_in1k82.0595.872109.0915.152.6220.34coatnext_nano_rw_224.sw_in1k81.9595.922525.5214.702.4712.80coatnet_nano_rw_224.sw_in1k81.7095.642344.5215.142.4115.41maxvit_rmlp_pico_rw_256.sw_in1k80.5395.211594.717.521.8524.86Jan 11, 2023Update ConvNeXt ImageNet-12k pretrain series w/ two new fine-tuned weights (and pre FT .in12k tags)convnext_nano.in12k_ft_in1k - 82.3 @ 224, 82.9 @ 288  (previously released)convnext_tiny.in12k_ft_in1k - 84.2 @ 224, 84.5 @ 288convnext_small.in12k_ft_in1k - 85.2 @ 224, 85.3 @ 288Jan 6, 2023Finally got around to adding --model-kwargs and --opt-kwargs to scripts to pass through rare args directly to model classes from cmd linetrain.py /imagenet --model resnet50 --amp --model-kwargs output_stride=16 act_layer=silutrain.py /imagenet --model vit_base_patch16_clip_224 --img-size 240 --amp --model-kwargs img_size=240 patch_size=12Cleanup some popular models to better support arg passthrough / merge with model configs, more to go.Jan 5, 2023ConvNeXt-V2 models and weights added to existing convnext.pyPaper: ConvNeXt V2: Co-designing and Scaling ConvNets with Masked AutoencodersReference impl: https://github.com/facebookresearch/ConvNeXt-V2 (NOTE: weights currently CC-BY-NC)Dec 23, 2022 🎄☃Add FlexiViT models and weights from https://github.com/google-research/big_vision (check out paper at https://arxiv.org/abs/2212.08013)NOTE currently resizing is static on model creation, on-the-fly dynamic / train patch size sampling is a WIPMany more models updated to multi-weight and downloadable via HF hub now (convnext, efficientnet, mobilenet, vision_transformer*, beit)More model pretrained tag and adjustments, some model names changed (working on deprecation translations, consider main branch DEV branch right now, use 0.6.x for stable use)More ImageNet-12k (subset of 22k) pretrain models popping up:efficientnet_b5.in12k_ft_in1k - 85.9 @ 448x448vit_medium_patch16_gap_384.in12k_ft_in1k - 85.5 @ 384x384vit_medium_patch16_gap_256.in12k_ft_in1k - 84.5 @ 256x256convnext_nano.in12k_ft_in1k - 82.9 @ 288x288Dec 8, 2022Add 'EVA l' to vision_transformer.py, MAE style ViT-L/14 MIM pretrain w/ EVA-CLIP targets, FT on ImageNet-1k (w/ ImageNet-22k intermediate for some)original source: https://github.com/baaivision/EVAmodeltop1param_countgmacmactshubeva_large_patch14_336.in22k_ft_in22k_in1k89.2304.5191.1270.2linkeva_large_patch14_336.in22k_ft_in1k88.7304.5191.1270.2linkeva_large_patch14_196.in22k_ft_in22k_in1k88.6304.161.663.5linkeva_large_patch14_196.in22k_ft_in1k87.9304.161.663.5linkDec 6, 2022Add 'EVA g', BEiT style ViT-g/14 model weights w/ both MIM pretrain and CLIP pretrain to beit.py.original source: https://github.com/baaivision/EVApaper: https://arxiv.org/abs/2211.07636modeltop1param_countgmacmactshubeva_giant_patch14_560.m30m_ft_in22k_in1k89.81014.41906.82577.2linkeva_giant_patch14_336.m30m_ft_in22k_in1k89.61013620.6550.7linkeva_giant_patch14_336.clip_ft_in1k89.41013620.6550.7linkeva_giant_patch14_224.clip_ft_in1k89.11012.6267.2192.6linkDec 5, 2022Pre-release (0.8.0dev0) of multi-weight support (model_arch.pretrained_tag). Install with pip install --pre timmvision_transformer, maxvit, convnext are the first three model impl w/ supportmodel names are changing with this (previous _21k, etc. fn will merge), still sorting out deprecation handlingbugs are likely, but I need feedback so please try it outif stability is needed, please use 0.6.x pypi releases or clone from 0.6.x branchSupport for PyTorch 2.0 compile is added in train/validate/inference/benchmark, use --torchcompile argumentInference script allows more control over output, select k for top-class index + prob json, csv or parquet outputAdd a full set of fine-tuned CLIP image tower weights from both LAION-2B and original OpenAI CLIP modelsmodeltop1param_countgmacmactshubvit_huge_patch14_clip_336.laion2b_ft_in12k_in1k88.6632.5391407.5linkvit_large_patch14_clip_336.openai_ft_in12k_in1k88.3304.5191.1270.2linkvit_huge_patch14_clip_224.laion2b_ft_in12k_in1k88.2632167.4139.4linkvit_large_patch14_clip_336.laion2b_ft_in12k_in1k88.2304.5191.1270.2linkvit_large_patch14_clip_224.openai_ft_in12k_in1k88.2304.281.188.8linkvit_large_patch14_clip_224.laion2b_ft_in12k_in1k87.9304.281.188.8linkvit_large_patch14_clip_224.openai_ft_in1k87.9304.281.188.8linkvit_large_patch14_clip_336.laion2b_ft_in1k87.9304.5191.1270.2linkvit_huge_patch14_clip_224.laion2b_ft_in1k87.6632167.4139.4linkvit_large_patch14_clip_224.laion2b_ft_in1k87.3304.281.188.8linkvit_base_patch16_clip_384.laion2b_ft_in12k_in1k87.286.955.5101.6linkvit_base_patch16_clip_384.openai_ft_in12k_in1k8786.955.5101.6linkvit_base_patch16_clip_384.laion2b_ft_in1k86.686.955.5101.6linkvit_base_patch16_clip_384.openai_ft_in1k86.286.955.5101.6linkvit_base_patch16_clip_224.laion2b_ft_in12k_in1k86.286.617.623.9linkvit_base_patch16_clip_224.openai_ft_in12k_in1k85.986.617.623.9linkvit_base_patch32_clip_448.laion2b_ft_in12k_in1k85.888.317.923.9linkvit_base_patch16_clip_224.laion2b_ft_in1k85.586.617.623.9linkvit_base_patch32_clip_384.laion2b_ft_in12k_in1k85.488.313.116.5linkvit_base_patch16_clip_224.openai_ft_in1k85.386.617.623.9linkvit_base_patch32_clip_384.openai_ft_in12k_in1k85.288.313.116.5linkvit_base_patch32_clip_224.laion2b_ft_in12k_in1k83.388.24.45linkvit_base_patch32_clip_224.laion2b_ft_in1k82.688.24.45linkvit_base_patch32_clip_224.openai_ft_in1k81.988.24.45linkPort of MaxViT Tensorflow Weights from official impl at https://github.com/google-research/maxvitThere was larger than expected drops for the upscaled 384/512 in21k fine-tune weights, possible detail missing, but the 21k FT did seem sensitive to small preprocessingmodeltop1param_countgmacmactshubmaxvit_xlarge_tf_512.in21k_ft_in1k88.5475.8534.11413.2linkmaxvit_xlarge_tf_384.in21k_ft_in1k88.3475.3292.8668.8linkmaxvit_base_tf_512.in21k_ft_in1k88.2119.9138704linkmaxvit_large_tf_512.in21k_ft_in1k88212.3244.8942.2linkmaxvit_large_tf_384.in21k_ft_in1k88212132.6445.8linkmaxvit_base_tf_384.in21k_ft_in1k87.9119.673.8332.9linkmaxvit_base_tf_512.in1k86.6119.9138704linkmaxvit_large_tf_512.in1k86.5212.3244.8942.2linkmaxvit_base_tf_384.in1k86.3119.673.8332.9linkmaxvit_large_tf_384.in1k86.2212132.6445.8linkmaxvit_small_tf_512.in1k86.169.167.3383.8linkmaxvit_tiny_tf_512.in1k85.73133.5257.6linkmaxvit_small_tf_384.in1k85.56935.9183.6linkmaxvit_tiny_tf_384.in1k85.13117.5123.4linkmaxvit_large_tf_224.in1k84.9211.843.7127.4linkmaxvit_base_tf_224.in1k84.9119.52495linkmaxvit_small_tf_224.in1k84.468.911.753.2linkmaxvit_tiny_tf_224.in1k83.430.95.635.8linkOct 15, 2022Train and validation script enhancementsNon-GPU (ie CPU) device supportSLURM compatibility for train scriptHF datasets support (via ReaderHfds)TFDS/WDS dataloading improvements (sample padding/wrap for distributed use fixed wrt sample count estimate)in_chans !=3 support for scripts / loaderAdan optimizerCan enable per-step LR scheduling via argsDataset 'parsers' renamed to 'readers', more descriptive of purposeAMP args changed, APEX via --amp-impl apex, bfloat16 supportedf via --amp-dtype bfloat16main branch switched to 0.7.x version, 0.6x forked for stable release of weight only addsmaster -> main branch renameOct 10, 2022More weights in maxxvit series, incl first ConvNeXt block based coatnext and maxxvit experiments:coatnext_nano_rw_224 - 82.0 @ 224 (G) -- (uses ConvNeXt conv block, no BatchNorm)maxxvit_rmlp_nano_rw_256 - 83.0 @ 256, 83.7 @ 320  (G) (uses ConvNeXt conv block, no BN)maxvit_rmlp_small_rw_224 - 84.5 @ 224, 85.1 @ 320 (G)maxxvit_rmlp_small_rw_256 - 84.6 @ 256, 84.9 @ 288 (G) -- could be trained better, hparams need tuning (uses ConvNeXt block, no BN)coatnet_rmlp_2_rw_224 - 84.6 @ 224, 85 @ 320  (T)NOTE: official MaxVit weights (in1k) have been released at https://github.com/google-research/maxvit -- some extra work is needed to port and adapt since my impl was created independently of theirs and has a few small differences + the whole TF same padding fun.Sept 23, 2022LAION-2B CLIP image towers supported as pretrained backbones for fine-tune or features (no classifier)vit_base_patch32_224_clip_laion2bvit_large_patch14_224_clip_laion2bvit_huge_patch14_224_clip_laion2bvit_giant_patch14_224_clip_laion2bSept 7, 2022Hugging Face timm docs home now exists, look for more here in the futureAdd BEiT-v2 weights for base and large 224x224 models from https://github.com/microsoft/unilm/tree/master/beit2Add more weights in maxxvit series incl a pico (7.5M params, 1.9 GMACs), two tiny variants:maxvit_rmlp_pico_rw_256 - 80.5 @ 256, 81.3 @ 320  (T)maxvit_tiny_rw_224 - 83.5 @ 224 (G)maxvit_rmlp_tiny_rw_256 - 84.2 @ 256, 84.8 @ 320 (T)Aug 29, 2022MaxVit window size scales with img_size by default. Add new RelPosMlp MaxViT weight that leverages this:maxvit_rmlp_nano_rw_256 - 83.0 @ 256, 83.6 @ 320  (T)Aug 26, 2022CoAtNet (https://arxiv.org/abs/2106.04803) and MaxVit (https://arxiv.org/abs/2204.01697) timm original modelsboth found in maxxvit.py model def, contains numerous experiments outside scope of original papersan unfinished Tensorflow version from MaxVit authors can be found https://github.com/google-research/maxvitInitial CoAtNet and MaxVit timm pretrained weights (working on more):coatnet_nano_rw_224 - 81.7 @ 224  (T)coatnet_rmlp_nano_rw_224 - 82.0 @ 224, 82.8 @ 320 (T)coatnet_0_rw_224 - 82.4  (T)  -- NOTE timm '0' coatnets have 2 more 3rd stage blockscoatnet_bn_0_rw_224 - 82.4  (T)maxvit_nano_rw_256 - 82.9 @ 256  (T)coatnet_rmlp_1_rw_224 - 83.4 @ 224, 84 @ 320  (T)coatnet_1_rw_224 - 83.6 @ 224 (G)(T) = TPU trained with bits_and_tpu branch training code, (G) = GPU trainedGCVit (weights adapted from https://github.com/NVlabs/GCVit, code 100% timm re-write for license purposes)MViT-V2 (multi-scale vit, adapted from https://github.com/facebookresearch/mvit)EfficientFormer (adapted from https://github.com/snap-research/EfficientFormer)PyramidVisionTransformer-V2 (adapted from https://github.com/whai362/PVT)'Fast Norm' support for LayerNorm and GroupNorm that avoids float32 upcast w/ AMP (uses APEX LN if available for further boost)Aug 15, 2022ConvNeXt atto weights addedconvnext_atto - 75.7 @ 224, 77.0 @ 288convnext_atto_ols - 75.9  @ 224, 77.2 @ 288Aug 5, 2022More custom ConvNeXt smaller model defs with weightsconvnext_femto - 77.5 @ 224, 78.7 @ 288convnext_femto_ols - 77.9  @ 224, 78.9 @ 288convnext_pico - 79.5 @ 224, 80.4 @ 288convnext_pico_ols - 79.5 @ 224, 80.5 @ 288convnext_nano_ols - 80.9 @ 224, 81.6 @ 288Updated EdgeNeXt to improve ONNX export, add new base variant and weights from original (https://github.com/mmaaz60/EdgeNeXt)July 28, 2022Add freshly minted DeiT-III Medium (width=512, depth=12, num_heads=8) model weights. Thanks Hugo Touvron!July 27, 2022All runtime benchmark and validation result csv files are finally up-to-date!A few more weights & model defs added:darknetaa53 -  79.8 @ 256, 80.5 @ 288convnext_nano - 80.8 @ 224, 81.5 @ 288cs3sedarknet_l - 81.2 @ 256, 81.8 @ 288cs3darknet_x - 81.8 @ 256, 82.2 @ 288cs3sedarknet_x - 82.2 @ 256, 82.7 @ 288cs3edgenet_x - 82.2 @ 256, 82.7 @ 288cs3se_edgenet_x - 82.8 @ 256, 83.5 @ 320cs3* weights above all trained on TPU w/ bits_and_tpu branch. Thanks to TRC program!Add output_stride=8 and 16 support to ConvNeXt (dilation)deit3 models not being able to resize pos_emb fixedVersion 0.6.7 PyPi release (/w above bug fixes and new weighs since 0.6.5)July 8, 2022More models, more fixesOfficial research models (w/ weights) added:EdgeNeXt from (https://github.com/mmaaz60/EdgeNeXt)MobileViT-V2 from (https://github.com/apple/ml-cvnets)DeiT III (Revenge of the ViT) from (https://github.com/facebookresearch/deit)My own models:Small ResNet defs added by request with 1 block repeats for both basic and bottleneck (resnet10 and resnet14)CspNet refactored with dataclass config, simplified CrossStage3 (cs3) option. These are closer to YOLO-v5+ backbone defs.More relative position vit fiddling. Two srelpos (shared relative position) models trained, and a medium w/ class token.Add an alternate downsample mode to EdgeNeXt and train a small model. Better than original small, but not their new USI trained weights.My own model weight results (all ImageNet-1k training)resnet10t - 66.5 @ 176, 68.3 @ 224resnet14t - 71.3 @ 176, 72.3 @ 224resnetaa50 - 80.6 @ 224 , 81.6 @ 288darknet53 -  80.0 @ 256, 80.5 @ 288cs3darknet_m - 77.0 @ 256, 77.6 @ 288cs3darknet_focus_m - 76.7 @ 256, 77.3 @ 288cs3darknet_l - 80.4 @ 256, 80.9 @ 288cs3darknet_focus_l - 80.3 @ 256, 80.9 @ 288vit_srelpos_small_patch16_224 - 81.1 @ 224, 82.1 @ 320vit_srelpos_medium_patch16_224 - 82.3 @ 224, 83.1 @ 320vit_relpos_small_patch16_cls_224 - 82.6 @ 224, 83.6 @ 320edgnext_small_rw - 79.6 @ 224, 80.4 @ 320cs3, darknet, and vit_*relpos weights above all trained on TPU thanks to TRC program! Rest trained on overheating GPUs.Hugging Face Hub support fixes verified, demo notebook TBAPretrained weights / configs can be loaded externally (ie from local disk) w/ support for head adaptation.Add support to change image extensions scanned by timm datasets/readers. See (#1274 (comment))Default ConvNeXt LayerNorm impl to use F.layer_norm(x.permute(0, 2, 3, 1), ...).permute(0, 3, 1, 2) via LayerNorm2d in all cases.a bit slower than previous custom impl on some hardware (ie Ampere w/ CL), but overall fewer regressions across wider HW / PyTorch version ranges.previous impl exists as LayerNormExp2d in models/layers/norm.pyNumerous bug fixesCurrently testing for imminent PyPi 0.6.x releaseLeViT pretraining of larger models still a WIP, they don't train well / easily without distillation. Time to add distill support (finally)?ImageNet-22k weight training + finetune ongoing, work on multi-weight support (slowly) chugging along (there are a LOT of weights, sigh) ...May 13, 2022Official Swin-V2 models and weights added from (https://github.com/microsoft/Swin-Transformer). Cleaned up to support torchscript.Some refactoring for existing timm Swin-V2-CR impl, will likely do a bit more to bring parts closer to official and decide whether to merge some aspects.More Vision Transformer relative position / residual post-norm experiments (all trained on TPU thanks to TRC program)vit_relpos_small_patch16_224 - 81.5 @ 224, 82.5 @ 320 -- rel pos, layer scale, no class token, avg poolvit_relpos_medium_patch16_rpn_224 - 82.3 @ 224, 83.1 @ 320 -- rel pos + res-post-norm, no class token, avg poolvit_relpos_medium_patch16_224 - 82.5 @ 224, 83.3 @ 320 -- rel pos, layer scale, no class token, avg poolvit_relpos_base_patch16_gapcls_224 - 82.8 @ 224, 83.9 @ 320 -- rel pos, layer scale, class token, avg pool (by mistake)Bring 512 dim, 8-head 'medium' ViT model variant back to life (after using in a pre DeiT 'small' model for first ViT impl back in 2020)Add ViT relative position support for switching btw existing impl and some additions in official Swin-V2 impl for future trialsSequencer2D impl (https://arxiv.org/abs/2205.01972), added via PR from author (https://github.com/okojoalg)May 2, 2022Vision Transformer experiments adding Relative Position (Swin-V2 log-coord) (vision_transformer_relpos.py) and Residual Post-Norm branches (from Swin-V2) (vision_transformer*.py)vit_relpos_base_patch32_plus_rpn_256 - 79.5 @ 256, 80.6 @ 320 -- rel pos + extended width + res-post-norm, no class token, avg poolvit_relpos_base_patch16_224 - 82.5 @ 224, 83.6 @ 320 -- rel pos, layer scale, no class token, avg poolvit_base_patch16_rpn_224 - 82.3 @ 224 -- rel pos + res-post-norm, no class token, avg poolVision Transformer refactor to remove representation layer that was only used in initial vit and rarely used since with newer pretrain (ie How to Train Your ViT)vit_* models support removal of class token, use of global average pool, use of fc_norm (ala beit, mae).April 22, 2022timm models are now officially supported in fast.ai! Just in time for the new Practical Deep Learning course. timmdocs documentation link updated to timm.fast.ai.Two more model weights added in the TPU trained series. Some In22k pretrain still in progress.seresnext101d_32x8d - 83.69 @ 224, 84.35 @ 288seresnextaa101d_32x8d (anti-aliased w/ AvgPool2d) - 83.85 @ 224, 84.57 @ 288March 23, 2022Add ParallelBlock and LayerScale option to base vit models to support model configs in Three things everyone should know about ViTconvnext_tiny_hnf (head norm first) weights trained with (close to) A2 recipe, 82.2% top-1, could do better with more epochs.March 21, 2022Merge norm_norm_norm. IMPORTANT this update for a coming 0.6.x release will likely de-stabilize the master branch for a while. Branch 0.5.x or a previous 0.5.x release can be used if stability is required.Significant weights update (all TPU trained) as described in this releaseregnety_040 - 82.3 @ 224, 82.96 @ 288regnety_064 - 83.0 @ 224, 83.65 @ 288regnety_080 - 83.17 @ 224, 83.86 @ 288regnetv_040 - 82.44 @ 224, 83.18 @ 288   (timm pre-act)regnetv_064 - 83.1 @ 224, 83.71 @ 288   (timm pre-act)regnetz_040 - 83.67 @ 256, 84.25 @ 320regnetz_040h - 83.77 @ 256, 84.5 @ 320 (w/ extra fc in head)resnetv2_50d_gn - 80.8 @ 224, 81.96 @ 288 (pre-act GroupNorm)resnetv2_50d_evos 80.77 @ 224, 82.04 @ 288 (pre-act EvoNormS)regnetz_c16_evos  - 81.9 @ 256, 82.64 @ 320 (EvoNormS)regnetz_d8_evos  - 83.42 @ 256, 84.04 @ 320 (EvoNormS)xception41p - 82 @ 299   (timm pre-act)xception65 -  83.17 @ 299xception65p -  83.14 @ 299   (timm pre-act)resnext101_64x4d - 82.46 @ 224, 83.16 @ 288seresnext101_32x8d - 83.57 @ 224, 84.270 @ 288resnetrs200 - 83.85 @ 256, 84.44 @ 320HuggingFace hub support fixed w/ initial groundwork for allowing alternative 'config sources' for pretrained model definitions and weights (generic local file / remote url support soon)SwinTransformer-V2 implementation added. Submitted by Christoph Reich. Training experiments and model changes by myself are ongoing so expect compat breaks.Swin-S3 (AutoFormerV2) models / weights added from https://github.com/microsoft/Cream/tree/main/AutoFormerV2MobileViT models w/ weights adapted from https://github.com/apple/ml-cvnetsPoolFormer models w/ weights adapted from https://github.com/sail-sg/poolformerVOLO models w/ weights adapted from https://github.com/sail-sg/voloSignificant work experimenting with non-BatchNorm norm layers such as EvoNorm, FilterResponseNorm, GroupNorm, etcEnhance support for alternate norm + act ('NormAct') layers added to a number of models, esp EfficientNet/MobileNetV3, RegNet, and aligned XceptionGrouped conv support added to EfficientNet familyAdd 'group matching' API to all models to allow grouping model parameters for application of 'layer-wise' LR decay, lr scale added to LR schedulerGradient checkpointing support added to many modelsforward_head(x, pre_logits=False) fn added to all models to allow separate calls of forward_features + forward_headAll vision transformer and vision MLP models update to return non-pooled / non-token selected features from foward_features, for consistency with CNN models, token selection or pooling now applied in forward_headFeb 2, 2022Chris Hughes posted an exhaustive run through of timm on his blog yesterday. Well worth a read. Getting Started with PyTorch Image Models (timm): A Practitioner’s GuideI'm currently prepping to merge the norm_norm_norm branch back to master (ver 0.6.x) in next week or so.The changes are more extensive than usual and may destabilize and break some model API use (aiming for full backwards compat). So, beware pip install git+https://github.com/rwightman/pytorch-image-models installs!0.5.x releases and a 0.5.x branch will remain stable with a cherry pick or two until dust clears. Recommend sticking to pypi install for a bit if you want stable.Jan 14, 2022Version 0.5.4 w/ release to be pushed to pypi. It's been a while since last pypi update and riskier changes will be merged to main branch soon....Add ConvNeXT models /w weights from official impl (https://github.com/facebookresearch/ConvNeXt), a few perf tweaks, compatible with timm featuresTried training a few small (~1.8-3M param) / mobile optimized models, a few are good so far, more on the way...mnasnet_small - 65.6 top-1mobilenetv2_050 - 65.9lcnet_100/075/050 - 72.1 / 68.8 / 63.1semnasnet_075 - 73fbnetv3_b/d/g - 79.1 / 79.7 / 82.0TinyNet models added by rsomani95LCNet added via MobileNetV3 architectureIntroductionPyTorch Image Models (timm) is a collection of image models, layers, utilities, optimizers, schedulers, data-loaders / augmentations, and reference training / validation scripts that aim to pull together a wide variety of SOTA models with ability to reproduce ImageNet training results.The work of many others is present here. I've tried to make sure all source material is acknowledged via links to github, arxiv papers, etc in the README, documentation, and code docstrings. Please let me know if I missed anything.ModelsAll model architecture families include variants with pretrained weights. There are specific model variants without any weights, it is NOT a bug. Help training new or better weights is always appreciated.Aggregating Nested Transformers - https://arxiv.org/abs/2105.12723BEiT - https://arxiv.org/abs/2106.08254Big Transfer ResNetV2 (BiT) - https://arxiv.org/abs/1912.11370Bottleneck Transformers - https://arxiv.org/abs/2101.11605CaiT (Class-Attention in Image Transformers) - https://arxiv.org/abs/2103.17239CoaT (Co-Scale Conv-Attentional Image Transformers) - https://arxiv.org/abs/2104.06399CoAtNet (Convolution and Attention) - https://arxiv.org/abs/2106.04803ConvNeXt - https://arxiv.org/abs/2201.03545ConvNeXt-V2 - http://arxiv.org/abs/2301.00808ConViT (Soft Convolutional Inductive Biases Vision Transformers)- https://arxiv.org/abs/2103.10697CspNet (Cross-Stage Partial Networks) - https://arxiv.org/abs/1911.11929DeiT - https://arxiv.org/abs/2012.12877DeiT-III - https://arxiv.org/pdf/2204.07118.pdfDenseNet - https://arxiv.org/abs/1608.06993DLA - https://arxiv.org/abs/1707.06484DPN (Dual-Path Network) - https://arxiv.org/abs/1707.01629EdgeNeXt - https://arxiv.org/abs/2206.10589EfficientFormer - https://arxiv.org/abs/2206.01191EfficientNet (MBConvNet Family)EfficientNet NoisyStudent (B0-B7, L2) - https://arxiv.org/abs/1911.04252EfficientNet AdvProp (B0-B8) - https://arxiv.org/abs/1911.09665EfficientNet (B0-B7) - https://arxiv.org/abs/1905.11946EfficientNet-EdgeTPU (S, M, L) - https://ai.googleblog.com/2019/08/efficientnet-edgetpu-creating.htmlEfficientNet V2 - https://arxiv.org/abs/2104.00298FBNet-C - https://arxiv.org/abs/1812.03443MixNet - https://arxiv.org/abs/1907.09595MNASNet B1, A1 (Squeeze-Excite), and Small - https://arxiv.org/abs/1807.11626MobileNet-V2 - https://arxiv.org/abs/1801.04381Single-Path NAS - https://arxiv.org/abs/1904.02877TinyNet - https://arxiv.org/abs/2010.14819EVA - https://arxiv.org/abs/2211.07636EVA-02 - https://arxiv.org/abs/2303.11331FlexiViT - https://arxiv.org/abs/2212.08013FocalNet (Focal Modulation Networks) - https://arxiv.org/abs/2203.11926GCViT (Global Context Vision Transformer) - https://arxiv.org/abs/2206.09959GhostNet - https://arxiv.org/abs/1911.11907gMLP - https://arxiv.org/abs/2105.08050GPU-Efficient Networks - https://arxiv.org/abs/2006.14090Halo Nets - https://arxiv.org/abs/2103.12731HRNet - https://arxiv.org/abs/1908.07919Inception-V3 - https://arxiv.org/abs/1512.00567Inception-ResNet-V2 and Inception-V4 - https://arxiv.org/abs/1602.07261Lambda Networks - https://arxiv.org/abs/2102.08602LeViT (Vision Transformer in ConvNet's Clothing) - https://arxiv.org/abs/2104.01136MaxViT (Multi-Axis Vision Transformer) - https://arxiv.org/abs/2204.01697MLP-Mixer - https://arxiv.org/abs/2105.01601MobileNet-V3 (MBConvNet w/ Efficient Head) - https://arxiv.org/abs/1905.02244FBNet-V3 - https://arxiv.org/abs/2006.02049HardCoRe-NAS - https://arxiv.org/abs/2102.11646LCNet - https://arxiv.org/abs/2109.15099MobileViT - https://arxiv.org/abs/2110.02178MobileViT-V2 - https://arxiv.org/abs/2206.02680MViT-V2 (Improved Multiscale Vision Transformer) - https://arxiv.org/abs/2112.01526NASNet-A - https://arxiv.org/abs/1707.07012NesT - https://arxiv.org/abs/2105.12723NFNet-F - https://arxiv.org/abs/2102.06171NF-RegNet / NF-ResNet - https://arxiv.org/abs/2101.08692PNasNet - https://arxiv.org/abs/1712.00559PoolFormer (MetaFormer) - https://arxiv.org/abs/2111.11418Pooling-based Vision Transformer (PiT) - https://arxiv.org/abs/2103.16302PVT-V2 (Improved Pyramid Vision Transformer) - https://arxiv.org/abs/2106.13797RegNet - https://arxiv.org/abs/2003.13678RegNetZ - https://arxiv.org/abs/2103.06877RepVGG - https://arxiv.org/abs/2101.03697ResMLP - https://arxiv.org/abs/2105.03404ResNet/ResNeXtResNet (v1b/v1.5) - https://arxiv.org/abs/1512.03385ResNeXt - https://arxiv.org/abs/1611.05431'Bag of Tricks' / Gluon C, D, E, S variations - https://arxiv.org/abs/1812.01187Weakly-supervised (WSL) Instagram pretrained / ImageNet tuned ResNeXt101 - https://arxiv.org/abs/1805.00932Semi-supervised (SSL) / Semi-weakly Supervised (SWSL) ResNet/ResNeXts - https://arxiv.org/abs/1905.00546ECA-Net (ECAResNet) - https://arxiv.org/abs/1910.03151v4Squeeze-and-Excitation Networks (SEResNet) - https://arxiv.org/abs/1709.01507ResNet-RS - https://arxiv.org/abs/2103.07579Res2Net - https://arxiv.org/abs/1904.01169ResNeSt - https://arxiv.org/abs/2004.08955ReXNet - https://arxiv.org/abs/2007.00992SelecSLS - https://arxiv.org/abs/1907.00837Selective Kernel Networks - https://arxiv.org/abs/1903.06586Sequencer2D - https://arxiv.org/abs/2205.01972Swin S3 (AutoFormerV2) - https://arxiv.org/abs/2111.14725Swin Transformer - https://arxiv.org/abs/2103.14030Swin Transformer V2 - https://arxiv.org/abs/2111.09883Transformer-iN-Transformer (TNT) - https://arxiv.org/abs/2103.00112TResNet - https://arxiv.org/abs/2003.13630Twins (Spatial Attention in Vision Transformers) - https://arxiv.org/pdf/2104.13840.pdfVisformer - https://arxiv.org/abs/2104.12533Vision Transformer - https://arxiv.org/abs/2010.11929VOLO (Vision Outlooker) - https://arxiv.org/abs/2106.13112VovNet V2 and V1 - https://arxiv.org/abs/1911.06667Xception - https://arxiv.org/abs/1610.02357Xception (Modified Aligned, Gluon) - https://arxiv.org/abs/1802.02611Xception (Modified Aligned, TF) - https://arxiv.org/abs/1802.02611XCiT (Cross-Covariance Image Transformers) - https://arxiv.org/abs/2106.09681FeaturesSeveral (less common) features that I often utilize in my projects are included. Many of their additions are the reason why I maintain my own set of models, instead of using others' via PIP:All models have a common default configuration interface and API foraccessing/changing the classifier - get_classifier and reset_classifierdoing a forward pass on just the features - forward_features (see documentation)these makes it easy to write consistent network wrappers that work with any of the modelsAll models support multi-scale feature map extraction (feature pyramids) via create_model (see documentation)create_model(name, features_only=True, out_indices=..., output_stride=...)out_indices creation arg specifies which feature maps to return, these indices are 0 based and generally correspond to the C(i + 1) feature level.output_stride creation arg controls output stride of the network by using dilated convolutions. Most networks are stride 32 by default. Not all networks support this.feature map channel counts, reduction level (stride) can be queried AFTER model creation via the .feature_info memberAll models have a consistent pretrained weight loader that adapts last linear if necessary, and from 3 to 1 channel input if desiredHigh performance reference training, validation, and inference scripts that work in several process/GPU modes:NVIDIA DDP w/ a single GPU per process, multiple processes with APEX present (AMP mixed-precision optional)PyTorch DistributedDataParallel w/ multi-gpu, single process (AMP disabled as it crashes when enabled)PyTorch w/ single GPU single process (AMP optional)A dynamic global pool implementation that allows selecting from average pooling, max pooling, average + max, or concat([average, max]) at model creation. All global pooling is adaptive average by default and compatible with pretrained weights.A 'Test Time Pool' wrapper that can wrap any of the included models and usually provides improved performance doing inference with input images larger than the training size. Idea adapted from original DPN implementation when I ported (https://github.com/cypw/DPNs)Learning rate schedulersIdeas adopted fromAllenNLP schedulersFAIRseq lr_schedulerSGDR: Stochastic Gradient Descent with Warm Restarts (https://arxiv.org/abs/1608.03983)Schedulers include step, cosine w/ restarts, tanh w/ restarts, plateauOptimizers:rmsprop_tf adapted from PyTorch RMSProp by myself. Reproduces much improved Tensorflow RMSProp behaviour.radam by Liyuan Liu (https://arxiv.org/abs/1908.03265)novograd by Masashi Kimura (https://arxiv.org/abs/1905.11286)lookahead adapted from impl by Liam (https://arxiv.org/abs/1907.08610)fused<name> optimizers by name with NVIDIA Apex installedadamp and sgdp by Naver ClovAI (https://arxiv.org/abs/2006.08217)adafactor adapted from FAIRSeq impl (https://arxiv.org/abs/1804.04235)adahessian by David Samuel (https://arxiv.org/abs/2006.00719)Random Erasing from Zhun Zhong  (https://arxiv.org/abs/1708.04896)Mixup (https://arxiv.org/abs/1710.09412)CutMix (https://arxiv.org/abs/1905.04899)AutoAugment (https://arxiv.org/abs/1805.09501) and RandAugment (https://arxiv.org/abs/1909.13719) ImageNet configurations modeled after impl for EfficientNet training (https://github.com/tensorflow/tpu/blob/master/models/official/efficientnet/autoaugment.py)AugMix w/ JSD loss (https://arxiv.org/abs/1912.02781), JSD w/ clean + augmented mixing support works with AutoAugment and RandAugment as wellSplitBachNorm - allows splitting batch norm layers between clean and augmented (auxiliary batch norm) dataDropPath aka \""Stochastic Depth\"" (https://arxiv.org/abs/1603.09382)DropBlock (https://arxiv.org/abs/1810.12890)Blur Pooling (https://arxiv.org/abs/1904.11486)Space-to-Depth by mrT23 (https://arxiv.org/abs/1801.04590) -- original paper?Adaptive Gradient Clipping (https://arxiv.org/abs/2102.06171, https://github.com/deepmind/deepmind-research/tree/master/nfnets)An extensive selection of channel and/or spatial attention modules:Bottleneck Transformer - https://arxiv.org/abs/2101.11605CBAM - https://arxiv.org/abs/1807.06521Effective Squeeze-Excitation (ESE) - https://arxiv.org/abs/1911.06667Efficient Channel Attention (ECA) - https://arxiv.org/abs/1910.03151Gather-Excite (GE) - https://arxiv.org/abs/1810.12348Global Context (GC) - https://arxiv.org/abs/1904.11492Halo - https://arxiv.org/abs/2103.12731Involution - https://arxiv.org/abs/2103.06255Lambda Layer - https://arxiv.org/abs/2102.08602Non-Local (NL) -  https://arxiv.org/abs/1711.07971Squeeze-and-Excitation (SE) - https://arxiv.org/abs/1709.01507Selective Kernel (SK) - (https://arxiv.org/abs/1903.06586Split (SPLAT) - https://arxiv.org/abs/2004.08955Shifted Window (SWIN) - https://arxiv.org/abs/2103.14030ResultsModel validation results can be found in the results tablesGetting Started (Documentation)The official documentation can be found at https://huggingface.co/docs/hub/timm. Documentation contributions are welcome.Getting Started with PyTorch Image Models (timm): A Practitioner’s Guide by Chris Hughes is an extensive blog post covering many aspects of timm in detail.timmdocs is an alternate set of documentation for timm. A big thanks to Aman Arora for his efforts creating timmdocs.paperswithcode is a good resource for browsing the models within timm.Train, Validation, Inference ScriptsThe root folder of the repository contains reference train, validation, and inference scripts that work with the included models and other features of this repository. They are adaptable for other datasets and use cases with a little hacking. See documentation.Awesome PyTorch ResourcesOne of the greatest assets of PyTorch is the community and their contributions. A few of my favourite resources that pair well with the models and components here are listed below.Object Detection, Instance and Semantic SegmentationDetectron2 - https://github.com/facebookresearch/detectron2Segmentation Models (Semantic) - https://github.com/qubvel/segmentation_models.pytorchEfficientDet (Obj Det, Semantic soon) - https://github.com/rwightman/efficientdet-pytorchComputer Vision / Image AugmentationAlbumentations - https://github.com/albumentations-team/albumentationsKornia - https://github.com/kornia/korniaKnowledge DistillationRepDistiller - https://github.com/HobbitLong/RepDistillertorchdistill - https://github.com/yoshitomo-matsubara/torchdistillMetric LearningPyTorch Metric Learning - https://github.com/KevinMusgrave/pytorch-metric-learningTraining / Frameworksfastai - https://github.com/fastai/fastaiLicensesCodeThe code here is licensed Apache 2.0. I've taken care to make sure any third party code included or adapted has compatible (permissive) licenses such as MIT, BSD, etc. I've made an effort to avoid any GPL / LGPL conflicts. That said, it is your responsibility to ensure you comply with licenses here and conditions of any dependent licenses. Where applicable, I've linked the sources/references for various components in docstrings. If you think I've missed anything please create an issue.Pretrained WeightsSo far all of the pretrained weights available here are pretrained on ImageNet with a select few that have some additional pretraining (see extra note below). ImageNet was released for non-commercial research purposes only (https://image-net.org/download). It's not clear what the implications of that are for the use of pretrained weights from that dataset. Any models I have trained with ImageNet are done for research purposes and one should assume that the original dataset license applies to the weights. It's best to seek legal advice if you intend to use the pretrained weights in a commercial product.Pretrained on more than ImageNetSeveral weights included or references here were pretrained with proprietary datasets that I do not have access to. These include the Facebook WSL, SSL, SWSL ResNe(Xt) and the Google Noisy Student EfficientNet models. The Facebook models have an explicit non-commercial license (CC-BY-NC 4.0, https://github.com/facebookresearch/semi-supervised-ImageNet1K-models, https://github.com/facebookresearch/WSL-Images). The Google models do not appear to have any restriction beyond the Apache 2.0 license (and ImageNet concerns). In either case, you should contact Facebook or Google with any questions.CitingBibTeX@misc{rw2019timm,  author = {Ross Wightman},  title = {PyTorch Image Models},  year = {2019},  publisher = {GitHub},  journal = {GitHub repository},  doi = {10.5281/zenodo.4414861},  howpublished = {\\url{https://github.com/rwightman/pytorch-image-models}}}Latest DOI"
68,68,Stability-AI/stablediffusion,https://github.com/Stability-AI/stablediffusion/blob/main/README.md,Python,"Stable Diffusion Version 2This repository contains Stable Diffusion models trained from scratch and will be continuously updated withnew checkpoints. The following list provides an overview of all currently available models. More coming soon.NewsMarch 24, 2023Stable UnCLIP 2.1New stable diffusion finetune (Stable unCLIP 2.1, Hugging Face) at 768x768 resolution,  based on SD2.1-768. This model allows for image variations and mixing operations as described in Hierarchical Text-Conditional Image Generation with CLIP Latents, and, thanks to its modularity, can be combined with other models such as KARLO. Comes in two variants: Stable unCLIP-L and Stable unCLIP-H, which are conditioned on CLIP ViT-L and ViT-H image embeddings, respectively. Instructions are available here.A public demo of SD-unCLIP is already available at clipdrop.co/stable-diffusion-reimagineDecember 7, 2022Version 2.1New stable diffusion model (Stable Diffusion 2.1-v, Hugging Face) at 768x768 resolution and (Stable Diffusion 2.1-base, HuggingFace) at 512x512 resolution, both based on the same number of parameters and architecture as 2.0 and fine-tuned on 2.0, on a less restrictive NSFW filtering of the LAION-5B dataset.Per default, the attention operation of the model is evaluated at full precision when xformers is not installed. To enable fp16 (which can cause numerical instabilities with the vanilla attention module on the v2.1 model) , run your script with ATTN_PRECISION=fp16 python <thescript.py>November 24, 2022Version 2.0New stable diffusion model (Stable Diffusion 2.0-v) at 768x768 resolution. Same number of parameters in the U-Net as 1.5, but uses OpenCLIP-ViT/H as the text encoder and is trained from scratch. SD 2.0-v is a so-called v-prediction model.The above model is finetuned from SD 2.0-base, which was trained as a standard noise-prediction model on 512x512 images and is also made available.Added a x4 upscaling latent text-guided diffusion model.New depth-guided stable diffusion model, finetuned from SD 2.0-base. The model is conditioned on monocular depth estimates inferred via MiDaS and can be used for structure-preserving img2img and shape-conditional synthesis.A text-guided inpainting model, finetuned from SD 2.0-base.We follow the original repository and provide basic inference scripts to sample from the models.The original Stable Diffusion model was created in a collaboration with CompVis and RunwayML and builds upon the work:High-Resolution Image Synthesis with Latent Diffusion ModelsRobin Rombach*,Andreas Blattmann*,Dominik Lorenz,Patrick Esser,Björn OmmerCVPR '22 Oral |GitHub | arXiv | Project pageand many others.Stable Diffusion is a latent text-to-image diffusion model.RequirementsYou can update an existing latent diffusion environment by runningconda install pytorch==1.12.1 torchvision==0.13.1 -c pytorchpip install transformers==4.19.2 diffusers invisible-watermarkpip install -e .xformers efficient attentionFor more efficiency and speed on GPUs,we highly recommended installing the xformerslibrary.Tested on A100 with CUDA 11.4.Installation needs a somewhat recent version of nvcc and gcc/g++, obtain those, e.g., viaexport CUDA_HOME=/usr/local/cuda-11.4conda install -c nvidia/label/cuda-11.4.0 cuda-nvccconda install -c conda-forge gccconda install -c conda-forge gxx_linux-64==9.5.0Then, run the following (compiling takes up to 30 min).cd ..git clone https://github.com/facebookresearch/xformers.gitcd xformersgit submodule update --init --recursivepip install -r requirements.txtpip install -e .cd ../stablediffusionUpon successful installation, the code will automatically default to memory efficient attentionfor the self- and cross-attention layers in the U-Net and autoencoder.General DisclaimerStable Diffusion models are general text-to-image diffusion models and therefore mirror biases and (mis-)conceptions that are presentin their training data. Although efforts were made to reduce the inclusion of explicit pornographic material, we do not recommend using the provided weights for services or products without additional safety mechanisms and considerations.The weights are research artifacts and should be treated as such.Details on the training procedure and data, as well as the intended use of the model can be found in the corresponding model card.The weights are available via the StabilityAI organization at Hugging Face under the CreativeML Open RAIL++-M License.Stable Diffusion v2Stable Diffusion v2 refers to a specific configuration of the modelarchitecture that uses a downsampling-factor 8 autoencoder with an 865M UNetand OpenCLIP ViT-H/14 text encoder for the diffusion model. The SD 2-v model produces 768x768 px outputs.Evaluations with different classifier-free guidance scales (1.5, 2.0, 3.0, 4.0,5.0, 6.0, 7.0, 8.0) and 50 DDIM sampling steps show the relative improvements of the checkpoints:Text-to-ImageStable Diffusion 2 is a latent diffusion model conditioned on the penultimate text embeddings of a CLIP ViT-H/14 text encoder.We provide a reference script for sampling.Reference Sampling ScriptThis script incorporates an invisible watermarking of the outputs, to help viewers identify the images as machine-generated.We provide the configs for the SD2-v (768px) and SD2-base (512px) model.First, download the weights for SD2.1-v and SD2.1-base.To sample from the SD2.1-v model, run the following:python scripts/txt2img.py --prompt \""a professional photograph of an astronaut riding a horse\"" --ckpt <path/to/768model.ckpt/> --config configs/stable-diffusion/v2-inference-v.yaml --H 768 --W 768  or try out the Web Demo: .To sample from the base model, usepython scripts/txt2img.py --prompt \""a professional photograph of an astronaut riding a horse\"" --ckpt <path/to/model.ckpt/> --config <path/to/config.yaml/>  By default, this uses the DDIM sampler, and renders images of size 768x768 (which it was trained on) in 50 steps.Empirically, the v-models can be sampled with higher guidance scales.Note: The inference config for all model versions is designed to be used with EMA-only checkpoints.For this reason use_ema=False is set in the configuration, otherwise the code will try to switch fromnon-EMA to EMA weights.Enable Intel® Extension for PyTorch* optimizations in Text-to-Image scriptIf you're planning on running Text-to-Image on Intel® CPU, try to sample an image with TorchScript and Intel® Extension for PyTorch* optimizations. Intel® Extension for PyTorch* extends PyTorch by enabling up-to-date features optimizations for an extra performance boost on Intel® hardware. It can optimize memory layout of the operators to Channel Last memory format, which is generally beneficial for Intel CPUs, take advantage of the most advanced instruction set available on a machine, optimize operators and many more.PrerequisitesBefore running the script, make sure you have all needed libraries installed. (the optimization was checked on Ubuntu 20.04). Install jemalloc, numactl, Intel® OpenMP and Intel® Extension for PyTorch*.apt-get install numactl libjemalloc-devpip install intel-openmppip install intel_extension_for_pytorch -f https://software.intel.com/ipex-whl-stableTo sample from the SD2.1-v model with TorchScript+IPEX optimizations, run the following. Remember to specify desired number of instances you want to run the program on (more).MALLOC_CONF=oversize_threshold:1,background_thread:true,metadata_thp:auto,dirty_decay_ms:9000000000,muzzy_decay_ms:9000000000 python -m intel_extension_for_pytorch.cpu.launch --ninstance <number of an instance> --enable_jemalloc scripts/txt2img.py --prompt \\\""a corgi is playing guitar, oil on canvas\\\"" --ckpt <path/to/768model.ckpt/> --config configs/stable-diffusion/intel/v2-inference-v-fp32.yaml  --H 768 --W 768 --precision full --device cpu --torchscript --ipexTo sample from the base model with IPEX optimizations, useMALLOC_CONF=oversize_threshold:1,background_thread:true,metadata_thp:auto,dirty_decay_ms:9000000000,muzzy_decay_ms:9000000000 python -m intel_extension_for_pytorch.cpu.launch --ninstance <number of an instance> --enable_jemalloc scripts/txt2img.py --prompt \\\""a corgi is playing guitar, oil on canvas\\\"" --ckpt <path/to/model.ckpt/> --config configs/stable-diffusion/intel/v2-inference-fp32.yaml  --n_samples 1 --n_iter 4 --precision full --device cpu --torchscript --ipexIf you're using a CPU that supports bfloat16, consider sample from the model with bfloat16 enabled for a performance boost, like so# SD2.1-vMALLOC_CONF=oversize_threshold:1,background_thread:true,metadata_thp:auto,dirty_decay_ms:9000000000,muzzy_decay_ms:9000000000 python -m intel_extension_for_pytorch.cpu.launch --ninstance <number of an instance> --enable_jemalloc scripts/txt2img.py --prompt \\\""a corgi is playing guitar, oil on canvas\\\"" --ckpt <path/to/768model.ckpt/> --config configs/stable-diffusion/intel/v2-inference-v-bf16.yaml --H 768 --W 768 --precision full --device cpu --torchscript --ipex --bf16# SD2.1-baseMALLOC_CONF=oversize_threshold:1,background_thread:true,metadata_thp:auto,dirty_decay_ms:9000000000,muzzy_decay_ms:9000000000 python -m intel_extension_for_pytorch.cpu.launch --ninstance <number of an instance> --enable_jemalloc scripts/txt2img.py --prompt \\\""a corgi is playing guitar, oil on canvas\\\"" --ckpt <path/to/model.ckpt/> --config configs/stable-diffusion/intel/v2-inference-bf16.yaml --precision full --device cpu --torchscript --ipex --bf16Image Modification with Stable DiffusionDepth-Conditional Stable DiffusionTo augment the well-established img2img functionality of Stable Diffusion, we provide a shape-preserving stable diffusion model.Note that the original method for image modification introduces significant semantic changes w.r.t. the initial image.If that is not desired, download our depth-conditional stable diffusion model and the dpt_hybrid MiDaS model weights, place the latter in a folder midas_models and sample viapython scripts/gradio/depth2img.py configs/stable-diffusion/v2-midas-inference.yaml <path-to-ckpt>orstreamlit run scripts/streamlit/depth2img.py configs/stable-diffusion/v2-midas-inference.yaml <path-to-ckpt>This method can be used on the samples of the base model itself.For example, take this sample generated by an anonymous discord user.Using the gradio or streamlit script depth2img.py, the MiDaS model first infers a monocular depth estimate given this input,and the diffusion model is then conditioned on the (relative) depth output. depth2image This model is particularly useful for a photorealistic style; see the examples.For a maximum strength of 1.0, the model removes all pixel-based information and only relies on the text prompt and the inferred monocular depth estimate.Classic Img2ImgFor running the \""classic\"" img2img, usepython scripts/img2img.py --prompt \""A fantasy landscape, trending on artstation\"" --init-img <path-to-img.jpg> --strength 0.8 --ckpt <path/to/model.ckpt>and adapt the checkpoint and config paths accordingly.Image Upscaling with Stable DiffusionAfter downloading the weights, runpython scripts/gradio/superresolution.py configs/stable-diffusion/x4-upscaling.yaml <path-to-checkpoint>orstreamlit run scripts/streamlit/superresolution.py -- configs/stable-diffusion/x4-upscaling.yaml <path-to-checkpoint>for a Gradio or Streamlit demo of the text-guided x4 superresolution model.This model can be used both on real inputs and on synthesized examples. For the latter, we recommend setting a highernoise_level, e.g. noise_level=100.Image Inpainting with Stable DiffusionDownload the SD 2.0-inpainting checkpoint and runpython scripts/gradio/inpainting.py configs/stable-diffusion/v2-inpainting-inference.yaml <path-to-checkpoint>orstreamlit run scripts/streamlit/inpainting.py -- configs/stable-diffusion/v2-inpainting-inference.yaml <path-to-checkpoint>for a Gradio or Streamlit demo of the inpainting model.This scripts adds invisible watermarking to the demo in the RunwayML repository, but both should work interchangeably with the checkpoints/configs.Shout-OutsThanks to Hugging Face and in particular Apolinário  for support with our model releases!Stable Diffusion would not be possible without LAION and their efforts to create open, large-scale datasets.The DeepFloyd team at Stability AI, for creating the subset of LAION-5B dataset used to train the model.Stable Diffusion 2.0 uses OpenCLIP, trained by Romain Beaumont.Our codebase for the diffusion models builds heavily on OpenAI's ADM codebaseand https://github.com/lucidrains/denoising-diffusion-pytorch.Thanks for open-sourcing!CompVis initial stable diffusion releasePatrick's implementation of the streamlit demo for inpainting.img2img is an application of SDEdit by Chenlin Meng from the Stanford AI Lab.Kat's implementation of the PLMS sampler, and more.DPMSolver integration by Cheng Lu.Facebook's xformers for efficient attention computation.MiDaS for monocular depth estimation.LicenseThe code in this repository is released under the MIT License.The weights are available via the StabilityAI organization at Hugging Face, and released under the CreativeML Open RAIL++-M License License.BibTeX@misc{rombach2021highresolution,      title={High-Resolution Image Synthesis with Latent Diffusion Models},       author={Robin Rombach and Andreas Blattmann and Dominik Lorenz and Patrick Esser and Björn Ommer},      year={2021},      eprint={2112.10752},      archivePrefix={arXiv},      primaryClass={cs.CV}}"
69,69,Turonk/infra_actions,https://github.com/Turonk/infra_actions/blob/main/README.md,Python,infra_actionsУчебный проект для изучения работы GitHub Actions (Яндекс Практикум)
70,70,donnemartin/system-design-primer,https://github.com/donnemartin/system-design-primer/blob/master/README-ja.md,Python,"English ∙ 日本語 ∙ 简体中文 ∙ 繁體中文 | العَرَبِيَّة‎ ∙ বাংলা ∙ Português do Brasil ∙ Deutsch ∙ ελληνικά ∙ עברית ∙ Italiano ∙ 한국어 ∙ فارسی ∙ Polski ∙ русский язык ∙ Español ∙ ภาษาไทย ∙ Türkçe ∙ tiếng Việt ∙ Français | Add Translationシステム設計入門    動機・目的大規模システムのシステム設計を学ぶシステム設計面接課題に備える大規模システムの設計を学ぶスケーラブルなシステムのシステム設計を学ぶことは、より良いエンジニアになることに資するでしょう。システム設計はとても広範なトピックを含みます。システム設計原理については インターネット上には膨大な量の文献が散らばっています。このリポジトリは大規模システム構築に必要な知識を学ぶことができる 文献リストを体系的にまとめたもの です。オープンソースコミュニティから学ぶこのプロジェクトは、これからもずっと更新されていくオープンソースプロジェクトの初期段階にすぎません。Contributions は大歓迎です！システム設計面接課題に備えるコード技術面接に加えて、システム設計に関する知識は、多くのテック企業における 技術採用面接プロセス で 必要不可欠な要素 です。システム設計面接での頻出質問に備え、自分の解答と模範解答:ディスカッション、コードそして図表などを比較して学びましょう。面接準備に役立つその他のトピック:学習指針システム設計面接課題にどのように準備するかシステム設計課題例 とその解答オブジェクト指向設計課題例、 とその解答その他のシステム設計面接課題例暗記カード    このAnki用フラッシュカードデッキ は、間隔反復を活用して、システム設計のキーコンセプトの学習を支援します。システム設計デッキシステム設計練習課題デッキオブジェクト指向練習課題デッキ外出先や移動中の勉強に役立つでしょう。コーディング技術課題用の問題: 練習用インタラクティブアプリケーションコード技術面接用の問題を探している場合はこちら    姉妹リポジトリの Interactive Coding Challengesも見てみてください。追加の暗記デッキカードも入っています。Coding deckコントリビュートコミュニティから学ぶプルリクエスト等の貢献は積極的にお願いします:エラー修正セクション内容改善新規セクション追加翻訳する現在、内容の改善が必要な作業中のコンテンツはこちらです。コントリビュートの前にContributing Guidelinesを読みましょう。システム設計目次賛否も含めた様々なシステム設計の各トピックの概要。 全てはトレードオフの関係にあります。それぞれのセクションはより学びを深めるような他の文献へのリンクが貼られています。    システム設計トピック: まずはここからStep 1: スケーラビリティに関する動画を見るStep 2: スケーラビリティに関する記事を読む次のステップパフォーマンス vs スケーラビリティレイテンシー vs スループット可用性 vs 一貫性CAP理論CP - 一貫性(consistency)と分割性(partition)耐性AP - 可用性(availability)と分割性(partition)耐性一貫性 パターン弱い一貫性結果整合性強い一貫性可用性 パターンフェイルオーバーレプリケーションドメインネームシステム(DNS)コンテンツデリバリーネットワーク(CDN)プッシュCDNプルCDNロードバランサーアクティブ/パッシブ構成アクティブ/アクティブ構成Layer 4 ロードバランシングLayer 7 ロードバランシング水平スケーリングリバースプロキシ (WEBサーバー)ロードバランサー vs リバースプロキシアプリケーションレイヤーマイクロサービスサービスディスカバリーデータベースリレーショナルデータベースマネジメントシステム (RDBMS)マスター/スレーブ レプリケーションマスター/マスター レプリケーションフェデレーションシャーディングデノーマライゼーションSQL チューニングNoSQLキー/バリューストアドキュメントストアワイドカラムストアグラフ データベースSQL or NoSQLキャッシュクライアントキャッシングCDNキャッシングWebサーバーキャッシングデータベースキャッシングアプリケーションキャッシングデータベースクエリレベルでキャッシングするオブジェクトレベルでキャッシングするいつキャッシュを更新するのかキャッシュアサイドライトスルーライトビハインド (ライトバック)リフレッシュアヘッド非同期処理メッセージキュータスクキューバックプレッシャー通信伝送制御プロトコル (TCP)ユーザデータグラムプロトコル (UDP)遠隔手続呼出 (RPC)Representational state transfer (REST)セキュリティ補遺2の乗数表全てのプログラマーが知るべきレイテンシー値他のシステム設計面接例題実世界でのアーキテクチャ各企業のアーキテクチャ企業のエンジニアブログ作業中クレジット連絡情報ライセンス学習指針学習スパンに応じてみるべきトピックス (short, medium, long)Q: 面接のためには、ここにあるものすべてをやらないといけないのでしょうか？A: いえ、ここにあるすべてをやる必要はありません。面接で何を聞かれるかは以下の条件によって変わってきます:どれだけの技術経験があるかあなたの技術背景が何であるかどのポジションのために面接を受けているかどの企業の面接を受けているか運より経験のある候補者は一般的にシステム設計についてより深い知識を有していることを要求されるでしょう。システムアーキテクトやチームリーダーは各メンバーの持つような知識よりは深い見識を持っているべきでしょう。一流テック企業では複数回の設計面接を課されることが多いです。まずは広く始めて、そこからいくつかの分野に絞って深めていくのがいいでしょう。様々なシステム設計のトピックについて少しずつ知っておくことはいいことです。以下の学習ガイドを自分の学習に当てられる時間、技術経験、どの職位、どの会社に応募しているかなどを加味して自分用に調整して使うといいでしょう。短期間 - 幅広く システム設計トピックを学ぶ。いくつかの 面接課題を解くことで対策する。中期間 - 幅広く そして それなりに深くシステム設計トピックを学ぶ。多くの 面接課題を解くことで対策する。長期間 - 幅広く そして もっと深くシステム設計トピックを学ぶ。ほぼ全ての 面接課題を解くことで対策する。短期間中期間長期間システム設計トピック を読み、システム動作機序について広く知る👍👍👍次のリンク先のいくつかのページを読んで 各企業のエンジニアリングブログ 応募する会社について知る👍👍👍次のリンク先のいくつかのページを読む 実世界でのアーキテクチャ👍👍👍復習する システム設計面接課題にどのように準備するか👍👍👍とりあえず一周する システム設計課題例SomeManyMostとりあえず一周する オブジェクト指向設計問題と解答SomeManyMost復習する その他システム設計面接での質問例SomeManyMostシステム設計面接にどのようにして臨めばいいかシステム設計面接試験問題にどのように取り組むかシステム設計面接は open-ended conversation(Yes/Noでは答えられない口頭質問)です。 自分で会話を組み立てることを求められます。以下のステップに従って議論を組み立てることができるでしょう。この過程を確かなものにするために、次のセクションシステム設計課題例とその解答 を以下の指針に従って読み込むといいでしょう。ステップ 1: そのシステム使用例の概要、制約、推計値等を聞き出し、まとめるシステム仕様の要求事項を聞き出し、問題箇所を特定しましょう。使用例と制約を明確にするための質問を投げかけましょう。要求する推計値についても議論しておきましょう。誰がそのサービスを使うのか？どのように使うのか？何人のユーザーがいるのか？システムはどのような機能を果たすのか？システムへの入力と出力は？どれだけの容量のデータを捌く必要があるのか？一秒間に何リクエストの送信が想定されるか？読み書き比率の推定値はいくら程度か？ステップ 2: より高レベルのシステム設計を組み立てる重要なコンポーネントを全て考慮した高レベルのシステム設計概要を組み立てる。主要なコンポーネントと接続をスケッチして書き出す考えの裏付けをするステップ 3: 核となるコンポーネントを設計するそれぞれの主要なコンポーネントについての詳細を学ぶ。例えば、url短縮サービスの設計を問われた際には次のようにするといいでしょう:元のURLのハッシュ化したものを作り、それを保存するMD5 と Base62ハッシュ衝突SQL もしくは NoSQLデータベーススキーマハッシュ化されたURLを元のURLに再翻訳するデータベース参照API & オブジェクト指向の設計ステップ 4: システム設計のスケール与えられた制約条件からボトルネックとなりそうなところを割り出し、明確化する。  例えば、スケーラビリティの問題解決のために以下の要素を考慮する必要があるだろうか？ロードバランサー水平スケーリングキャッシングデータベースシャーディング取りうる解決策とそのトレードオフについて議論をしよう。全てのことはトレードオフの関係にある。ボトルネックについてはスケーラブルなシステム設計の原理を読むといいでしょう。ちょっとした暗算問題ちょっとした推計値を手計算ですることを求められることもあるかもしれません。補遺の以下の項目が役に立つでしょう:チラ裏計算でシステム設計する2の乗数表全てのプログラマーが知っておくべきレイテンシの参考値文献とその他の参考資料以下のリンク先ページを見てどのような質問を投げかけられるか概要を頭に入れておきましょう:システム設計面接で成功するには？システム設計面接アーキテクチャ、システム設計面接への導入システム設計課題例とその解答頻出のシステム設計面接課題と参考解答、コード及びダイアグラム解答は solutions/ フォルダ以下にリンクが貼られている問題Pastebin.com (もしくは Bit.ly) を設計する解答Twitterタイムライン (もしくはFacebookフィード)を設計するTwitter検索(もしくはFacebook検索)機能を設計する解答ウェブクローラーを設計する解答Mint.comを設計する解答SNSサービスのデータ構造を設計する解答検索エンジンのキー/バリュー構造を設計する解答Amazonのカテゴリ毎の売り上げランキングを設計する解答AWS上で100万人規模のユーザーを捌くサービスを設計する解答システム設計問題を追加するContributePastebin.com (もしくは Bit.ly) を設計する問題と解答を見るTwitterタイムライン&検索 (もしくはFacebookフィード&検索)を設計する問題と解答を見るウェブクローラーの設計問題と解答を見るMint.comの設計問題と解答を見るSNSサービスのデータ構造を設計する問題と解答を見る検索エンジンのキー/バリュー構造を設計する問題と解答を見るAmazonのカテゴリ毎の売り上げランキングを設計する問題と解答を見るAWS上で100万人規模のユーザーを捌くサービスを設計する問題と解答を見るオブジェクト指向設計問題と解答頻出のオブジェクト指向システム設計面接課題と参考解答、コード及びダイアグラム解答は solutions/ フォルダ以下にリンクが貼られている備考: このセクションは作業中です問題ハッシュマップの設計解答LRUキャッシュの設計解答コールセンターの設計解答カードのデッキの設計解答駐車場の設計解答チャットサーバーの設計解答円形配列の設計Contributeオブジェクト指向システム設計問題を追加するContributeシステム設計トピックス: まずはここからシステム設計の勉強は初めて？まず初めに、よく使われる設計原理について、それらが何であるか、どのように用いられるか、長所短所について基本的な知識を得る必要がありますステップ 1: スケーラビリティに関する動画を観て復習するHarvardでのスケーラビリティの講義ここで触れられているトピックス:垂直スケーリング水平スケーリングキャッシングロードバランシングデータベースレプリケーションデータベースパーティションステップ 2: スケーラビリティに関する資料を読んで復習するスケーラビリティここで触れられているトピックス:クローンデータベースキャッシュ非同期次のステップ次に、ハイレベルでのトレードオフについてみていく:パフォーマンス vs スケーラビリティレイテンシ vs スループット可用性 vs 一貫性全てはトレードオフの関係にあるというのを肝に命じておきましょう。それから、より深い内容、DNSやCDNそしてロードバランサーなどについて学習を進めていきましょう。パフォーマンス vs スケーラビリティリソースが追加されるのにつれて パフォーマンス が向上する場合そのサービスは スケーラブル であると言えるでしょう。一般的に、パフォーマンスを向上させるというのはすなわち計算処理を増やすことを意味しますが、データセットが増えた時などより大きな処理を捌けるようになることでもあります。1パフォーマンスvsスケーラビリティをとらえる他の考え方:パフォーマンス での問題を抱えている時、あなたのシステムは一人のユーザーにとって遅いと言えるでしょう。スケーラビリティ での問題を抱えているとき、一人のユーザーにとっては速いですが、多くのリクエストがある時には遅くなってしまうでしょう。その他の参考資料、ページスケーラビリティについてスケーラビリティ、可用性、安定性、パターンレイテンシー vs スループットレイテンシー とはなにがしかの動作を行う、もしくは結果を算出するのに要する時間スループット とはそのような動作や結果算出が単位時間に行われる回数一般的に、 最大限のスループット を 許容範囲内のレイテンシー で実現することを目指すのが普通だ。その他の参考資料、ページレイテンシー vs スループットを理解する可用性 vs 一貫性CAP 理論      Source: CAP theorem revisited分散型コンピュータシステムにおいては下の三つのうち二つまでしか同時に保証することはできない。:一貫性 - 全ての読み込みは最新の書き込みもしくはエラーを受け取る可用性 - 受け取る情報が最新のものだという保証はないが、全てのリクエストはレスポンスを必ず受け取る分断耐性 - ネットワーク問題によって順不同の分断が起きてもシステムが動作を続けるネットワークは信頼できないので、分断耐性は必ず保証しなければなりません。つまりソフトウェアシステムとしてのトレードオフは、一貫性を取るか、可用性を取るかを考えなければなりません。CP - 一貫性と分断耐性(consistency and partition tolerance)分断されたノードからのレスポンスを待ち続けているとタイムアウトエラーに陥る可能性があります。CPはあなたのサービスがアトミックな読み書き（不可分操作）を必要とする際にはいい選択肢でしょう。AP - 可用性と分断耐性(availability and partition tolerance)レスポンスはノード上にあるデータで最新のものを返します。つまり、最新版のデータが返されるとは限りません。分断が解消された後も、書き込みが反映されるのには時間がかかります。結果整合性　を求めるサービスの際にはAPを採用するのがいいでしょう。もしくは、外部エラーに関わらずシステムが稼働する必要がある際にも同様です。その他の参考資料、ページCAP 理論を振り返る平易な英語でのCAP 理論のイントロCAP FAQ一貫性パターン同じデータの複製が複数ある状態では、クライアントが一貫したデータ表示を受け取るために、どのようにそれらを同期すればいいのかという課題があります。 CAP 理論 における一貫性の定義を思い出してみましょう。全ての読み取りは最新の書き込みデータもしくはエラーを受け取るはずです。弱い一貫性書き込み後の読み取りでは、その最新の書き込みを読めたり読めなかったりする。ベストエフォート型のアプローチに基づく。このアプローチはmemcachedなどのシステムに見られます。弱い一貫性はリアルタイム性が必要なユースケース、例えばVoIP、ビデオチャット、リアルタイムマルチプレイヤーゲームなどと相性がいいでしょう。例えば、電話に出ているときに数秒間音声が受け取れなくなったとしたら、その後に接続が回復してもその接続が切断されていた間に話されていたことは聞き取れないというような感じです。結果整合性書き込みの後、読み取りは最終的にはその結果を読み取ることができる(ミリ秒ほど遅れてというのが一般的です)。データは非同期的に複製されます。このアプローチはDNSやメールシステムなどに採用されています。結果整合性は多くのリクエストを捌くサービスと相性がいいでしょう。強い一貫性書き込みの後、読み取りはそれを必ず読むことができます。データは同期的に複製されます。このアプローチはファイルシステムやRDBMSなどで採用されています。トランザクションを扱うサービスでは強い一貫性が必要でしょう。その他の参考資料、ページデータセンター間でのトランザクション可用性パターン高い可用性を担保するには主に次の二つのパターンがあります: フェイルオーバー と レプリケーション です。フェイルオーバーアクティブ・パッシブアクティブ・パッシブフェイルオーバーにおいては、周期信号はアクティブもしくはスタンバイ中のパッシブなサーバーに送られます。周期信号が中断された時には、パッシブだったサーバーがアクティブサーバーのIPアドレスを引き継いでサービスを再開します。起動までのダウンタイムはパッシブサーバーが「ホット」なスタンバイ状態にあるか、「コールド」なスタンバイ状態にあるかで変わります。アクティブなサーバーのみがトラフィックを捌きます。アクティブ・パッシブフェイルオーバーはマスター・スレーブフェイルオーバーと呼ばれることもあります。アクティブ・アクティブアクティブアクティブ構成では両方のサーバーがトラフィックを捌くことで負荷を分散します。これらのサーバーがパブリックなものの場合、DNSは両方のサーバーのパブリックIPを知っている必要があります。もし、プライベートなものな場合、アプリケーションロジックが両方のサーバーの情報について知っている必要があります。アクティブ・アクティブなフェイルオーバーはマスター・マスターフェイルオーバーと呼ばれることもあります。短所: フェイルオーバーフェイルオーバーではより多くのハードウェアを要し、複雑さが増します。最新の書き込みがパッシブサーバーに複製される前にアクティブが落ちると、データ欠損が起きる潜在可能性があります。レプリケーションマスター・スレーブ　と　マスター・マスターこのトピックは データベース セクションにおいてより詳細に解説されています:マスター・スレーブ レプリケーションマスター・マスター レプリケーションドメインネームシステム      Source: DNS security presentationドメインネームシステム (DNS) は www.example.com などのドメインネームをIPアドレスへと翻訳します。DNSは少数のオーソライズされたサーバーが上位に位置する階層的構造です。あなたのルーターもしくはISPは検索をする際にどのDNSサーバーに接続するかという情報を提供します。低い階層のDNSサーバーはその経路マップをキャッシュします。ただ、この情報は伝搬遅延によって陳腐化する可能性があります。DNSの結果はあなたのブラウザもしくはOSに一定期間（time to live (TTL)に設定された期間）キャッシュされます。NS record (name server) - あなたのドメイン・サブドメインでのDNSサーバーを特定します。MX record (mail exchange) - メッセージを受け取るメールサーバーを特定します。A record (address) - IPアドレスに名前をつけます。CNAME (canonical) - 他の名前もしくは　CNAME (example.com を www.example.com) もしくは A recordへと名前を指し示す。CloudFlare や Route 53 などのサービスはマネージドDNSサービスを提供しています。いくつかのDNSサービスでは様々な手法を使ってトラフィックを捌くことができます:加重ラウンドロビントラフィックがメンテナンス中のサーバーに行くのを防ぎます様々なクラスターサイズに応じて調整しますA/B テストレイテンシーベース地理ベース欠点: DNS上記で示されているようなキャッシングによって緩和されているとはいえ、DNSサーバーへの接続には少し遅延が生じる。DNSサーバーは、政府、ISP企業,そして大企業に管理されているが、それらの管理は複雑である。DNSサービスはDDoS attackの例で、IPアドレスなしにユーザーがTwitterなどにアクセスできなくなったように、攻撃を受ける可能性がある。その他の参考資料、ページDNS アーキテクチャWikipediaDNS 記事コンテンツデリバリーネットワーク(Content delivery network)      Source: Why use a CDNコンテンツデリバリーネットワーク(CDN)は世界中に配置されたプロキシサーバーのネットワークがユーザーに一番地理的に近いサーバーからコンテンツを配信するシステムのことです。AmazonのCloudFrontなどは例外的にダイナミックなコンテンツも配信しますが、一般的に、HTML/CSS/JS、写真、そして動画などの静的ファイルがCDNを通じて配信されます。そのサイトのDNSがクライアントにどのサーバーと交信するかという情報を伝えます。CDNを用いてコンテンツを配信することで以下の二つの理由でパフォーマンスが劇的に向上します:ユーザーは近くにあるデータセンターから受信できるバックエンドサーバーはCDNが処理してくれるリクエストに関しては処理する必要がなくなりますプッシュCDNプッシュCDNではサーバーデータに更新があった時には必ず、新しいコンテンツを受け取る方式です。コンテンツを用意し、CDNに直接アップロードし、URLをCDNを指すように指定するところまで、全て自分で責任を負う形です。コンテンツがいつ期限切れになるのか更新されるのかを設定することができます。コンテンツは新規作成時、更新時のみアップロードされることでトラフィックは最小化される一方、ストレージは最大限消費されてしまいます。トラフィックの少ない、もしくは頻繁にはコンテンツが更新されないサイトの場合にはプッシュCDNと相性がいいでしょう。コンテンツは定期的に再びプルされるのではなく、CDNに一度のみ配置されます。プルCDNプルCDNでは一人目のユーザーがリクエストした時に、新しいコンテンツをサービスのサーバーから取得します。コンテンツは自分のサーバーに保存して、CDNを指すURLを書き換えます。結果として、CDNにコンテンツがキャッシュされるまではリクエスト処理が遅くなります。time-to-live (TTL) はコンテンツがどれだけの期間キャッシュされるかを規定します。プルCDNはCDN 上でのストレージスペースを最小化しますが、有効期限が切れたファイルが更新前にプルされてしまうことで冗長なトラフィックに繋がってしまう可能性があります。大規模なトラフィックのあるサイトではプルCDNが相性がいいでしょう。というのも、トラフィックの大部分は最近リクエストされ、CDNに残っているコンテンツにアクセスするものであることが多いからです。欠点: CDNCDNのコストはトラフィック量によって変わります。もちろん、CDNを使わない場合のコストと比較するべきでしょう。TTLが切れる前にコンテンツが更新されると陳腐化する恐れがあります。CDNでは静的コンテンツがCDNを指すようにURLを更新する必要があります。その他の参考資料、ページグローバルに分散されたコンテンツデリバリーネットワークプッシュCDNとプルCDNの違いWikipediaロードバランサー      Source: Scalable system design patternsロードバランサーは入力されるクライアントのリクエストをアプリケーションサーバーやデータベースへと分散させる。どのケースでもロードバランサーはサーバー等計算リソースからのレスポンスを適切なクライアントに返す。ロードバランサーは以下のことに効果的です:リクエストが状態の良くないサーバーに行くのを防ぐリクエストを過剰に送るのを防ぐ特定箇所の欠陥でサービスが落ちることを防ぐロードバランサーは (費用の高い) ハードウェアもしくはHAProxyなどのソフトウェアで実現できる。他の利点としては:SSL termination - 入力されるリクエストを解読する、また、サーバーレスポンスを暗号化することでバックエンドのサーバーがこのコストが高くつきがちな処理を請け負わなくていいように肩代わりします。X.509 certificates をそれぞれのサーバーにインストールする必要をなくしますセッション管理 - クッキーを取り扱うウェブアプリがセッション情報を保持していない時などに、特定のクライアントのリクエストを同じインスタンスへと流します。障害に対応するために、アクティブ・パッシブ もしくは アクティブ・アクティブ モードのどちらにおいても、複数のロードバランサーを配置するのが一般的です。ロードバランサーは以下のような種々のメトリックを用いてトラフィックルーティングを行うことができます:ランダムLeast loadedセッション/クッキーラウンドロビンもしくは加重ラウンドロビンLayer 4Layer 7Layer 4 ロードバランシングLayer 4 ロードバランサーは トランスポートレイヤー を参照してどのようにリクエストを配分するか判断します。一般的に、トランスポートレイヤーとしては、ソース、送信先IPアドレス、ヘッダーに記述されたポート番号が含まれますが、パケットの中身のコンテンツは含みません。 Layer 4 ロードバランサーはネットワークパケットを上流サーバーへ届け、上流サーバーから配信することでネットワークアドレス変換 Network Address Translation (NAT) を実現します。Layer 7 ロードバランシングLayer 7 ロードバランサーは アプリケーションレイヤー を参照してどのようにリクエストを配分するか判断します。ヘッダー、メッセージ、クッキーなどのコンテンツのことです。Layer 7 ロードバランサーはネットワークトラフィックの終端を受け持ち メッセージを読み込み、ロードバランシングの判断をし、選択したサーバーとの接続を繋ぎます。例えば layer 7 ロードバランサーは動画のトラフィックを直接、そのデータをホストしているサーバーにつなぐと同時に、決済処理などのより繊細なトラフィックをセキュリティ強化されたサーバーに流すということもできる。柔軟性とのトレードオフになりますが、 layer 4 ロードバランサーではLayer 7ロードバランサーよりも所要時間、計算リソースを少なく済ませることができます。ただし、昨今の汎用ハードウェアではパフォーマンスは最小限のみしか発揮できないでしょう。水平スケーリングロードバランサーでは水平スケーリングによってパフォーマンスと可用性を向上させることができます。手頃な汎用マシンを追加することによってスケールアウトさせる方が、一つのサーバーをより高価なマシンにスケールアップする（垂直スケーリング）より費用対効果も高くなり、結果的に可用性も高くなります。また、汎用ハードウェアを扱える人材を雇う方が、特化型の商用ハードウェアを扱える人材を雇うよりも簡単でしょう。欠点: 水平スケーリング水平的にスケーリングしていくと、複雑さが増す上に、サーバーのクローニングが必要になる。サーバーはステートレスである必要がある: ユーザーに関連するセッションや、プロフィール写真などのデータを持ってはいけないセッションは一元的なデータベース (SQL、 NoSQL)などのデータストアにストアされるか キャッシュ (Redis、 Memcached)に残す必要があります。キャッシュやデータベースなどの下流サーバーは上流サーバーがスケールアウトするにつれてより多くの同時接続を保たなければなりません。欠点: ロードバランサーロードバランサーはリソースが不足していたり、設定が適切でない場合、システム全体のボトルネックになる可能性があります。単一障害点を除こうとしてロードバランサーを導入した結果、複雑さが増してしまうことになります。ロードバランサーが一つだけだとそこが単一障害点になってしまいます。一方で、ロードバランサーを複数にすると、さらに複雑さが増してしまいます。その他の参考資料、ページNGINX アーキテクチャHAProxy アーキテクチャガイドスケーラビリティWikipediaLayer 4 ロードバランシングLayer 7 ロードバランシングELB listener configリバースプロキシ(webサーバー)      Source: Wikipedia  リバースプロキシサーバーは内部サービスをまとめて外部に統一されたインターフェースを提供するウェブサーバーです。クライアントからのリクエストはそれに対応するサーバーに送られて、その後レスポンスをリバースプロキシがクライアントに返します。他には以下のような利点があります:より堅牢なセキュリティ - バックエンドサーバーの情報を隠したり、IPアドレスをブラックリスト化したり、クライアントごとの接続数を制限したりできます。スケーラビリティや柔軟性が増します - クライアントはリバースプロキシのIPしか見ないので、裏でサーバーをスケールしたり、設定を変えやすくなります。SSL termination - 入力されるリクエストを解読し、サーバーのレスポンスを暗号化することでサーバーがこのコストのかかりうる処理をしなくて済むようになります。X.509 証明書 を各サーバーにインストールする必要がなくなります。圧縮 - サーバーレスポンスを圧縮できますキャッシング - キャッシュされたリクエストに対して、レスポンスを返します静的コンテンツ - 静的コンテンツを直接送信することができます。HTML/CSS/JS写真動画などなどロードバランサー vs リバースプロキシ複数のサーバーがある時にはロードバランサーをデプロイすると役に立つでしょう。 しばしば、ロードバランサーは同じ機能を果たすサーバー群へのトラフィックを捌きます。リバースプロキシでは、上記に述べたような利点を、単一のウェブサーバーやアプリケーションレイヤーに対しても示すことができます。NGINX や HAProxy などの技術はlayer 7 リバースプロキシとロードバランサーの両方をサポートします。欠点: リバースプロキシリバースプロキシを導入するとシステムの複雑性が増します。単一のリバースプロキシは単一障害点になりえます。一方で、複数のリバースプロキシを導入すると(例: フェイルオーバー) 複雑性はより増します。その他の参考資料、ページリバースプロキシ vs ロードバランサーNGINX アーキテクチャHAProxy アーキテクチャ ガイドWikipediaアプリケーション層      Source: Intro to architecting systems for scaleウェブレイヤーをアプリケーション層 (プラットフォーム層とも言われる) と分離することでそれぞれの層を独立にスケール、設定することができるようになります。新しいAPIをアプリケーション層に追加する際に、不必要にウェブサーバーを追加する必要がなくなります。単一責任の原則 では、小さい自律的なサービスが協調して動くように提唱しています。小さいサービスの小さいチームが急成長のためにより積極的な計画を立てられるようにするためです。アプリケーション層は非同期処理もサポートします。マイクロサービス独立してデプロイできる、小規模なモジュール様式であるマイクロサービスもこの議論に関係してくる技術でしょう。それぞれのサービスは独自のプロセスを処理し、明確で軽量なメカニズムで通信して、その目的とする機能を実現します。1例えばPinterestでは以下のようなマイクロサービスに分かれています。ユーザープロフィール、フォロワー、フィード、検索、写真アップロードなどです。サービスディスカバリーConsul、 Etcd、 Zookeeper などのシステムでは、登録されているサービスの名前、アドレス、ポートの情報を監視することで、サービス同士が互いを見つけやすくしています。サービスの完全性の確認には Health checks が便利で、これには HTTP エンドポイントがよく使われます。 Consul と Etcd のいずれも組み込みの key-value store を持っており、設定データや共有データなどのデータを保存しておくことに使われます。欠点: アプリケーション層アーキテクチャ、運用、そしてプロセスを考慮すると、緩く結び付けられたアプリケーション層を追加するには、モノリシックなシステムとは異なるアプローチが必要です。マイクロサービスはデプロイと運用の点から見ると複雑性が増すことになります。その他の参考資料、ページスケールするシステムアーキテクチャを設計するためのイントロシステム設計インタビューを紐解くサービス指向アーキテクチャZookeeperのイントロダクションマイクロサービスを作るために知っておきたいことデータベース      Source: Scaling up to your first 10 million usersリレーショナルデータベースマネジメントシステム (RDBMS)SQLなどのリレーショナルデータベースはテーブルに整理されたデータの集合である。ACID はリレーショナルデータベースにおけるトランザクションのプロパティの集合である不可分性 - それぞれのトランザクションはあるかないかのいずれかである一貫性 - どんなトランザクションもデータベースをある確かな状態から次の状態に遷移させる。独立性 - 同時にトランザクションを処理することは、連続的にトランザクションを処理するのと同じ結果をもたらす。永続性 - トランザクションが処理されたら、そのように保存されるリレーショナルデータベースをスケールさせるためにはたくさんの技術がある: マスター・スレーブ レプリケーション、 マスター・マスター レプリケーション、 federation、 シャーディング、 非正規化、 そして SQL チューニングマスタースレーブ レプリケーションマスターデータベースが読み取りと書き込みを処理し、書き込みを一つ以上のスレーブデータベースに複製します。スレーブデータベースは読み取りのみを処理します。スレーブデータベースは木構造のように追加のスレーブにデータを複製することもできます。マスターデータベースがオフラインになった場合には、いずれかのスレーブがマスターに昇格するか、新しいマスターデータベースが追加されるまでは読み取り専用モードで稼働します。      Source: Scalability, availability, stability, patterns欠点: マスタースレーブ レプリケーションスレーブをマスターに昇格させるには追加のロジックが必要になる。マスタースレーブ レプリケーション、マスターマスター レプリケーションの 両方 の欠点は欠点: レプリケーションを参照マスターマスター レプリケーションいずれのマスターも読み取り書き込みの両方に対応する。書き込みに関してはそれぞれ協調する。いずれかのマスターが落ちても、システム全体としては読み書き両方に対応したまま運用できる。      Source: Scalability, availability, stability, patterns欠点: マスターマスター レプリケーションロードバランサーを導入するか、アプリケーションロジックを変更することでどこに書き込むかを指定しなければならない。大体のマスターマスターシステムは、一貫性が緩い（ACID原理を守っていない）もしくは、同期する時間がかかるために書き込みのレイテンシーが増加してしまっている。書き込みノードが追加され、レイテンシーが増加するにつれ書き込みの衝突の可能性が増える。マスタースレーブ レプリケーション、マスターマスター レプリケーションの 両方 の欠点は欠点: レプリケーション を参照欠点: レプリケーション新しいデータ書き込みを複製する前にマスターが落ちた場合にはそのデータが失われてしまう可能性がある。書き込みは読み取りレプリカにおいてリプレイされる。書き込みが多い場合、複製ノードが書き込みの処理のみで行き詰まって、読み取りの処理を満足に行えない可能性がある。読み取りスレーブノードの数が多ければ多いほど、複製しなければならない数も増え、複製時間が伸びてしまいます。システムによっては、マスターへの書き込みはマルチスレッドで並列処理できる一方、スレーブへの複製は単一スレッドで連続的に処理しなければならない場合があります。レプリケーションでは追加のハードウェアが必要になり、複雑性も増します。その他の参考資料、ページ: レプリケーションスケーラビリティ、 可用性、 スタビリティ パターンマルチマスター レプリケーションFederation      Source: Scaling up to your first 10 million usersフェデレーション (もしくは機能分割化とも言う) はデータベースを機能ごとに分割する。例えば、モノリシックな単一データベースの代わりに、データベースを フォーラム、 ユーザー、 プロダクト のように三つにすることで、データベース一つあたりの書き込み・読み取りのトラフィックが減り、その結果レプリケーションのラグも短くなります。データベースが小さくなることで、メモリーに収まるデータが増えます。キャッシュの局所性が高まるため、キャッシュヒット率も上がります。単一の中央マスターで書き込みを直列化したりしないため、並列で書き込みを処理することができ、スループットの向上が期待できます。欠点: federation大規模な処理やテーブルを要するスキーマの場合、フェデレーションは効果的とは言えないでしょう。どのデータベースに読み書きをするのかを指定するアプリケーションロジックを更新しなければなりません。server linkで二つのデータベースからのデータを連結するのはより複雑になるでしょう。フェデレーションでは追加のハードウェアが必要になり、複雑性も増します。その他の参考資料、ページ: federationScaling up to your first 10 million usersシャーディング      Source: Scalability, availability, stability, patternsシャーディングでは異なるデータベースにそれぞれがデータのサブセット断片のみを持つようにデータを分割します。ユーザーデータベースを例にとると、ユーザー数が増えるにつれてクラスターにはより多くの断片が加えられることになります。federationの利点に似ていて、シャーディングでは読み書きのトラフィックを減らし、レプリケーションを減らし、キャッシュヒットを増やすことができます。インデックスサイズも減らすことができます。一般的にはインデックスサイズを減らすと、パフォーマンスが向上しクエリ速度が速くなります。なにがしかのデータを複製する機能がなければデータロスにつながりますが、もし、一つのシャードが落ちても、他のシャードが動いていることになります。フェデレーションと同じく、単一の中央マスターが書き込みの処理をしなくても、並列で書き込みを処理することができ、スループットの向上が期待できます。ユーザーテーブルをシャードする一般的な方法は、ユーザーのラストネームイニシャルでシャードするか、ユーザーの地理的配置でシャードするなどです。欠点: シャーディングシャードに対応するようにアプリケーションロジックを変更しなければなりません。結果としてSQLクエリが複雑になります。シャードではデータ配分がいびつになってしまう可能性があります。例えば、標準ユーザーの集合を持つシャードがある場合、そのシャードが他のシャードよりも重い負荷を負うことになります。リバランシングをすると複雑性がより増します。consistent hashing に基づいたシャーディングでは、通信データを削減することもできます。複数のシャードからのデータを連結するのはより複雑です。シャーディングでは追加のハードウェアが必要になり、複雑性も増します。その他の参考資料、ページ: シャーディングシャードの登場シャードデータベースアーキテクチャConsistent hashing非正規化非正規化では、書き込みのパフォーマンスをいくらか犠牲にして読み込みのパフォーマンスを向上させようとします。計算的に重いテーブルの結合などをせずに、複数のテーブルに冗長なデータのコピーが書き込まれるのを許容します。いくつかのRDBMS例えば、PostgreSQL やOracleはこの冗長な情報を取り扱い、一貫性を保つためのmaterialized views という機能をサポートしています。フェデレーション や シャーディングなどのテクニックによってそれぞれのデータセンターに分配されたデータを合一させることはとても複雑な作業です。非正規化によってそのような複雑な処理をしなくて済むようになります。多くのシステムで、100対1あるいは1000対1くらいになるくらい読み取りの方が、書き込みのトラフィックよりも多いことでしょう。読み込みを行うために、複雑なデータベースのジョイン処理が含まれるものは計算的に高価につきますし、ディスクの処理時間で膨大な時間を費消してしまうことになります。欠点: 非正規化データが複製される。冗長なデータの複製が同期されるように制約が存在し、そのことでデータベース全体の設計が複雑化する。非正規化されたデータベースは過大な書き込みを処理しなければならない場合、正規化されているそれよりもパフォーマンスにおいて劣る可能性がある。その他の参考資料、ページ: 非正規化DenormalizationSQLチューニングSQLチューニングは広範な知識を必要とする分野で多くの 本 が書かれています。ボトルネックを明らかにし、シミュレートする上で、 ベンチマーク を定め、 プロファイル することはとても重要です。ベンチマーク - abなどのツールを用いて、高負荷の状況をシミュレーションしてみましょう。プロファイル - slow query log などのツールを用いて、パフォーマンス状況の確認をしましょう。ベンチマークとプロファイルをとることで以下のような効率化の選択肢をとることになるでしょう。スキーマを絞るMySQLはアクセス速度向上のため、ディスク上の連続したブロックへデータを格納しています。長さの決まったフィールドに対しては VARCHAR よりも CHAR を使うようにしましょう。CHAR の方が効率的に速くランダムにデータにアクセスできます。 一方、 VARCHAR では次のデータに移る前にデータの末尾を検知しなければならないために速度が犠牲になります。ブログの投稿など、大きなテキストには TEXT を使いましょう。 TEXT ではブーリアン型の検索も可能です。 TEXT フィールドには、テキストブロックが配置されている、ディスク上の場所へのポインターが保存されます。2の32乗や40億以下を超えない程度の大きな数には INT を使いましょう。通貨に関しては小数点表示上のエラーを避けるために DECIMAL を使いましょう。大きな BLOBS を保存するのは避けましょう。どこからそのオブジェクトを取ってくることができるかの情報を保存しましょう。VARCHAR(255) は8ビットで数えられる最大の文字数です。一部のDBMSでは、1バイトの利用効率を最大化するためにこの文字数がよく使われます。検索性能向上のため 、可能であれば NOT NULL 制約を設定しましょう。インデックスを効果的に用いるクエリ(SELECT、 GROUP BY、 ORDER BY、 JOIN) の対象となる列にインデックスを使うことで速度を向上できるかもしれません。インデックスは通常、平衡探索木であるB木の形で表されます。B木によりデータは常にソートされた状態になります。また検索、順次アクセス、挿入、削除を対数時間で行えます。インデックスを配置することはデータをメモリーに残すことにつながりより容量を必要とします。インデックスの更新も必要になるため書き込みも遅くなります。大量のデータをロードする際には、インデックスを切ってからデータをロードして再びインデックスをビルドした方が速いことがあります。高負荷なジョインを避けるパフォーマンス上必要なところには非正規化を適用するテーブルのパーティションテーブルを分割し、ホットスポットを独立したテーブルに分離してメモリーに乗せられるようにする。クエリキャッシュを調整する場合によってはクエリキャッシュ がパフォーマンス問題 を引き起こす可能性があるその他の参考資料、ページ: SQLチューニングMySQLクエリを最適化するためのTipsVARCHAR(255)をやたらよく見かけるのはなんで？null値はどのようにパフォーマンスに影響するのか？Slow query logNoSQLNoSQL は key-value store、 document-store、 wide column store、 もしくは graph databaseによって表現されるデータアイテムの集合です。データは一般的に正規化されておらず、アプリケーション側でジョインが行われます。大部分のNoSQLは真のACIDトランザクションを持たず、 結果整合性 的な振る舞いの方を好みます。BASE はしばしばNoSQLデータベースのプロパティを説明するために用いられます。CAP Theorem と対照的に、BASEは一貫性よりも可用性を優先します。Basically available - システムは可用性を保証します。Soft state - システムの状態は入力がなくても時間経過とともに変化する可能性があります。結果整合性 - システム全体は時間経過とともにその間に入力がないという前提のもと、一貫性が達成されます。SQLか？NoSQLか？ を選択するのに加えて、どのタイプのNoSQLがどの使用例に最も適するかを理解するのはとても有益です。このセクションでは キーバリューストア、 ドキュメントストア、 ワイドカラムストア、 と グラフデータベース について触れていきます。キーバリューストア概要: ハッシュテーブルキーバリューストアでは一般的にO(1)の読み書きができ、それらはメモリないしSSDで裏付けられています。データストアはキーを 辞書的順序 で保持することでキーの効率的な取得を可能にしています。キーバリューストアではメタデータを値とともに保持することが可能です。キーバリューストアはハイパフォーマンスな挙動が可能で、単純なデータモデルやインメモリーキャッシュレイヤーなどのデータが急速に変わる場合などに使われます。単純な処理のみに機能が制限されているので、追加の処理機能が必要な場合にはその複雑性はアプリケーション層に載せることになります。キーバリューストアはもっと複雑なドキュメントストアや、グラフデータベースなどの基本です。その他の参考資料、ページ: キーバリューストアキーバリューデータベースキーバリューストアの欠点Redisアーキテクチャメムキャッシュアーキテクチャドキュメントストア概要: ドキュメントがバリューとして保存されたキーバリューストアドキュメントストアはオブジェクトに関する全ての情報を持つドキュメント(XML、 JSON、 binaryなど)を中心に据えたシステムです。ドキュメントストアでは、ドキュメント自身の内部構造に基づいた、APIもしくはクエリ言語を提供します。 メモ：多くのキーバリューストアでは、値のメタデータを扱う機能を含んでいますが、そのことによって二つドキュメントストアとの境界線が曖昧になってしまっています。以上のことを実現するために、ドキュメントはコレクション、タグ、メタデータやディレクトリなどとして整理されています。ドキュメント同士はまとめてグループにできるものの、それぞれで全く異なるフィールドを持つ可能性があります。MongoDB や CouchDB などのドキュメントストアも、複雑なクエリを処理するためのSQLのような言語を提供しています。DynamoDB はキーバリューとドキュメントの両方をサポートしています。ドキュメントストアは高い柔軟性を担保するので、頻繁に変化するデータを扱う時に用いられます。その他の参考資料、ページ:  ドキュメントストアドキュメント指向 データベースMongoDB アーキテクチャCouchDB アーキテクチャElasticsearch アーキテクチャワイドカラムストア      Source: SQL & NoSQL, a brief history概要: ネストされたマップ カラムファミリー<行キー、 カラム<ColKey、 Value、 Timestamp>>ワイドカラムストアのデータの基本単位はカラム（ネーム・バリューのペア）です。それぞれのカラムはカラムファミリーとして（SQLテーブルのように）グループ化することができます。スーパーカラムファミリーはカラムファミリーの集合です。それぞれのカラムには行キーでアクセスすることができます。同じ行キーを持つカラムは同じ行として認識されます。それぞれの値は、バージョン管理とコンフリクトが起きた時のために、タイムスタンプを含みます。GoogleはBigtableを初のワイドカラムストアとして発表しました。それがオープンソースでHadoopなどでよく使われるHBase やFacebookによるCassandra などのプロジェクトに影響を与えました。BigTable、HBaseやCassandraなどのストアはキーを辞書形式で保持することで選択したキーレンジでのデータ取得を効率的にします。ワイドカラムストアは高い可用性とスケーラビリティを担保します。これらはとても大規模なデータセットを扱うことによく使われます。その他の参考資料、ページ:  ワイドカラムストアSQL & NoSQL簡単に歴史をさらうBigtable アーキテクチャHBase アーキテクチャCassandra アーキテクチャグラフデータベース      Source: Graph database概要: グラフグラフデータベースでは、それぞれのノードがレコードで、それぞれのアークは二つのノードを繋ぐ関係性として定義されます。グラフデータベースは多数の外部キーや多対多などの複雑な関係性を表すのに最適です。グラフデータベースはSNSなどのサービスの複雑な関係性モデルなどについて高いパフォーマンスを発揮します。比較的新しく、まだ一般的には用いられていないので、開発ツールやリソースを探すのが他の方法に比べて難しいかもしれません。多くのグラフはREST APIsを通じてのみアクセスできます。その他の参考資料、ページ:  グラフGraphデータベースNeo4jFlockDBその他の参考資料、ページ:  NoSQL基本用語の説明NoSQLデータベースについて調査と選択ガイドスケーラビリティNoSQLのイントロダクションNoSQLパターンSQLか？NoSQLか？      Source: Transitioning from RDBMS to NoSQLSQL を選ぶ理由:構造化されたデータ厳格なスキーマリレーショナルデータ複雑なジョインをする必要性トランザクションスケールする際のパターンが明確なとき開発者の数、コミュニティ、コード等がより充実しているインデックスによるデータ探索はとても速いNoSQL を選ぶ理由:準構造化されたデータダイナミックないし、フレキシブルなスキーマノンリレーショナルなデータ複雑なジョインをする必要がないデータの多くのTB (もしくは PB) を保存する集中的、大規模なデータ負荷に耐えられるIOPSについては極めて高いスループットを示すNoSQLに適するサンプルデータ:急激なクリックストリームやログデータの収集リーダーボードやスコアリングデータショッピングカートなどの一時的情報頻繁にアクセスされる ('ホットな') テーブルメタデータやルックアップテーブルその他の参考資料、ページ:  　SQLもしくはNoSQL最初の1000万ユーザーにスケールアップするためにSQLとNoSQLの違いキャッシュ      Source: Scalable system design patternsキャッシュはページの読み込み時間を削減し、サーバーやデータベースへの負荷を低減することができます。このモデルでは、実際の処理を保存するために、ディスパッチャーがまず以前にリクエストが送信されたかどうかを確認し、直前の結果を受け取ります。データベースはそのパーティションに渡って統合された読み取り書き込みの分配を要求しますが、人気アイテムはその分配を歪めてシステム全体のボトルネックになってしまうことがあります。データベースの前にキャッシュを差し込むことでこのように、均一でない負荷やトラフィックの急激な増加を吸収することができます。クライアントキャッシングキャッシュはOSやブラウザーなどのクライアントサイド、サーバーサイド もしくは独立のキャッシュレイヤーに設置することができます。CDNキャッシングCDN もキャッシュの一つとして考えることができます。Webサーバーキャッシングリバースプロキシ や Varnish などのキャッシュは静的そして動的なコンテンツを直接配信することができます。 webサーバーもリクエストをキャッシュしてアプリケーションサーバーに接続することなしにレスポンスを返すことができます。データベースキャッシングデータベースは普通、一般的な使用状況に適するようなキャッシングの設定を初期状態で持っています。この設定を特定の仕様に合わせて調整することでパフォーマンスを向上させることができます。アプリケーションキャッシングメムキャッシュなどのIn-memoryキャッシュやRedisはアプリケーションとデータストレージの間のキーバリューストアです。データはRAMで保持されるため、データがディスクで保存される一般的なデータベースよりもだいぶ速いです。RAM容量はディスクよりも限られているので、least recently used (LRU)などのcache invalidation アルゴリズムが 'コールド' なエントリを弾き、'ホット' なデータをRAMに保存します。Redisはさらに以下のような機能を備えています:パージステンス設定ソート済みセット、リストなどの組み込みデータ構造キャッシュには様々なレベルのものがありますが、いずれも大きく二つのカテゴリーのいずれかに分類することができます: データベースクエリ と オブジェクト です:行レベルクエリレベルFully-formed serializable objectsFully-rendered HTML一般的に、ファイルベースキャッシングはクローンを作り出してオートスケーリングを難しくしてしまうので避けるべきです。データベースクエリレベルでのキャッシングデータベースをクエリする際には必ずクエリをキーとしてハッシュして結果をキャッシュに保存しましょう。この手法はキャッシュ期限切れ問題に悩むことになります:複雑なクエリによりキャッシュされた結果を削除することが困難テーブルセルなどのデータ断片が変化した時に、その変化したセルを含むかもしれない全てのキャッシュされたクエリを削除する必要がある。オブジェクトレベルでのキャッシングデータをアプリケーションコードでそうするように、オブジェクトとして捉えてみましょう。アプリケーションに、データベースからのデータセットをクラスインスタンスやデータ構造として組み立てさせます。:そのデータが変更されたら、オブジェクトをキャッシュから削除すること非同期処理を許容します: ワーカーがキャッシュされたオブジェクトの中で最新のものを集めてきます何をキャッシュするか:ユーザーのセッション完全にレンダーされたウェブページアクテビティストリームユーザーグラフデータいつキャッシュを更新するかキャッシュに保存できる容量は限られているため、自分のケースではどのキャッシュ手法が一番いいかは検討する必要があります。キャッシュアサイド      Source: From cache to in-memory data gridアプリケーションはストレージへの読み書きの処理をします。キャッシュはストレージとは直接やりとりをしません。アプリケーションは以下のことをします:キャッシュの中のエントリを参照しますが、結果としてキャッシュミスになりますデータベースからエントリを取得しますエントリをキャッシュに追加しますエントリを返しますdef get_user(self, user_id):    user = cache.get(\""user.{0}\"", user_id)    if user is None:        user = db.query(\""SELECT * FROM users WHERE user_id = {0}\"", user_id)        if user is not None:            key = \""user.{0}\"".format(user_id)            cache.set(key, json.dumps(user))    return userMemcached は通常このように使われる。その後のキャッシュデータ読み込みは速いです。キャッシュアサイドはレージーローディングであるとも言われます。リクエストされたデータのみがキャッシュされ、リクエストされていないデータでキャッシュが溢れるのを防止します。欠点: キャッシュアサイド各キャッシュミスは三つのトリップを呼び出すことになり、体感できるほどの遅延が起きてしまいます。データベースのデータが更新されるとキャッシュデータは古いものになってしまいます。time-to-live (TTL)を設定することでキャッシュエントリの更新を強制的に行う、もしくはライトスルーを採用することでこの問題は緩和できます。ノードが落ちると、新規の空のノードで代替されることでレイテンシーが増加することになります。ライトスルー      Source: Scalability, availability, stability, patternsアプリケーションはキャッシュをメインのデータストアとして使い、そこにデータの読み書きを行います。一方、キャッシュはデータベースへの読み書きを担当します。アプリケーションはキャッシュにあるエントリを追加・更新しますキャッシュは同期的にデータストアに書き込みを行いますエントリを返しますアプリケーションコード:set_user(12345, {\""foo\"":\""bar\""})キャッシュコード:def set_user(user_id, values):    user = db.query(\""UPDATE Users WHERE id = {0}\"", user_id, values)    cache.set(user_id, user)ライトスルーは書き込み処理のせいで全体としては遅いオペレーションですが、書き込まれたばかりのデータに関する読み込みは速いです。ユーザー側は一般的にデータ更新時の方が読み込み時よりもレイテンシーに許容的です。キャッシュ内のデータは最新版で保たれます。欠点: ライトスルーノードが落ちたこと、もしくはスケーリングによって新しいノードが作成された時に、新しいノードはデータベース内のエントリーが更新されるまではエントリーをキャッシュしません。キャッシュアサイドとライトスルーを併用することでこの問題を緩和できます。書き込まれたデータの大部分は一度も読み込まれることはありません。このデータはTTLによって圧縮することができます。ライトビハインド (ライトバック)      Source: Scalability, availability, stability, patternsライトビハインドではアプリケーションは以下のことをします:キャッシュのエントリーを追加・更新しますデータストアへの書き込みを非同期的に行うことで、書き込みパフォーマンスを向上させます。欠点: ライトビハインドキャッシュがデータストア内のコンテンツにヒットする前にキャッシュが落ちるとデータ欠損が起きる可能性があります。キャッシュアサイドやライトスルーよりも実装が複雑になります。リフレッシュアヘッド      Source: From cache to in-memory data grid期限切れよりも前に、直近でアクセスされた全てのキャッシュエントリを自動的に更新するように設定することができます。もしどのアイテムが将来必要になるのかを正確に予測することができるのならば、リードスルーよりもレイテンシーを削減することができます。欠点: リフレッシュアヘッドどのアイテムが必要になるかの予測が正確でない場合にはリフレッシュアヘッドがない方がレイテンシーは良いという結果になってしまいます。欠点: キャッシュcache invalidationなどを用いて、データベースなどの真のデータとキャッシュの間の一貫性を保つ必要があります。Redisやmemcachedを追加することでアプリケーション構成を変更する必要があります。Cache invalidationも難しいですがそれに加えて、いつキャッシュを更新するかという複雑な問題にも悩まされることになります。その他の参考資料、ページFrom cache to in-memory data gridスケーラブルなシステムデザインパターンスケールできるシステムを設計するためのイントロダクションスケーラビリティ、可用性、安定性、パターンスケーラビリティAWS ElastiCacheのストラテジーWikipedia非同期処理      Source: Intro to architecting systems for scale非同期のワークフローはもし、連続的に行われるとリクエスト時間を圧迫してしまうような重い処理を別で処理する手法です。また、定期的にデータを集合させるなどの時間がかかるような処理を前もって処理しておくことにも役立ちます。メッセージキューメッセージキューはメッセージを受け取り、保存し、配信します。もし、処理がインラインで行うには遅すぎる場合、以下のようなワークフローでメッセージキューを用いるといいでしょう:アプリケーションはジョブをキューに配信し、ユーザーにジョブステータスを伝えます。ワーカーがジョブキューから受け取って、処理を行い、終了したらそのシグナルを返します。ユーザーの処理が止まることはなく、ジョブはバックグラウンドで処理されます。この間に、クライアントはオプションとして、タスクが完了したかのように見せるために小規模の処理を行います。例えば、ツイートを投稿するときに、ツイートはすぐにあなたのタイムラインに反映されたように見えますが、そのツイートが実際に全てのフォロワーに配信されるまでにはもう少し時間がかかっているでしょう。Redis はシンプルなメッセージ仲介としてはいいですが、メッセージが失われてしまう可能性があります。RabbitMQ はよく使われていますが、'AMQP'プロトコルに対応して、自前のノードを立てる必要があります。Amazon SQS という選択肢もありますが、レイテンシーが高く、メッセージが重複して配信されてしまう可能性があります。タスクキュータスクキューはタスクとその関連するデータを受け取り、処理した上でその結果を返します。スケジュール管理をできるほか、バックグラウンドでとても重いジョブをこなすこともできます。Celery はスケジューリングとpythonのサポートがあります。バックプレッシャーもし、キューが拡大しすぎると、メモリーよりもキューの方が大きくなりキャッシュミスが起こり、ディスク読み出しにつながり、パフォーマンスが低下することにつながります。バックプレッシャーはキューサイズを制限することで回避することができ、高いスループットを確保しキューにすでにあるジョブについてのレスポンス時間を短縮できます。キューがいっぱいになると、クライアントはサーバービジーもしくはHTTP 503をレスポンスとして受け取りまた後で時間をおいてアクセスするようにメッセージを受け取ります。クライアントはexponential backoffなどによって後ほど再度時間を置いてリクエストすることができます。欠点: 非同期処理キューを用いることで遅延が起こり、複雑さも増すため、あまり重くない計算処理やリアルタイムワークフローにおいては同期処理の方がいいでしょう。その他の参考資料、ページIt's all a numbers gameオーバーロードした時にバックプレッシャーを適用するLittle's lawメッセージキューとタスクキューの違いとは？通信      Source: OSI 7 layer modelHypertext transfer protocol (HTTP)HTTP はクライアントとサーバー間でのデータをエンコードして転送するための手法です。リクエスト・レスポンスに関わるプロトコルです。クライアントがリクエストをサーバーに投げ、サーバーがリクエストに関係するコンテンツと完了ステータス情報をレスポンスとして返します。HTTPは自己完結するので、間にロードバランサー、キャッシュ、エンクリプション、圧縮などのどんな中間ルーターが入っても動くようにできています。基本的なHTTPリクエストはHTTP動詞(メソッド)とリソース(エンドポイント)で成り立っています。以下がよくあるHTTP動詞です。:動詞詳細冪等性*セーフキャッシュできるかGETリソースを読み取るYesYesYesPOSTリソースを作成するもしくはデータを処理するトリガーNoNoYes レスポンスが新しい情報を含む場合PUTリソースを作成もしくは入れ替えるYesNoNoPATCHリソースを部分的に更新するNoNoYes レスポンスが新しい情報を含む場合DELETEリソースを削除するYesNoNo何度呼んでも同じ結果が返ってくることHTTPはTCP や UDP などの低級プロトコルに依存しているアプリケーションレイヤーのプロトコルである。その他の参考資料、ページ: HTTPHTTPってなに?HTTP と TCPの違いPUT と PATCHの違い伝送制御プロトコル (TCP)      Source: How to make a multiplayer gameTCPはIP networkの上で成り立つ接続プロトコルです。接続はhandshakeによって開始、解除されます。全ての送信されたパケットは欠損なしで送信先に送信された順番で到達するように以下の方法で保証されています:シーケンス番号とchecksum fieldsが全てのパケットに用意されているAcknowledgementパケットと自動再送信もし送信者が正しいレスポンスを受け取らなかったとき、パケットを再送信します。複数のタイムアウトがあったとき、接続は解除されます。TCP はフロー制御 と 輻輳制御も実装しています。これらの機能によって速度は低下し、一般的にUDPよりも非効率な転送手段になっています。ハイスループットを実現するために、ウェブサーバーはかなり大きな数のTCP接続を開いておくことがあり、そのことでメモリー使用が圧迫されます。ウェブサーバスレッドと例えばmemcached サーバーの間で多数のコネクションを保っておくことは高くつくかもしれません。可能なところではUDPに切り替えるだけでなくコネクションプーリングなども役立つかもしれません。TCPは高い依存性を要し、時間制約が厳しくないものに適しているでしょう。ウェブサーバー、データベース情報、SMTP、FTPやSSHなどの例に適用されます。以下の時にUDPよりもTCPを使うといいでしょう:全てのデータが欠損することなしに届いてほしいネットワークスループットの最適な自動推測をしてオペレーションしたいユーザデータグラムプロトコル (UDP)      Source: How to make a multiplayer gameUDPはコネクションレスです。データグラム（パケットのようなもの）はデータグラムレベルでの保証しかされません。データグラムは順不同で受け取り先に到着したりそもそも着かなかったりします。UDPは輻輳制御をサポートしません。TCPにおいてはサポートされているこれらの保証がないため、UDPは一般的に、TCPよりも効率的です。UDPはサブネット上のすべての機器にデータグラムを送信することができます。これはDHCP において役に立ちます。というのも、クライアントはまだIPアドレスを取得していないので、IPアドレスを必要とするTCPによるストリームができないからです。UDPは信頼性の面では劣りますが、VoIP、ビデオチャット、ストリーミングや同時通信マルチプレイヤーゲームなどのリアルタイム性が重視される時にはとても効果的です。TCPよりもUDPを使うのは:レイテンシーを最低限に抑えたい時データ欠損よりも、データ遅延を重視するときエラー修正を自前で実装したいときその他の参考資料、ページ: TCP と UDPゲームプログラミングのためのネットワークTCP と UDP プロトコルの主な違いTCP と UDPの違いTransmission control protocolUser datagram protocolFacebookのメムキャッシュスケーリング遠隔手続呼出 (RPC)      Source: Crack the system design interviewRPCではクライアントがリモートサーバーなどの異なるアドレス空間でプロシージャーが処理されるようにします。プロシージャーはローカルでのコールのように、クライアントからサーバーにどのように通信するかという詳細を省いた状態でコードが書かれます。リモートのコールは普通、ローカルのコールよりも遅く、信頼性に欠けるため、RPCコールをローカルコールと区別させておくことが好ましいでしょう。人気のRPCフレームワークは以下です。Protobuf、 Thrift、AvroRPC は リクエストレスポンスプロトコル:クライアントプログラム - クライアントスタブプロシージャーを呼び出します。パラメータはローカルでのプロシージャーコールのようにスタックへとプッシュされていきます。クライアントスタブプロシージャー - プロシージャIDとアーギュメントをパックしてリクエストメッセージにします。クライアント通信モジュール - OSがクライアントからサーバーへとメッセージを送ります。サーバー通信モジュール - OSが受け取ったパケットをサーバースタブプロシージャーに受け渡します。サーバースタブプロシージャー -  結果を展開し、プロシージャーIDにマッチするサーバープロシージャーを呼び出し、結果を返します。サーバーレスポンスは上記のステップを逆順で繰り返します。Sample RPC calls:GET /someoperation?data=anIdPOST /anotheroperation{  \""data\"":\""anId\"";  \""anotherdata\"": \""another value\""}RPCは振る舞いを公開することに焦点を当てています。RPCは内部通信パフォーマンスを理由として使われることが多いです。というのも、使用する状況に合わせてネイティブコールを自作することができるからです。ネイティブライブラリー (aka SDK) を呼ぶのは以下の時:ターゲットのプラットフォームを知っている時ロジックがどのようにアクセスされるのかを管理したいときライブラリー外でエラーがどのようにコントロールされるかを管理したい時パフォーマンスとエンドユーザーエクスペリエンスが最優先の時REST プロトコルに従うHTTP APIはパブリックAPIにおいてよく用いられます。欠点: RPCRPCクライアントとはサービス実装により厳密に左右されることになります。新しいオペレーション、使用例があるたびに新しくAPIが定義されなければなりません。RPCをデバッグするのは難しい可能性があります。既存のテクノロジーをそのまま使ってサービスを構築することはできないかもしれません。例えば、SquidなどのサーバーにRPCコールが正しくキャッシュ されるように追加で骨を折る必要があるかもしれません。Representational state transfer (REST)RESTは、クライアントがサーバーによってマネージされるリソースに対して処理を行うクライアント・サーバーモデルを支持するアーキテキチャスタイルです。サーバーは操作できるもしくは新しいリソースレプレゼンテーションを受け取ることができるようなリソースやアクションのレプレゼンテーションを提供します。すべての通信はステートレスでキャッシュ可能でなければなりません。RESTful なインターフェースには次の四つの特徴があります:特徴的なリソース (URI in HTTP) - どのオペレーションであっても同じURIを使う。HTTP動詞によって変わる (Verbs in HTTP) - 動詞、ヘッダー、ボディを使う自己説明的なエラーメッセージ (status response in HTTP) - ステータスコードを使い、新しく作ったりしないこと。HATEOAS (HTML interface for HTTP) - 自分のwebサービスがブラウザで完全にアクセスできること。サンプル REST コール:GET /someresources/anIdPUT /someresources/anId{\""anotherdata\"": \""another value\""}RESTはデータを公開することに焦点を当てています。クライアントとサーバーのカップリングを最小限にするもので、パブリックAPIなどによく用いられます。RESTはURI、 representation through headers、そして、GET、POST、PUT、 DELETE、PATCHなどのHTTP動詞等のよりジェネリックで統一されたメソッドを用います。ステートレスであるのでRESTは水平スケーリングやパーティショニングに最適です。欠点: RESTRESTはデータ公開に焦点を当てているので、リソースが自然に整理されていなかったり、シンプルなヒエラルキーで表せられない時にはよい選択肢とは言えないかもしれません。例えば、とあるイベントのセットにマッチするすべての更新情報を返すと言った処理は簡単にはパスで表現することができません。RESTでは、URIパス、クエリパラメータ、そして場合によってはリクエストボディなどによって実装されることが多いでしょう。RESTは少数の動詞に依存しています(GET、POST、PUT、DELETE、そして PATCH) が時には使いたい事例に合わないことがあります。例えば、期限の切れたドキュメントをアーカイブに移したい場合などはこれらの動詞の中には綺麗にはフィットしません。ネストされたヒエラルキーの中にあるリソースをとってくるのはシングルビューを描画するのにクライアントとサーバー間で数回やりとりしなければなりません。例として、ブログエントリーのコンテンツとそれに対するコメントを表示する場合などです。様々なネットワーク環境で動作する可能性が考えられるモバイルアプリケーションにおいてはこのような複数のやり取りは好ましくありません。時が経つにつれて、APIレスポンスにより多くのフィールドが与えられて、古いクライアントはすでにいらないものも含めてすべてのデータフィールドを受け取ることになります。そのことで、ペイロードが大きくなりすぎて、レイテンシーも拡大することになります。RPCとREST比較OperationRPCRESTサインアップPOST /signupPOST /personsリザインPOST /resign{\""personid\"": \""1234\""}DELETE /persons/1234Person読み込みGET /readPerson?personid=1234GET /persons/1234Personのアイテムリスト読み込みGET /readUsersItemsList?personid=1234GET /persons/1234/itemsPersonのアイテムへのアイテム追加POST /addItemToUsersItemsList{\""personid\"": \""1234\"";\""itemid\"": \""456\""}POST /persons/1234/items{\""itemid\"": \""456\""}アイテム更新POST /modifyItem{\""itemid\"": \""456\"";\""key\"": \""value\""}PUT /items/456{\""key\"": \""value\""}アイテム削除POST /removeItem{\""itemid\"": \""456\""}DELETE /items/456  Source: Do you really know why you prefer REST over RPCその他の参考資料、ページ: REST と RPCDo you really know why you prefer REST over RPCWhen are RPC-ish approaches more appropriate than REST?REST vs JSON-RPCDebunking the myths of RPC and RESTWhat are the drawbacks of using RESTCrack the system design interviewThriftWhy REST for internal use and not RPCセキュリティこのセクションは更新が必要です。contributingしてください！セキュリティは幅広いトピックです。十分な経験、セキュリティ分野のバックグラウンドがなくても、セキュリティの知識を要する職に応募するのでない限り、基本以上のことを知る必要はないでしょう。情報伝達、保存における暗号化XSS や SQL injectionを防ぐために、全てのユーザー入力もしくはユーザーに露出される入力パラメーターをサニタイズするSQL injectionを防ぐためにパラメータ化されたクエリを用いる。least privilegeの原理を用いるその他の参考資料、ページ:開発者のためのセキュリティガイドOWASP top ten補遺暗算で、推計値を求める必要があることも時にはあります。例えば、ディスクから100枚イメージ分のサムネイルを作る時間を求めたり、その時にどれだけディスクメモリーが消費されるかなどの値です。2の乗数表 と 全てのプログラマーが知るべきレイテンシー値 は良い参考になるでしょう。2の乗数表乗数           厳密な値         約        Bytes---------------------------------------------------------------7                             1288                             25610                           1024   1 thousand           1 KB16                         65,536                       64 KB20                      1,048,576   1 million            1 MB30                  1,073,741,824   1 billion            1 GB32                  4,294,967,296                        4 GB40              1,099,511,627,776   1 trillion           1 TBその他の参考資料、ページ:2の乗数表全てのプログラマーが知るべきレイテンシー値Latency Comparison Numbers--------------------------L1 cache reference                           0.5 nsBranch mispredict                            5   nsL2 cache reference                           7   ns                      14x L1 cacheMutex lock/unlock                           25   nsMain memory reference                      100   ns                      20x L2 cache, 200x L1 cacheCompress 1K bytes with Zippy            10,000   ns       10 usSend 1 KB bytes over 1 Gbps network     10,000   ns       10 usRead 4 KB randomly from SSD*           150,000   ns      150 us          ~1GB/sec SSDRead 1 MB sequentially from memory     250,000   ns      250 usRound trip within same datacenter      500,000   ns      500 usRead 1 MB sequentially from SSD*     1,000,000   ns    1,000 us    1 ms  ~1GB/sec SSD, 4X memoryDisk seek                           10,000,000   ns   10,000 us   10 ms  20x datacenter roundtripRead 1 MB sequentially from 1 Gbps  10,000,000   ns   10,000 us   10 ms  40x memory, 10X SSDRead 1 MB sequentially from disk    30,000,000   ns   30,000 us   30 ms 120x memory, 30X SSDSend packet CA->Netherlands->CA    150,000,000   ns  150,000 us  150 msNotes-----1 ns = 10^-9 seconds1 us = 10^-6 seconds = 1,000 ns1 ms = 10^-3 seconds = 1,000 us = 1,000,000 ns上記表に基づいた役に立つ数値:ディスクからの連続読み取り速度 30 MB/s1 Gbps Ethernetからの連続読み取り速度　100 MB/sSSDからの連続読み取り速度 1 GB/smain memoryからの連続読み取り速度 4 GB/s1秒で地球6-7周できる1秒でデータセンターと2000周やりとりできるレイテンシーの視覚的表その他の参考資料、ページ:全てのプログラマーが知るべきレイテンシー値 - 1全てのプログラマーが知るべきレイテンシー値 - 2Designs, lessons, and advice from building large distributed systemsSoftware Engineering Advice from Building Large-Scale Distributed Systems他のシステム設計面接例題頻出のシステム設計面接課題とその解答へのリンク質問解答Dropboxのようなファイル同期サービスを設計するyoutube.comGoogleのような検索エンジンの設計queue.acm.orgstackexchange.comardendertat.comstanford.eduGoogleのようなスケーラブルなwebクローラーの設計quora.comGoogle docsの設計code.google.comneil.fraser.nameRedisのようなキーバリューストアの設計slideshare.netMemcachedのようなキャッシュシステムの設計slideshare.netAmazonのようなレコメンデーションシステムの設計hulu.comijcai13.orgBitlyのようなURL短縮サービスの設計n00tc0d3r.blogspot.comWhatsAppのようなチャットアプリの設計highscalability.comInstagramのような写真共有サービスの設計highscalability.comhighscalability.comFacebookニュースフィードの設計quora.comquora.comslideshare.netFacebookタイムラインの設計facebook.comhighscalability.comFacebookチャットの設計erlang-factory.comfacebook.comFacebookのようなgraph検索の設計facebook.comfacebook.comfacebook.comCloudFlareのようなCDNの設計cmu.eduTwitterのトレンド機能の設計michael-noll.comsnikolov .wordpress.comランダムID発行システムの設計blog.twitter.comgithub.com一定のインターバル時間での上位k件を返すucsb.eduwpi.edu複数のデータセンターからデータを配信するサービスの設計highscalability.comオンラインの複数プレイヤーカードゲームの設計indieflashblog.combuildnewgames.comガーベッジコレクションシステムの設計stuffwithstuff.comwashington.eduシステム設計例題を追加するContribute実世界のアーキテクチャ世の中のシステムがどのように設計されているかについての記事      Source: Twitter timelines at scale以下の記事の重箱の隅をつつくような細かい詳細にこだわらないこと。むしろ共通の原理、技術、パターンを探ることそれぞれのコンポーネントでどんな問題が解決され、コンポーネントはどこでうまく使えもしくは使えないかを知ること学んだことを復習すること種類システム参考ページデータ処理MapReduce - Googleの分散データ処理システムresearch.google.comデータ処理Spark - Databricksの分散データ処理システムslideshare.netデータ処理Storm - Twitterの分散データ処理システムslideshare.netデータストアBigtable - Googleのカラム指向分散データベースharvard.eduデータストアHBase - Bigtableのオープンソース実装slideshare.netデータストアCassandra - Facebookのカラム指向分散データベースslideshare.netデータストアDynamoDB - Amazonのドキュメント指向分散データベースharvard.eduデータストアMongoDB - ドキュメント指向分散データベースslideshare.netデータストアSpanner - Googleのグローバル分散データベースresearch.google.comデータストアMemcached - 分散メモリーキャッシングシステムslideshare.netデータストアRedis - 永続性とバリュータイプを兼ね備えた分散メモリーキャッシングシステムslideshare.netファイルシステムGoogle File System (GFS) - 分散ファイルシステムresearch.google.comファイルシステムHadoop File System (HDFS) - GFSのオープンソース実装apache.orgMiscChubby - 疎結合の分散システムをロックするGoogleのサービスresearch.google.comMiscDapper - 分散システムを追跡するインフラresearch.google.comMiscKafka - LinkedInによるPub/subメッセージキューslideshare.netMiscZookeeper - 同期を可能にする中央集権インフラとサービスslideshare.netアーキテクチャを追加するContribute各企業のアーキテクチャ企業参考ページAmazonAmazon architectureCinchcastProducing 1,500 hours of audio every dayDataSiftRealtime datamining At 120,000 tweets per secondDropBoxHow we've scaled DropboxESPNOperating At 100,000 duh nuh nuhs per secondGoogleGoogle architectureInstagram14 million users, terabytes of photosWhat powers InstagramJustin.tvJustin.Tv's live video broadcasting architectureFacebookScaling memcached at FacebookTAO: Facebook’s distributed data store for the social graphFacebook’s photo storageFlickrFlickr architectureMailboxFrom 0 to one million users in 6 weeksPinterestFrom 0 To 10s of billions of page views a month18 million visitors, 10x growth, 12 employeesPlayfish50 million monthly users and growingPlentyOfFishPlentyOfFish architectureSalesforceHow they handle 1.3 billion transactions a dayStack OverflowStack Overflow architectureTripAdvisor40M visitors, 200M dynamic page views, 30TB dataTumblr15 billion page views a monthTwitterMaking Twitter 10000 percent fasterStoring 250 million tweets a day using MySQL150M active users, 300K QPS, a 22 MB/S firehoseTimelines at scaleBig and small data at TwitterOperations at Twitter: scaling beyond 100 million usersUberHow Uber scales their real-time market platformWhatsAppThe WhatsApp architecture Facebook bought for $19 billionYouTubeYouTube scalabilityYouTube architecture企業のエンジニアブログ面接を受ける企業のアーキテクチャ投げられる質問は同じ分野から来ることもあるでしょうAirbnb EngineeringAtlassian DevelopersAutodesk EngineeringAWS BlogBitly Engineering BlogBox BlogsCloudera Developer BlogDropbox Tech BlogEngineering at QuoraEbay Tech BlogEvernote Tech BlogEtsy Code as CraftFacebook EngineeringFlickr CodeFoursquare Engineering BlogGitHub Engineering BlogGoogle Research BlogGroupon Engineering BlogHeroku Engineering BlogHubspot Engineering BlogHigh ScalabilityInstagram EngineeringIntel Software BlogJane Street Tech BlogLinkedIn EngineeringMicrosoft EngineeringMicrosoft Python EngineeringNetflix Tech BlogPaypal Developer BlogPinterest Engineering BlogQuora EngineeringReddit BlogSalesforce Engineering BlogSlack Engineering BlogSpotify LabsTwilio Engineering BlogTwitter EngineeringUber Engineering BlogYahoo Engineering BlogYelp Engineering BlogZynga Engineering Blogその他の参考資料、ページ:kilimchoi/engineering-blogsここにあるリストは比較的小規模なものにとどめ、kilimchoi/engineering-blogsにより詳細に記すことで重複しないようにしておくことにする。エンジニアブログへのリンクを追加する場合はここではなく、engineering-blogsレボジトリに追加することを検討してください。進行中の作業セクションの追加や、進行中の作業を手伝っていただける場合はこちら!MapReduceによる分散コンピューティングConsistent hashingScatter gatherContributeクレジットクレジット及び、参照ページは適時このリポジトリ内に記載してありますSpecial thanks to:Hired in techCracking the coding interviewHigh scalabilitycheckcheckzz/system-design-interviewshashank88/system_designmmcgrana/services-engineeringSystem design cheat sheetA distributed systems reading listCracking the system design interviewContact infoFeel free to contact me to discuss any issues, questions, or comments.My contact info can be found on my GitHub page.LicenseI am providing code and resources in this repository to you under an open source license.  Because this is my personal repository, the license you receive to my code and resources is from me and not my employer (Facebook).Copyright 2017 Donne MartinCreative Commons Attribution 4.0 International License (CC BY 4.0)http://creativecommons.org/licenses/by/4.0/"
71,71,AUTOMATIC1111/stable-diffusion-webui,https://github.com/AUTOMATIC1111/stable-diffusion-webui/blob/master/README.md,Python,"Stable Diffusion web UIA browser interface based on Gradio library for Stable Diffusion.FeaturesDetailed feature showcase with images:Original txt2img and img2img modesOne click install and run script (but you still must install python and git)OutpaintingInpaintingColor SketchPrompt MatrixStable Diffusion UpscaleAttention, specify parts of text that the model should pay more attention toa man in a ((tuxedo)) - will pay more attention to tuxedoa man in a (tuxedo:1.21) - alternative syntaxselect text and press Ctrl+Up or Ctrl+Down (or Command+Up or Command+Down if you're on a MacOS) to automatically adjust attention to selected text (code contributed by anonymous user)Loopback, run img2img processing multiple timesX/Y/Z plot, a way to draw a 3 dimensional plot of images with different parametersTextual Inversionhave as many embeddings as you want and use any names you like for themuse multiple embeddings with different numbers of vectors per tokenworks with half precision floating point numberstrain embeddings on 8GB (also reports of 6GB working)Extras tab with:GFPGAN, neural network that fixes facesCodeFormer, face restoration tool as an alternative to GFPGANRealESRGAN, neural network upscalerESRGAN, neural network upscaler with a lot of third party modelsSwinIR and Swin2SR (see here), neural network upscalersLDSR, Latent diffusion super resolution upscalingResizing aspect ratio optionsSampling method selectionAdjust sampler eta values (noise multiplier)More advanced noise setting optionsInterrupt processing at any time4GB video card support (also reports of 2GB working)Correct seeds for batchesLive prompt token length validationGeneration parametersparameters you used to generate images are saved with that imagein PNG chunks for PNG, in EXIF for JPEGcan drag the image to PNG info tab to restore generation parameters and automatically copy them into UIcan be disabled in settingsdrag and drop an image/text-parameters to promptboxRead Generation Parameters Button, loads parameters in promptbox to UISettings pageRunning arbitrary python code from UI (must run with --allow-code to enable)Mouseover hints for most UI elementsPossible to change defaults/mix/max/step values for UI elements via text configTiling support, a checkbox to create images that can be tiled like texturesProgress bar and live image generation previewCan use a separate neural network to produce previews with almost none VRAM or compute requirementNegative prompt, an extra text field that allows you to list what you don't want to see in generated imageStyles, a way to save part of prompt and easily apply them via dropdown laterVariations, a way to generate same image but with tiny differencesSeed resizing, a way to generate same image but at slightly different resolutionCLIP interrogator, a button that tries to guess prompt from an imagePrompt Editing, a way to change prompt mid-generation, say to start making a watermelon and switch to anime girl midwayBatch Processing, process a group of files using img2imgImg2img Alternative, reverse Euler method of cross attention controlHighres Fix, a convenience option to produce high resolution pictures in one click without usual distortionsReloading checkpoints on the flyCheckpoint Merger, a tab that allows you to merge up to 3 checkpoints into oneCustom scripts with many extensions from communityComposable-Diffusion, a way to use multiple prompts at onceseparate prompts using uppercase ANDalso supports weights for prompts: a cat :1.2 AND a dog AND a penguin :2.2No token limit for prompts (original stable diffusion lets you use up to 75 tokens)DeepDanbooru integration, creates danbooru style tags for anime promptsxformers, major speed increase for select cards: (add --xformers to commandline args)via extension: History tab: view, direct and delete images conveniently within the UIGenerate forever optionTraining tabhypernetworks and embeddings optionsPreprocessing images: cropping, mirroring, autotagging using BLIP or deepdanbooru (for anime)Clip skipHypernetworksLoras (same as Hypernetworks but more pretty)A sparate UI where you can choose, with preview, which embeddings, hypernetworks or Loras to add to your promptCan select to load a different VAE from settings screenEstimated completion time in progress barAPISupport for dedicated inpainting model by RunwayMLvia extension: Aesthetic Gradients, a way to generate images with a specific aesthetic by using clip images embeds (implementation of https://github.com/vicgalle/stable-diffusion-aesthetic-gradients)Stable Diffusion 2.0 support - see wiki for instructionsAlt-Diffusion support - see wiki for instructionsNow without any bad letters!Load checkpoints in safetensors formatEased resolution restriction: generated image's domension must be a multiple of 8 rather than 64Now with a license!Reorder elements in the UI from settings screenInstallation and RunningMake sure the required dependencies are met and follow the instructions available for both NVidia (recommended) and AMD GPUs.Alternatively, use online services (like Google Colab):List of Online ServicesInstallation on Windows 10/11 with NVidia-GPUs using release packageDownload sd.webui.zip from v1.0.0-pre and extract it's contents.Run update.bat.Run run.bat.For more details see Install-and-Run-on-NVidia-GPUsAutomatic Installation on WindowsInstall Python 3.10.6 (Newer version of Python does not support torch), checking \""Add Python to PATH\"".Install git.Download the stable-diffusion-webui repository, for example by running git clone https://github.com/AUTOMATIC1111/stable-diffusion-webui.git.Run webui-user.bat from Windows Explorer as normal, non-administrator, user.Automatic Installation on LinuxInstall the dependencies:# Debian-based:sudo apt install wget git python3 python3-venv# Red Hat-based:sudo dnf install wget git python3# Arch-based:sudo pacman -S wget git python3Navigate to the directory you would like the webui to be installed and execute the following command:bash <(wget -qO- https://raw.githubusercontent.com/AUTOMATIC1111/stable-diffusion-webui/master/webui.sh)Run webui.sh.Check webui-user.sh for options.Installation on Apple SiliconFind the instructions here.ContributingHere's how to add code to this repo: ContributingDocumentationThe documentation was moved from this README over to the project's wiki.For the purposes of getting Google and other search engines to crawl the wiki, here's a link to the (not for humans) crawlable wiki.CreditsLicenses for borrowed code can be found in Settings -> Licenses screen, and also in html/licenses.html file.Stable Diffusion - https://github.com/CompVis/stable-diffusion, https://github.com/CompVis/taming-transformersk-diffusion - https://github.com/crowsonkb/k-diffusion.gitGFPGAN - https://github.com/TencentARC/GFPGAN.gitCodeFormer - https://github.com/sczhou/CodeFormerESRGAN - https://github.com/xinntao/ESRGANSwinIR - https://github.com/JingyunLiang/SwinIRSwin2SR - https://github.com/mv-lab/swin2srLDSR - https://github.com/Hafiidz/latent-diffusionMiDaS - https://github.com/isl-org/MiDaSIdeas for optimizations - https://github.com/basujindal/stable-diffusionCross Attention layer optimization - Doggettx - https://github.com/Doggettx/stable-diffusion, original idea for prompt editing.Cross Attention layer optimization - InvokeAI, lstein - https://github.com/invoke-ai/InvokeAI (originally http://github.com/lstein/stable-diffusion)Sub-quadratic Cross Attention layer optimization - Alex Birch (Birch-san/diffusers#1), Amin Rezaei (https://github.com/AminRezaei0x443/memory-efficient-attention)Textual Inversion - Rinon Gal - https://github.com/rinongal/textual_inversion (we're not using his code, but we are using his ideas).Idea for SD upscale - https://github.com/jquesnelle/txt2imghdNoise generation for outpainting mk2 - https://github.com/parlance-zz/g-diffuser-botCLIP interrogator idea and borrowing some code - https://github.com/pharmapsychotic/clip-interrogatorIdea for Composable Diffusion - https://github.com/energy-based-model/Compositional-Visual-Generation-with-Composable-Diffusion-Models-PyTorchxformers - https://github.com/facebookresearch/xformersDeepDanbooru - interrogator for anime diffusers https://github.com/KichangKim/DeepDanbooruSampling in float32 precision from a float16 UNet - marunine for the idea, Birch-san for the example Diffusers implementation (https://github.com/Birch-san/diffusers-play/tree/92feee6)Instruct pix2pix - Tim Brooks (star), Aleksander Holynski (star), Alexei A. Efros (no star) - https://github.com/timothybrooks/instruct-pix2pixSecurity advice - RyotaKUniPC sampler - Wenliang Zhao - https://github.com/wl-zhao/UniPCTAESD - Ollin Boer Bohan - https://github.com/madebyollin/taesdLyCORIS - KohakuBlueleafInitial Gradio script - posted on 4chan by an Anonymous user. Thank you Anonymous user.(You)"
72,72,geekcomputers/Python,https://github.com/geekcomputers/Python/blob/master/README.md,Python,"My Python Eggs 🐍 😄I do not consider myself as a programmer. I create these little programs as experiments to play with Python, or to solve problems for myself. I would gladly accept pointers from others to improve, simplify, or make the code more efficient. If you would like to make any comments then please feel free to email me: craig@geekcomputers.co.uk.This repository contains a collection of Python scripts that are designed to reduce human workload and serve as educational examples for beginners to get started with Python. The code documentation is aligned correctly for viewing in Notepad++ 🗒️Feel free to explore the scripts and use them for your learning and automation needs!List of Scripts:batch_file_rename.py - Batch rename a group of files in a specified directory, changing their extensions.create_dir_if_not_there.py - Check if a directory exists in the user's home directory. Create it if it doesn't exist.Fast Youtube Downloader - Download YouTube videos quickly with parallel threads using aria2c.Google Image Downloader - Query a given term and retrieve images from the Google Image database.dir_test.py - Test if the directory testdir exists. If not, create it.env_check.py - Check if all the required environment variables are set.blackjack.py - Casino Blackjack-21 game in Python.fileinfo.py - Show file information for a given file.folder_size.py - Scan the current directory and all subdirectories and display their sizes.logs.py - Search for all *.log files in a directory, zip them using the specified program, and date stamp them.move_files_over_x_days.py - Move all files over a specified age (in days) from the source directory to the destination directory.nslookup_check.py - Open the file server_list.txt and perform nslookup for each server to check the DNS entry.osinfo.py - Display information about the operating system on which the script is running.ping_servers.py - Ping the servers associated with the specified application group.ping_subnet.py - Scan the final range of a given IP subnet for available addresses.powerdown_startup.py - Ping machines in the server list. Load the putty session if the machine is up, or notify if it is not.puttylogs.py - Zip all the logs in the given directory.script_count.py - Scan the scripts directory and count the different types of scripts.get_youtube_view.py - Get more views for YouTube videos and repeat songs on YouTube.script_listing.py - List all files in a given directory and its subdirectories.testlines.py - Open a file and print out 100 lines of the set line variable.tweeter.py - Tweet text or a picture from the terminal.serial_scanner.py - List available serial ports in use on Linux and Windows systems.get_youtube_view.py - Get more views for YouTube videos and repeat songs on YouTube.CountMillionCharacter.py and CountMillionCharacter2.0 - Get character count of a text file.xkcd_downloader.py - Download the latest XKCD comic and place them in a new folder called \""comics\"".timymodule.py - An alternative to Python's 'timeit' module and easier to use.calculator.py - Implement a calculator using Python's eval() function.Google_News.py - Use BeautifulSoup to provide latest news headlines along with news links.cricket_live_score - Use BeautifulSoup to provide live cricket scores.youtube.py - Take a song name as input and fetch the YouTube URL of the best matching song and play it.site_health.py - Check the health of a remote server.SimpleStopWatch.py - Simple stop watch implementation using Python's time module.Changemac.py - Change your MAC address, generate a random MAC address, or enter input as a new MAC address on Linux (Successfully Tested in Ubuntu 18.04).whatsapp-monitor.py - Use Selenium to give online status updates about your contacts in WhatsApp on the terminal.whatsapp-chat-analyzer.py - WhatsApp group/individual chat analyzer that visualizes chat activity using matplotlib.JARVIS.py - Control Windows programs with your voice.Images Downloader - Download images from webpages on Unix-based systems.space_invader.py.py - Classical 2D space invader game to recall your childhood memories.Test Case Generator - Generate different types of test cases with a clean and friendly UI, used in competitive programming and software testing.Note: The content in this repository belongs to the respective authors and creators. I'm just providing a formatted README.md for better presentation."
73,73,WZMIAOMIAO/deep-learning-for-image-processing,https://github.com/WZMIAOMIAO/deep-learning-for-image-processing/blob/master/README.md,Python,深度学习在图像处理中的应用教程前言本教程是对本人研究生期间的研究内容进行整理总结，总结的同时也希望能够帮助更多的小伙伴。后期如果有学习到新的知识也会与大家一起分享。本教程会以视频的方式进行分享，教学流程如下：1）介绍网络的结构与创新点2）使用Pytorch进行网络的搭建与训练3）使用Tensorflow（内部的keras模块）进行网络的搭建与训练课程中所有PPT都放在course_ppt文件夹下，需要的自行下载。教程目录，点击跳转相应视频（后期会根据学习内容增加）图像分类LeNet（已完成）Pytorch官方demo(Lenet)Tensorflow2官方demoAlexNet（已完成）AlexNet网络讲解Pytorch搭建AlexNetTensorflow2搭建AlexnetVggNet（已完成）VggNet网络讲解Pytorch搭建VGG网络Tensorflow2搭建VGG网络GoogLeNet（已完成）GoogLeNet网络讲解Pytorch搭建GoogLeNet网络Tensorflow2搭建GoogLeNet网络ResNet（已完成）ResNet网络讲解Pytorch搭建ResNet网络Tensorflow2搭建ResNet网络ResNeXt (已完成)ResNeXt网络讲解Pytorch搭建ResNeXt网络MobileNet_V1_V2（已完成）MobileNet_V1_V2网络讲解Pytorch搭建MobileNetV2网络Tensorflow2搭建MobileNetV2网络MobileNet_V3（已完成）MobileNet_V3网络讲解Pytorch搭建MobileNetV3网络Tensorflow2搭建MobileNetV3网络ShuffleNet_V1_V2 (已完成)ShuffleNet_V1_V2网络讲解使用Pytorch搭建ShuffleNetV2使用Tensorflow2搭建ShuffleNetV2EfficientNet_V1（已完成）EfficientNet网络讲解使用Pytorch搭建EfficientNet使用Tensorflow2搭建EfficientNetEfficientNet_V2 (已完成)EfficientNetV2网络讲解使用Pytorch搭建EfficientNetV2使用Tensorflow搭建EfficientNetV2RepVGG（已完成）RepVGG网络讲解Vision Transformer(已完成)Multi-Head Attention讲解Vision Transformer网络讲解使用Pytorch搭建Vision Transformer使用tensorflow2搭建Vision TransformerSwin Transformer(已完成)Swin Transformer网络讲解使用Pytorch搭建Swin Transformer使用Tensorflow2搭建Swin TransformerConvNeXt(已完成)ConvNeXt网络讲解使用Pytorch搭建ConvNeXt使用Tensorflow2搭建ConvNeXtMobileViT(已完成)MobileViT网络讲解使用Pytorch搭建MobileViT目标检测Faster-RCNN/FPN（已完成）Faster-RCNN网络讲解FPN网络讲解Faster-RCNN源码解析(Pytorch)SSD/RetinaNet (已完成)SSD网络讲解RetinaNet网络讲解SSD源码解析(Pytorch)YOLO Series (已完成)YOLO系列网络讲解(V1~V3)YOLOv3 SPP源码解析(Pytorch版)YOLOV4网络讲解YOLOV5网络讲解YOLOX 网络讲解FCOS（已完成）FCOS网络讲解语义分割FCN (已完成)FCN网络讲解FCN源码解析(Pytorch版)DeepLabV3 (已完成)DeepLabV1网络讲解DeepLabV2网络讲解DeepLabV3网络讲解DeepLabV3源码解析(Pytorch版)LR-ASPP (已完成)LR-ASPP网络讲解LR-ASPP源码解析(Pytorch版)U-Net (已完成)U-Net网络讲解U-Net源码解析(Pytorch版)U2Net (已完成)U2Net网络讲解U2Net源码解析(Pytorch版)SegFormer(规划中)实例分割Mask R-CNN（已完成）Mask R-CNN网络讲解Mask R-CNN源码解析(Pytorch版)关键点检测HRNet（已完成）HRNet网络讲解HRNet源码解析(Pytorch版)更多相关视频请进入我的bilibili频道查看所需环境Anaconda3（建议使用）python3.6/3.7/3.8pycharm (IDE)pytorch 1.10 (pip package)torchvision 0.11.1 (pip package)tensorflow 2.4.1 (pip package)欢迎大家关注下我的微信公众号（阿喆学习小记），平时会总结些相关学习博文。如果有什么问题，也可以到我的CSDN中一起讨论。https://blog.csdn.net/qq_37541097/article/details/103482003我的bilibili频道：https://space.bilibili.com/18161609/channel/index
74,74,AntonOsika/gpt-engineer,https://github.com/AntonOsika/gpt-engineer/blob/main/README.md,Python,"GPT EngineerSpecify what you want it to build, the AI asks for clarification, and then builds it.GPT Engineer is made to be easy to adapt, extend, and make your agent learn how you want your code to look. It generates an entire codebase based on a prompt.DemoProject philosophySimple to get valueFlexible and easy to add new own \""AI steps\"". See steps.py.Incrementally build towards a user experience of:high level promptinggiving feedback to the AI that it will remember over timeFast handovers back and forth between AI and humanSimplicity, all computation is \""resumable\"" and persisted to the filesystemUsageChoose either stable or development.For stable release:python -m pip install gpt-engineerFor development:git clone https://github.com/AntonOsika/gpt-engineer.gitcd gpt-engineerpython -m pip install -e .(or: make install && source venv/bin/activate for a venv)API KeyEither just:export OPENAI_API_KEY=[your api key]Or:Create a copy of .env.template named .envAdd your OPENAI_API_KEY in .envCheck the Windows README for windows usage.RunningCreate an empty folder. If inside the repo, you can run:cp -r projects/example/ projects/my-new-projectFill in the prompt file in your new foldergpt-engineer projects/my-new-project(Note, gpt-engineer --help lets you see all available options. For example --steps use_feedback lets you improve/fix code in a project)By running gpt-engineer you agree to our terms.ResultsCheck the generated files in projects/my-new-project/workspaceAlternativesYou can check Docker instructions to use Docker, or simplydo everything in your browser:FeaturesYou can specify the \""identity\"" of the AI agent by editing the files in the preprompts folder.Editing the preprompts, and evolving how you write the project prompt, is how you make the agent remember things between projects.Each step in steps.py will have its communication history with GPT4 stored in the logs folder, and can be rerun with scripts/rerun_edited_message_logs.py.VisionThe gpt-engineer community is building the open platform for devs to tinker with and build their personal code-generation toolbox.If you are interested in contributing to this, we would be interested in having you.If you want to see our broader ambitions, check out the roadmap, and joindiscordto get input on how you can contribute to it.We are currently looking for more maintainers and community organizers. Email anton.osika@gmail.com if you are interested in an official role.Example              Demo.mov          "
75,75,MorvanZhou/tutorials,https://github.com/MorvanZhou/tutorials/blob/master/README.md,Python,"            我是 周沫凡, 莫烦Python 只是谐音, 我喜欢制作,分享所学的东西, 所以你能在这里找到很多有用的东西, 少走弯路. 你能在这里找到关于我的所有东西.这个 Python tutorial 的一些内容:Python 基础基础多线程 threading多进程 multiprocessing简单窗口 tkinter机器学习有趣的机器学习强化学习 (Reinforcement Learning)进化算法 (Evolutionary Algorithm) 如遗传算法等Tensorflow (神经网络)PyTorch (神经网络)Theano (神经网络)Keras (快速神经网络)Scikit-Learn (机器学习)机器学习实战数据处理Numpy & Pandas (处理数据)Matplotlib (绘图)爬虫其他Git (版本管理)Linux 简易教学赞助和支持这些 tutorial 都是我用业余时间写出来, 录成视频, 如果你觉得它对你很有帮助, 请你也分享给需要学习的朋友们.如果你看好我的经验分享, 也请考虑适当的 赞助打赏, 让我能继续分享更好的内容给大家."
76,76,facebookresearch/Detectron,https://github.com/facebookresearch/Detectron/blob/main/README.md,Python,"Detectron is deprecated. Please see detectron2, a ground-up rewrite of Detectron in PyTorch.DetectronDetectron is Facebook AI Research's software system that implements state-of-the-art object detection algorithms, including Mask R-CNN. It is written in Python and powered by the Caffe2 deep learning framework.At FAIR, Detectron has enabled numerous research projects, including: Feature Pyramid Networks for Object Detection, Mask R-CNN, Detecting and Recognizing Human-Object Interactions, Focal Loss for Dense Object Detection, Non-local Neural Networks, Learning to Segment Every Thing, Data Distillation: Towards Omni-Supervised Learning, DensePose: Dense Human Pose Estimation In The Wild, and Group Normalization.    Example Mask R-CNN output.IntroductionThe goal of Detectron is to provide a high-quality, high-performancecodebase for object detection research. It is designed to be flexible in orderto support rapid implementation and evaluation of novel research. Detectronincludes implementations of the following object detection algorithms:Mask R-CNN -- Marr Prize at ICCV 2017RetinaNet -- Best Student Paper Award at ICCV 2017Faster R-CNNRPNFast R-CNNR-FCNusing the following backbone network architectures:ResNeXt{50,101,152}ResNet{50,101,152}Feature Pyramid Networks (with ResNet/ResNeXt)VGG16Additional backbone architectures may be easily implemented. For more details about these models, please see References below.Update4/2018: Support Group Normalization - see GN/README.mdLicenseDetectron is released under the Apache 2.0 license. See the NOTICE file for additional details.Citing DetectronIf you use Detectron in your research or wish to refer to the baseline results published in the Model Zoo, please use the following BibTeX entry.@misc{Detectron2018,  author =       {Ross Girshick and Ilija Radosavovic and Georgia Gkioxari and                  Piotr Doll\\'{a}r and Kaiming He},  title =        {Detectron},  howpublished = {\\url{https://github.com/facebookresearch/detectron}},  year =         {2018}}Model Zoo and BaselinesWe provide a large set of baseline results and trained models available for download in the Detectron Model Zoo.InstallationPlease find installation instructions for Caffe2 and Detectron in INSTALL.md.Quick Start: Using DetectronAfter installation, please see GETTING_STARTED.md for brief tutorials covering inference and training with Detectron.Getting HelpTo start, please check the troubleshooting section of our installation instructions as well as our FAQ. If you couldn't find help there, try searching our GitHub issues. We intend the issues page to be a forum in which the community collectively troubleshoots problems.If bugs are found, we appreciate pull requests (including adding Q&A's to FAQ.md and improving our installation instructions and troubleshooting documents). Please see CONTRIBUTING.md for more information about contributing to Detectron.ReferencesData Distillation: Towards Omni-Supervised Learning.Ilija Radosavovic, Piotr Dollár, Ross Girshick, Georgia Gkioxari, and Kaiming He.Tech report, arXiv, Dec. 2017.Learning to Segment Every Thing.Ronghang Hu, Piotr Dollár, Kaiming He, Trevor Darrell, and Ross Girshick.Tech report, arXiv, Nov. 2017.Non-Local Neural Networks.Xiaolong Wang, Ross Girshick, Abhinav Gupta, and Kaiming He.Tech report, arXiv, Nov. 2017.Mask R-CNN.Kaiming He, Georgia Gkioxari, Piotr Dollár, and Ross Girshick.IEEE International Conference on Computer Vision (ICCV), 2017.Focal Loss for Dense Object Detection.Tsung-Yi Lin, Priya Goyal, Ross Girshick, Kaiming He, and Piotr Dollár.IEEE International Conference on Computer Vision (ICCV), 2017.Accurate, Large Minibatch SGD: Training ImageNet in 1 Hour.Priya Goyal, Piotr Dollár, Ross Girshick, Pieter Noordhuis, Lukasz Wesolowski, Aapo Kyrola, Andrew Tulloch, Yangqing Jia, and Kaiming He.Tech report, arXiv, June 2017.Detecting and Recognizing Human-Object Interactions.Georgia Gkioxari, Ross Girshick, Piotr Dollár, and Kaiming He.Tech report, arXiv, Apr. 2017.Feature Pyramid Networks for Object Detection.Tsung-Yi Lin, Piotr Dollár, Ross Girshick, Kaiming He, Bharath Hariharan, and Serge Belongie.IEEE Conference on Computer Vision and Pattern Recognition (CVPR), 2017.Aggregated Residual Transformations for Deep Neural Networks.Saining Xie, Ross Girshick, Piotr Dollár, Zhuowen Tu, and Kaiming He.IEEE Conference on Computer Vision and Pattern Recognition (CVPR), 2017.R-FCN: Object Detection via Region-based Fully Convolutional Networks.Jifeng Dai, Yi Li, Kaiming He, and Jian Sun.Conference on Neural Information Processing Systems (NIPS), 2016.Deep Residual Learning for Image Recognition.Kaiming He, Xiangyu Zhang, Shaoqing Ren, and Jian Sun.IEEE Conference on Computer Vision and Pattern Recognition (CVPR), 2016.Faster R-CNN: Towards Real-Time Object Detection with Region Proposal NetworksShaoqing Ren, Kaiming He, Ross Girshick, and Jian Sun.Conference on Neural Information Processing Systems (NIPS), 2015.Fast R-CNN.Ross Girshick.IEEE International Conference on Computer Vision (ICCV), 2015."
77,77,Jack-Cherish/Machine-Learning,https://github.com/Jack-Cherish/Machine-Learning/blob/master/README-eng.md,Python,"Machine-Learning中文（简体）Rome was not built in a dayBlogMachine-Learning in Practice (Detailed Comments + Training Datasets), Keep updating!Welcome to my[CSDN Column]Follow me on[Zhihu Column]QQ Group for Communication[328127489]My Website: http://cuijiahua.com/Article DebutDebut articles on my website and forward on orther platforms, click here to get the latest development: http://cuijiahua.com/Chapt. 2: K-Nearest Neighbors AlgorithmArticlePersonal WebsiteCSDNZhihuPython3  study notes (I): K-Nearest Neighbors Algorithm (Gorgeous and Splendid Tutorial)Personal WebsiteCSDNZhihuCode1. Entry Level k-NN2. Miss Helen Dating History3. Digits RecognitionChapt. 3: Decision TreeArticlePersonal WebsiteCSDNZhihuPython3  study notes (II): Decision Tree (Basic Concepts): Let's Start from DatingPersonal WebsiteCSDNZhihuPython3  study notes (III): Decision Tree (In Practice): I'm Looking for a Pair of Contact LensesPersonal WebsiteCSDNZhihuCode1. Loan Prediction2. Contact LensesChapt. 4: Navie BayesArticlePersonal WebsiteCSDNZhihuPython3 Python3  study notes (IV): Navie Bayes (Basic Concepts): Comment FilterPersonal WebsiteCSDNZhihuPython3 Python3  study notes (V): Navie Bayes (In Practice): Catalogues of Sina NewsPersonal WebsiteCSDNZhihuCode1. Comment Filter2. Spam Filter3. News CataloguesChapt. 5: Logistic RegressionArticlePersonal WebsiteCSDNZhihuPython3  study notes (VI): Logistic Regression (Basic Concepts): Gradient Ascent AlgorithmPersonal WebsiteCSDNZhihuPython3  study notes (VII): Logistic Regression (In Practice): Prediction of Horse MortalityPersonal WebsiteCSDNZhihuCode1. Entry Level Exercise for Logistic Regression2. Improved Random Gradient Ascent Algorithm3. Prediction of Horse MortalityChapt. 6: SVM (Support Vector Machine)ArticlePersonal WebsiteCSDNZhihuPython3  study notes (VIII): SVM (Basic Concepts): a Handcraft on Linear SVMPersonal WebsiteCSDNZhihuPython3  study notes (IX): SVM (In Practice): Another Handcraft on Nonlinear SVMPersonal WebsiteCSDNZhihuCode1. Simplified SMO Alogrithm2. Complete SMO Alogrithm3. Nonlinear SVM Alogrithm4. Sklearn SVCChapt. 7: AdaBoostArticlePersonal WebsiteCSDNZhihuPython3  study notes (X): Classifier Sharpener -- AdaBoostPersonal WebsiteCSDNZhihuCode1. Training Process of AdaBoost Based On Decision Stump2. AdaBoost on Hard Datasets3. Implement AdaBoost by sklearn4. ROC Curve PlotChapt. 8: Linear RegressionArticlePersonal WebsiteCSDNZhihuPython3  study notes (XI):Personal WebsiteCSDNZhihuPython3  study notes (XII):Personal WebsitenonoCode1. Linear Regression(Ordinary LR + Locally Weighted LR)2. Predicting the Age of Abalones(Ormers)3. Stepwise Regression4. Predicting the Price of Second Hand LegoChapt. 9: Regression TreeArticlePersonal WebsiteCSDNZhihuPython3  study notes (XIII): Regression Tree (Basic Concepts): CART Alogrithm and PruningPersonal WebsitenonoCode1. Regression Tree"
78,78,jenkins-docs/simple-python-pyinstaller-app,https://github.com/jenkins-docs/simple-python-pyinstaller-app/blob/master/README.md,Python,"simple-python-pyinstaller-appThis repository is for theBuild a Python app with PyInstallertutorial in the Jenkins User Documentation.The repository contains a simple Python application which is a command line tool \""add2vals\"" that outputs the addition of two values. If at least one of thevalues is a string, \""add2vals\"" treats both values as a string and insteadconcatenates the values. The \""add2\"" function in the \""calc\"" library (which\""add2vals\"" imports) is accompanied by a set of unit tests. These are tested with pytest to check that this function works as expected and the results are savedto a JUnit XML report.The delivery of the \""add2vals\"" tool through PyInstaller converts this tool intoa standalone executable file for Linux, which you can download through Jenkinsand execute at the command line on Linux machines without Python.The jenkins directory contains an example of the Jenkinsfile (i.e. Pipeline)you'll be creating yourself during the tutorial."
79,79,keon/algorithms,https://github.com/keon/algorithms/blob/master/README.md,Python,"Pythonic Data Structures and AlgorithmsMinimal and clean example implementations of data structures and algorithms in Python 3.ContributingThanks for your interest in contributing! There are many ways to contribute to this project. Get started hereTestsUse unittestFor running all tests write down:$ python3 -m unittest discover testsFor running some specific tests you can do this as following (Ex: sort):$ python3 -m unittest tests.test_sortUse pytestFor running all tests write down:$ python3 -m pytest testsInstallIf you want to use the API algorithms in your code, it is as simple as:$ pip3 install algorithmsYou can test by creating a python file: (Ex: use merge_sort in sort)from algorithms.sort import merge_sortif __name__ == \""__main__\"":    my_list = [1, 8, 3, 5, 6]    my_list = merge_sort(my_list)    print(my_list)UninstallIf you want to uninstall algorithms, it is as simple as:$ pip3 uninstall -y algorithmsList of Implementationsarraysdelete_nthflattengaragejosephus_problemlimitlongest_non_repeatmax_ones_indexmerge_intervalsmissing_rangesplus_onerotatesummarize_rangesthree_sumtrimmeantop_1two_summove_zerosn_sumgreedymax_contiguous_subsequence_sumautomataDFAbacktrackgeneral_solution.mdadd_operatorsanagramarray_sum_combinationscombination_sumfactor_combinationsgenerate_abbreviationsgenerate_parenthesisletter_combinationpalindrome_partitioningpattern_matchpermutepermute_uniquesubsetssubsets_uniquebfsmaze_searchshortest_distance_from_all_buildingsword_ladderbitadd_bitwise_operatorbit_operationbytes_int_conversioncount_flips_to_convertcount_onesfind_differencefind_missing_numberflip_bit_longest_sequencepower_of_tworeverse_bitssingle_numbersingle_number2single_number3subsetsswap_pairhas_alternative_bitinsert_bitremove_bitbinary_gapcompressionhuffman_codingrle_compressioneliasdfsall_factorscount_islandspacific_atlanticsudoku_solverwalls_and_gatesdistributionhistogramdpbuy_sell_stockclimbing_stairscoin_changecombination_sumegg_drophouse_robberint_dividejob_schedulingknapsacklongest_increasingmatrix_chain_ordermax_product_subarraymax_subarraymin_cost_pathnum_decodingsregex_matchingrod_cutword_breakfibonaccihosoya triangleK-Factor_stringsplanting_treesgraphcheck_bipartitestrongly_connectedclone_graphcycle_detectionfind_all_cliquesfind_pathgraphdijkstramarkov_chainminimum_spanning_treesatisfiabilityminimum_spanning_tree_primstarjantraversalmaximum_flowmaximum_flow_bfsmaximum_flow_dfsall_pairs_shortest_pathbellman_fordCount Connected Componentsheapmerge_sorted_k_listsskylinesliding_window_maxbinary_heapk_closest_pointslinkedlistadd_two_numberscopy_random_pointerdelete_nodefirst_cyclic_nodeis_cyclicis_palindromekth_to_lastlinkedlistremove_duplicatesreverserotate_listswap_in_pairsis_sortedremove_rangemaphashtableseparate_chaining_hashtablelongest_common_subsequencelongest_palindromic_subsequencerandomized_setvalid_sudokuword_patternis_isomorphicis_anagrammathsbase_conversionchinese_remainder_theoremcombinationcosine_similaritydecimal_to_binary_ipdiffie_hellman_key_exchangeeuler_totientextended_gcdfactorialfind_orderfind_primitive_rootgcd/lcmgenerate_strobogrammtichailstoneis_strobogrammatickrishnamurthy_numbermagic_numbermodular_exponentialmodular_inversenext_biggernext_perfect_squarenth_digitnum_perfect_squarespolynomialpowerprime_checkprimes_sieve_of_eratosthenespythagorasrabin_millerrecursive_binomial_coefficientrsasqrt_precision_factorsumming_digitssymmetry_group_cycle_indexmatrixsudoku_validatorbomb_enemycopy_transformcount_pathsmatrix_exponentiationmatrix_inversionmatrix_multiplicationrotate_imagesearch_in_sorted_matrixsparse_dot_vectorsparse_mulspiral_traversalcrout_matrix_decompositioncholesky_matrix_decompositionsum_sub_squaressort_matrix_diagonallyqueuesmax_sliding_windowmoving_averagequeuereconstruct_queuezigzagiteratorsearchbinary_searchfirst_occurrencelast_occurrencelinear_searchsearch_inserttwo_sumsearch_rangefind_min_rotatesearch_rotatejump_searchnext_greatest_letterinterpolation_searchsetrandomized_setset_coveringfind_keyboard_rowsortbitonic_sortbogo_sortbubble_sortbucket_sortcocktail_shaker_sortcomb_sortcounting_sortcycle_sortexchange_sortgnome_sortheap_sortinsertion_sortmeeting_roomsmerge_sortpancake_sortpigeonhole_sortquick_sortradix_sortselection_sortshell_sortsort_colorsstooge_sorttop_sortwiggle_sortstacklongest_abs_pathsimplify_pathstackvalid_parenthesisstutterswitch_pairsis_consecutiveremove_minis_sortedstreaming1-sparse-recoverymisra-griesstringsfizzbuzzdelete_reoccurringstrip_url_paramsvalidate_coordinatesdomain_extractormerge_string_checkeradd_binarybreaking_baddecode_stringencode_decodegroup_anagramsint_to_romanis_palindromelicense_numbermake_sentencemultiply_stringsone_edit_distancerabin_karpreverse_stringreverse_vowelreverse_wordsroman_to_intword_squaresunique_morsejudge_circlestrong_passwordcaesar_ciphercheck_pangramcontain_stringcount_binary_substringrepeat_stringmin_distancelongest_common_prefixrotatefirst_unique_charrepeat_substringatbash_cipherlongest_palindromic_substringknuth_morris_prattpanagramtreebstarray_to_bstbst_closest_valueBSTIteratordelete_nodeis_bstkth_smallestlowest_common_ancestorpredecessorserialize_deserializesuccessorunique_bstdepth_sumcount_left_nodenum_emptyheightfenwick_treered_black_treered_black_treesegment_treesegment_treeiterative_segment_treetraversalinorderlevel_orderpostorderpreorderzigzagtrieadd_and_searchtrieb_treebinary_tree_pathsbin_tree_to_listconstruct_tree_preorder_postorderdeepest_leftinvert_treeis_balancedis_subtreeis_symmetriclongest_consecutivelowest_common_ancestormax_heightmax_path_summin_heightpath_sumpath_sum2pretty_printsame_treetreeunixpathjoin_with_slashfull_pathsplitsimplify_pathunionfindcount_islandsContributorsThanks to all the contributorswho helped in building the repo."
80,80,jackfrued/Python-100-Days,https://github.com/jackfrued/Python-100-Days/blob/master/README.md,Python,"Python - 100天从新手到大师作者：骆昊说明：从项目上线到获得8w+星标以来，一直收到反馈说基础部分（前15天的内容）对新手来说是比较困难的，建议有配套视频进行讲解。最近把基础部分的内容重新制作了一个名为“Python-Core-50-Courses”的项目，用更为简单通俗的方式重写了这部分内容并附带了视频讲解，初学者可以关注下这个新项目。如果需要Python基础视频，可以在“B站”搜索《Python零基础快速上手》，这套视频是我讲课的时候录制的随堂视频，画质尚可、音质一般，但是对初学者应该会有些帮助，欢迎大家留言、评论、发弹幕。学习之后觉得有收获的小伙伴可以“一键三连”来支持UP主（千锋Python）。国内用户如果访问GitHub比较慢的话，可以关注我的知乎号Python-Jack，上面的“从零开始学Python”专栏比较适合初学者，其他的专栏也在持续创作和更新中，欢迎大家关注并点赞评论。创作不易，感谢大家的打赏支持，这些钱不会用于个人消费（例如：购买咖啡），而是通过腾讯公益、美团公益、水滴筹等平台捐赠给需要帮助的人（点击了解捐赠情况）。需要加入QQ学习群的可以扫描下面的二维码，三个群加一个即可，不要重复进群。学习群会为大家提供学习资源和问题解答，如果有Python体验课和行业公开课会提前在群里通知大家，欢迎大家加入。项目“Day80~90”部分目前仍在创作中，因为作者平时也挤不出太多时间来写文档，因此更新的速度比较缓慢，感谢大家的理解。Python应用领域和职业发展分析简单的说，Python是一个“优雅”、“明确”、“简单”的编程语言。学习曲线低，非专业人士也能上手开源系统，拥有强大的生态圈解释型语言，完美的平台可移植性动态类型语言，支持面向对象和函数式编程代码规范程度高，可读性强Python在以下领域都有用武之地。后端开发 - Python / Java / Go / PHPDevOps - Python / Shell / Ruby数据采集 - Python / C++ / Java量化交易 - Python / C++ / R数据科学 - Python / R / Julia / Matlab机器学习 - Python / R / C++ / Julia自动化测试 - Python / Shell作为一名Python开发者，根据个人的喜好和职业规划，可以选择的就业领域也非常多。Python后端开发工程师（服务器、云平台、数据接口）Python运维工程师（自动化运维、SRE、DevOps）Python数据分析师（数据分析、商业智能、数字化运营）Python数据挖掘工程师（机器学习、深度学习、算法专家）Python爬虫工程师Python测试工程师（自动化测试、测试开发）说明：目前，数据分析和数据挖掘是非常热门的方向，因为不管是互联网行业还是传统行业都已经积累了大量的数据，各行各业都需要数据分析师从已有的数据中发现更多的商业价值，从而为企业的决策提供数据的支撑，这就是所谓的数据驱动决策。给初学者的几个建议：Make English as your working language. （让英语成为你的工作语言）Practice makes perfect. （熟能生巧）All experience comes from mistakes. （所有的经验都源于你犯过的错误）Don't be one of the leeches. （不要当伸手党）Either outstanding or out. （要么出众，要么出局）Day01~15 - Python语言基础Day01 - 初识PythonPython简介 - Python的历史 / Python的优缺点 / Python的应用领域搭建编程环境 - Windows环境 / Linux环境 / MacOS环境从终端运行Python程序 - Hello, world / print函数 / 运行程序使用IDLE - 交互式环境(REPL) / 编写多行代码 / 运行程序 / 退出IDLE注释 - 注释的作用 / 单行注释 / 多行注释Day02 - 语言元素程序和进制 - 指令和程序 / 冯诺依曼机 / 二进制和十进制 / 八进制和十六进制变量和类型 - 变量的命名 / 变量的使用 / input函数 / 检查变量类型 / 类型转换数字和字符串 - 整数 / 浮点数 / 复数 / 字符串 / 字符串基本操作 / 字符编码运算符 - 数学运算符 / 赋值运算符 / 比较运算符 / 逻辑运算符 / 身份运算符 / 运算符的优先级应用案例 - 华氏温度转换成摄氏温度 / 输入圆的半径计算周长和面积 / 输入年份判断是否是闰年Day03 - 分支结构分支结构的应用场景 - 条件 / 缩进 / 代码块 / 流程图if语句 - 简单的if / if-else结构 / if-elif-else结构 / 嵌套的if应用案例 - 用户身份验证 / 英制单位与公制单位互换 / 掷骰子决定做什么 / 百分制成绩转等级制 / 分段函数求值 / 输入三条边的长度如果能构成三角形就计算周长和面积Day04 - 循环结构循环结构的应用场景 - 条件 / 缩进 / 代码块 / 流程图while循环 - 基本结构 / break语句 / continue语句for循环 - 基本结构 / range类型 / 循环中的分支结构 / 嵌套的循环 / 提前结束程序应用案例 - 1~100求和 / 判断素数 / 猜数字游戏 / 打印九九表 / 打印三角形图案 / 猴子吃桃 / 百钱百鸡Day05 - 构造程序逻辑经典案例：水仙花数 / 百钱百鸡 / Craps赌博游戏练习题目：斐波那契数列 / 完美数 / 素数Day06 - 函数和模块的使用函数的作用 - 代码的坏味道 / 用函数封装功能模块定义函数 - def关键字 / 函数名 / 参数列表 / return语句 / 调用自定义函数调用函数 - Python内置函数 /  导入模块和函数函数的参数 - 默认参数 / 可变参数 / 关键字参数 / 命名关键字参数函数的返回值 - 没有返回值  / 返回单个值 / 返回多个值作用域问题 - 局部作用域 / 嵌套作用域 / 全局作用域 / 内置作用域 / 和作用域相关的关键字用模块管理函数 - 模块的概念 / 用自定义模块管理函数 / 命名冲突的时候会怎样（同一个模块和不同的模块）Day07 - 字符串和常用数据结构字符串的使用 - 计算长度 / 下标运算 / 切片 / 常用方法列表基本用法 - 定义列表 / 用下表访问元素 / 下标越界 / 添加元素 / 删除元素 / 修改元素 / 切片 / 循环遍历列表常用操作 - 连接 / 复制(复制元素和复制数组) / 长度 / 排序 / 倒转 / 查找生成列表 - 使用range创建数字列表 / 生成表达式 / 生成器元组的使用 - 定义元组 / 使用元组中的值 / 修改元组变量 / 元组和列表转换集合基本用法 - 集合和列表的区别 /  创建集合 / 添加元素 / 删除元素 /  清空集合常用操作 - 交集 / 并集 / 差集 / 对称差 / 子集 / 超集字典的基本用法 - 字典的特点 / 创建字典 / 添加元素 / 删除元素 / 取值 / 清空字典常用操作 - keys方法 / values方法 / items方法 / setdefault方法基础练习 - 跑马灯效果 / 列表找最大元素 / 统计考试成绩的平均分 / Fibonacci数列 / 杨辉三角综合案例 - 双色球选号 / 井字棋Day08 - 面向对象编程基础类和对象 - 什么是类 / 什么是对象 / 面向对象其他相关概念定义类 - 基本结构 / 属性和方法 / 构造器 / 析构器 / __str__方法使用对象 - 创建对象 / 给对象发消息面向对象的四大支柱 - 抽象 / 封装 / 继承 / 多态基础练习 - 定义学生类 / 定义时钟类 / 定义图形类 / 定义汽车类Day09 - 面向对象进阶属性 - 类属性 / 实例属性 / 属性访问器 / 属性修改器 / 属性删除器 / 使用__slots__类中的方法 - 实例方法 / 类方法 / 静态方法运算符重载 - __add__ / __sub__ / __or__ /__getitem__ / __setitem__ / __len__ / __repr__ / __gt__ / __lt__ / __le__ / __ge__ / __eq__ / __ne__ / __contains__类(的对象)之间的关系 - 关联 / 继承 / 依赖继承和多态 - 什么是继承 / 继承的语法 / 调用父类方法 / 方法重写 / 类型判定 / 多重继承 / 菱形继承(钻石继承)和C3算法综合案例 - 工资结算系统 / 图书自动折扣系统 / 自定义分数类Day10 - 图形用户界面和游戏开发使用tkinter开发GUI程序使用pygame三方库开发游戏应用“大球吃小球”游戏Day11 - 文件和异常读文件 - 读取整个文件 / 逐行读取 / 文件路径写文件 - 覆盖写入 / 追加写入 / 文本文件 / 二进制文件异常处理 - 异常机制的重要性 / try-except代码块 / else代码块 / finally代码块 / 内置异常类型 / 异常栈 / raise语句数据持久化 - CSV文件概述 / csv模块的应用 / JSON数据格式 / json模块的应用Day12 - 字符串和正则表达式字符串高级操作 - 转义字符 / 原始字符串 / 多行字符串 / in和not in运算符 / is_xxx方法 / join和split方法 / strip相关方法 / pyperclip模块 / 不变字符串和可变字符串 / StringIO的使用正则表达式入门 - 正则表达式的作用 / 元字符 / 转义 / 量词 / 分组 / 零宽断言 /贪婪匹配与惰性匹配懒惰 / 使用re模块实现正则表达式操作（匹配、搜索、替换、捕获）使用正则表达式 - re模块 / compile函数 / group和groups方法 / match方法 / search方法 / findall和finditer方法 / sub和subn方法 / split方法应用案例 - 使用正则表达式验证输入的字符串Day13 - 进程和线程进程和线程的概念 - 什么是进程 / 什么是线程 / 多线程的应用场景使用进程 - fork函数 / multiprocessing模块 / 进程池 / 进程间通信使用线程 -  threading模块 / Thread类 / RLock类 / Condition类 / 线程池Day14 - 网络编程入门和网络应用开发计算机网络基础 - 计算机网络发展史 / “TCP-IP”模型 / IP地址 / 端口 / 协议 / 其他相关概念网络应用模式 - “客户端-服务器”模式 / “浏览器-服务器”模式基于HTTP协议访问网络资源 - 网络API概述 / 访问URL / requests三方库 / 解析JSON格式数据Python网络编程 - 套接字的概念 / socket模块 /  socket函数 / 创建TCP服务器 / 创建TCP客户端 / 创建UDP服务器 / 创建UDP客户端电子邮件 - SMTP协议 / POP3协议 / IMAP协议 / smtplib模块 / poplib模块 / imaplib模块短信服务 - 调用短信服务网关Day15 - 图像和文档处理用Pillow处理图片 - 图片读写 / 图片合成 / 几何变换 / 色彩转换 / 滤镜效果读写Word文档 - 文本内容的处理 / 段落 / 页眉和页脚 / 样式的处理读写Excel文件 - xlrd / xlwt / openpyxlDay16~Day20 - Python语言进阶 常用数据结构函数的高级用法 - “一等公民” / 高阶函数 / Lambda函数 / 作用域和闭包 / 装饰器面向对象高级知识 - “三大支柱” / 类与类之间的关系 / 垃圾回收 / 魔术属性和方法 / 混入 / 元类 / 面向对象设计原则 / GoF设计模式迭代器和生成器 - 相关魔术方法 / 创建生成器的两种方式 /并发和异步编程 - 多线程 / 多进程 / 异步IO / async和awaitDay21~30 - Web前端入门用HTML标签承载页面内容用CSS渲染页面用JavaScript处理交互式行为jQuery入门和提高Vue.js入门Element的使用Bootstrap的使用Day31~35 - 玩转Linux操作系统操作系统发展史和Linux概述Linux基础命令Linux中的实用程序Linux的文件系统Vim编辑器的应用环境变量和Shell编程软件的安装和服务的配置网络访问和管理其他相关内容Day36~40 - 数据库基础和进阶关系型数据库概述MySQL的安装和使用SQL的使用DDL - 数据定义语言 - create / drop / alterDML - 数据操作语言 - insert / delete / updateDQL - 数据查询语言 - selectDCL - 数据控制语言 - grant / revokeMySQL新特性窗口函数的应用JSON数据类型相关知识数据完整性和一致性视图、函数、过程、触发器事务和锁执行计划和索引范式理论和反范式设计在Python中操作MySQLDay41~55 - 实战DjangoDay41 - Django快速上手Web应用工作机制HTTP请求和响应Django框架概述5分钟快速上手Day42 - 深入模型关系型数据库配置使用ORM完成对模型的CRUD操作管理后台的使用Django模型最佳实践模型定义参考Day43 - 静态资源和Ajax请求加载静态资源Ajax概述用Ajax实现投票功能Day44 - Cookie和Session实现用户跟踪cookie和session的关系Django框架对session的支持视图函数中的cookie读写操作Day45 - 报表和日志通过HttpResponse修改响应头使用StreamingHttpResponse处理大文件使用xlwt生成Excel报表使用reportlab生成PDF报表使用ECharts生成前端图表Day46 - 日志和调试工具栏配置日志配置Django-Debug-Toolbar优化ORM代码Day47 - 中间件的应用什么是中间件Django框架内置的中间件自定义中间件及其应用场景Day48 - 前后端分离开发入门返回JSON格式的数据用Vue.js渲染页面Day49 - RESTful架构和DRF入门Day50 - RESTful架构和DRF进阶Day51 - 使用缓存网站优化第一定律在Django项目中使用Redis提供缓存服务在视图函数中读写缓存使用装饰器实现页面缓存为数据接口提供缓存服务Day52 - 接入三方平台文件上传表单控件和图片文件预览服务器端如何处理上传的文件Day53 - 异步任务和定时任务网站优化第二定律配置消息队列服务在项目中使用Celery实现任务异步化在项目中使用Celery实现定时任务Day54 - 单元测试Day55 - 项目上线Python中的单元测试Django框架对单元测试的支持使用版本控制系统配置和使用uWSGI动静分离和Nginx配置配置HTTPS配置域名解析Day56~60 - 用FastAPI开发数据接口FastAPI五分钟上手请求和响应接入关系型数据库依赖注入中间件异步化虚拟化部署（Docker）项目实战：车辆违章查询项目Day61~65 - 爬虫开发Day61 - 网络数据采集概述网络爬虫的概念及其应用领域网络爬虫的合法性探讨开发网络爬虫的相关工具一个爬虫程序的构成Day62 - 数据抓取和解析使用requests三方库实现数据抓取页面解析的三种方式正则表达式解析XPath解析CSS选择器解析Day63 - Python中的并发编程多线程多进程异步I/ODay64 - 使用Selenium抓取网页动态内容Day65 - 爬虫框架Scrapy简介Day66~80 - 数据分析Day66 - 数据分析概述Day67 - 环境准备Day68 - NumPy的应用-1Day69 - NumPy的应用-2Day70 - Pandas的应用-1Day71 - Pandas的应用-2Day72 - Pandas的应用-3Day73 - Pandas的应用-4Day74 - Pandas的应用-5Day75 - 数据可视化-1Day76 - 数据可视化-2Day77 - 概率统计基础Day78 - 方差分析和参数估计Day79 - 相关和回归Day80 - 数据分析方法论Day81~90 - 机器学习和深度学习Day81 - 机器学习基础Day82 - k最近邻分类Day83 - 决策树Day84 - 贝叶斯分类Day85 - 支持向量机Day86 - K-均值聚类Day87 - 回归分析Day88 - 深度学习入门Day89 - PyTorch概述Day90 - PyTorch实战Day91~100 - 团队项目开发第91天：团队项目开发的问题和解决方案软件过程模型经典过程模型（瀑布模型）可行性分析（研究做还是不做），输出《可行性分析报告》。需求分析（研究做什么），输出《需求规格说明书》和产品界面原型图。概要设计和详细设计，输出概念模型图（ER图）、物理模型图、类图、时序图等。编码 / 测试。上线 / 维护。瀑布模型最大的缺点是无法拥抱需求变化，整套流程结束后才能看到产品，团队士气低落。敏捷开发（Scrum）- 产品所有者、Scrum Master、研发人员 - Sprint产品的Backlog（用户故事、产品原型）。计划会议（评估和预算）。日常开发（站立会议、番茄工作法、结对编程、测试先行、代码重构……）。修复bug（问题描述、重现步骤、测试人员、被指派人）。发布版本。评审会议（Showcase，用户需要参与）。回顾会议（对当前迭代周期做一个总结）。补充：敏捷软件开发宣言个体和互动 高于 流程和工具工作的软件 高于 详尽的文档客户合作 高于 合同谈判响应变化 高于 遵循计划角色：产品所有者（决定做什么，能对需求拍板的人）、团队负责人（解决各种问题，专注如何更好的工作，屏蔽外部对开发团队的影响）、开发团队（项目执行人员，具体指开发人员和测试人员）。准备工作：商业案例和资金、合同、憧憬、初始产品需求、初始发布计划、入股、组建团队。敏捷团队通常人数为8-10人。工作量估算：将开发任务量化，包括原型、Logo设计、UI设计、前端开发等，尽量把每个工作分解到最小任务量，最小任务量标准为工作时间不能超过两天，然后估算总体项目时间。把每个任务都贴在看板上面，看板上分三部分：to do（待完成）、in progress（进行中）和done（已完成）。项目团队组建团队的构成和角色说明：谢谢付祥英女士帮助我绘制了下面这张精美的公司组织架构图。编程规范和代码审查（flake8、pylint）Python中的一些“惯例”（请参考《Python惯例-如何编写Pythonic的代码》）影响代码可读性的原因：代码注释太少或者没有注释代码破坏了语言的最佳实践反模式编程（意大利面代码、复制-黏贴编程、自负编程、……）团队开发工具介绍版本控制：Git、Mercury缺陷管理：Gitlab、Redmine敏捷闭环工具：禅道、JIRA持续集成：Jenkins、Travis-CI请参考《团队项目开发的问题和解决方案》。项目选题和理解业务选题范围设定CMS（用户端）：新闻聚合网站、问答/分享社区、影评/书评网站等。MIS（用户端+管理端）：KMS、KPI考核系统、HRS、CRM系统、供应链系统、仓储管理系统等。App后台（管理端+数据接口）：二手交易类、报刊杂志类、小众电商类、新闻资讯类、旅游类、社交类、阅读类等。其他类型：自身行业背景和工作经验、业务容易理解和把控。需求理解、模块划分和任务分配需求理解：头脑风暴和竞品分析。模块划分：画思维导图（XMind），每个模块是一个枝节点，每个具体的功能是一个叶节点（用动词表述），需要确保每个叶节点无法再生出新节点，确定每个叶子节点的重要性、优先级和工作量。任务分配：由项目负责人根据上面的指标为每个团队成员分配任务。制定项目进度表（每日更新）模块功能人员状态完成工时计划开始实际开始计划结束实际结束备注评论添加评论王大锤正在进行50%42018/8/72018/8/7删除评论王大锤等待0%22018/8/72018/8/7查看评论白元芳正在进行20%42018/8/72018/8/7需要进行代码审查评论投票白元芳等待0%42018/8/82018/8/8OOAD和数据库设计UML（统一建模语言）的类图通过模型创建表（正向工程），例如在Django项目中可以通过下面的命令创建二维表。python manage.py makemigrations apppython manage.py migrate使用PowerDesigner绘制物理模型图。通过数据表创建模型（反向工程），例如在Django项目中可以通过下面的命令生成模型。python manage.py inspectdb > app/models.py第92天：Docker容器详解Docker简介安装Docker使用Docker创建容器（Nginx、MySQL、Redis、Gitlab、Jenkins）构建Docker镜像（Dockerfile的编写和相关指令）容器编排（Docker-compose）集群管理（Kubernetes）第93天：MySQL性能优化第94天：网络API接口设计第95天：[使用Django开发商业项目](./Day91-100/95.使用Django开发商业项\t目.md)项目开发中的公共问题数据库的配置（多数据库、主从复制、数据库路由）缓存的配置（分区缓存、键设置、超时设置、主从复制、故障恢复（哨兵））日志的配置分析和调试（Django-Debug-ToolBar）好用的Python模块（日期计算、图像处理、数据加密、三方API）REST API设计RESTful架构理解RESTful架构RESTful API设计指南RESTful API最佳实践API接口文档的撰写RAP2YAPIdjango-REST-framework的应用项目中的重点难点剖析使用缓存缓解数据库压力 - Redis使用消息队列做解耦合和削峰 - Celery + RabbitMQ第96天：软件测试和自动化测试单元测试测试的种类编写单元测试（unittest、pytest、nose2、tox、ddt、……）测试覆盖率（coverage）Django项目部署部署前的准备工作关键设置（SECRET_KEY / DEBUG / ALLOWED_HOSTS / 缓存 / 数据库）HTTPS / CSRF_COOKIE_SECUR  / SESSION_COOKIE_SECURE日志相关配置Linux常用命令回顾Linux常用服务的安装和配置uWSGI/Gunicorn和Nginx的使用Gunicorn和uWSGI的比较对于不需要大量定制化的简单应用程序，Gunicorn是一个不错的选择，uWSGI的学习曲线比Gunicorn要陡峭得多，Gunicorn的默认参数就已经能够适应大多数应用程序。uWSGI支持异构部署。由于Nginx本身支持uWSGI，在线上一般都将Nginx和uWSGI捆绑在一起部署，而且uWSGI属于功能齐全且高度定制的WSGI中间件。在性能上，Gunicorn和uWSGI其实表现相当。使用虚拟化技术（Docker）部署测试环境和生产环境性能测试AB的使用SQLslap的使用sysbench的使用自动化测试使用Shell和Python进行自动化测试使用Selenium实现自动化测试Selenium IDESelenium WebDriverSelenium Remote Control测试工具Robot Framework介绍第97天：电商网站技术要点剖析第98天：项目部署上线和性能调优MySQL数据库调优Web服务器性能优化Nginx负载均衡配置Keepalived实现高可用代码性能调优多线程异步化静态资源访问优化云存储CDN第99天：面试中的公共问题第100天：Python面试题实录"
81,81,TheAlgorithms/Python,https://github.com/TheAlgorithms/Python/blob/master/README.md,Python,          The Algorithms - Python                                                                  All algorithms implemented in Python - for educationImplementations are for learning purposes only. They may be less efficient than the implementations in the Python standard library. Use them at your discretion.Getting StartedRead through our Contribution Guidelines before you contribute.Community ChannelsWe are on Discord and Gitter! Community channels are a great way for you to ask questions and get help. Please join us!List of AlgorithmsSee our directory for easier navigation and a better overview of the project.
82,82,Significant-Gravitas/Auto-GPT,https://github.com/Significant-Gravitas/Auto-GPT/blob/master/README.md,Python,"Auto-GPT: An Autonomous GPT-4 Experiment💡 Get help - Q&A or Discord 💬🔴 USE stable not master 🔴Download the latest stable release from here: https://github.com/Significant-Gravitas/Auto-GPT/releases/latest.The master branch is under heavy development and may often be in a broken state.Auto-GPT is an experimental open-source application showcasing the capabilities of the GPT-4 language model. This program, driven by GPT-4, chains together LLM \""thoughts\"", to autonomously achieve whatever goal you set. As one of the first examples of GPT-4 running fully autonomously, Auto-GPT pushes the boundaries of what is possible with AI. Demo April 16th 2023               AutoGPTDemo_Subs_WithoutFinalScreen.mp4          Demo made by Blake Werlinger🚀 Features🌐 Internet access for searches and information gathering💾 Long-term and short-term memory management🧠 GPT-4 instances for text generation🔗 Access to popular websites and platforms🗃️ File storage and summarization with GPT-3.5🔌 Extensibility with PluginsQuickstartCheck out the wikiGet an OpenAI API KeyDownload the latest releaseFollow the installation instructionsConfigure any additional features you want, or install some pluginsRun the appPlease see the documentation for full setup instructions and configuration options.📖 Documentation⚙️ Setup💻 Usage🔌 PluginsConfiguration🔍 Web Search🧠 Memory🗣️ Voice (TTS)🖼️ Image Generation 💖 Help Fund Auto-GPT's Development 💖If you can spare a coffee, you can help to cover the costs of developing Auto-GPT and help to push the boundaries of fully autonomous AI!Your support is greatly appreciated. Development of this free, open-source project is made possible by all the contributors and sponsors. If you'd like to sponsor this project and have your avatar or company logo appear below click here.                                                                                                                                                                                                                                                                                                                                          ⚠️ LimitationsThis experiment aims to showcase the potential of GPT-4 but comes with some limitations:Not a polished application or product, just an experimentMay not perform well in complex, real-world business scenarios. In fact, if it actually does, please share your results!Quite expensive to run, so set and monitor your API key limits with OpenAI!🛡 DisclaimerThis project, Auto-GPT, is an experimental application and is provided \""as-is\"" without any warranty, express or implied. By using this software, you agree to assume all risks associated with its use, including but not limited to data loss, system failure, or any other issues that may arise.The developers and contributors of this project do not accept any responsibility or liability for any losses, damages, or other consequences that may occur as a result of using this software. You are solely responsible for any decisions and actions taken based on the information provided by Auto-GPT.Please note that the use of the GPT-4 language model can be expensive due to its token usage. By utilizing this project, you acknowledge that you are responsible for monitoring and managing your own token usage and the associated costs. It is highly recommended to check your OpenAI API usage regularly and set up any necessary limits or alerts to prevent unexpected charges.As an autonomous experiment, Auto-GPT may generate content or take actions that are not in line with real-world business practices or legal requirements. It is your responsibility to ensure that any actions or decisions made based on the output of this software comply with all applicable laws, regulations, and ethical standards. The developers and contributors of this project shall not be held responsible for any consequences arising from the use of this software.By using Auto-GPT, you agree to indemnify, defend, and hold harmless the developers, contributors, and any affiliated parties from and against any and all claims, damages, losses, liabilities, costs, and expenses (including reasonable attorneys' fees) arising from your use of this software or your violation of these terms.🐦 Connect with Us on TwitterStay up-to-date with the latest news, updates, and insights about Auto-GPT by following our Twitter accounts. Engage with the developer and the AI's own account for interesting discussions, project updates, and more.Developer: Follow @siggravitas for insights into the development process, project updates, and related topics from the creator of Entrepreneur-GPT.We look forward to connecting with you and hearing your thoughts, ideas, and experiences with Auto-GPT. Join us on Twitter and let's explore the future of AI together!        "
83,83,huggingface/transformers,https://github.com/huggingface/transformers/blob/main/README.md,Python,"                                                                                                                    English |        简体中文 |        繁體中文 |        한국어 |        Español |        日本語 |        हिन्दी        State-of-the-art Machine Learning for JAX, PyTorch and TensorFlow    🤗 Transformers provides thousands of pretrained models to perform tasks on different modalities such as text, vision, and audio.These models can be applied on:📝 Text, for tasks like text classification, information extraction, question answering, summarization, translation, text generation, in over 100 languages.🖼️ Images, for tasks like image classification, object detection, and segmentation.🗣️ Audio, for tasks like speech recognition and audio classification.Transformer models can also perform tasks on several modalities combined, such as table question answering, optical character recognition, information extraction from scanned documents, video classification, and visual question answering.🤗 Transformers provides APIs to quickly download and use those pretrained models on a given text, fine-tune them on your own datasets and then share them with the community on our model hub. At the same time, each python module defining an architecture is fully standalone and can be modified to enable quick research experiments.🤗 Transformers is backed by the three most popular deep learning libraries — Jax, PyTorch and TensorFlow — with a seamless integration between them. It's straightforward to train your models with one before loading them for inference with the other.Online demosYou can test most of our models directly on their pages from the model hub. We also offer private model hosting, versioning, & an inference API for public and private models.Here are a few examples:In Natural Language Processing:Masked word completion with BERTName Entity Recognition with ElectraText generation with GPT-2Natural Language Inference with RoBERTaSummarization with BARTQuestion answering with DistilBERTTranslation with T5In Computer Vision:Image classification with ViTObject Detection with DETRSemantic Segmentation with SegFormerPanoptic Segmentation with MaskFormerDepth Estimation with DPTVideo Classification with VideoMAEUniversal Segmentation with OneFormerIn Audio:Automatic Speech Recognition with Wav2Vec2Keyword Spotting with Wav2Vec2Audio Classification with Audio Spectrogram TransformerIn Multimodal tasks:Table Question Answering with TAPASVisual Question Answering with ViLTZero-shot Image Classification with CLIPDocument Question Answering with LayoutLMZero-shot Video Classification with X-CLIP100 projects using TransformersTransformers is more than a toolkit to use pretrained models: it's a community of projects built around it and theHugging Face Hub. We want Transformers to enable developers, researchers, students, professors, engineers, and anyoneelse to build their dream projects.In order to celebrate the 100,000 stars of transformers, we have decided to put the spotlight on thecommunity, and we have created the awesome-transformers page which lists 100incredible projects built in the vicinity of transformers.If you own or use a project that you believe should be part of the list, please open a PR to add it!If you are looking for custom support from the Hugging Face team    Quick tourTo immediately use a model on a given input (text, image, audio, ...), we provide the pipeline API. Pipelines group together a pretrained model with the preprocessing that was used during that model's training. Here is how to quickly use a pipeline to classify positive versus negative texts:>>> from transformers import pipeline# Allocate a pipeline for sentiment-analysis>>> classifier = pipeline('sentiment-analysis')>>> classifier('We are very happy to introduce pipeline to the transformers repository.')[{'label': 'POSITIVE', 'score': 0.9996980428695679}]The second line of code downloads and caches the pretrained model used by the pipeline, while the third evaluates it on the given text. Here the answer is \""positive\"" with a confidence of 99.97%.Many tasks have a pre-trained pipeline ready to go, in NLP but also in computer vision and speech. For example, we can easily extract detected objects in an image:>>> import requests>>> from PIL import Image>>> from transformers import pipeline# Download an image with cute cats>>> url = \""https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/coco_sample.png\"">>> image_data = requests.get(url, stream=True).raw>>> image = Image.open(image_data)# Allocate a pipeline for object detection>>> object_detector = pipeline('object-detection')>>> object_detector(image)[{'score': 0.9982201457023621,  'label': 'remote',  'box': {'xmin': 40, 'ymin': 70, 'xmax': 175, 'ymax': 117}}, {'score': 0.9960021376609802,  'label': 'remote',  'box': {'xmin': 333, 'ymin': 72, 'xmax': 368, 'ymax': 187}}, {'score': 0.9954745173454285,  'label': 'couch',  'box': {'xmin': 0, 'ymin': 1, 'xmax': 639, 'ymax': 473}}, {'score': 0.9988006353378296,  'label': 'cat',  'box': {'xmin': 13, 'ymin': 52, 'xmax': 314, 'ymax': 470}}, {'score': 0.9986783862113953,  'label': 'cat',  'box': {'xmin': 345, 'ymin': 23, 'xmax': 640, 'ymax': 368}}]Here we get a list of objects detected in the image, with a box surrounding the object and a confidence score. Here is the original image on the left, with the predictions displayed on the right:        You can learn more about the tasks supported by the pipeline API in this tutorial.In addition to pipeline, to download and use any of the pretrained models on your given task, all it takes is three lines of code. Here is the PyTorch version:>>> from transformers import AutoTokenizer, AutoModel>>> tokenizer = AutoTokenizer.from_pretrained(\""bert-base-uncased\"")>>> model = AutoModel.from_pretrained(\""bert-base-uncased\"")>>> inputs = tokenizer(\""Hello world!\"", return_tensors=\""pt\"")>>> outputs = model(**inputs)And here is the equivalent code for TensorFlow:>>> from transformers import AutoTokenizer, TFAutoModel>>> tokenizer = AutoTokenizer.from_pretrained(\""bert-base-uncased\"")>>> model = TFAutoModel.from_pretrained(\""bert-base-uncased\"")>>> inputs = tokenizer(\""Hello world!\"", return_tensors=\""tf\"")>>> outputs = model(**inputs)The tokenizer is responsible for all the preprocessing the pretrained model expects, and can be called directly on a single string (as in the above examples) or a list. It will output a dictionary that you can use in downstream code or simply directly pass to your model using the ** argument unpacking operator.The model itself is a regular Pytorch nn.Module or a TensorFlow tf.keras.Model (depending on your backend) which you can use as usual. This tutorial explains how to integrate such a model into a classic PyTorch or TensorFlow training loop, or how to use our Trainer API to quickly fine-tune on a new dataset.Why should I use transformers?Easy-to-use state-of-the-art models:High performance on natural language understanding & generation, computer vision, and audio tasks.Low barrier to entry for educators and practitioners.Few user-facing abstractions with just three classes to learn.A unified API for using all our pretrained models.Lower compute costs, smaller carbon footprint:Researchers can share trained models instead of always retraining.Practitioners can reduce compute time and production costs.Dozens of architectures with over 60,000 pretrained models across all modalities.Choose the right framework for every part of a model's lifetime:Train state-of-the-art models in 3 lines of code.Move a single model between TF2.0/PyTorch/JAX frameworks at will.Seamlessly pick the right framework for training, evaluation and production.Easily customize a model or an example to your needs:We provide examples for each architecture to reproduce the results published by its original authors.Model internals are exposed as consistently as possible.Model files can be used independently of the library for quick experiments.Why shouldn't I use transformers?This library is not a modular toolbox of building blocks for neural nets. The code in the model files is not refactored with additional abstractions on purpose, so that researchers can quickly iterate on each of the models without diving into additional abstractions/files.The training API is not intended to work on any model but is optimized to work with the models provided by the library. For generic machine learning loops, you should use another library (possibly, Accelerate).While we strive to present as many use cases as possible, the scripts in our examples folder are just that: examples. It is expected that they won't work out-of-the box on your specific problem and that you will be required to change a few lines of code to adapt them to your needs.InstallationWith pipThis repository is tested on Python 3.8+, Flax 0.4.1+, PyTorch 1.10+ and TensorFlow 2.6+.You should install 🤗 Transformers in a virtual environment. If you're unfamiliar with Python virtual environments, check out the user guide.First, create a virtual environment with the version of Python you're going to use and activate it.Then, you will need to install at least one of Flax, PyTorch or TensorFlow.Please refer to TensorFlow installation page, PyTorch installation page and/or Flax and Jax installation pages regarding the specific installation command for your platform.When one of those backends has been installed, 🤗 Transformers can be installed using pip as follows:pip install transformersIf you'd like to play with the examples or need the bleeding edge of the code and can't wait for a new release, you must install the library from source.With condaSince Transformers version v4.0.0, we now have a conda channel: huggingface.🤗 Transformers can be installed using conda as follows:conda install -c huggingface transformersFollow the installation pages of Flax, PyTorch or TensorFlow to see how to install them with conda.NOTE:  On Windows, you may be prompted to activate Developer Mode in order to benefit from caching. If this is not an option for you, please let us know in this issue.Model architecturesAll the model checkpoints provided by 🤗 Transformers are seamlessly integrated from the huggingface.co model hub where they are uploaded directly by users and organizations.Current number of checkpoints: 🤗 Transformers currently provides the following architectures (see here for a high-level summary of each them):ALBERT (from Google Research and the Toyota Technological Institute at Chicago) released with the paper ALBERT: A Lite BERT for Self-supervised Learning of Language Representations, by Zhenzhong Lan, Mingda Chen, Sebastian Goodman, Kevin Gimpel, Piyush Sharma, Radu Soricut.ALIGN (from Google Research) released with the paper Scaling Up Visual and Vision-Language Representation Learning With Noisy Text Supervision by Chao Jia, Yinfei Yang, Ye Xia, Yi-Ting Chen, Zarana Parekh, Hieu Pham, Quoc V. Le, Yunhsuan Sung, Zhen Li, Tom Duerig.AltCLIP (from BAAI) released with the paper AltCLIP: Altering the Language Encoder in CLIP for Extended Language Capabilities by Chen, Zhongzhi and Liu, Guang and Zhang, Bo-Wen and Ye, Fulong and Yang, Qinghong and Wu, Ledell.Audio Spectrogram Transformer (from MIT) released with the paper AST: Audio Spectrogram Transformer by Yuan Gong, Yu-An Chung, James Glass.Autoformer (from Tsinghua University) released with the paper Autoformer: Decomposition Transformers with Auto-Correlation for Long-Term Series Forecasting by Haixu Wu, Jiehui Xu, Jianmin Wang, Mingsheng Long.Bark (from Suno) released in the repository suno-ai/bark by Suno AI team.BART (from Facebook) released with the paper BART: Denoising Sequence-to-Sequence Pre-training for Natural Language Generation, Translation, and Comprehension by Mike Lewis, Yinhan Liu, Naman Goyal, Marjan Ghazvininejad, Abdelrahman Mohamed, Omer Levy, Ves Stoyanov and Luke Zettlemoyer.BARThez (from École polytechnique) released with the paper BARThez: a Skilled Pretrained French Sequence-to-Sequence Model by Moussa Kamal Eddine, Antoine J.-P. Tixier, Michalis Vazirgiannis.BARTpho (from VinAI Research) released with the paper BARTpho: Pre-trained Sequence-to-Sequence Models for Vietnamese by Nguyen Luong Tran, Duong Minh Le and Dat Quoc Nguyen.BEiT (from Microsoft) released with the paper BEiT: BERT Pre-Training of Image Transformers by Hangbo Bao, Li Dong, Furu Wei.BERT (from Google) released with the paper BERT: Pre-training of Deep Bidirectional Transformers for Language Understanding by Jacob Devlin, Ming-Wei Chang, Kenton Lee and Kristina Toutanova.BERT For Sequence Generation (from Google) released with the paper Leveraging Pre-trained Checkpoints for Sequence Generation Tasks by Sascha Rothe, Shashi Narayan, Aliaksei Severyn.BERTweet (from VinAI Research) released with the paper BERTweet: A pre-trained language model for English Tweets by Dat Quoc Nguyen, Thanh Vu and Anh Tuan Nguyen.BigBird-Pegasus (from Google Research) released with the paper Big Bird: Transformers for Longer Sequences by Manzil Zaheer, Guru Guruganesh, Avinava Dubey, Joshua Ainslie, Chris Alberti, Santiago Ontanon, Philip Pham, Anirudh Ravula, Qifan Wang, Li Yang, Amr Ahmed.BigBird-RoBERTa (from Google Research) released with the paper Big Bird: Transformers for Longer Sequences by Manzil Zaheer, Guru Guruganesh, Avinava Dubey, Joshua Ainslie, Chris Alberti, Santiago Ontanon, Philip Pham, Anirudh Ravula, Qifan Wang, Li Yang, Amr Ahmed.BioGpt (from Microsoft Research AI4Science) released with the paper BioGPT: generative pre-trained transformer for biomedical text generation and mining by Renqian Luo, Liai Sun, Yingce Xia, Tao Qin, Sheng Zhang, Hoifung Poon and Tie-Yan Liu.BiT (from Google AI) released with the paper Big Transfer (BiT): General Visual Representation Learning by Alexander Kolesnikov, Lucas Beyer, Xiaohua Zhai, Joan Puigcerver, Jessica Yung, Sylvain Gelly, Neil Houlsby.Blenderbot (from Facebook) released with the paper Recipes for building an open-domain chatbot by Stephen Roller, Emily Dinan, Naman Goyal, Da Ju, Mary Williamson, Yinhan Liu, Jing Xu, Myle Ott, Kurt Shuster, Eric M. Smith, Y-Lan Boureau, Jason Weston.BlenderbotSmall (from Facebook) released with the paper Recipes for building an open-domain chatbot by Stephen Roller, Emily Dinan, Naman Goyal, Da Ju, Mary Williamson, Yinhan Liu, Jing Xu, Myle Ott, Kurt Shuster, Eric M. Smith, Y-Lan Boureau, Jason Weston.BLIP (from Salesforce) released with the paper BLIP: Bootstrapping Language-Image Pre-training for Unified Vision-Language Understanding and Generation by Junnan Li, Dongxu Li, Caiming Xiong, Steven Hoi.BLIP-2 (from Salesforce) released with the paper BLIP-2: Bootstrapping Language-Image Pre-training with Frozen Image Encoders and Large Language Models by Junnan Li, Dongxu Li, Silvio Savarese, Steven Hoi.BLOOM (from BigScience workshop) released by the BigScience Workshop.BORT (from Alexa) released with the paper Optimal Subarchitecture Extraction For BERT by Adrian de Wynter and Daniel J. Perry.BridgeTower (from Harbin Institute of Technology/Microsoft Research Asia/Intel Labs) released with the paper BridgeTower: Building Bridges Between Encoders in Vision-Language Representation Learning by Xiao Xu, Chenfei Wu, Shachar Rosenman, Vasudev Lal, Wanxiang Che, Nan Duan.ByT5 (from Google Research) released with the paper ByT5: Towards a token-free future with pre-trained byte-to-byte models by Linting Xue, Aditya Barua, Noah Constant, Rami Al-Rfou, Sharan Narang, Mihir Kale, Adam Roberts, Colin Raffel.CamemBERT (from Inria/Facebook/Sorbonne) released with the paper CamemBERT: a Tasty French Language Model by Louis Martin*, Benjamin Muller*, Pedro Javier Ortiz Suárez*, Yoann Dupont, Laurent Romary, Éric Villemonte de la Clergerie, Djamé Seddah and Benoît Sagot.CANINE (from Google Research) released with the paper CANINE: Pre-training an Efficient Tokenization-Free Encoder for Language Representation by Jonathan H. Clark, Dan Garrette, Iulia Turc, John Wieting.Chinese-CLIP (from OFA-Sys) released with the paper Chinese CLIP: Contrastive Vision-Language Pretraining in Chinese by An Yang, Junshu Pan, Junyang Lin, Rui Men, Yichang Zhang, Jingren Zhou, Chang Zhou.CLAP (from LAION-AI) released with the paper Large-scale Contrastive Language-Audio Pretraining with Feature Fusion and Keyword-to-Caption Augmentation by Yusong Wu, Ke Chen, Tianyu Zhang, Yuchen Hui, Taylor Berg-Kirkpatrick, Shlomo Dubnov.CLIP (from OpenAI) released with the paper Learning Transferable Visual Models From Natural Language Supervision by Alec Radford, Jong Wook Kim, Chris Hallacy, Aditya Ramesh, Gabriel Goh, Sandhini Agarwal, Girish Sastry, Amanda Askell, Pamela Mishkin, Jack Clark, Gretchen Krueger, Ilya Sutskever.CLIPSeg (from University of Göttingen) released with the paper Image Segmentation Using Text and Image Prompts by Timo Lüddecke and Alexander Ecker.CodeGen (from Salesforce) released with the paper A Conversational Paradigm for Program Synthesis by Erik Nijkamp, Bo Pang, Hiroaki Hayashi, Lifu Tu, Huan Wang, Yingbo Zhou, Silvio Savarese, Caiming Xiong.Conditional DETR (from Microsoft Research Asia) released with the paper Conditional DETR for Fast Training Convergence by Depu Meng, Xiaokang Chen, Zejia Fan, Gang Zeng, Houqiang Li, Yuhui Yuan, Lei Sun, Jingdong Wang.ConvBERT (from YituTech) released with the paper ConvBERT: Improving BERT with Span-based Dynamic Convolution by Zihang Jiang, Weihao Yu, Daquan Zhou, Yunpeng Chen, Jiashi Feng, Shuicheng Yan.ConvNeXT (from Facebook AI) released with the paper A ConvNet for the 2020s by Zhuang Liu, Hanzi Mao, Chao-Yuan Wu, Christoph Feichtenhofer, Trevor Darrell, Saining Xie.ConvNeXTV2 (from Facebook AI) released with the paper ConvNeXt V2: Co-designing and Scaling ConvNets with Masked Autoencoders by Sanghyun Woo, Shoubhik Debnath, Ronghang Hu, Xinlei Chen, Zhuang Liu, In So Kweon, Saining Xie.CPM (from Tsinghua University) released with the paper CPM: A Large-scale Generative Chinese Pre-trained Language Model by Zhengyan Zhang, Xu Han, Hao Zhou, Pei Ke, Yuxian Gu, Deming Ye, Yujia Qin, Yusheng Su, Haozhe Ji, Jian Guan, Fanchao Qi, Xiaozhi Wang, Yanan Zheng, Guoyang Zeng, Huanqi Cao, Shengqi Chen, Daixuan Li, Zhenbo Sun, Zhiyuan Liu, Minlie Huang, Wentao Han, Jie Tang, Juanzi Li, Xiaoyan Zhu, Maosong Sun.CPM-Ant (from OpenBMB) released by the OpenBMB.CTRL (from Salesforce) released with the paper CTRL: A Conditional Transformer Language Model for Controllable Generation by Nitish Shirish Keskar*, Bryan McCann*, Lav R. Varshney, Caiming Xiong and Richard Socher.CvT (from Microsoft) released with the paper CvT: Introducing Convolutions to Vision Transformers by Haiping Wu, Bin Xiao, Noel Codella, Mengchen Liu, Xiyang Dai, Lu Yuan, Lei Zhang.Data2Vec (from Facebook) released with the paper Data2Vec:  A General Framework for Self-supervised Learning in Speech, Vision and Language by Alexei Baevski, Wei-Ning Hsu, Qiantong Xu, Arun Babu, Jiatao Gu, Michael Auli.DeBERTa (from Microsoft) released with the paper DeBERTa: Decoding-enhanced BERT with Disentangled Attention by Pengcheng He, Xiaodong Liu, Jianfeng Gao, Weizhu Chen.DeBERTa-v2 (from Microsoft) released with the paper DeBERTa: Decoding-enhanced BERT with Disentangled Attention by Pengcheng He, Xiaodong Liu, Jianfeng Gao, Weizhu Chen.Decision Transformer (from Berkeley/Facebook/Google) released with the paper Decision Transformer: Reinforcement Learning via Sequence Modeling by Lili Chen, Kevin Lu, Aravind Rajeswaran, Kimin Lee, Aditya Grover, Michael Laskin, Pieter Abbeel, Aravind Srinivas, Igor Mordatch.Deformable DETR (from SenseTime Research) released with the paper Deformable DETR: Deformable Transformers for End-to-End Object Detection by Xizhou Zhu, Weijie Su, Lewei Lu, Bin Li, Xiaogang Wang, Jifeng Dai.DeiT (from Facebook) released with the paper Training data-efficient image transformers & distillation through attention by Hugo Touvron, Matthieu Cord, Matthijs Douze, Francisco Massa, Alexandre Sablayrolles, Hervé Jégou.DePlot (from Google AI) released with the paper DePlot: One-shot visual language reasoning by plot-to-table translation by Fangyu Liu, Julian Martin Eisenschlos, Francesco Piccinno, Syrine Krichene, Chenxi Pang, Kenton Lee, Mandar Joshi, Wenhu Chen, Nigel Collier, Yasemin Altun.DETA (from The University of Texas at Austin) released with the paper NMS Strikes Back by Jeffrey Ouyang-Zhang, Jang Hyun Cho, Xingyi Zhou, Philipp Krähenbühl.DETR (from Facebook) released with the paper End-to-End Object Detection with Transformers by Nicolas Carion, Francisco Massa, Gabriel Synnaeve, Nicolas Usunier, Alexander Kirillov, Sergey Zagoruyko.DialoGPT (from Microsoft Research) released with the paper DialoGPT: Large-Scale Generative Pre-training for Conversational Response Generation by Yizhe Zhang, Siqi Sun, Michel Galley, Yen-Chun Chen, Chris Brockett, Xiang Gao, Jianfeng Gao, Jingjing Liu, Bill Dolan.DiNAT (from SHI Labs) released with the paper Dilated Neighborhood Attention Transformer by Ali Hassani and Humphrey Shi.DINOv2 (from Meta AI) released with the paper DINOv2: Learning Robust Visual Features without Supervision by Maxime Oquab, Timothée Darcet, Théo Moutakanni, Huy Vo, Marc Szafraniec, Vasil Khalidov, Pierre Fernandez, Daniel Haziza, Francisco Massa, Alaaeldin El-Nouby, Mahmoud Assran, Nicolas Ballas, Wojciech Galuba, Russell Howes, Po-Yao Huang, Shang-Wen Li, Ishan Misra, Michael Rabbat, Vasu Sharma, Gabriel Synnaeve, Hu Xu, Hervé Jegou, Julien Mairal, Patrick Labatut, Armand Joulin, Piotr Bojanowski.DistilBERT (from HuggingFace), released together with the paper DistilBERT, a distilled version of BERT: smaller, faster, cheaper and lighter by Victor Sanh, Lysandre Debut and Thomas Wolf. The same method has been applied to compress GPT2 into DistilGPT2, RoBERTa into DistilRoBERTa, Multilingual BERT into DistilmBERT and a German version of DistilBERT.DiT (from Microsoft Research) released with the paper DiT: Self-supervised Pre-training for Document Image Transformer by Junlong Li, Yiheng Xu, Tengchao Lv, Lei Cui, Cha Zhang, Furu Wei.Donut (from NAVER), released together with the paper OCR-free Document Understanding Transformer by Geewook Kim, Teakgyu Hong, Moonbin Yim, Jeongyeon Nam, Jinyoung Park, Jinyeong Yim, Wonseok Hwang, Sangdoo Yun, Dongyoon Han, Seunghyun Park.DPR (from Facebook) released with the paper Dense Passage Retrieval for Open-Domain Question Answering by Vladimir Karpukhin, Barlas Oğuz, Sewon Min, Patrick Lewis, Ledell Wu, Sergey Edunov, Danqi Chen, and Wen-tau Yih.DPT (from Intel Labs) released with the paper Vision Transformers for Dense Prediction by René Ranftl, Alexey Bochkovskiy, Vladlen Koltun.EfficientFormer (from Snap Research) released with the paper EfficientFormer: Vision Transformers at MobileNetSpeed by Yanyu Li, Geng Yuan, Yang Wen, Ju Hu, Georgios Evangelidis, Sergey Tulyakov, Yanzhi Wang, Jian Ren.EfficientNet (from Google Brain) released with the paper EfficientNet: Rethinking Model Scaling for Convolutional Neural Networks by Mingxing Tan, Quoc V. Le.ELECTRA (from Google Research/Stanford University) released with the paper ELECTRA: Pre-training text encoders as discriminators rather than generators by Kevin Clark, Minh-Thang Luong, Quoc V. Le, Christopher D. Manning.EnCodec (from Meta AI) released with the paper High Fidelity Neural Audio Compression by Alexandre Défossez, Jade Copet, Gabriel Synnaeve, Yossi Adi.EncoderDecoder (from Google Research) released with the paper Leveraging Pre-trained Checkpoints for Sequence Generation Tasks by Sascha Rothe, Shashi Narayan, Aliaksei Severyn.ERNIE (from Baidu) released with the paper ERNIE: Enhanced Representation through Knowledge Integration by Yu Sun, Shuohuan Wang, Yukun Li, Shikun Feng, Xuyi Chen, Han Zhang, Xin Tian, Danxiang Zhu, Hao Tian, Hua Wu.ErnieM (from Baidu) released with the paper ERNIE-M: Enhanced Multilingual Representation by Aligning Cross-lingual Semantics with Monolingual Corpora by Xuan Ouyang, Shuohuan Wang, Chao Pang, Yu Sun, Hao Tian, Hua Wu, Haifeng Wang.ESM (from Meta AI) are transformer protein language models.  ESM-1b was released with the paper Biological structure and function emerge from scaling unsupervised learning to 250 million protein sequences by Alexander Rives, Joshua Meier, Tom Sercu, Siddharth Goyal, Zeming Lin, Jason Liu, Demi Guo, Myle Ott, C. Lawrence Zitnick, Jerry Ma, and Rob Fergus. ESM-1v was released with the paper Language models enable zero-shot prediction of the effects of mutations on protein function by Joshua Meier, Roshan Rao, Robert Verkuil, Jason Liu, Tom Sercu and Alexander Rives. ESM-2 and ESMFold were released with the paper Language models of protein sequences at the scale of evolution enable accurate structure prediction by Zeming Lin, Halil Akin, Roshan Rao, Brian Hie, Zhongkai Zhu, Wenting Lu, Allan dos Santos Costa, Maryam Fazel-Zarandi, Tom Sercu, Sal Candido, Alexander Rives.Falcon (from Technology Innovation Institute) by Almazrouei, Ebtesam and Alobeidli, Hamza and Alshamsi, Abdulaziz and Cappelli, Alessandro and Cojocaru, Ruxandra and Debbah, Merouane and Goffinet, Etienne and Heslow, Daniel and Launay, Julien and Malartic, Quentin and Noune, Badreddine and Pannier, Baptiste and Penedo, Guilherme.FLAN-T5 (from Google AI) released in the repository google-research/t5x by Hyung Won Chung, Le Hou, Shayne Longpre, Barret Zoph, Yi Tay, William Fedus, Eric Li, Xuezhi Wang, Mostafa Dehghani, Siddhartha Brahma, Albert Webson, Shixiang Shane Gu, Zhuyun Dai, Mirac Suzgun, Xinyun Chen, Aakanksha Chowdhery, Sharan Narang, Gaurav Mishra, Adams Yu, Vincent Zhao, Yanping Huang, Andrew Dai, Hongkun Yu, Slav Petrov, Ed H. Chi, Jeff Dean, Jacob Devlin, Adam Roberts, Denny Zhou, Quoc V. Le, and Jason WeiFLAN-UL2 (from Google AI) released in the repository google-research/t5x by Hyung Won Chung, Le Hou, Shayne Longpre, Barret Zoph, Yi Tay, William Fedus, Eric Li, Xuezhi Wang, Mostafa Dehghani, Siddhartha Brahma, Albert Webson, Shixiang Shane Gu, Zhuyun Dai, Mirac Suzgun, Xinyun Chen, Aakanksha Chowdhery, Sharan Narang, Gaurav Mishra, Adams Yu, Vincent Zhao, Yanping Huang, Andrew Dai, Hongkun Yu, Slav Petrov, Ed H. Chi, Jeff Dean, Jacob Devlin, Adam Roberts, Denny Zhou, Quoc V. Le, and Jason WeiFlauBERT (from CNRS) released with the paper FlauBERT: Unsupervised Language Model Pre-training for French by Hang Le, Loïc Vial, Jibril Frej, Vincent Segonne, Maximin Coavoux, Benjamin Lecouteux, Alexandre Allauzen, Benoît Crabbé, Laurent Besacier, Didier Schwab.FLAVA (from Facebook AI) released with the paper FLAVA: A Foundational Language And Vision Alignment Model by Amanpreet Singh, Ronghang Hu, Vedanuj Goswami, Guillaume Couairon, Wojciech Galuba, Marcus Rohrbach, and Douwe Kiela.FNet (from Google Research) released with the paper FNet: Mixing Tokens with Fourier Transforms by James Lee-Thorp, Joshua Ainslie, Ilya Eckstein, Santiago Ontanon.FocalNet (from Microsoft Research) released with the paper Focal Modulation Networks by Jianwei Yang, Chunyuan Li, Xiyang Dai, Lu Yuan, Jianfeng Gao.Funnel Transformer (from CMU/Google Brain) released with the paper Funnel-Transformer: Filtering out Sequential Redundancy for Efficient Language Processing by Zihang Dai, Guokun Lai, Yiming Yang, Quoc V. Le.GIT (from Microsoft Research) released with the paper GIT: A Generative Image-to-text Transformer for Vision and Language by Jianfeng Wang, Zhengyuan Yang, Xiaowei Hu, Linjie Li, Kevin Lin, Zhe Gan, Zicheng Liu, Ce Liu, Lijuan Wang.GLPN (from KAIST) released with the paper Global-Local Path Networks for Monocular Depth Estimation with Vertical CutDepth by Doyeon Kim, Woonghyun Ga, Pyungwhan Ahn, Donggyu Joo, Sehwan Chun, Junmo Kim.GPT (from OpenAI) released with the paper Improving Language Understanding by Generative Pre-Training by Alec Radford, Karthik Narasimhan, Tim Salimans and Ilya Sutskever.GPT Neo (from EleutherAI) released in the repository EleutherAI/gpt-neo by Sid Black, Stella Biderman, Leo Gao, Phil Wang and Connor Leahy.GPT NeoX (from EleutherAI) released with the paper GPT-NeoX-20B: An Open-Source Autoregressive Language Model by Sid Black, Stella Biderman, Eric Hallahan, Quentin Anthony, Leo Gao, Laurence Golding, Horace He, Connor Leahy, Kyle McDonell, Jason Phang, Michael Pieler, USVSN Sai Prashanth, Shivanshu Purohit, Laria Reynolds, Jonathan Tow, Ben Wang, Samuel WeinbachGPT NeoX Japanese (from ABEJA) released by Shinya Otani, Takayoshi Makabe, Anuj Arora, and Kyo Hattori.GPT-2 (from OpenAI) released with the paper Language Models are Unsupervised Multitask Learners by Alec Radford*, Jeffrey Wu*, Rewon Child, David Luan, Dario Amodei** and Ilya Sutskever**.GPT-J (from EleutherAI) released in the repository kingoflolz/mesh-transformer-jax by Ben Wang and Aran Komatsuzaki.GPT-Sw3 (from AI-Sweden) released with the paper Lessons Learned from GPT-SW3: Building the First Large-Scale Generative Language Model for Swedish by Ariel Ekgren, Amaru Cuba Gyllensten, Evangelia Gogoulou, Alice Heiman, Severine Verlinden, Joey Öhman, Fredrik Carlsson, Magnus Sahlgren.GPTBigCode (from BigCode) released with the paper SantaCoder: don't reach for the stars! by Loubna Ben Allal, Raymond Li, Denis Kocetkov, Chenghao Mou, Christopher Akiki, Carlos Munoz Ferrandis, Niklas Muennighoff, Mayank Mishra, Alex Gu, Manan Dey, Logesh Kumar Umapathi, Carolyn Jane Anderson, Yangtian Zi, Joel Lamy Poirier, Hailey Schoelkopf, Sergey Troshin, Dmitry Abulkhanov, Manuel Romero, Michael Lappert, Francesco De Toni, Bernardo García del Río, Qian Liu, Shamik Bose, Urvashi Bhattacharyya, Terry Yue Zhuo, Ian Yu, Paulo Villegas, Marco Zocca, Sourab Mangrulkar, David Lansky, Huu Nguyen, Danish Contractor, Luis Villa, Jia Li, Dzmitry Bahdanau, Yacine Jernite, Sean Hughes, Daniel Fried, Arjun Guha, Harm de Vries, Leandro von Werra.GPTSAN-japanese released in the repository tanreinama/GPTSAN by Toshiyuki Sakamoto(tanreinama).Graphormer (from Microsoft) released with the paper Do Transformers Really Perform Bad for Graph Representation? by Chengxuan Ying, Tianle Cai, Shengjie Luo, Shuxin Zheng, Guolin Ke, Di He, Yanming Shen, Tie-Yan Liu.GroupViT (from UCSD, NVIDIA) released with the paper GroupViT: Semantic Segmentation Emerges from Text Supervision by Jiarui Xu, Shalini De Mello, Sifei Liu, Wonmin Byeon, Thomas Breuel, Jan Kautz, Xiaolong Wang.Hubert (from Facebook) released with the paper HuBERT: Self-Supervised Speech Representation Learning by Masked Prediction of Hidden Units by Wei-Ning Hsu, Benjamin Bolte, Yao-Hung Hubert Tsai, Kushal Lakhotia, Ruslan Salakhutdinov, Abdelrahman Mohamed.I-BERT (from Berkeley) released with the paper I-BERT: Integer-only BERT Quantization by Sehoon Kim, Amir Gholami, Zhewei Yao, Michael W. Mahoney, Kurt Keutzer.ImageGPT (from OpenAI) released with the paper Generative Pretraining from Pixels by Mark Chen, Alec Radford, Rewon Child, Jeffrey Wu, Heewoo Jun, David Luan, Ilya Sutskever.Informer (from Beihang University, UC Berkeley, Rutgers University, SEDD Company) released with the paper Informer: Beyond Efficient Transformer for Long Sequence Time-Series Forecasting by Haoyi Zhou, Shanghang Zhang, Jieqi Peng, Shuai Zhang, Jianxin Li, Hui Xiong, and Wancai Zhang.InstructBLIP (from Salesforce) released with the paper InstructBLIP: Towards General-purpose Vision-Language Models with Instruction Tuning by Wenliang Dai, Junnan Li, Dongxu Li, Anthony Meng Huat Tiong, Junqi Zhao, Weisheng Wang, Boyang Li, Pascale Fung, Steven Hoi.Jukebox (from OpenAI) released with the paper Jukebox: A Generative Model for Music by Prafulla Dhariwal, Heewoo Jun, Christine Payne, Jong Wook Kim, Alec Radford, Ilya Sutskever.LayoutLM (from Microsoft Research Asia) released with the paper LayoutLM: Pre-training of Text and Layout for Document Image Understanding by Yiheng Xu, Minghao Li, Lei Cui, Shaohan Huang, Furu Wei, Ming Zhou.LayoutLMv2 (from Microsoft Research Asia) released with the paper LayoutLMv2: Multi-modal Pre-training for Visually-Rich Document Understanding by Yang Xu, Yiheng Xu, Tengchao Lv, Lei Cui, Furu Wei, Guoxin Wang, Yijuan Lu, Dinei Florencio, Cha Zhang, Wanxiang Che, Min Zhang, Lidong Zhou.LayoutLMv3 (from Microsoft Research Asia) released with the paper LayoutLMv3: Pre-training for Document AI with Unified Text and Image Masking by Yupan Huang, Tengchao Lv, Lei Cui, Yutong Lu, Furu Wei.LayoutXLM (from Microsoft Research Asia) released with the paper LayoutXLM: Multimodal Pre-training for Multilingual Visually-rich Document Understanding by Yiheng Xu, Tengchao Lv, Lei Cui, Guoxin Wang, Yijuan Lu, Dinei Florencio, Cha Zhang, Furu Wei.LED (from AllenAI) released with the paper Longformer: The Long-Document Transformer by Iz Beltagy, Matthew E. Peters, Arman Cohan.LeViT (from Meta AI) released with the paper LeViT: A Vision Transformer in ConvNet's Clothing for Faster Inference by Ben Graham, Alaaeldin El-Nouby, Hugo Touvron, Pierre Stock, Armand Joulin, Hervé Jégou, Matthijs Douze.LiLT (from South China University of Technology) released with the paper LiLT: A Simple yet Effective Language-Independent Layout Transformer for Structured Document Understanding by Jiapeng Wang, Lianwen Jin, Kai Ding.LLaMA (from The FAIR team of Meta AI) released with the paper LLaMA: Open and Efficient Foundation Language Models by Hugo Touvron, Thibaut Lavril, Gautier Izacard, Xavier Martinet, Marie-Anne Lachaux, Timothée Lacroix, Baptiste Rozière, Naman Goyal, Eric Hambro, Faisal Azhar, Aurelien Rodriguez, Armand Joulin, Edouard Grave, Guillaume Lample.Llama2 (from The FAIR team of Meta AI) released with the paper Llama2: Open Foundation and Fine-Tuned Chat Models by Hugo Touvron, Louis Martin, Kevin Stone, Peter Albert, Amjad Almahairi, Yasmine Babaei, Nikolay Bashlykov, Soumya Batra, Prajjwal Bhargava, Shruti Bhosale, Dan Bikel, Lukas Blecher, Cristian Canton Ferrer, Moya Chen, Guillem Cucurull, David Esiobu, Jude Fernandes, Jeremy Fu, Wenyin Fu, Brian Fuller, Cynthia Gao, Vedanuj Goswami, Naman Goyal, Anthony Hartshorn, Saghar Hosseini, Rui Hou, Hakan Inan, Marcin Kardas, Viktor Kerkez Madian Khabsa, Isabel Kloumann, Artem Korenev, Punit Singh Koura, Marie-Anne Lachaux, Thibaut Lavril, Jenya Lee, Diana Liskovich, Yinghai Lu, Yuning Mao, Xavier Martinet, Todor Mihaylov, Pushka rMishra, Igor Molybog, Yixin Nie, Andrew Poulton, Jeremy Reizenstein, Rashi Rungta, Kalyan Saladi, Alan Schelten, Ruan Silva, Eric Michael Smith, Ranjan Subramanian, Xiaoqing EllenTan, Binh Tang, Ross Taylor, Adina Williams, Jian Xiang Kuan, Puxin Xu, Zheng Yan, Iliyan Zarov, Yuchen Zhang, Angela Fan, Melanie Kambadur, Sharan Narang, Aurelien Rodriguez, Robert Stojnic, Sergey Edunov, Thomas Scialom.Longformer (from AllenAI) released with the paper Longformer: The Long-Document Transformer by Iz Beltagy, Matthew E. Peters, Arman Cohan.LongT5 (from Google AI) released with the paper LongT5: Efficient Text-To-Text Transformer for Long Sequences by Mandy Guo, Joshua Ainslie, David Uthus, Santiago Ontanon, Jianmo Ni, Yun-Hsuan Sung, Yinfei Yang.LUKE (from Studio Ousia) released with the paper LUKE: Deep Contextualized Entity Representations with Entity-aware Self-attention by Ikuya Yamada, Akari Asai, Hiroyuki Shindo, Hideaki Takeda, Yuji Matsumoto.LXMERT (from UNC Chapel Hill) released with the paper LXMERT: Learning Cross-Modality Encoder Representations from Transformers for Open-Domain Question Answering by Hao Tan and Mohit Bansal.M-CTC-T (from Facebook) released with the paper Pseudo-Labeling For Massively Multilingual Speech Recognition by Loren Lugosch, Tatiana Likhomanenko, Gabriel Synnaeve, and Ronan Collobert.M2M100 (from Facebook) released with the paper Beyond English-Centric Multilingual Machine Translation by Angela Fan, Shruti Bhosale, Holger Schwenk, Zhiyi Ma, Ahmed El-Kishky, Siddharth Goyal, Mandeep Baines, Onur Celebi, Guillaume Wenzek, Vishrav Chaudhary, Naman Goyal, Tom Birch, Vitaliy Liptchinsky, Sergey Edunov, Edouard Grave, Michael Auli, Armand Joulin.MarianMT Machine translation models trained using OPUS data by Jörg Tiedemann. The Marian Framework is being developed by the Microsoft Translator Team.MarkupLM (from Microsoft Research Asia) released with the paper MarkupLM: Pre-training of Text and Markup Language for Visually-rich Document Understanding by Junlong Li, Yiheng Xu, Lei Cui, Furu Wei.Mask2Former (from FAIR and UIUC) released with the paper Masked-attention Mask Transformer for Universal Image Segmentation by Bowen Cheng, Ishan Misra, Alexander G. Schwing, Alexander Kirillov, Rohit Girdhar.MaskFormer (from Meta and UIUC) released with the paper Per-Pixel Classification is Not All You Need for Semantic Segmentation by Bowen Cheng, Alexander G. Schwing, Alexander Kirillov.MatCha (from Google AI) released with the paper MatCha: Enhancing Visual Language Pretraining with Math Reasoning and Chart Derendering by Fangyu Liu, Francesco Piccinno, Syrine Krichene, Chenxi Pang, Kenton Lee, Mandar Joshi, Yasemin Altun, Nigel Collier, Julian Martin Eisenschlos.mBART (from Facebook) released with the paper Multilingual Denoising Pre-training for Neural Machine Translation by Yinhan Liu, Jiatao Gu, Naman Goyal, Xian Li, Sergey Edunov, Marjan Ghazvininejad, Mike Lewis, Luke Zettlemoyer.mBART-50 (from Facebook) released with the paper Multilingual Translation with Extensible Multilingual Pretraining and Finetuning by Yuqing Tang, Chau Tran, Xian Li, Peng-Jen Chen, Naman Goyal, Vishrav Chaudhary, Jiatao Gu, Angela Fan.MEGA (from Meta/USC/CMU/SJTU) released with the paper Mega: Moving Average Equipped Gated Attention by Xuezhe Ma, Chunting Zhou, Xiang Kong, Junxian He, Liangke Gui, Graham Neubig, Jonathan May, and Luke Zettlemoyer.Megatron-BERT (from NVIDIA) released with the paper Megatron-LM: Training Multi-Billion Parameter Language Models Using Model Parallelism by Mohammad Shoeybi, Mostofa Patwary, Raul Puri, Patrick LeGresley, Jared Casper and Bryan Catanzaro.Megatron-GPT2 (from NVIDIA) released with the paper Megatron-LM: Training Multi-Billion Parameter Language Models Using Model Parallelism by Mohammad Shoeybi, Mostofa Patwary, Raul Puri, Patrick LeGresley, Jared Casper and Bryan Catanzaro.MGP-STR (from Alibaba Research) released with the paper Multi-Granularity Prediction for Scene Text Recognition by Peng Wang, Cheng Da, and Cong Yao.mLUKE (from Studio Ousia) released with the paper mLUKE: The Power of Entity Representations in Multilingual Pretrained Language Models by Ryokan Ri, Ikuya Yamada, and Yoshimasa Tsuruoka.MMS (from Facebook) released with the paper Scaling Speech Technology to 1,000+ Languages by Vineel Pratap, Andros Tjandra, Bowen Shi, Paden Tomasello, Arun Babu, Sayani Kundu, Ali Elkahky, Zhaoheng Ni, Apoorv Vyas, Maryam Fazel-Zarandi, Alexei Baevski, Yossi Adi, Xiaohui Zhang, Wei-Ning Hsu, Alexis Conneau, Michael Auli.MobileBERT (from CMU/Google Brain) released with the paper MobileBERT: a Compact Task-Agnostic BERT for Resource-Limited Devices by Zhiqing Sun, Hongkun Yu, Xiaodan Song, Renjie Liu, Yiming Yang, and Denny Zhou.MobileNetV1 (from Google Inc.) released with the paper MobileNets: Efficient Convolutional Neural Networks for Mobile Vision Applications by Andrew G. Howard, Menglong Zhu, Bo Chen, Dmitry Kalenichenko, Weijun Wang, Tobias Weyand, Marco Andreetto, Hartwig Adam.MobileNetV2 (from Google Inc.) released with the paper MobileNetV2: Inverted Residuals and Linear Bottlenecks by Mark Sandler, Andrew Howard, Menglong Zhu, Andrey Zhmoginov, Liang-Chieh Chen.MobileViT (from Apple) released with the paper MobileViT: Light-weight, General-purpose, and Mobile-friendly Vision Transformer by Sachin Mehta and Mohammad Rastegari.MobileViTV2 (from Apple) released with the paper Separable Self-attention for Mobile Vision Transformers by Sachin Mehta and Mohammad Rastegari.MPNet (from Microsoft Research) released with the paper MPNet: Masked and Permuted Pre-training for Language Understanding by Kaitao Song, Xu Tan, Tao Qin, Jianfeng Lu, Tie-Yan Liu.MPT (from MosaiML) released with the repository llm-foundry by the MosaicML NLP Team.MRA (from the University of Wisconsin - Madison) released with the paper Multi Resolution Analysis (MRA) for Approximate Self-Attention by Zhanpeng Zeng, Sourav Pal, Jeffery Kline, Glenn M Fung, Vikas Singh.MT5 (from Google AI) released with the paper mT5: A massively multilingual pre-trained text-to-text transformer by Linting Xue, Noah Constant, Adam Roberts, Mihir Kale, Rami Al-Rfou, Aditya Siddhant, Aditya Barua, Colin Raffel.MusicGen (from Meta) released with the paper Simple and Controllable Music Generation by Jade Copet, Felix Kreuk, Itai Gat, Tal Remez, David Kant, Gabriel Synnaeve, Yossi Adi and Alexandre Défossez.MVP (from RUC AI Box) released with the paper MVP: Multi-task Supervised Pre-training for Natural Language Generation by Tianyi Tang, Junyi Li, Wayne Xin Zhao and Ji-Rong Wen.NAT (from SHI Labs) released with the paper Neighborhood Attention Transformer by Ali Hassani, Steven Walton, Jiachen Li, Shen Li, and Humphrey Shi.Nezha (from Huawei Noah’s Ark Lab) released with the paper NEZHA: Neural Contextualized Representation for Chinese Language Understanding by Junqiu Wei, Xiaozhe Ren, Xiaoguang Li, Wenyong Huang, Yi Liao, Yasheng Wang, Jiashu Lin, Xin Jiang, Xiao Chen and Qun Liu.NLLB (from Meta) released with the paper No Language Left Behind: Scaling Human-Centered Machine Translation by the NLLB team.NLLB-MOE (from Meta) released with the paper No Language Left Behind: Scaling Human-Centered Machine Translation by the NLLB team.Nyströmformer (from the University of Wisconsin - Madison) released with the paper Nyströmformer: A Nyström-Based Algorithm for Approximating Self-Attention by Yunyang Xiong, Zhanpeng Zeng, Rudrasis Chakraborty, Mingxing Tan, Glenn Fung, Yin Li, Vikas Singh.OneFormer (from SHI Labs) released with the paper OneFormer: One Transformer to Rule Universal Image Segmentation by Jitesh Jain, Jiachen Li, MangTik Chiu, Ali Hassani, Nikita Orlov, Humphrey Shi.OpenLlama (from s-JoL) released in Open-Llama.OPT (from Meta AI) released with the paper OPT: Open Pre-trained Transformer Language Models by Susan Zhang, Stephen Roller, Naman Goyal, Mikel Artetxe, Moya Chen, Shuohui Chen et al.OWL-ViT (from Google AI) released with the paper Simple Open-Vocabulary Object Detection with Vision Transformers by Matthias Minderer, Alexey Gritsenko, Austin Stone, Maxim Neumann, Dirk Weissenborn, Alexey Dosovitskiy, Aravindh Mahendran, Anurag Arnab, Mostafa Dehghani, Zhuoran Shen, Xiao Wang, Xiaohua Zhai, Thomas Kipf, and Neil Houlsby.Pegasus (from Google) released with the paper PEGASUS: Pre-training with Extracted Gap-sentences for Abstractive Summarization by Jingqing Zhang, Yao Zhao, Mohammad Saleh and Peter J. Liu.PEGASUS-X (from Google) released with the paper Investigating Efficiently Extending Transformers for Long Input Summarization by Jason Phang, Yao Zhao, and Peter J. Liu.Perceiver IO (from Deepmind) released with the paper Perceiver IO: A General Architecture for Structured Inputs & Outputs by Andrew Jaegle, Sebastian Borgeaud, Jean-Baptiste Alayrac, Carl Doersch, Catalin Ionescu, David Ding, Skanda Koppula, Daniel Zoran, Andrew Brock, Evan Shelhamer, Olivier Hénaff, Matthew M. Botvinick, Andrew Zisserman, Oriol Vinyals, João Carreira.PhoBERT (from VinAI Research) released with the paper PhoBERT: Pre-trained language models for Vietnamese by Dat Quoc Nguyen and Anh Tuan Nguyen.Pix2Struct (from Google) released with the paper Pix2Struct: Screenshot Parsing as Pretraining for Visual Language Understanding by Kenton Lee, Mandar Joshi, Iulia Turc, Hexiang Hu, Fangyu Liu, Julian Eisenschlos, Urvashi Khandelwal, Peter Shaw, Ming-Wei Chang, Kristina Toutanova.PLBart (from UCLA NLP) released with the paper Unified Pre-training for Program Understanding and Generation by Wasi Uddin Ahmad, Saikat Chakraborty, Baishakhi Ray, Kai-Wei Chang.PoolFormer (from Sea AI Labs) released with the paper MetaFormer is Actually What You Need for Vision by Yu, Weihao and Luo, Mi and Zhou, Pan and Si, Chenyang and Zhou, Yichen and Wang, Xinchao and Feng, Jiashi and Yan, Shuicheng.ProphetNet (from Microsoft Research) released with the paper ProphetNet: Predicting Future N-gram for Sequence-to-Sequence Pre-training by Yu Yan, Weizhen Qi, Yeyun Gong, Dayiheng Liu, Nan Duan, Jiusheng Chen, Ruofei Zhang and Ming Zhou.PVT (from Nanjing University, The University of Hong Kong etc.) released with the paper Pyramid Vision Transformer: A Versatile Backbone for Dense Prediction without Convolutions by Wenhai Wang, Enze Xie, Xiang Li, Deng-Ping Fan, Kaitao Song, Ding Liang, Tong Lu, Ping Luo, Ling Shao.QDQBert (from NVIDIA) released with the paper Integer Quantization for Deep Learning Inference: Principles and Empirical Evaluation by Hao Wu, Patrick Judd, Xiaojie Zhang, Mikhail Isaev and Paulius Micikevicius.RAG (from Facebook) released with the paper Retrieval-Augmented Generation for Knowledge-Intensive NLP Tasks by Patrick Lewis, Ethan Perez, Aleksandara Piktus, Fabio Petroni, Vladimir Karpukhin, Naman Goyal, Heinrich Küttler, Mike Lewis, Wen-tau Yih, Tim Rocktäschel, Sebastian Riedel, Douwe Kiela.REALM (from Google Research) released with the paper REALM: Retrieval-Augmented Language Model Pre-Training by Kelvin Guu, Kenton Lee, Zora Tung, Panupong Pasupat and Ming-Wei Chang.Reformer (from Google Research) released with the paper Reformer: The Efficient Transformer by Nikita Kitaev, Łukasz Kaiser, Anselm Levskaya.RegNet (from META Platforms) released with the paper Designing Network Design Space by Ilija Radosavovic, Raj Prateek Kosaraju, Ross Girshick, Kaiming He, Piotr Dollár.RemBERT (from Google Research) released with the paper Rethinking embedding coupling in pre-trained language models by Hyung Won Chung, Thibault Févry, Henry Tsai, M. Johnson, Sebastian Ruder.ResNet (from Microsoft Research) released with the paper Deep Residual Learning for Image Recognition by Kaiming He, Xiangyu Zhang, Shaoqing Ren, Jian Sun.RoBERTa (from Facebook), released together with the paper RoBERTa: A Robustly Optimized BERT Pretraining Approach by Yinhan Liu, Myle Ott, Naman Goyal, Jingfei Du, Mandar Joshi, Danqi Chen, Omer Levy, Mike Lewis, Luke Zettlemoyer, Veselin Stoyanov.RoBERTa-PreLayerNorm (from Facebook) released with the paper fairseq: A Fast, Extensible Toolkit for Sequence Modeling by Myle Ott, Sergey Edunov, Alexei Baevski, Angela Fan, Sam Gross, Nathan Ng, David Grangier, Michael Auli.RoCBert (from WeChatAI) released with the paper RoCBert: Robust Chinese Bert with Multimodal Contrastive Pretraining by HuiSu, WeiweiShi, XiaoyuShen, XiaoZhou, TuoJi, JiaruiFang, JieZhou.RoFormer (from ZhuiyiTechnology), released together with the paper RoFormer: Enhanced Transformer with Rotary Position Embedding by Jianlin Su and Yu Lu and Shengfeng Pan and Bo Wen and Yunfeng Liu.RWKV (from Bo Peng), released on this repo by Bo Peng.SegFormer (from NVIDIA) released with the paper SegFormer: Simple and Efficient Design for Semantic Segmentation with Transformers by Enze Xie, Wenhai Wang, Zhiding Yu, Anima Anandkumar, Jose M. Alvarez, Ping Luo.Segment Anything (from Meta AI) released with the paper Segment Anything by Alexander Kirillov, Eric Mintun, Nikhila Ravi, Hanzi Mao, Chloe Rolland, Laura Gustafson, Tete Xiao, Spencer Whitehead, Alex Berg, Wan-Yen Lo, Piotr Dollar, Ross Girshick.SEW (from ASAPP) released with the paper Performance-Efficiency Trade-offs in Unsupervised Pre-training for Speech Recognition by Felix Wu, Kwangyoun Kim, Jing Pan, Kyu Han, Kilian Q. Weinberger, Yoav Artzi.SEW-D (from ASAPP) released with the paper Performance-Efficiency Trade-offs in Unsupervised Pre-training for Speech Recognition by Felix Wu, Kwangyoun Kim, Jing Pan, Kyu Han, Kilian Q. Weinberger, Yoav Artzi.SpeechT5 (from Microsoft Research) released with the paper SpeechT5: Unified-Modal Encoder-Decoder Pre-Training for Spoken Language Processing by Junyi Ao, Rui Wang, Long Zhou, Chengyi Wang, Shuo Ren, Yu Wu, Shujie Liu, Tom Ko, Qing Li, Yu Zhang, Zhihua Wei, Yao Qian, Jinyu Li, Furu Wei.SpeechToTextTransformer (from Facebook), released together with the paper fairseq S2T: Fast Speech-to-Text Modeling with fairseq by Changhan Wang, Yun Tang, Xutai Ma, Anne Wu, Dmytro Okhonko, Juan Pino.SpeechToTextTransformer2 (from Facebook), released together with the paper Large-Scale Self- and Semi-Supervised Learning for Speech Translation by Changhan Wang, Anne Wu, Juan Pino, Alexei Baevski, Michael Auli, Alexis Conneau.Splinter (from Tel Aviv University), released together with the paper Few-Shot Question Answering by Pretraining Span Selection by Ori Ram, Yuval Kirstain, Jonathan Berant, Amir Globerson, Omer Levy.SqueezeBERT (from Berkeley) released with the paper SqueezeBERT: What can computer vision teach NLP about efficient neural networks? by Forrest N. Iandola, Albert E. Shaw, Ravi Krishna, and Kurt W. Keutzer.SwiftFormer (from MBZUAI) released with the paper SwiftFormer: Efficient Additive Attention for Transformer-based Real-time Mobile Vision Applications by Abdelrahman Shaker, Muhammad Maaz, Hanoona Rasheed, Salman Khan, Ming-Hsuan Yang, Fahad Shahbaz Khan.Swin Transformer (from Microsoft) released with the paper Swin Transformer: Hierarchical Vision Transformer using Shifted Windows by Ze Liu, Yutong Lin, Yue Cao, Han Hu, Yixuan Wei, Zheng Zhang, Stephen Lin, Baining Guo.Swin Transformer V2 (from Microsoft) released with the paper Swin Transformer V2: Scaling Up Capacity and Resolution by Ze Liu, Han Hu, Yutong Lin, Zhuliang Yao, Zhenda Xie, Yixuan Wei, Jia Ning, Yue Cao, Zheng Zhang, Li Dong, Furu Wei, Baining Guo.Swin2SR (from University of Würzburg) released with the paper Swin2SR: SwinV2 Transformer for Compressed Image Super-Resolution and Restoration by Marcos V. Conde, Ui-Jin Choi, Maxime Burchi, Radu Timofte.SwitchTransformers (from Google) released with the paper Switch Transformers: Scaling to Trillion Parameter Models with Simple and Efficient Sparsity by William Fedus, Barret Zoph, Noam Shazeer.T5 (from Google AI) released with the paper Exploring the Limits of Transfer Learning with a Unified Text-to-Text Transformer by Colin Raffel and Noam Shazeer and Adam Roberts and Katherine Lee and Sharan Narang and Michael Matena and Yanqi Zhou and Wei Li and Peter J. Liu.T5v1.1 (from Google AI) released in the repository google-research/text-to-text-transfer-transformer by Colin Raffel and Noam Shazeer and Adam Roberts and Katherine Lee and Sharan Narang and Michael Matena and Yanqi Zhou and Wei Li and Peter J. Liu.Table Transformer (from Microsoft Research) released with the paper PubTables-1M: Towards Comprehensive Table Extraction From Unstructured Documents by Brandon Smock, Rohith Pesala, Robin Abraham.TAPAS (from Google AI) released with the paper TAPAS: Weakly Supervised Table Parsing via Pre-training by Jonathan Herzig, Paweł Krzysztof Nowak, Thomas Müller, Francesco Piccinno and Julian Martin Eisenschlos.TAPEX (from Microsoft Research) released with the paper TAPEX: Table Pre-training via Learning a Neural SQL Executor by Qian Liu, Bei Chen, Jiaqi Guo, Morteza Ziyadi, Zeqi Lin, Weizhu Chen, Jian-Guang Lou.Time Series Transformer (from HuggingFace).TimeSformer (from Facebook) released with the paper Is Space-Time Attention All You Need for Video Understanding? by Gedas Bertasius, Heng Wang, Lorenzo Torresani.Trajectory Transformer (from the University of California at Berkeley) released with the paper Offline Reinforcement Learning as One Big Sequence Modeling Problem by Michael Janner, Qiyang Li, Sergey LevineTransformer-XL (from Google/CMU) released with the paper Transformer-XL: Attentive Language Models Beyond a Fixed-Length Context by Zihang Dai*, Zhilin Yang*, Yiming Yang, Jaime Carbonell, Quoc V. Le, Ruslan Salakhutdinov.TrOCR (from Microsoft), released together with the paper TrOCR: Transformer-based Optical Character Recognition with Pre-trained Models by Minghao Li, Tengchao Lv, Lei Cui, Yijuan Lu, Dinei Florencio, Cha Zhang, Zhoujun Li, Furu Wei.TVLT (from UNC Chapel Hill) released with the paper TVLT: Textless Vision-Language Transformer by Zineng Tang, Jaemin Cho, Yixin Nie, Mohit Bansal.UL2 (from Google Research) released with the paper Unifying Language Learning Paradigms by Yi Tay, Mostafa Dehghani, Vinh Q. Tran, Xavier Garcia, Dara Bahri, Tal Schuster, Huaixiu Steven Zheng, Neil Houlsby, Donald MetzlerUMT5 (from Google Research) released with the paper UniMax: Fairer and More Effective Language Sampling for Large-Scale Multilingual Pretraining by Hyung Won Chung, Xavier Garcia, Adam Roberts, Yi Tay, Orhan Firat, Sharan Narang, Noah Constant.UniSpeech (from Microsoft Research) released with the paper UniSpeech: Unified Speech Representation Learning with Labeled and Unlabeled Data by Chengyi Wang, Yu Wu, Yao Qian, Kenichi Kumatani, Shujie Liu, Furu Wei, Michael Zeng, Xuedong Huang.UniSpeechSat (from Microsoft Research) released with the paper UNISPEECH-SAT: UNIVERSAL SPEECH REPRESENTATION LEARNING WITH SPEAKER AWARE PRE-TRAINING by Sanyuan Chen, Yu Wu, Chengyi Wang, Zhengyang Chen, Zhuo Chen, Shujie Liu, Jian Wu, Yao Qian, Furu Wei, Jinyu Li, Xiangzhan Yu.UPerNet (from Peking University) released with the paper Unified Perceptual Parsing for Scene Understanding by Tete Xiao, Yingcheng Liu, Bolei Zhou, Yuning Jiang, Jian Sun.VAN (from Tsinghua University and Nankai University) released with the paper Visual Attention Network by Meng-Hao Guo, Cheng-Ze Lu, Zheng-Ning Liu, Ming-Ming Cheng, Shi-Min Hu.VideoMAE (from Multimedia Computing Group, Nanjing University) released with the paper VideoMAE: Masked Autoencoders are Data-Efficient Learners for Self-Supervised Video Pre-Training by Zhan Tong, Yibing Song, Jue Wang, Limin Wang.ViLT (from NAVER AI Lab/Kakao Enterprise/Kakao Brain) released with the paper ViLT: Vision-and-Language Transformer Without Convolution or Region Supervision by Wonjae Kim, Bokyung Son, Ildoo Kim.Vision Transformer (ViT) (from Google AI) released with the paper An Image is Worth 16x16 Words: Transformers for Image Recognition at Scale by Alexey Dosovitskiy, Lucas Beyer, Alexander Kolesnikov, Dirk Weissenborn, Xiaohua Zhai, Thomas Unterthiner, Mostafa Dehghani, Matthias Minderer, Georg Heigold, Sylvain Gelly, Jakob Uszkoreit, Neil Houlsby.VisualBERT (from UCLA NLP) released with the paper VisualBERT: A Simple and Performant Baseline for Vision and Language by Liunian Harold Li, Mark Yatskar, Da Yin, Cho-Jui Hsieh, Kai-Wei Chang.ViT Hybrid (from Google AI) released with the paper An Image is Worth 16x16 Words: Transformers for Image Recognition at Scale by Alexey Dosovitskiy, Lucas Beyer, Alexander Kolesnikov, Dirk Weissenborn, Xiaohua Zhai, Thomas Unterthiner, Mostafa Dehghani, Matthias Minderer, Georg Heigold, Sylvain Gelly, Jakob Uszkoreit, Neil Houlsby.ViTMAE (from Meta AI) released with the paper Masked Autoencoders Are Scalable Vision Learners by Kaiming He, Xinlei Chen, Saining Xie, Yanghao Li, Piotr Dollár, Ross Girshick.ViTMSN (from Meta AI) released with the paper Masked Siamese Networks for Label-Efficient Learning by Mahmoud Assran, Mathilde Caron, Ishan Misra, Piotr Bojanowski, Florian Bordes, Pascal Vincent, Armand Joulin, Michael Rabbat, Nicolas Ballas.ViViT (from Google Research) released with the paper ViViT: A Video Vision Transformer by Anurag Arnab, Mostafa Dehghani, Georg Heigold, Chen Sun, Mario Lučić, Cordelia Schmid.Wav2Vec2 (from Facebook AI) released with the paper wav2vec 2.0: A Framework for Self-Supervised Learning of Speech Representations by Alexei Baevski, Henry Zhou, Abdelrahman Mohamed, Michael Auli.Wav2Vec2-Conformer (from Facebook AI) released with the paper FAIRSEQ S2T: Fast Speech-to-Text Modeling with FAIRSEQ by Changhan Wang, Yun Tang, Xutai Ma, Anne Wu, Sravya Popuri, Dmytro Okhonko, Juan Pino.Wav2Vec2Phoneme (from Facebook AI) released with the paper Simple and Effective Zero-shot Cross-lingual Phoneme Recognition by Qiantong Xu, Alexei Baevski, Michael Auli.WavLM (from Microsoft Research) released with the paper WavLM: Large-Scale Self-Supervised Pre-Training for Full Stack Speech Processing by Sanyuan Chen, Chengyi Wang, Zhengyang Chen, Yu Wu, Shujie Liu, Zhuo Chen, Jinyu Li, Naoyuki Kanda, Takuya Yoshioka, Xiong Xiao, Jian Wu, Long Zhou, Shuo Ren, Yanmin Qian, Yao Qian, Jian Wu, Michael Zeng, Furu Wei.Whisper (from OpenAI) released with the paper Robust Speech Recognition via Large-Scale Weak Supervision by Alec Radford, Jong Wook Kim, Tao Xu, Greg Brockman, Christine McLeavey, Ilya Sutskever.X-CLIP (from Microsoft Research) released with the paper Expanding Language-Image Pretrained Models for General Video Recognition by Bolin Ni, Houwen Peng, Minghao Chen, Songyang Zhang, Gaofeng Meng, Jianlong Fu, Shiming Xiang, Haibin Ling.X-MOD (from Meta AI) released with the paper Lifting the Curse of Multilinguality by Pre-training Modular Transformers by Jonas Pfeiffer, Naman Goyal, Xi Lin, Xian Li, James Cross, Sebastian Riedel, Mikel Artetxe.XGLM (From Facebook AI) released with the paper Few-shot Learning with Multilingual Language Models by Xi Victoria Lin, Todor Mihaylov, Mikel Artetxe, Tianlu Wang, Shuohui Chen, Daniel Simig, Myle Ott, Naman Goyal, Shruti Bhosale, Jingfei Du, Ramakanth Pasunuru, Sam Shleifer, Punit Singh Koura, Vishrav Chaudhary, Brian O'Horo, Jeff Wang, Luke Zettlemoyer, Zornitsa Kozareva, Mona Diab, Veselin Stoyanov, Xian Li.XLM (from Facebook) released together with the paper Cross-lingual Language Model Pretraining by Guillaume Lample and Alexis Conneau.XLM-ProphetNet (from Microsoft Research) released with the paper ProphetNet: Predicting Future N-gram for Sequence-to-Sequence Pre-training by Yu Yan, Weizhen Qi, Yeyun Gong, Dayiheng Liu, Nan Duan, Jiusheng Chen, Ruofei Zhang and Ming Zhou.XLM-RoBERTa (from Facebook AI), released together with the paper Unsupervised Cross-lingual Representation Learning at Scale by Alexis Conneau*, Kartikay Khandelwal*, Naman Goyal, Vishrav Chaudhary, Guillaume Wenzek, Francisco Guzmán, Edouard Grave, Myle Ott, Luke Zettlemoyer and Veselin Stoyanov.XLM-RoBERTa-XL (from Facebook AI), released together with the paper Larger-Scale Transformers for Multilingual Masked Language Modeling by Naman Goyal, Jingfei Du, Myle Ott, Giri Anantharaman, Alexis Conneau.XLM-V (from Meta AI) released with the paper XLM-V: Overcoming the Vocabulary Bottleneck in Multilingual Masked Language Models by Davis Liang, Hila Gonen, Yuning Mao, Rui Hou, Naman Goyal, Marjan Ghazvininejad, Luke Zettlemoyer, Madian Khabsa.XLNet (from Google/CMU) released with the paper ​XLNet: Generalized Autoregressive Pretraining for Language Understanding by Zhilin Yang*, Zihang Dai*, Yiming Yang, Jaime Carbonell, Ruslan Salakhutdinov, Quoc V. Le.XLS-R (from Facebook AI) released with the paper XLS-R: Self-supervised Cross-lingual Speech Representation Learning at Scale by Arun Babu, Changhan Wang, Andros Tjandra, Kushal Lakhotia, Qiantong Xu, Naman Goyal, Kritika Singh, Patrick von Platen, Yatharth Saraf, Juan Pino, Alexei Baevski, Alexis Conneau, Michael Auli.XLSR-Wav2Vec2 (from Facebook AI) released with the paper Unsupervised Cross-Lingual Representation Learning For Speech Recognition by Alexis Conneau, Alexei Baevski, Ronan Collobert, Abdelrahman Mohamed, Michael Auli.YOLOS (from Huazhong University of Science & Technology) released with the paper You Only Look at One Sequence: Rethinking Transformer in Vision through Object Detection by Yuxin Fang, Bencheng Liao, Xinggang Wang, Jiemin Fang, Jiyang Qi, Rui Wu, Jianwei Niu, Wenyu Liu.YOSO (from the University of Wisconsin - Madison) released with the paper You Only Sample (Almost) Once: Linear Cost Self-Attention Via Bernoulli Sampling by Zhanpeng Zeng, Yunyang Xiong, Sathya N. Ravi, Shailesh Acharya, Glenn Fung, Vikas Singh.Want to contribute a new model? We have added a detailed guide and templates to guide you in the process of adding a new model. You can find them in the templates folder of the repository. Be sure to check the contributing guidelines and contact the maintainers or open an issue to collect feedbacks before starting your PR.To check if each model has an implementation in Flax, PyTorch or TensorFlow, or has an associated tokenizer backed by the 🤗 Tokenizers library, refer to this table.These implementations have been tested on several datasets (see the example scripts) and should match the performance of the original implementations. You can find more details on performance in the Examples section of the documentation.Learn moreSectionDescriptionDocumentationFull API documentation and tutorialsTask summaryTasks supported by 🤗 TransformersPreprocessing tutorialUsing the Tokenizer class to prepare data for the modelsTraining and fine-tuningUsing the models provided by 🤗 Transformers in a PyTorch/TensorFlow training loop and the Trainer APIQuick tour: Fine-tuning/usage scriptsExample scripts for fine-tuning models on a wide range of tasksModel sharing and uploadingUpload and share your fine-tuned models with the communityCitationWe now have a paper you can cite for the 🤗 Transformers library:@inproceedings{wolf-etal-2020-transformers,    title = \""Transformers: State-of-the-Art Natural Language Processing\"",    author = \""Thomas Wolf and Lysandre Debut and Victor Sanh and Julien Chaumond and Clement Delangue and Anthony Moi and Pierric Cistac and Tim Rault and Rémi Louf and Morgan Funtowicz and Joe Davison and Sam Shleifer and Patrick von Platen and Clara Ma and Yacine Jernite and Julien Plu and Canwen Xu and Teven Le Scao and Sylvain Gugger and Mariama Drame and Quentin Lhoest and Alexander M. Rush\"",    booktitle = \""Proceedings of the 2020 Conference on Empirical Methods in Natural Language Processing: System Demonstrations\"",    month = oct,    year = \""2020\"",    address = \""Online\"",    publisher = \""Association for Computational Linguistics\"",    url = \""https://www.aclweb.org/anthology/2020.emnlp-demos.6\"",    pages = \""38--45\""}"
84,84,pallets/flask,https://github.com/pallets/flask/blob/main/README.rst,Python,"FlaskFlask is a lightweight WSGI web application framework. It is designedto make getting started quick and easy, with the ability to scale up tocomplex applications. It began as a simple wrapper around Werkzeugand Jinja and has become one of the most popular Python webapplication frameworks.Flask offers suggestions, but doesn't enforce any dependencies orproject layout. It is up to the developer to choose the tools andlibraries they want to use. There are many extensions provided by thecommunity that make adding new functionality easy.InstallingInstall and update using pip:$ pip install -U FlaskA Simple Example# save this as app.pyfrom flask import Flaskapp = Flask(__name__)@app.route(\""/\"")def hello():    return \""Hello, World!\""$ flask run  * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)ContributingFor guidance on setting up a development environment and how to make acontribution to Flask, see the contributing guidelines.DonateThe Pallets organization develops and supports Flask and the librariesit uses. In order to grow the community of contributors and users, andallow the maintainers to devote more time to the projects, pleasedonate today.LinksDocumentation: https://flask.palletsprojects.com/Changes: https://flask.palletsprojects.com/changes/PyPI Releases: https://pypi.org/project/Flask/Source Code: https://github.com/pallets/flask/Issue Tracker: https://github.com/pallets/flask/issues/Chat: https://discord.gg/pallets"
85,85,Ebazhanov/linkedin-skill-assessments-quizzes,https://github.com/Ebazhanov/linkedin-skill-assessments-quizzes/blob/main/README.md,Python,"Linkedin Skill assessments - Answers⚠️ DISCLAIMER: The owners of this repository are not liable for any illegal usage of the content provided in this repository. The content is provided for informational and educational purposes only, and any actions taken by users of this repository are the responsibility of the user. By accessing this repository, you agree to hold the owners harmless from any claims, damages, or expenses arising from the use of the information provided.[ Go to see the last contributor ]🙏 PLEASEAlways add explanation (or reference link) to your answers. Use online grammar checker.That would help anyone to better learn new concepts!🎉 AnnouncementsColumn Translation have links to quizzes in different languages like Es, Fr, It and De.If you want to meet each other or discuss quiz related problems or maybe ask for skills endorsement just join the Discord chat.Playground before taking quiz using:MD2Practice (Web App)Skill Assessments Quizzes (Web App)LinkedIn Quizzed with Kodyfire (Terminal)Want to contribute? Here is the source code.❓ Need help?Open new issue🔥 Open in VS Code view here or thereTable of ContentsLinkedin-quiz-questionsPassed/FailedTranslated  in ...QuestionsAnswersYour resource for answers. In case you have doubts please contact this person or add them to review your PR.Accounting❗needs updating  5049@tujinwei, @mervynteo, @johnfelipeAdobe-Acrobat  2722Adobe-Illustrator❗needs updating  7674Adobe-InDesign❗needs updating  4240Adobe-Lightroom❗needs updating  2020Adobe-Photoshop❗needs updating  9393@declarckAdobe Premiere Pro  4836Adobe XD  1613After Effects❗needs updating  2413Agile Methodologies❗needs updating  116116@its0x08Android  7272@surajsahani, @mr-shoxruxbek, @ItSNeverLateAngular  7965@vanekbr, @aamita96ArcGIS Products55AutoCAD❗needs updating  7775@djayorAutodesk Fusion 360❗needs updating  3725@djayor, @tm-sanjayAutodesk Maya3030@marifogluAWS  9999@jokerkeny, @Amsal1AWS-Lambda❗needs updating  5149Bash  7877@D4RIO, @Amsal1C#6161@LiviuSosu, @RamonMartinezNieto, @declarckC++❗needs updating7373@Amsal1, @Amsal1C (Programming Language)8383@makifay, @Amsal1, @its0x08CSS122116@BHARGAVPATEL1244Cybersecurity❗needs updating10196Django7171@PROCW.NET Framework6359@declarckEclipse❗needs updating3628Front-end Development6868@vanekbr, @ShankS3, @declarckGit134134@Emanuele-emGo (Programming Language)4040@ruslanbes, @monkrusGoogle Ads2925Google Analytics8282Google Cloud Platform (GCP)5250@antra0497Hadoop7154HTML129128@declarckIT Operations5454@asahioceanJava130130@sumanas27, @ruslanbes, @PROCWJavascript131131@taletski, @PROCW, @msteiner96, @declarckjQuery8477@declarckJSON❗needs updating8786@iHamzaKhanzadaKeynote140Kotlin7878@ItSNeverLate, @HusseinhjLinux8278@D4RIO, @Amsal1Logic Pro8278Machine Learning9898@aaronwangj, @antra0497MATLAB7070@tm-sanjayMaven5350Microsoft Access3028@drmegalomaniacMicrosoft Azure5553@tomtreffke, @ziasistaniMicrosoft Excel❗needs updating109107@gazihasanrahmanMicrosoft Outlook7956Microsoft Power Automate1402@mervynteoMicrosoft Power BI8180@vittorio-giattiMicrosoft Power Point8577@ckulloMicrosoft Project❗needs updating4443Microsoft Word❗needs updating7877MongoDB7777MySQL9797@ruslanbesnode.js7976@pbachmanNoSQL5655objective-c4038OOP10282@declarck, @gaurovgiriPHP8979@ruslanbes, @msteiner96Pro Tools22Python176176@tik9, @Amsal1, @declarck, @TSG405QuickBooks❗needs updating6739R5252@gregglindReact.js100100@RobTables @bandinoplaREST API6565Revit❗needs updating140Ruby on Rails5959@gudataRust3232@BobbyByrne @Emanuele-emScala5248Search Engine Optimization (SEO)8181SharePoint❗needs updating5338Sketchup22SOLIDWORKS❗needs updating5757@BHARGAVPATEL1244Spring Framework6767Swift6767Transact-SQL (T-SQL)4542@beefydog, @BenVlodgiUnity❗needs updating4746@uno-sebastianVisual Basic for Applications (VBA)❗needs updating3634@AdamKaczor6250Visio3535Windows Server6857WordPress8073@ruslanbes, @Amsal1XML4342@ruslanbesContributors ✨Thanks goes to these wonderful people (emoji key):            Evgenii💻 🖋      Sergei Stadnik💻 🔍 🤔 📖      Santhosh💻      Jacob Dsa💻 🖋      Aaron Meese💻 🖋      arqarq💻 🖋      Amit Yadav💻 🖋              Javokhir Nazarov💻 🖋      saurav kumar🖋      Chetan🖋      Amir Hossein Shekari🎨 🖋 💻      SergDaut🎨      Nilotpal Pramanik🎨 💻 🖋 💼 📖 🔣 💡      Abhishek Kumar🎨              Monu Gupta🎨      KARTIKEYA GUPTA💻 🖋      kenkyusha💻 🖋      juandavidtowers💻 🖋      cyber-netics💻 🖋      jtrisw💻 🖋      Renato Regalado💻 🖋              Matthew💻 🖋      Jan S.💻 🖋      Manoli💻 🖋      Faraz tanveer💻 🖋      mohnishkarri💻 🖋 🎨      andyzhu💻 🖋      Vishal Kushwah💻 🖋              Yurii Yakymenko💻 🖋      Swetabh Suman💻 🖋      AJAY DANDGE💻 🖋      Mehmet Yesin🎨      Lok Chun Wai🎨      Adria de Juan🎨      GL-Man🎨              Jheel Patel🎨      Sameer Waskar🎨      Alexander Andrews🎨      Alexander Maxwell🎨      Slava🎨      Mayur Khatri🎨      Mascantosh💻 🖋 📢 🤔              Kivanc Enes🎨      Ritika Das🎨      Zer07793🎨      Andrew Cheung🎨      Sadha🎨      tainenko🎨 💻      github-star-coder🎨              Danilo Oliveira🎨      lordeko🎨      Shubham Kumar🎨 💻      testtree🎨      Cheryl Murphy🎨 💻      Bipin Thomas🎨      Abdulrahman Hisham🎨              Dakshitha Dissanayaka🎨      BADR KACIMI🎨      Alex Wang🎨      Maxim🎨      GordonGrant🎨 💻      Ephrem Demelash🎨      JonOrcutt🎨              topdev10🎨      cookwellwebsite🎨      xren935🎨      Nemo Frenkel🎨      MD SAIF ALAM🎨      Boris López Araya🎨      Larry Chiem🎨              Muhammad Bilal Ilyas🎨      AliMilani🎨 💻      Suraj Sahani🎨      FlyingSquirrel🎨      Erick Tijero🎨      Jaskaran Kukreja🎨      MichaelL🎨              MagicLegend🎨      Dereck Bearsong🎨      Pappu Kumar Pashi🎨      Venkata Kishore Tavva🎨      Rafat Touqir Rafsun🎨      Snehesh Dutta🎨      Timo Körner🎨 💻              alexxxan🎨      GGJason🎨      LeeAnna Ewing🎨 🤔      kamal Jyotwal🎨      Bob-Johns🎨 💻 🖋      yunussalmanlyit🎨 💻      chilcot🎨 💻              Jacky Li💻 🖋 🎨      Sarthak Trivedi🎨      Ayush Aggarwal🎨 💻      Nic Ballarini🎨      Luigi Zambetti🎨 💻      govindhaswin🎨      Addy Roy💻 🎨              Akshat Tamrakar🎨 💻      Sai Bhargava Ramu🎨      Gurkan💻      Spencer Hayes-Laverdiere💻      Aniket Soni💻      tanmay5792💻      Dina Taklit💻 🎨 🖋              Dushyant Singh💻      Ravi Prakash Singh💻      Nihal Joshi💻      Guy Klages💻      Arvind🎨 💻      mujeeb91💻      joserca🎨 💻              Prateek Agrawal💻      Teoh Tze Chuin(サラ)💻 🎨      Jayant Jain💻      Ayush Sahu💻      Hridya Krishna R💻 🎨      Rahul Bali💻 🎨      S.ZHeng🎨 💻 💼              Shriya Madan🎨 💻      mahalrupi🎨      Lucas Lermagne🎨      Jeff Deutsch🎨 💻      Betoxx1🎨      Wingman4l7🎨      Martin Espericueta🎨              Mh-Tahir🎨      Zdravko Šplajt🎨 💻      Ms3105🎨 💻 🖋      Ambika Sidhesware💻      mundoguero💻      Darkus24🖋      Sou-786🖋 🎨              Banurekha🖋      ShiraStarL🎨      Ilya Komarov🎨      DemigodMs🖋 📖      Mekha Hridya🎨 🔍      Andrey Safonov🎨 🔍      Tommaso🎨 💻              Jessica Salbert💻 🎨      JAYANTH DOLAI💻 🎨      silverstroom💻 🎨 💼      Furkan Sayım💻 🎨      Sukumar Chandrasekaran🎨      Yejin Park🎨 💻      Ali Nooshabadi🎨 💻              imitavor🎨 💻      Salih Kilicli🎨 💻      Marcelo Meneses🎨 💻      Anton Krekotun🎨 🚧 🖋 💻 📖 💼      Arnav Sarma💻 💡 🎨      meghatiku💻 🎨      Anshu Trivedi🎨              Taylor Dorsett💻 🖋 🎨      Havit Rovik💻      pushpapune💻 🎨      Ramtin Radfar🎨 🤔 💼 💵 💻 🖋 💬      Abdulmajeed Isa💻 🎨      vikassaxena02🎨      RobTables🎨 💻 💼              Daniel🎨 💻 💼 🔍      Zahid Ali💻 🎨      Chad Chai💻 🎨      Marco Biedermann💻 🎨 💼 🤔      Srinidhi Murthy🎨      Miao Cai💻 🎨      Dionicio Diaz🎨 💻              Mir Monoarul Alam🎨      Shawn Ohn💻 🎨      Amanbolat Balabekov🎨 💻      black-mamba-code💻      Jian-forks🎨 💻      shivani patel🎨      Akash Chowrasia🎨              yairg98🎨      Jay Gajjar🎨      coolerbooler💻      Md Zinnatul Islam Morol🎨      shresthashok550🎨 📖      Alan Pallath📖      Adrian Wong💻              vsDizzy💻 🎨      Frex Cuadillera🎨 💻      ashish570💻 🎨      ruchpeanuts💻 🎨      Artmasque🎨 💻      Amirhossein Mojiri Foroushani🎨      for💻 🎨              Luke🎨 💻      Hector Espinoza🎨      Adrián Buenfil🎨 💻      Amit Kumar🎨      schoppfe🎨 💻      Sofiyal C🎨 💻      spitlisk💻 🎨              PRAVIN SHARMA🎨      NIDZAAA1🎨 💻      John Mai🎨 💻      kimsoyeong🎨      Dona Ghosh💻      Ryan Hill🎨 💻      j42z🎨 💻              Ashish Sangale🎨 💻      Derek Yang🎨 💻      mohsinmsm🎨 💻      Gokulkrish2302💻      Bhaavishek💻 🎨      Louis Liao🎨      sengc92🎨 💻              Alex Marvin🎨      Balkrishna Bhatt🎨 💻      Evaldas Lavrinovičius🎨 💻      Adam Erchegyi🎨 💻      Truman Hung🎨 💻      rzamora11🎨      gaurav0224🎨              Lee GyeongJun🎨      Mirek🎨 💻      surajm245🎨      ArisLaode🎨 💻      RaviDhoriya🎨 💻      sarai-84🎨 💻      Vishnu🎨 💻              Muhammad Minhaj💻      Chandrika Deb🎨 💻      Gitgit101-bit💻 🎨      Hedi Sellami💻 🎨      saurabhvaish93💻 🎨      Nikola Begovic💻 🎨      Wang💻 🎨              Manuel Eusebio de Paz Carmona🎨      Basim Al-Jawahery🎨 💻      RAJA AHMED🎨 💻      Abhik Lodh💻      Md. Pial Ahamed💻 🎨      Hassan Shahzad💻 🎨      Christian Sosa Gago💻              Hasnain Rasheed💻 🎨      T-Radford💻      dahiyashish💻 🎨      RahulSharma468💻 🎨      Jumpod Plekhongthu💻 🎨      Thomas Young-Audet💻 🎨      VinayagamBabu💻 🎨              Deniz Koç💻 🎨      Azhar Khan💻 🎨 🖋 📖 🔣 🚧      Jacob Short💻 🎨      Uchimura85💻 🎨      Leo Nugraha💻 🎨 📖      Mujtaba Mehdi📖 🖋      Jim-ds💻 🎨              Sreehari K💻 🎨      Florian Martinez💻 🎨      Aaron💻 🎨      apoage🎨      Ignacio Guillermo Martinez 💻 🎨      AirlineDog🎨 💻      Mekel🎨 💻              hmosharrof🎨 💻      Ben Emamian💻 🎨      babeshark💻 🎨      Leonardo Jaques💻 🎨      Stefanos Apkarian💻 🎨      Ayhan Albayrak💻 🎨      KidusMT💻 🎨              hectormarroquin20💻 🎨      Edelweiss35💻 🎨      MihaiD💻 🎨      AnveshReddyAnnem💻 🎨      Hyunjae Park💻 🎨      Rajiv Albino💻 🎨      Atishay💻              Yusuf Naheem🎨      Windu🎨 💻      Superv1sor💻 🎨      Karine (:🎨 💻      Eduard Pech🎨 💻      jjeshwani🎨 💻      Steve🎨 💻              Aleigh Ohslund💻      Abhinav Suman🎨 💻      Hamza Ehtesham Farooq🎨 💻      IamNotPeterPan💻 💵 🎨      Cetger🎨      pkonopacki🎨      Yang Yang🎨 💻              Muhammad Shoaib Sarwar💻      Murilo Henrique💻 🎨      emilianoalvz🎨 💻      Sumana Saha🎨 💻      Yurii17K🎨 💻      Rupesh Bhandari🎨 💻      salmos3718💻              John Baker🎨 💻      SanjaySathiraju🎨 💻      Donat Kabashi🎨      Arul Prasad J🎨 💻      Qi Chen🎨 💻      Maksym Dmyterko🎨 💻      ilovepullrequests💻              Samira Maleki🎨 💻      NIKITA MAHOVIYA💻      jesuisdev.Net🎨 💻      Ashraf Nazar🎨      Naveed Ahmad🎨      Ajmain Naqib🎨 💻      Avinash Tingre💻 🎨              nicktids🎨      Keith Dinh💻 🎨      André Ferreira💻 🎨      eliottkespi💻 🎨      praveenpno💻 🎨      vitowidigdo💻 🎨      Devesh Pratap Singh💻 🎨              Dario Rodriguez💻 🎨      charmander_didi💻 🎨      PHBasin💻 🎨      Ritvik Singh Chauhan💻 🎨      Riya P Mathew💻 🎨      Stephanie Cherubin💻 🎨      BenitesGui💻 🎨              FarikBear💻 🎨      Dmytro Havrilov💻 🎨      Parvesh Monu💻 🎨      Dipen Panchasara💻 🎨      gudata🎨 💻      gawadeditor💻 🎨      Kirill Taletski🎨 💻              Saajan🎨 💻      Kushagra S🎨 💻      Oanh Le🎨 💻      Frane Medvidović🎨 💻      Yorman🎨 💻      Bill Chan🎨 💻      Pratik Lomte🎨 💻              LOC LAM🎨 💻      TUSAR RANJAN MAHAPATRA💻      BhargavKanjarla💻      Karel De Smet💻 🎨      sidisan🎨      ygnzayarphyo🎨 💻      svansteelandt💻              Kebechet🎨      Daniel Selvan D🎨 💻      Mahdi Razavi🎨 💻      Niklas Tiede💻 🎨      narutubaderddin💻 🎨      dylandhood💻      Dheeraj Gupta💻              Pieter Claerhout💻 🎨      Shivam Agnihotri💻      RanjithReddy-Narra💻      Nikita Wadhwani🎨 💻      rsholokh💻 🎨      Ayaan Hossain💻 🎨      Rajesh Swarna💻              Deniz Etkar🎨 💻      pro335💻 🎨      Jakub Radzik💻 🎨      Hamza Khanzada💻      ARNON🎨      Vikram Singh💻      Shoxruxbek💻 🎨              Amit Khatri💻 🎨      Wali Ullah🎨 💻      Amit11794💻 🎨      metis-macys-66898💻 🎨      Faisal Maqbool🎨 💻      Kumar Neeraj💻 🎨      Maurizio Marini🎨 💻              Saket Kothari🎨 💻      Szymon Zborowski🎨 💻      iks3000🎨 💻      Ehsan Seyedi🎨 💻      vanekbr🎨 💻      Princy_M🎨 💻      Shijie Zhou🎨 💻              lakshyamcs16🎨 💻      Filippo Facco🎨 💻      mendel5🎨 💻      Patryk🎨 💻      VishwaSangani🎨 💻      Alvin Zhao🎨 💻      Lazar Gugleta🎨 💻              vmicho🎨 💻      Sikandar Ali🎨 💻      Raja Babu🎨 💻      faizajahanzeb💻      Guil_AiT🎨 💻      Kushal Das🎨 💻      Luis Bonilla🎨 💻              jovan1013🎨 💻      Damian🎨 💻      Yash Gupta💻      lolcatnip🎨 💻      Ikko Ashimine🎨 💻      Farukh🎨 💻      Moksedul💻 🎨              Navneet Kumar🎨 💻      Saqib AlMalik💻      fahimrahman🎨 💻      vaibhav patil🎨 💻      Rahul Madan🎨 💻      kartik Kaklotar🎨 💻      ASAHI OCEAN🎨 💻              Daniel Jungbluth🎨 💻      Rajdeep Singh Borana🎨 💻      ankitha19💻      Linh Tran💻      islamarr💻 🎨      Mohamed Sabith🎨 💻      Miguel Angel Cruz Acosta🎨 💻              Adebayo Ilerioluwa 🎨      Markus🎨 💻      dkonyayev🎨 💻      Kevin A Mathew🎨 💻      David Melo🎨 🔣      DFW1N🎨 💻      Sohaib Ayub🎨 💻              Navvy🎨 💻      bloodiator2🎨 💻      Hanji🎨 💻      arthur74🎨 💻      Sri Subathra Devi B🎨 💻      Akif Aydogmus🎨 💻      Umer Javaid🎨 💻              Norio Umata🎨 💻      Gazi Hasan Rahman🎨 💻      Keith Nguyen🎨 💻      Megalomaniac🎨 💻      ShankS3🎨 💻      Farhad Alishov🎨 💻      Ronak J Vanpariya🎨 💻              azrael0learza🎨 💻      Pavel Rahman🎨 💻      chuabern🎨 💻      Rahul Tirkey🎨 💻      Ruslan Bes🎨 💻 💡 🚧 🖋 🔣 🚇      Bohdan🎨 💻      Juzdzewski🎨 💻              Grigor Minasyan🎨 💻      alvintwc🎨 💻      Anand Natarajan🎨 💻      Kashan Ali🎨 💻      Thomas Meshail🎨 💻      Son Pham🎨      Michael French💡              Yash Mishra📖      Miguel Rodriguez🎨 💻      Philipp Bachmann🎨 💻      sunny🎨 💻      Siddharth Chatterjee🎨 💻      Michael Naghavipour🎨 💻      Sahil Garg🎨 💻              MicroLion🎨 💻      wctwc🎨 💻      Rohan Sharma🔣      AshishBodla🎨 💻      Taras Pysarskyi🎨 💻      Luqman Bello O.🎨 💻      DyingDown🎨 💻              Diego Chapedelaine🎨 💻      Richlee🎨 💻      Asif Habib🎨 💻      Mazharul Hossain🎨 💻      toni🎨 💻      Pragyanshu Rai🎨 💻      Matthew Eller🎨 💻              AbhiBiju🎨 💻      Roman Zhornytskiy🎨 💻      Lucas Camino🎨 💻      João Vitor Casarin🎨 💻      Evgeniy Shay🎨 💻      Ehsan Barkhordar🎨 💻      Gabriel🎨 💻              Shibu Mohapatra🎨 💻      Pavel Kirkovsky🎨 💻      Tahir Gul🎨 💻      imDevSalman🎨 💻      Jordan Donaldson🎨 💻      js-venus🎨 💻      Faisal Shaikh🎨 💻              ashishbpatil🎨 💻      Tri Le🎨 💻      tomtreffke🎨 💻      Salah Eddine Lalami🎨 💻      Mattias Xu🎨 💻      Manas Gupta🎨 💻      wolfsong62🎨 💻              Mehdi Mirzaei🎨 💻      Van Ba Khanh🎨 💻      Sel Embee🎨 💻      Suvradip Paul🎨 💻      Sharique🎨      Seabass🎨 💻      Penny Liu🎨 💻              jatinder bhola🎨 💻      misterqbit🎨 💻      Daniel-VS9🎨 💻      Shruthi🎨 💻      beefydog🎨 💻      Suraj Kumar🎨 💻      hrishikeshps🎨 💻              Sudarshan🎨 💻      Divyansh💻 🎨      Zyaire🎨 💻      Omar Belkady🎨 💻      alexiismua🎨 💻      Eduarda Alves🎨      pycoach🎨 💻              Ruhul🎨 💻      pmoustopoulos🎨 💻      Lee Hui Ting💻 🎨      bodi1981🎨 💻      Devaraat Joshi🎨 💻      Johnny🎨 💻      rogue-coder🎨 💻              viiktr🎨      Lalit Mohan💻      João Sousa💻      言葉之靈💻 🎨      RJLABS💻      brittney0522🎨 💻      sham🎨 💻              Glenn Goossens💻 🎨      Cyber Hawk🎨 💻 🖋 💼      Ankit Yadav🎨 💻      verbality💻      Mohammed Siddiqui🎨 💻      AdamKaczor6250🎨 💻      Ramón Martinez Nieto🎨 💻              Grzegorz Dziubak🎨 💻      Ayoub BERDEDDOUCH🎨 💻      nikola-fadv🎨 💻      Akarsh Agrawal🎨 💻      Mitra Mirshafiee🎨 💻      Parker Stephens🎨 💻      alrenee99💻              Karthick Vankayala💻      Iryna 🎨 💻      palanugrah💻      Gwinbleind🎨 💻      Randy Bobandy🎨 💻      Bek Rozikoff💻      davnguye🎨 💻              Neel Patel💻      ehudbehar🎨 💻      nicholas-cod3r🎨 💻      michaelfranki🎨      Esther White🎨 💻      prathmeshpb🎨 💻      Victor Lin🎨 💻              Christine C. Yin🎨 💻      GitLearner-begin🎨 💻      Mesrop Andreasyan🎨 💻      Nathan Garcia🎨      commonsw04🎨 💻      Md. Rashad Tanjim🎨 💻      Ali Malek💻              PAODLT🎨 💻      Nikhil Bobade🎨 💻      hyuckjin21💻      Itasha Modi🎨 💻      Nikitha Reddy🎨 💻      Mahshooq Zubair🎨 💻      Subham Das💻              Onkar Birajdar🎨 💻      Nick Titomichelakis🎨 💻      Christian Leo-Pernold🎨      Matthew Marquise🎨 💻      baronfac🎨 💻      Abhishek Tilwar🎨 💻      DavidsDvm🎨 💻              Parth Parikh🎨 💻      Hector Castro🎨 💻      Rikky Arisendi🎨 💻      Ali HamXa🎨 💻      Frank.wu🎨 💻      Jatin Kumar🎨 💻 📖      masterHAWK99🎨 💻              Pushp Jain🎨 💻      Ashutosh Rout🎨 💻      Atharva Deshpande🎨 💻      Teodor Ciripescu🎨 💻      Anmol Bansal🎨 💻      Nikhil Kumar Macharla🎨 💻      Dexter🎨 💻              Aaron🎨 💻      Yogita Jaswani🎨 💻 📖 🖋      StoryDev🎨 💻      Mesut Doğansoy🎨 💻      Paras Dhawan🎨 💻      Emanuel Zhupa🎨 💻      Aaradhyaa717🎨 💻              jaacko-torus🎨 💻      mBlack💻      kalrayashwin📖 🖋 🎨 💻      Seraph💻 🎨      ZhiHong Chua🎨 💻      Amsal Khan🎨 💻 📖 🖋      Raghav Rastogi🎨 💻              Tzila📖      Shahriar Nasim Nafi📖      AG🎨 💻      Mojtaba Kamyabi🎨 💻      Ahmad Abdulrahman🎨 💻      Eclipse🎨 💻      Anshu Pal🎨 💻              Denis🎨 💻      mehmet sayin📖      WebDEV🎨 💻      Sam Komesarook🎨 💻      Kiran Ghimire🎨 💻      Joshua Davis🎨 💻      Muhammad-Huzaifa-Siddiqui💻              tobeornottobeadev🎨 💻      VAIBHAV SINGHAL🎨 💻      Keiran Pillman🎨 💻      Max Donchenko🎨 💻      sgonsal🎨 💻      diksha137🎨 💻      Vignesh🎨 💻              Gabriel França🎨 💻      Joseph🎨 💻      Bruno Rafael🎨 💻      vcamarre🎨 💻      thibault ketterer🎨 💻 🚧      VictorGonzalezToledo🎨 💻      1911510996🎨 💻              invidu🎨 💻      Nurul Furqon🎨 💻      David Asbill🎨 💻      Niko Birbilis🎨 💻      Mugundan Kottursuresh🎨      agrsachin81🎨 💻      Othmane El Alami🎨 💻              Syed Atif Ali🎨 💻      lakhanjindam🎨 💻      youssef hamdane🎨 💻      starfaerie🎨 💻      rodrigo0107🎨 💻      Michał Gralak🎨 💻      Jewel Mahmud🎨 💻              cwilson830🎨 💻      buun1030🎨 💻      Reda-ELOUAHABI🎨 💻      saad-aksa🎨 💻      Emdadul Haque🎨 💻      PROCW🎨 💻      cccppp1🎨 💻              Joanna Baile🎨 💻      Ahmed Saber🎨 💻      Masoud Keshavarz🎨 💻      mortazavian🎨 💻      Aniket Pandey🎨 💻      Vijay Nirmal🎨 💻      Daniel Carvallo💻              menaechmi🎨 💻      azenyx🎨 💻      Ahmet Özrahat🎨 💻      Abdulrahman Abouzaid🎨 💻      jmgnorbec🎨 💻      palinko91🎨 💻      Laisson R. Silveira🎨 💻              BHARGAVPATEL1244🎨 💻      Candide U🎨 💻      Sitansh Rajput🎨 💻      Houda Mouttalib🎨 💻      MumuTW🎨 💻      Suave Bajaj🎨 💻      Mehdi Parsaei🎨 💻              Dinko Osrecki🎨 💻      Dhia Djobbi🎨 💻      Mahmoud Galal🎨 💻      Anh Minh🎨 💻      Suvesh K🎨 💻      Petar Todorov🎨 💻      Alexander Nguyen🎨 💻              Morteza Jalalvand🎨 💻      Claudson Martins🎨 💻      Matt Jacobson🎨 💻      Rafael Belokurows🎨 💻       Thomas Gamauf🎨 💻      Rishabh Mahajan🎨 💻      rakeshpdgupta23🎨 💻              Shashidharknaik🎨 💻      taleleuma🎨 💻      Florian Bühler🎨 💻      Raihan Bin Wahid🎨 💻      MOHAMMED NASSER🎨 💻      federico🎨 💻      Andre Violante🎨 💻              tcunningham98🎨 💻      Jan Grießer🎨 💻      Serkan Alc🎨 💻 🖋      Jez McKean🎨 💻      meisam alifallahi🎨 💻      Mehul Thakkar🎨 💻      Saksham Soni🎨 💻              Pedro Peregrina🎨 💻      Mintu Choudhary🎨 💻      lucianmoldovanu🎨 💻      John C. Scott🎨 💻      Mia D.🎨 💻      EwenBernard🎨 💻      M. Reza Nasirloo🎨 💻              Jay Agrawal🎨 💻      DeShay🎨 💻      Jay206-Programmer🎨 💻      Elender🎨 💻 🖋      Bobby Byrne🎨 💻      Pirci🎨 💻      Hasanuzzaman🎨 💻              Josh Kautz🎨 💻      Brofar🎨 💻      Mina Karam🎨 💻      Duncan O N🎨 💻      Sean Tumulak-Nguyen🎨 💻      Artur Trześniewski🎨 💻      JJaammeessM🎨 💻              shubham agarwal🎨 💻      Michele Righi🎨 💻      Panagiotis Kontos🎨 💻      sumitbathla🎨 💻      Deepak Mathur🎨 💻      Juho Nykänen🎨 💻      Santiago González Siordia🎨 💻              SRIJITA MALLICK🎨 💻      Samriddhi B🎨 💻      Nitzan Papini🎨 💻      Mario Sanz🎨 💻      Crab^4🎨 💻      Pablo🎨 💻      Gordon Pham-Nguyen🎨 💻              Kristoffer🎨 💻      chrisblach🎨 💻      Gábor🎨 💻      Lina🎨 💻      Harrison Watts🎨 💻      Mario Petričko🎨 💻      Ben8120🎨 💻              Giovanna🎨 💻      Minal Ahuja🎨 💻      mossfarmer🎨 💻      ThaC0derDre🎨 💻      itware🎨 💻      Michael Walker🎨 💻      Tom Jacob Chirayil🎨 💻              Sachin Kumar🎨 💻      adi-ray🎨 💻      Dr-Blank-alt🎨 💻      Bogdan Cazacu🎨 💻      Gilson Urbano🎨 💻      Nina🎨 💻      Anthony🎨 💻              manushimjani🎨 💻      Michael Reyes🎨 💻      Rachel Kennelly🎨 💻      Aakash Garg🎨 💻      Daniel Livingston🎨 💻      alexrojco🎨 💻      Minh Nguyen🎨 💻              Mahesh Dattatraya Babar🎨 💻      Jin Zihang🎨 💻      Bikramjit Ganguly🎨 💻      QuestionableGuise🎨 💻      liq19ch🎨 💻      Bruno Rocha🎨 💻      Anand Dyavanapalli💻 🖋              crucian-afk🎨 💻      0xgainz🎨 💻      weirdfsh🎨 💻      Valan Baptist Mathuranayagam🎨 💻      Paul Kaefer🎨 💻      Yu-Hsiang Wang🎨 💻      Javad Adib🎨 💻              davidliu0930🎨 💻      Achilleas John Yfantis🎨 💻      Omkar Shivadekar🎨 💻 🖋 🐛      ToanTran🎨 💻      Gautam Naik🎨 💻      Marc🎨 💻      twix20🎨 💻              Kristian S.🎨 💻      Aleksey Khoroshilov🎨 💻      arjunsrsr🎨 💻      Ali Haider🎨 💻      Trisha Dring🎨 💻      Andre Marzulo🎨 💻      Krishna Modi🎨 💻              Rosemary Li🎨 💻      Alex Weller🎨 💻      Tam Nguyen🎨 💻      aquintelaoliveira🎨 💻      Norbert Brett🎨 💻      rocsogd🎨 💻      0nyr🎨 💻              rethkevin🎨 💻      RickHeadle🎨 💻      Leandre🎨 💻      Natnael Sisay🎨 💻      sbbu🎨 💻      wael🎨 💻      Fabricio Tramontano Pirini🎨 💻              Alexander Stoyanov🎨 💻      Dezx20🎨 💻      southparkkids🎨 💻      bmstar🎨 💻      kiagam🎨 💻      Juan Castillo🎨 💻      FFenne🎨 💻              Jose Toledo🎨 💻      Pat McGhen🎨 💻      Eiko Wagenknecht💻 🖋 🔣      Alan Chalmers🎨 💻      Jean Didier🎨 💻      Andy🎨 💻      pestadieu🎨 💻              Kanishka Chakraborty🎨 💻      Nandha🎨 💻      Vahid Mafi🎨 💻 🔣 🖋 💼      Akshay Ashok🎨 💻      0x08🎨 💻      Sandeep Mishra🎨 💻      Evann Regnault🎨 💻              Lenny Zeitoun🎨 💻      Eden Boaron🎨 💻      TroyBTC🎨 💻      Aby Sebastian🎨 💻      Matthew Dunn🎨 💻      ckullo🎨 💻 🖋 🔣      Mohamed Mamdouh🎨 💻              Youssef Bazina🎨 💻      Frederico Kückelhaus💻      Nushan Kodikara💻      Zach Cooper💻      Roy🎨 💻      Saurav Panchal🎨 💻      totallynotdavid🎨 💻              goosepirate🎨 💻 💡 💼      KAUTH🎨 💻      Hari Kiran Vusirikala🎨 💻      Sounak Dey🎨 💻      zia💼 🎨 💻      Reza Davari🎨 💻      AkshayAjaykumar🎨 💻              x24870🎨 💻      Ko Phone🎨 💻      Nabstar3🎨 💻      Mateusz🎨 💻      Yunus Emre Emik💻      Abhinav Sinha🎨 💻      Hung Nguyen🎨 💻              Maselino💻      Shuktika Mahanty💻      Mikołaj Gawroński🎨 💻      Hussein Habibi Juybari🎨 💻      Sean-McArthur🎨 💻      Osman F Bayram🎨 💻      Benjamin Thomas Blodgett🎨 💻              Chuanlong-Zang🎨 💻      julian🎨 💻      francisco🎨 💻      aalihhiader9211🎨 💻      Muhammad Zunair🎨 💻      Liya🎨 💻      BegadTarek🎨 💻              etorobot🎨 💻      Hussam Khan🎨 💻      Saikat Chakraborty🎨 💻      Nicholas Quisler🎨 💻      Evang Poul🎨 💻      Gregg Lind🎨 💻      Deepak Kumar🎨 💻              Callum Leslie🎨 💻      Curtis Barnard Jr.🎨 💻      Deepanshukaim🎨 💻      Manthan Ank🎨 💻      hossein varmazyar🎨 💻      Brayan Muñoz V.🎨 💻      Kamil Rasheed Siddiqui💻 🎨              mutt0-ds🎨 💻      egbertjk🎨 💻      Majid Zojaji🎨 💻      Sean Chen🎨 💻      Herbert Milhomme🎨 💻      A3🎨 💻      Killian🎨 💻              Coakeow🎨 💻      ྅༻ Ǭɀħ ༄༆ཉ🎨 💻      Pratik Solanki🎨 💻      Sunny🎨 💻      ssge🎨 💻      Bernat Frangi🎨 💻      Jeevan Rupacha🎨 💻              amirandap🎨 💻      Deepakshi Mittal🎨 💻      Abhijeet Parida🎨 💻      Khaled Riyad🎨 💻      Pratap parui🎨 💻      Prajit Panday🎨 💻      PipeSierra🎨 💻              Collins Oden🎨 💻      Kshitij Dwivedi🎨 💻      Bernardia Vitri Arumsari🎨 💻      Ömer Faruk Taşdemir🎨 💻      Spencer Stith🎨 💻      Porsche Rodjanasak🎨 💻      Shakeel Sharif🎨 💻              Victoria Cheng🎨 💻      Denis🎨 💻      Anand Prakash Tiwari🎨 💻      danijeljw-rpc🎨 💻      Ahmed H Ebrahim🎨 💻      Virginia Gardner🎨 💻      Jhironsel Diaz A.🎨 💻              Yunus Kidem🎨 💻      MT🎨 💻      Dinesh Zaldekar🎨 💻      adi🎨 💻      Farhan Shaikh🎨 💻      Elvis Salvatierra🎨 💻      Kaushik-Iyer🎨 💻              HocAndres🎨 💻      VictorHugoAguilarAguilar🎨 💻      Murat Can Abay🎨 💻      Chris🎨 💻      Shivam7-1🎨 💻      Paipai13🎨 💻      Shambles-io🎨 💻              Abhishek K M🎨 💻      Ezequiel Cuevas🎨 💻      Plamen Ivanov🎨 💻      Yuji🎨 💻      Jean-Philippe Lebœuf🎨 💻 🔣      Naufan🎨 💻      jadnov🎨 💻              vaxtangens🎨 💻      subashkonar13🎨 💻      Rushi Javiya🎨 💻      Mert Gül🎨 💻      Lily🎨 💻      Kalinoff🎨 💻      Joel Tony🎨 💻              Peter🎨 💻      Roozbeh Zarei🎨 💻      Shen🎨 💻      Joonsoo.LEE🎨 💻      Fede.Breg🎨 💻      Rui Costa🎨 💻      João Gustavo Bispo🎨 💻              Sami-I🎨 💻      Tsvetoslav Tsvetkov🎨 💻      Olabode Olaniyi David🎨 💻      theRuslan🎨 💻      leighboz🎨 💻      Frank Sossi🎨 💻      Tomasz Adamski🎨 💻              Mansoor M. Sathir🎨 💻      Golamrabbi Azad🎨 💻      Nahian Ahmed🎨 💻      Rafael de Jesus Silva Monteiro🎨 💻      Odionyebuchukwu Jude🎨 💻      The Nithin Balaji🎨 💻      Knackii🎨 💻              vittorio-giatti🎨 💻      Guilherme de Carvalho Lima Rebouças🎨 💻      aaref shami🎨 💻      Andrey Dryupin🎨 💻      Muhanned Noman🎨 💻      Jan Silva🎨 💻      emanuele-em🎨 💻 🖋              Sanjay TM🎨 💻      Joe Markberg / code editor🎨 💻      Julien Quiaios🎨 💻      Eric Ramirez Santis🎨 💻      M🎨 💻      Malcata🎨 💻      Athul Muralidharan🎨 💻              Dariusz Ochota🎨 💻      CHANDAN CHOUDHURY🎨 💻      Deep🎨 💻      Ahmet İstemihan ÖZTÜRK🎨 💻      TIM🎨 💻      jakeg814🎨 💻      Leonidos🎨 💻              Abhinandu V Nair🎨 💻      charafeddine01🎨 💻      Jasper🎨 💻      Manish Goyal🎨 💻      SATYAM_SINGH🎨 💻      Four🎨 💻      Vaishnavi Amira Yada🎨 💻              ShriKrushna Bhagwat🎨 💻      Rohit Nandagawali🎨 💻      felipe🎨 💻 🚧 🖋 ✅ 🧑‍🏫      Saurabh Mudgal🎨 💻      szenadam🎨 💻      Shubhendra Singh🎨 💻      Yoosuf Sayyid💻 🎨              Güven Çetinerler🎨 💻      Luke Jefferies🎨 💻      Chris🎨 💻      Lúcio Aguiar💻      Enuma029💻      yktsang01💻      maximumn3rd🎨 💻              Jon Galletero🎨 💻      Thaddeus  Thomas🎨 💻      Aakash Kumar💻 🎨      Ali M🎨 💻      OskyEdz🎨 💻      Ravi Gupta🎨 💻      Rafa Raizer🎨 💻              Abdullah Al Muzaki🎨 💻      Rahul Faujdar🎨 💻      Abhishek Verma🎨 💻      Ashutosh Shinde🎨 💻      Ganesh Rai🎨 💻      StefanTrpkovic🎨 💻      Erik Blanca🎨 💻              Vedant Madane🎨 💻      Antra Tripathi🎨 💻      Ethan Knights🎨 💻      Alexandru Boncut🎨 💻      Pablo Bandinopla🎨 💻 🚧 🖋      Robz-99🎨 💻      Harpal Singh🎨 💻              paulboundy99🎨 💻      Mubashir Ahmed🎨 💻      Rohan Hari🎨 💻      Erik Henrique 🎨 💻      Leandro Matheus🎨 💻      Deepak🎨 💻      AlishaSingh🎨 💻              Lynn Latt Yati🎨 💻      San Shwe🎨 💻      SKR🎨 💻      msbunnyjaguar🎨 💻      Mohamad Zabiulla🎨 💻      Hatim Zahid🎨 💻      Rauzan Sumara🎨 💻              Hosein1358🎨 💻      Mohit🎨 💻      Ali🎨 💻      Avinash1765🎨 💻      Sai Teja Madha🎨 💻      Monsur Ahmed Shafiq🎨 💻      xuxianjin-dev🎨 💻              chetna🎨 💻      Gul Zaib🎨 💻      Natalia🎨 💻      Dionísio Braga🎨 💻      Pritish Rajpurohit🎨 💻      incanlove🎨 💻      Innocent🎨 💻              Devin Almonor🎨 💻      antonyveyre🎨 💻      Beltz Anhxton🎨 💻      Mehdi🎨 💻      Muhammad Usman🎨 💻      Patrick Dantas🎨 💻      Tak Vannak🎨 💻              Ramzi RADDAOUI🎨 💻      Konstantin-Glukhov🎨 💻      uguroban🎨 💻      Humberto Alves🎨 💻      JuangZendrato🎨 💻      James Oluwaleye🎨 💻      Wasi Sadman🎨 💻              Pavle Mijatovic🎨 💻      Luiz H. S. Bispo🎨 💻      Сухас Дхолз🎨 💻      Alvaro Trujillo🎨 💻      Everton 🎨 💻      jfrozas🎨 💻      Shuaaib Badran🎨 💻              Shivam Jha🎨 💻      Mohamed Tayeh🎨 💻      Makendran G🎨 💻      mayank singh tomar🎨 💻      hossam sadany🎨 💻      Harshbardhan Singh💻 🎨      Fawad Jawaid Malik🎨 💻              Tina Lacatis🎨 💻      TeddyCuoreDolce🎨 💻      bchooxg🎨 💻      Alisha Takkar🎨 💻      Gianluigi🎨 💻      Mehran Javaherian🎨 💻      Benjamin Ololade Adedokun🎨 💻              Md. Abdul Mutalib🎨 💻      Aadil Arsh.S.R🎨 💻      J. Nathan Allen🎨 💻      Kieran Krug🎨 💻      Seth Addo🎨 💻      Satvik Singh Rathore🎨 💻      dangoth🎨 💻              Maxim🎨 💻      Phuong-Cat Ngo🎨 💻      Frenchtoast0🎨 💻      Rakshith🎨 💻      Vaibhav Arora🎨 💻      zghp🎨 💻      Bedovan🎨 💻              chiaramistro🎨 💻      him2016🎨 💻      HarshitSachdeva🎨 💻      Sadaf Saleem🎨 💻      Aaroh Srivastava🎨 💻      eloygplaza🎨 💻      Gaurav Kumar Verma🎨 💻              AndreaCUS🎨 💻      Simran🎨 💻      Prashant Bhapkar🎨 💻      mhaendler🎨 💻      Gauri Maheshwari🎨 💻      4Lajf🎨 💻      Tanmoy Sengupta🎨 💻              Sharad Tripathi🎨 💻      Niraj Chavan🎨 💻      Luisa Gualda🎨 💻      Monika-Sivakumar-3🎨 💻      harryfensome🎨 💻      Shubham Choubey🎨 💻      Ashwini Patil🎨 💻              cleversonlira🎨 💻      Nurmukhammed🎨 💻      workspace-utkarsh🎨 💻      Santosh Phadtare🎨 💻      Prashant Warghude🎨 💻      Umang Dakh🎨 💻      Shalini Chavan🎨 💻              vinit gurjar🎨 💻      Vishal Kumar🎨 💻      Wonhyeong Seo🎨 💻      Achwale Prajwal Namdevrao🎨 💻      Ankan Banerjee🎨 💻      bhaumikankan🎨 💻      JamesMacroZhang🎨 💻              Pedro Lopes🎨 💻      dia🎨 💻      tayyabhussain2910🎨 💻      Rajdeep Shrivastava 🎨 💻      Mukul Kumar🎨 💻      Mayank N🎨 💻      jdelucca🎨 💻              Sneha Mittal🎨 💻      Sarika Kushwaha🎨 💻      farzad-khb🎨 💻      Elijah Shackelford🎨 💻      The-Only-Raminator🎨 💻      Keerthana Kasthuril🎨 💻      Viachaslau Auchynnikau🎨 💻              Mohammad Osman Rasooli🎨 💻      mvedovato🎨 💻      Sonali Rajput🎨 💻      Isha Dhek🎨 💻      Ramshad Cheriyeri Peediyakkal🎨 💻      Micah🎨 💻      gauravshukla2203🎨 💻              sndmurthy🎨 💻      Shivam-Singh🎨 💻      M. Ammar Khan🎨 💻      chandolakul🎨 💻      bhatnagar221🎨 💻      Adrian Nieściur🎨 💻      nezi311🎨 💻              scottajevans🎨 💻      Marcelo Antunes Soares Fantini🎨 💻      Axel De Acetis🎨 💻      Drishti Sah🎨 💻      VipulDhillon🎨 💻      Urmi Jana🎨 💻      Ayush Mokal🎨 💻              Damola Olutoke🎨 💻      Max🎨 💻      Lakshmi N🎨 💻      ArtemReva🎨 💻      Ujjwal Aggarwal🎨 💻      Mo🎨 💻      Brian🎨 💻              chamley🎨 💻      Simone Baptiste🎨 💻      Shekhar Thakur🎨 💻      Smith🎨 💻      codernoob1🎨 💻      lok84🎨 💻      Tobias Riemenschneider🎨 💻              Tharsanan1🎨 💻      ANURAG SINGH🎨 💻      Yash Sant🎨 💻      Krishiv Patel🎨 💻      GGGalaxy🎨 💻      pardeepdhillon661🎨 💻      anujd64🎨 💻              Pedro Pereira🎨 💻      Master_Saptak🎨 💻      SURANJAN DAS🎨 💻      Tripura kant🎨 💻      shabzkhan🎨 💻      Mustafa Poya🎨 💻      Roshan Jha🎨 💻              GuillaumeLarue🎨 💻      Tomasz Rodak🎨 💻      Junil Kim🎨 💻      Surbhi Mayank🎨 💻      Nemanja Lekic🎨 💻      HemantMalokar🎨 💻      Felipe M. López🎨 💻              bibliofilo🎨 💻      GauthamG2🎨 💻      02_t🎨 💻      Yusuf Abdul-razaq🎨 💻      Vladimir🎨 💻      Sai Chandra K🎨 💻      Soroush Bonab🎨 💻              Giide0n🎨 💻      GG🎨 💻      Dáger Zúñiga🎨 💻      rsk2🎨 💻      Storozhev DJ🎨 💻      Jeevan🎨 💻      Andy Johnson🎨 💻              Aníbal Pozo🎨 💻      Jovane de Castro🎨 💻      Muhammad Hamza Amir🎨 💻      tharaka-mts🎨 💻      Ali KHYAR🎨 💻      Caio Araujo🎨 💻      Oscar Dyremyhr🎨 💻              arteality🎨 💻      Daniel Drexlmaier🎨 💻      Marco Monti🎨 💻      mikeycrystal🎨 💻      Veljanovskii🎨 💻      Ivan Gorbachev🎨 💻      Sahil Rawat🎨 💻              Hasitha Suneth🎨 💻      Yerko Vera Lezama🎨 💻      Ivan Penchev🎨 💻      Tanver Islam Tonmoy🎨 💻      Xun Cao🎨 💻      Nayan Babariya🎨 💻      Priyanshu Maurya🎨 💻              Dylan Tintenfich🎨 💻      Ron Strauss🎨 💻      Mohammed AlBanna🎨 💻      Mukund M🎨 💻      Franklin Ohaegbulam🎨 💻      Nisarg Shah🎨 💻      Unik Dahal🎨 💻              Readily🎨 💻      Alexandre Poitevin🎨 💻      Scaramir🎨 💻      Pruthvi🎨 💻      Kalmanq🎨 💻      Alfatah Nesab🎨 💻      arudesai🎨 💻              Adryenne🎨 💻      El mehdi oudaoud🎨 💻      Jayant Goel🎨 💻      Tsuki🎨 💻      Peter Lemanski🎨 💻      Annurag-byte🎨 💻      Anthony Vu🎨 💻              Vitaly Nikolaychuk🎨 💻      Nathan🎨 💻      Evgenii Petukhov🎨 💻      Loris Guerra🎨 💻      fakhriaunur🎨 💻      Mehdi HYANI🎨 💻      Sarvex Jatasra🎨 💻              santimanuelr🎨 💻      Evgeniy Rezanov🎨 💻      Sonia M🎨 💻      Grzegorz Kmita🎨 💻      Manuel Carita🎨 💻      Felipe Cisternas Alvarez🎨 💻      Guo Ci🎨 💻              Marcos Silva🎨 💻      KK🎨 💻      Shubhanjan Medhi🎨 💻      ArthurFerreiraRodrigues🎨 💻      PabloHermun🎨 💻      disha-baldawa🎨 💻      StaroMoon🎨 💻              Amila T Kumarasekara🎨 💻      Amoh Prince🎨 💻      AngeloGC🎨 💻      Ebube Glory Ogbonda🎨 💻      Prahalad Belavadi📖      Antoni Sarnowski-Trypka🎨 💻      Alberto Pasqualetto🎨 💻              Amir Babaei🎨 💻      Syed Abdul Hannan🎨 💻      Srajan Rai🎨 💻      Clarence Moore🎨 💻      Nguyen Anh Tuan🎨 💻      dar2dar2🎨 💻      Ameer Ibrahim🎨 💻              Tiago Lugatto🎨 💻      raremiroir🎨 💻      Moobie🎨 💻      AlicanDursun🎨 💻      bbalsam🎨 💻      Luboš Hájek🎨 💻      mrshahzeb7🎨 💻              Wesley Scholl🎨 💻      Lawrence Turcotte🎨 💻      Michael DiPaolo🎨 💻      Smart-Codi🎨 💻      Vivek Kumar🎨 💻      Igor Moiseev🎨 💻      Bård Pedersen🎨 💻              HOA PHAN🎨 💻      GaborModra🎨 💻      vivek-114🎨 💻      Robin🎨 💻      Alex🎨 💻      John Ehrlinger🎨 💻      Roman Zhuravlov🎨 💻              Jordan Moss🎨 💻      RaeShelly🎨 💻      gmollard🎨 💻      Md Kaif Khan🎨 💻      Pablo Romera🎨 💻      Erik Bustos🎨 💻      trogfield🎨 💻              simon-aichhorn🎨 💻      Tufan GÜLEÇ🎨 💻      Uğur Berkecan Ünlü🎨 💻      Revanth Naik🎨 💻      Lia Pires🎨 💻      Igor Mestechkin🎨 💻      Anirudh Karanth🎨 💻              KBobovskiy🎨 💻      zhatiayua🎨 💻 🖋      David Cardona🎨 💻      Paulo Castilho🎨 💻      Sebastiano Picchi🎨 💻      pjotar🎨 💻      Rimel CHERIF💻              Arsal uddin🖋      Dmitry Kasporsky💻      SoftwareDev1014🎨 💻      @Robvred🎨 💻      Kasun Shanaka💻      Ahmad M.🎨 💻      Alex Kozin🎨 💻              Mandy Meindersma🎨 💻      LEGALISE PIRACY🎨 💻      Alex Logvin🎨 💻      Aria Dahl🎨 💻      Mustafa Arifoglu🎨 💻      Yevhen Leshchenko🎨 💻      Anubhav Adhikari🎨 💻              Noah Tatko🎨 💻      Mohit Gadhavi🎨 💻      Pedro Basílio🎨 💻      RealSanjeev🎨 💻      Akash Hazra🎨 💻      Christoph Dahlen🎨 💻      Vincent du Plessis🎨 💻              Karen Tamrazyan🎨 💻      Mirza Younus Baig🎨 💻      Ashish Kumar🎨 💻      Unknown6334🎨 💻      flowaz🎨 💻      zi-aikra🎨 💻      PAYAL PM🎨 💻              Lennart Lösche🎨 💻      Yummy-Yums🎨 💻      Njuacha Hubert Mikulowski🎨 💻      Hussein Esmail🎨 💻      Bilgehan Bezir🎨 💻      Muhammed Shittu🎨 💻      Clément FERNANDES🎨 💻              JaCKoP619🎨 💻      userutf8🎨 💻      Mohamed Ubaid🎨 💻      Justin Yates🎨 💻      mohammad ali🎨 💻      Madhav Singh🎨 💻      RgbMouse69🎨 💻              Nicholas Leask🎨 💻      parthav0🎨 💻      Sigma🎨 💻      Evelina Becheva🎨 💻      Akshit Gulyan🎨 💻      Arpita Jana🎨 💻      Praveen Kumar🎨 💻              Mohammad Sami🎨 💻      eddiestefanescu🎨 💻      Ramesh Yadav🎨 💻      Sarthak Joshi🎨 💻      Nikhil12300🎨 💻      Yevgen🎨 💻      Leo🎨 💻              laurent b🎨 💻      Mettchen🎨 💻      Ali Mahdavi🎨 💻      Lucas Dondo🎨 💻      Siddhesh Agarwal🎨 💻      slimerPuncher🎨 💻      saritashh🎨 💻              Iulian-Valeriu Cioată🎨 💻      Szabolcs Nagy🎨 💻      Jarle Kvile🎨 💻      劉耀升 Vic Liu🎨 💻      Suryansh🎨 💻      Matthew Oosthuyse🎨 💻      Florin Zamfir🎨 💻              Melek🎨 💻      moesocio🎨 💻      Alan James🎨 💻      Mai Thanh Phương🎨 💻      Neville Dabre🎨 💻      Maksym🎨 💻      tamanna900🎨 💻              Adithya Awati🎨 💻      This project follows the all-contributors specification.Contributions of any kind welcome![ Go back to the top of the page ]Contributor Over TimeStargazers over timeVisualisation of this repository by Gourcehttps://www.youtube.com/watch?v=24cZVytc5D4"
86,86,apachecn/ailearning,https://github.com/apachecn/ailearning/blob/master/README.md,Python,"                                AI learning协议：CC BY-NC-SA 4.0一种新技术一旦开始流行，你要么坐上压路机，要么成为铺路石。——Stewart Brand在线阅读在线阅读（v1）QuantLearningApacheCN 中文翻译组 713436582ApacheCN 学习资源注: 广告位合作(物美价廉)，请联系 apachecn@163.com路线图入门只看: 步骤 1 => 2 => 3，你可以当大牛！中级补充 - 资料库: https://github.com/apachecn/ai-roadmap补充算法刷题: https://www.ixigua.com/pseries/6822642486343631363/面试求职: https://www.ixigua.com/pseries/6822563009391493636/机器学习实战: https://www.ixigua.com/pseries/6822816341615968772/NLP教学视频: https://www.ixigua.com/pseries/6828241431295951373/AI常用函数说明: https://github.com/apachecn/AiLearning/tree/master/AI常用函数说明.md1.机器学习 - 基础支持版本VersionSupported3.6.x❌2.7.x✅注意事项:机器学习实战: 仅仅只是学习，请使用 python 2.7.x 版本 （3.6.x 只是修改了部分）基本介绍资料来源: Machine Learning in Action(机器学习实战-个人笔记)统一数据地址: https://github.com/apachecn/data百度云打包地址: apachecn/data#3书籍下载地址: https://github.com/apachecn/data/tree/master/book机器学习下载地址: https://github.com/apachecn/data/tree/master/机器学习深度学习数据地址: https://github.com/apachecn/data/tree/master/深度学习推荐系统数据地址: https://github.com/apachecn/data/tree/master/推荐系统视频网站: 优酷 ／bilibili / Acfun / 网易云课堂，可直接在线播放。（最下方有相应链接）-- 推荐 红色石头: 台湾大学林轩田机器学习笔记-- 推荐 机器学习笔记: https://feisky.xyz/machine-learning学习文档模块章节类型负责人(GitHub)QQ机器学习实战第 1 章: 机器学习基础介绍@毛红动1306014226机器学习实战第 2 章: KNN 近邻算法分类@尤永江279393323机器学习实战第 3 章: 决策树分类@景涛844300439机器学习实战第 4 章: 朴素贝叶斯分类@wnma3mz@分析1003324213244970749机器学习实战第 5 章: Logistic回归分类@微光同尘529925688机器学习实战第 6 章: SVM 支持向量机分类@王德红934969547网上组合内容第 7 章: 集成方法（随机森林和 AdaBoost）分类@片刻529815144机器学习实战第 8 章: 回归回归@微光同尘529925688机器学习实战第 9 章: 树回归回归@微光同尘529925688机器学习实战第 10 章: K-Means 聚类聚类@徐昭清827106588机器学习实战第 11 章: 利用 Apriori 算法进行关联分析频繁项集@刘海飞1049498972机器学习实战第 12 章: FP-growth 高效发现频繁项集频繁项集@程威842725815机器学习实战第 13 章: 利用 PCA 来简化数据工具@廖立娟835670618机器学习实战第 14 章: 利用 SVD 来简化数据工具@张俊皓714974242机器学习实战第 15 章: 大数据与 MapReduce工具@wnma3mz1003324213Ml项目实战第 16 章: 推荐系统（已迁移）项目推荐系统（迁移后地址）第一期的总结2017-04-08: 第一期的总结总结总结529815144网站视频知乎问答-爆炸啦-机器学习该怎么入门？当然我知道，第一句就会被吐槽，因为科班出身的人，不屑的吐了一口唾沫，说傻X，还评论 Andrew Ng 的视频。。我还知道还有一部分人，看 Andrew Ng 的视频就是看不懂，那神秘的数学推导，那迷之微笑的英文版的教学，我何尝又不是这样走过来的？？ 我的心可能比你们都痛，因为我在网上收藏过上10部《机器学习》相关视频，外加国内本土风格的教程: 7月+小象 等等，我都很难去听懂，直到有一天，被一个百度的高级算法分析师推荐说: 《机器学习实战》还不错，通俗易懂，你去试试？？我试了试，还好我的Python基础和调试能力还不错，基本上代码都调试过一遍，很多高大上的 \""理论+推导\""，在我眼中变成了几个 \""加减乘除+循环\""，我想这不就是像我这样的程序员想要的入门教程么？很多程序员说机器学习 TM 太难学了，是的，真 TM 难学，我想最难的是: 没有一本像《机器学习实战》那样的作者愿意以程序员 Coding 角度去给大家讲解！！最近几天，GitHub 涨了 300颗 star，加群的200人， 现在还在不断的增加++，我想大家可能都是感同身受吧！很多想入门新手就是被忽悠着收藏收藏再收藏，但是最后还是什么都没有学到，也就是\""资源收藏家\""，也许新手要的就是 MachineLearning(机器学习) 学习路线图。没错，我可以给你们的一份，因为我们还通过视频记录下来我们的学习过程。水平当然也有限，不过对于新手入门，绝对没问题，如果你还不会，那算我输！！视频怎么看？理论科班出身-建议去学习 Andrew Ng 的视频（Ng 的视频绝对是权威，这个毋庸置疑）编码能力强 - 建议看我们的《机器学习实战-教学版》编码能力弱 - 建议看我们的《机器学习实战-讨论版》，不过在看理论的时候，看 教学版-理论部分；讨论版的废话太多，不过在讲解代码的时候是一行一行讲解的；所以，根据自己的需求，自由的组合。【免费】数学教学视频 - 可汗学院 入门篇@于振梓 推荐: 可汗学院-网易公开课概率统计线性代数可汗学院(概率)可汗学院(统计学)可汗学院(线性代数)机器学习视频 - ApacheCN 教学版AcFunB站优酷网易云课堂【免费】机器/深度学习视频 - 吴恩达机器学习深度学习吴恩达机器学习神经网络和深度学习2.深度学习支持版本VersionSupported3.6.x✅2.7.x❌入门基础反向传递: https://www.cnblogs.com/charlotte77/p/5629865.htmlCNN原理: http://www.cnblogs.com/charlotte77/p/7759802.htmlRNN原理: https://blog.csdn.net/qq_39422642/article/details/78676567LSTM原理: https://blog.csdn.net/weixin_42111770/article/details/80900575Pytorch - 教程-- 待更新TensorFlow 2.0 - 教程-- 待更新目录结构:安装指南Keras 快速入门实战项目 1 电影情感分类实战项目 2 汽车燃油效率实战项目 3 优化 过拟合和欠拟合实战项目 4 古诗词自动生成切分（分词）词性标注命名实体识别句法分析WordNet可以被看作是一个同义词词典词干提取（stemming）与词形还原（lemmatization）https://www.biaodianfu.com/nltk.html/ampTensorFlow 2.0学习网址https://github.com/lyhue1991/eat_tensorflow2_in_30_days3.自然语言处理支持版本VersionSupported3.6.x✅2.7.x❌学习过程中-内心复杂的变化！！！自从学习NLP以后，才发现国内与国外的典型区别:1. 对资源的态度是完全相反的:  1) 国内: 就好像为了名气，举办工作装逼的会议，就是没有干货，全部都是象征性的PPT介绍，不是针对在做的各位  2）国外: 就好像是为了推动nlp进步一样，分享者各种干货资料和具体的实现。（特别是: python自然语言处理）2. 论文的实现:   1) 各种高大上的论文实现，却还是没看到一个像样的GitHub项目！（可能我的搜索能力差了点，一直没找到）  2）国外就不举例了，我看不懂！3. 开源的框架  1）国外的开源框架:  tensorflow/pytorch 文档+教程+视频（官方提供）  2) 国内的开源框架: 额额，还真举例不出来！但是牛逼吹得不比国外差！（MXNet虽然有众多国人参与开发，但不能算是国内开源框架。基于MXNet的动手学深度学习(http://zh.d2l.ai & https://discuss.gluon.ai/t/topic/753)中文教程,已经由沐神(李沐)以及阿斯顿·张讲授录制，公开发布(文档+第一季教程+视频）。)每一次深入都要去翻墙，每一次深入都要Google，每一次看着国内的说: 哈工大、讯飞、中科大、百度、阿里多牛逼，但是资料还是得国外去找！有时候真的挺恨的！真的有点瞧不起自己国内的技术环境！当然谢谢国内很多博客大佬，特别是一些入门的Demo和基本概念。【深入的水平有限，没看懂】【入门须知】必须了解: https://github.com/apachecn/AiLearning/tree/master/nlp【入门教程】强烈推荐: PyTorch 自然语言处理: https://github.com/apachecn/NLP-with-PyTorchPython 自然语言处理 第二版: https://usyiyi.github.io/nlp-py-2e-zh推荐一个liuhuanyong大佬整理的nlp全面知识体系: https://liuhuanyong.github.io开源 - 词向量库集合:https://www.cnblogs.com/Darwin2000/p/5786984.htmlhttps://ai.tencent.com/ailab/nlp/embedding.htmlhttps://blog.csdn.net/xiezj007/article/details/85073890https://github.com/Embedding/Chinese-Word-Vectorshttps://github.com/brightmart/nlp_chinese_corpushttps://github.com/codemayq/chinese_chatbot_corpushttps://github.com/candlewill/Dialog_Corpus1.使用场景 （百度公开课）第一部分 入门介绍1.) 自然语言处理入门介绍第二部分 机器翻译2.) 机器翻译第三部分 篇章分析3.1.) 篇章分析-内容概述3.2.) 篇章分析-内容标签3.3.) 篇章分析-情感分析3.4.) 篇章分析-自动摘要第四部分 UNIT-语言理解与交互技术4.) UNIT-语言理解与交互技术应用领域中文分词:构建DAG图动态规划查找，综合正反向（正向加权反向输出）求得DAG最大概率路径使用了SBME语料训练了一套 HMM + Viterbi 模型，解决未登录词问题1.文本分类（Text Classification）文本分类是指标记句子或文档，例如电子邮件垃圾邮件分类和情感分析。下面是一些很好的初学者文本分类数据集。路透社Newswire主题分类（路透社-21578）。1987年路透社出现的一系列新闻文件，按类别编制索引。另见RCV1，RCV2和TRC2。IMDB电影评论情感分类（斯坦福）。来自网站imdb.com的一系列电影评论及其积极或消极的情绪。新闻组电影评论情感分类（康奈尔）。来自网站imdb.com的一系列电影评论及其积极或消极的情绪。有关更多信息，请参阅帖子:单标签文本分类的数据集。情感分析比赛地址: https://www.kaggle.com/c/word2vec-nlp-tutorial方案一(0.86): WordCount + 朴素 Bayes方案二(0.94): LDA + 分类模型（knn/决策树/逻辑回归/svm/xgboost/随机森林）a) 决策树效果不是很好，这种连续特征不太适合的b) 通过参数调整 200 个topic，信息量保存效果较优（计算主题）方案三(0.72): word2vec + CNN说实话: 没有一个好的机器，是调不出来一个好的结果 (: 逃通过AUC 来评估模型的效果2.语言模型（Language Modeling）语言建模涉及开发一种统计模型，用于预测句子中的下一个单词或一个单词中的下一个单词。它是语音识别和机器翻译等任务中的前置任务。它是语音识别和机器翻译等任务中的前置任务。下面是一些很好的初学者语言建模数据集。古腾堡项目，一系列免费书籍，可以用纯文本检索各种语言。还有更多正式的语料库得到了很好的研究; 例如:布朗大学现代美国英语标准语料库。大量英语单词样本。谷歌10亿字语料库。新词发现中文分词新词发现python3利用互信息和左右信息熵的中文分词新词发现https://github.com/zhanzecheng/Chinese_segment_augment句子相似度识别项目地址: https://www.kaggle.com/c/quora-question-pairs解决方案: word2vec + Bi-GRU文本纠错bi-gram + levenshtein3.图像字幕（Image Captioning）mage字幕是为给定图像生成文本描述的任务。下面是一些很好的初学者图像字幕数据集。上下文中的公共对象（COCO）。包含超过12万张带描述的图像的集合Flickr 8K。从flickr.com获取的8千个描述图像的集合。Flickr 30K。从flickr.com获取的3万个描述图像的集合。欲了解更多，请看帖子:探索图像字幕数据集，2016年4.机器翻译（Machine Translation）机器翻译是将文本从一种语言翻译成另一种语言的任务。下面是一些很好的初学者机器翻译数据集。加拿大第36届议会的协调国会议员。成对的英语和法语句子。欧洲议会诉讼平行语料库1996-2011。句子对一套欧洲语言。有大量标准数据集用于年度机器翻译挑战; 看到:统计机器翻译机器翻译Encoder + Decoder(Attention)参考案例: http://pytorch.apachecn.org/cn/tutorials/intermediate/seq2seq_translation_tutorial.html5.问答系统（Question Answering）问答是一项任务，其中提供了一个句子或文本样本，从中提出问题并且必须回答问题。下面是一些很好的初学者问题回答数据集。斯坦福问题回答数据集（SQuAD）。回答有关维基百科文章的问题。Deepmind问题回答语料库。从每日邮报回答有关新闻文章的问题。亚马逊问答数据。回答有关亚马逊产品的问题。有关更多信息，请参阅帖子:数据集: 我如何获得问答网站的语料库，如Quora或Yahoo Answers或Stack Overflow来分析答案质量？6.语音识别（Speech Recognition）语音识别是将口语的音频转换为人类可读文本的任务。下面是一些很好的初学者语音识别数据集。TIMIT声学 - 语音连续语音语料库。不是免费的，但因其广泛使用而上市。口语美国英语和相关的转录。VoxForge。用于构建用于语音识别的开源数据库的项目。LibriSpeech ASR语料库。从LibriVox收集的大量英语有声读物。7.自动文摘（Document Summarization）文档摘要是创建较大文档的简短有意义描述的任务。下面是一些很好的初学者文档摘要数据集。法律案例报告数据集。收集了4000份法律案件及其摘要。TIPSTER文本摘要评估会议语料库。收集了近200份文件及其摘要。英语新闻文本的AQUAINT语料库。不是免费的，而是广泛使用的。新闻文章的语料库。欲了解更多信息:文档理解会议（DUC）任务。在哪里可以找到用于文本摘要的良好数据集？命名实体识别Bi-LSTM CRF参考案例: http://pytorch.apachecn.org/cn/tutorials/beginner/nlp/advanced_tutorial.htmlCRF推荐文档: https://www.jianshu.com/p/55755fc649b1文本摘要抽取式word2vec + textrankword2vec推荐文档: https://www.zhihu.com/question/44832436/answer/266068967textrank推荐文档: https://blog.csdn.net/BaiHuaXiu123/article/details/77847232Graph图计算【慢慢更新】数据集: https://github.com/apachecn/data/tree/master/graph学习资料: spark graphX实战.pdf 【文件太大不方便提供，自己百度】知识图谱知识图谱，我只认 SimmerChan: 【知识图谱-给AI装个大脑】说实话，我是看这博主老哥写的博客长大的，写的真的是深入浅出。我很喜欢，所以就分享给大家，希望你们也喜欢。进一步阅读如果您希望更深入，本节提供了其他数据集列表。维基百科研究中使用的文本数据集数据集: 计算语言学家和自然语言处理研究人员使用的主要文本语料库是什么？斯坦福统计自然语言处理语料库按字母顺序排列的NLP数据集列表该机构NLTK在DL4J上打开深度学习数据NLP数据集国内开放数据集: https://bosonnlp.com/dev/resource参考比赛收集平台pbharrin/machinelearninginactionML Mastery致谢最近无意收到群友推送的链接，发现得到大佬高度的认可，并在热心的推广。在此感谢:量子位人工智能前沿讲习赞助我们"
87,87,hankcs/HanLP,https://github.com/hankcs/HanLP/blob/doc-zh/README.md,Python,"HanLP: Han Language Processing                                                                                   English |    日本語 |    文档 |    论文 |    论坛 |    docker |    ▶️在线运行面向生产环境的多语种自然语言处理工具包，基于PyTorch和TensorFlow 2.x双引擎，目标是普及落地最前沿的NLP技术。HanLP具备功能完善、精度准确、性能高效、语料时新、架构清晰、可自定义的特点。借助世界上最大的多语种语料库，HanLP2.1支持包括简繁中英日俄法德在内的130种语言上的10种联合任务以及多种单任务。HanLP预训练了十几种任务上的数十个模型并且正在持续迭代语料库与模型：功能RESTful多任务单任务模型标注标准分词教程教程教程tok粗分、细分词性标注教程教程教程posCTB、PKU、863命名实体识别教程教程教程nerPKU、MSRA、OntoNotes依存句法分析教程教程教程depSD、UD、PMT成分句法分析教程教程教程conChinese Tree Bank语义依存分析教程教程教程sdpCSDP语义角色标注教程教程教程srlChinese Proposition Bank抽象意义表示教程暂无教程amrCAMR指代消解教程暂无暂无暂无OntoNotes语义文本相似度教程暂无教程sts暂无文本风格转换教程暂无暂无暂无暂无关键词短语提取教程暂无暂无暂无暂无抽取式自动摘要教程暂无暂无暂无暂无生成式自动摘要教程暂无暂无暂无暂无文本语法纠错教程暂无暂无暂无暂无文本分类教程暂无暂无暂无暂无情感分析教程暂无暂无暂无[-1,+1]语种检测教程暂无教程暂无ISO 639-1编码词干提取、词法语法特征提取请参考英文教程；词向量和完形填空请参考相应文档。简繁转换、拼音、新词发现、文本聚类请参考1.x教程。量体裁衣，HanLP提供RESTful和native两种API，分别面向轻量级和海量级两种场景。无论何种API何种语言，HanLP接口在语义上保持一致，在代码上坚持开源。如果您在研究中使用了HanLP，请引用我们的EMNLP论文。轻量级RESTful API仅数KB，适合敏捷开发、移动APP等场景。简单易用，无需GPU配环境，秒速安装。语料更多、模型更大、精度更高，强烈推荐。服务器GPU算力有限，匿名用户配额较少，建议申请免费公益API秘钥auth。Pythonpip install hanlp_restful创建客户端，填入服务器地址和秘钥：from hanlp_restful import HanLPClientHanLP = HanLPClient('https://www.hanlp.com/api', auth=None, language='zh') # auth不填则匿名，zh中文，mul多语种Golang安装 go get -u github.com/hankcs/gohanlp@main ，创建客户端，填入服务器地址和秘钥：HanLP := hanlp.HanLPClient(hanlp.WithAuth(\""\""),hanlp.WithLanguage(\""zh\"")) // auth不填则匿名，zh中文，mul多语种Java在pom.xml中添加依赖：<dependency>    <groupId>com.hankcs.hanlp.restful</groupId>    <artifactId>hanlp-restful</artifactId>    <version>0.0.12</version></dependency>创建客户端，填入服务器地址和秘钥：HanLPClient HanLP = new HanLPClient(\""https://www.hanlp.com/api\"", null, \""zh\""); // auth不填则匿名，zh中文，mul多语种快速上手无论何种开发语言，调用parse接口，传入一篇文章，得到HanLP精准的分析结果。HanLP.parse(\""2021年HanLPv2.1为生产环境带来次世代最先进的多语种NLP技术。阿婆主来到北京立方庭参观自然语义科技公司。\"")更多功能包括语义相似度、风格转换、指代消解等，请参考文档和测试用例。海量级native API依赖PyTorch、TensorFlow等深度学习技术，适合专业NLP工程师、研究者以及本地海量数据场景。要求Python 3.6至3.10，支持Windows，推荐*nix。可以在CPU上运行，推荐GPU/TPU。安装PyTorch版：pip install hanlpHanLP每次发布都通过了Linux、macOS和Windows上Python3.6至3.10的单元测试，不存在安装问题。HanLP发布的模型分为多任务和单任务两种，多任务速度快省显存，单任务精度高更灵活。多任务模型HanLP的工作流程为加载模型然后将其当作函数调用，例如下列联合多任务模型：import hanlpHanLP = hanlp.load(hanlp.pretrained.mtl.CLOSE_TOK_POS_NER_SRL_DEP_SDP_CON_ELECTRA_SMALL_ZH) # 世界最大中文语料库HanLP(['2021年HanLPv2.1为生产环境带来次世代最先进的多语种NLP技术。', '阿婆主来到北京立方庭参观自然语义科技公司。'])Native API的输入单位为句子，需使用多语种分句模型或基于规则的分句函数先行分句。RESTful和native两种API的语义设计完全一致，用户可以无缝互换。简洁的接口也支持灵活的参数，常用的技巧有：灵活的tasks任务调度，任务越少，速度越快，详见教程。在内存有限的场景下，用户还可以删除不需要的任务达到模型瘦身的效果。高效的trie树自定义词典，以及强制、合并、校正3种规则，请参考demo和文档。规则系统的效果将无缝应用到后续统计模型，从而快速适应新领域。单任务模型根据我们的最新研究，多任务学习的优势在于速度和显存，然而精度往往不如单任务模型。所以，HanLP预训练了许多单任务模型并设计了优雅的流水线模式将其组装起来。import hanlpHanLP = hanlp.pipeline() \\    .append(hanlp.utils.rules.split_sentence, output_key='sentences') \\    .append(hanlp.load('FINE_ELECTRA_SMALL_ZH'), output_key='tok') \\    .append(hanlp.load('CTB9_POS_ELECTRA_SMALL'), output_key='pos') \\    .append(hanlp.load('MSRA_NER_ELECTRA_SMALL_ZH'), output_key='ner', input_key='tok') \\    .append(hanlp.load('CTB9_DEP_ELECTRA_SMALL', conll=0), output_key='dep', input_key='tok')\\    .append(hanlp.load('CTB9_CON_ELECTRA_SMALL'), output_key='con', input_key='tok')HanLP('2021年HanLPv2.1为生产环境带来次世代最先进的多语种NLP技术。阿婆主来到北京立方庭参观自然语义科技公司。')更多功能，请参考demo和文档了解更多模型与用法。输出格式无论何种API何种开发语言何种自然语言，HanLP的输出统一为json格式兼容dict的Document:{  \""tok/fine\"": [    [\""2021年\"", \""HanLPv2.1\"", \""为\"", \""生产\"", \""环境\"", \""带来\"", \""次\"", \""世代\"", \""最\"", \""先进\"", \""的\"", \""多\"", \""语种\"", \""NLP\"", \""技术\"", \""。\""],    [\""阿婆主\"", \""来到\"", \""北京\"", \""立方庭\"", \""参观\"", \""自然\"", \""语义\"", \""科技\"", \""公司\"", \""。\""]  ],  \""tok/coarse\"": [    [\""2021年\"", \""HanLPv2.1\"", \""为\"", \""生产\"", \""环境\"", \""带来\"", \""次世代\"", \""最\"", \""先进\"", \""的\"", \""多语种\"", \""NLP\"", \""技术\"", \""。\""],    [\""阿婆主\"", \""来到\"", \""北京立方庭\"", \""参观\"", \""自然语义科技公司\"", \""。\""]  ],  \""pos/ctb\"": [    [\""NT\"", \""NR\"", \""P\"", \""NN\"", \""NN\"", \""VV\"", \""JJ\"", \""NN\"", \""AD\"", \""JJ\"", \""DEG\"", \""CD\"", \""NN\"", \""NR\"", \""NN\"", \""PU\""],    [\""NN\"", \""VV\"", \""NR\"", \""NR\"", \""VV\"", \""NN\"", \""NN\"", \""NN\"", \""NN\"", \""PU\""]  ],  \""pos/pku\"": [    [\""t\"", \""nx\"", \""p\"", \""vn\"", \""n\"", \""v\"", \""b\"", \""n\"", \""d\"", \""a\"", \""u\"", \""a\"", \""n\"", \""nx\"", \""n\"", \""w\""],    [\""n\"", \""v\"", \""ns\"", \""ns\"", \""v\"", \""n\"", \""n\"", \""n\"", \""n\"", \""w\""]  ],  \""pos/863\"": [    [\""nt\"", \""w\"", \""p\"", \""v\"", \""n\"", \""v\"", \""a\"", \""nt\"", \""d\"", \""a\"", \""u\"", \""a\"", \""n\"", \""ws\"", \""n\"", \""w\""],    [\""n\"", \""v\"", \""ns\"", \""n\"", \""v\"", \""n\"", \""n\"", \""n\"", \""n\"", \""w\""]  ],  \""ner/pku\"": [    [],    [[\""北京立方庭\"", \""ns\"", 2, 4], [\""自然语义科技公司\"", \""nt\"", 5, 9]]  ],  \""ner/msra\"": [    [[\""2021年\"", \""DATE\"", 0, 1], [\""HanLPv2.1\"", \""ORGANIZATION\"", 1, 2]],    [[\""北京\"", \""LOCATION\"", 2, 3], [\""立方庭\"", \""LOCATION\"", 3, 4], [\""自然语义科技公司\"", \""ORGANIZATION\"", 5, 9]]  ],  \""ner/ontonotes\"": [    [[\""2021年\"", \""DATE\"", 0, 1], [\""HanLPv2.1\"", \""ORG\"", 1, 2]],    [[\""北京立方庭\"", \""FAC\"", 2, 4], [\""自然语义科技公司\"", \""ORG\"", 5, 9]]  ],  \""srl\"": [    [[[\""2021年\"", \""ARGM-TMP\"", 0, 1], [\""HanLPv2.1\"", \""ARG0\"", 1, 2], [\""为生产环境\"", \""ARG2\"", 2, 5], [\""带来\"", \""PRED\"", 5, 6], [\""次世代最先进的多语种NLP技术\"", \""ARG1\"", 6, 15]], [[\""最\"", \""ARGM-ADV\"", 8, 9], [\""先进\"", \""PRED\"", 9, 10], [\""技术\"", \""ARG0\"", 14, 15]]],    [[[\""阿婆主\"", \""ARG0\"", 0, 1], [\""来到\"", \""PRED\"", 1, 2], [\""北京立方庭\"", \""ARG1\"", 2, 4]], [[\""阿婆主\"", \""ARG0\"", 0, 1], [\""参观\"", \""PRED\"", 4, 5], [\""自然语义科技公司\"", \""ARG1\"", 5, 9]]]  ],  \""dep\"": [    [[6, \""tmod\""], [6, \""nsubj\""], [6, \""prep\""], [5, \""nn\""], [3, \""pobj\""], [0, \""root\""], [8, \""amod\""], [15, \""nn\""], [10, \""advmod\""], [15, \""rcmod\""], [10, \""assm\""], [13, \""nummod\""], [15, \""nn\""], [15, \""nn\""], [6, \""dobj\""], [6, \""punct\""]],    [[2, \""nsubj\""], [0, \""root\""], [4, \""nn\""], [2, \""dobj\""], [2, \""conj\""], [9, \""nn\""], [9, \""nn\""], [9, \""nn\""], [5, \""dobj\""], [2, \""punct\""]]  ],  \""sdp\"": [    [[[6, \""Time\""]], [[6, \""Exp\""]], [[5, \""mPrep\""]], [[5, \""Desc\""]], [[6, \""Datv\""]], [[13, \""dDesc\""]], [[0, \""Root\""], [8, \""Desc\""], [13, \""Desc\""]], [[15, \""Time\""]], [[10, \""mDegr\""]], [[15, \""Desc\""]], [[10, \""mAux\""]], [[8, \""Quan\""], [13, \""Quan\""]], [[15, \""Desc\""]], [[15, \""Nmod\""]], [[6, \""Pat\""]], [[6, \""mPunc\""]]],    [[[2, \""Agt\""], [5, \""Agt\""]], [[0, \""Root\""]], [[4, \""Loc\""]], [[2, \""Lfin\""]], [[2, \""ePurp\""]], [[8, \""Nmod\""]], [[9, \""Nmod\""]], [[9, \""Nmod\""]], [[5, \""Datv\""]], [[5, \""mPunc\""]]]  ],  \""con\"": [    [\""TOP\"", [[\""IP\"", [[\""NP\"", [[\""NT\"", [\""2021年\""]]]], [\""NP\"", [[\""NR\"", [\""HanLPv2.1\""]]]], [\""VP\"", [[\""PP\"", [[\""P\"", [\""为\""]], [\""NP\"", [[\""NN\"", [\""生产\""]], [\""NN\"", [\""环境\""]]]]]], [\""VP\"", [[\""VV\"", [\""带来\""]], [\""NP\"", [[\""ADJP\"", [[\""NP\"", [[\""ADJP\"", [[\""JJ\"", [\""次\""]]]], [\""NP\"", [[\""NN\"", [\""世代\""]]]]]], [\""ADVP\"", [[\""AD\"", [\""最\""]]]], [\""VP\"", [[\""JJ\"", [\""先进\""]]]]]], [\""DEG\"", [\""的\""]], [\""NP\"", [[\""QP\"", [[\""CD\"", [\""多\""]]]], [\""NP\"", [[\""NN\"", [\""语种\""]]]]]], [\""NP\"", [[\""NR\"", [\""NLP\""]], [\""NN\"", [\""技术\""]]]]]]]]]], [\""PU\"", [\""。\""]]]]]],    [\""TOP\"", [[\""IP\"", [[\""NP\"", [[\""NN\"", [\""阿婆主\""]]]], [\""VP\"", [[\""VP\"", [[\""VV\"", [\""来到\""]], [\""NP\"", [[\""NR\"", [\""北京\""]], [\""NR\"", [\""立方庭\""]]]]]], [\""VP\"", [[\""VV\"", [\""参观\""]], [\""NP\"", [[\""NN\"", [\""自然\""]], [\""NN\"", [\""语义\""]], [\""NN\"", [\""科技\""]], [\""NN\"", [\""公司\""]]]]]]]], [\""PU\"", [\""。\""]]]]]]  ]}特别地，Python RESTful和native API支持基于等宽字体的可视化，能够直接将语言学结构在控制台内可视化出来：HanLP(['2021年HanLPv2.1为生产环境带来次世代最先进的多语种NLP技术。', '阿婆主来到北京立方庭参观自然语义科技公司。']).pretty_print()Dep Tree    \tToken    \tRelati\tPoS\tTok      \tNER Type        \tTok      \tSRL PA1     \tTok      \tSRL PA2     \tTok      \tPoS    3       4       5       6       7       8       9 ────────────\t─────────\t──────\t───\t─────────\t────────────────\t─────────\t────────────\t─────────\t────────────\t─────────\t───────────────────────────────────────────────────────── ┌─────────►\t2021年    \ttmod  \tNT \t2021年    \t───►DATE        \t2021年    \t───►ARGM-TMP\t2021年    \t            \t2021年    \tNT ───────────────────────────────────────────►NP ───┐    │┌────────►\tHanLPv2.1\tnsubj \tNR \tHanLPv2.1\t───►ORGANIZATION\tHanLPv2.1\t───►ARG0    \tHanLPv2.1\t            \tHanLPv2.1\tNR ───────────────────────────────────────────►NP────┤    ││┌─►┌─────\t为        \tprep  \tP  \t为        \t                \t为        \t◄─┐         \t为        \t            \t为        \tP ───────────┐                                       │    │││  │  ┌─►\t生产       \tnn    \tNN \t生产       \t                \t生产       \t  ├►ARG2    \t生产       \t            \t生产       \tNN ──┐       ├────────────────────────►PP ───┐       │    │││  └─►└──\t环境       \tpobj  \tNN \t环境       \t                \t环境       \t◄─┘         \t环境       \t            \t环境       \tNN ──┴►NP ───┘                               │       │   ┌┼┴┴────────\t带来       \troot  \tVV \t带来       \t                \t带来       \t╟──►PRED    \t带来       \t            \t带来       \tVV ──────────────────────────────────┐       │       │   ││       ┌─►\t次        \tamod  \tJJ \t次        \t                \t次        \t◄─┐         \t次        \t            \t次        \tJJ ───►ADJP──┐                       │       ├►VP────┤   ││  ┌───►└──\t世代       \tnn    \tNN \t世代       \t                \t世代       \t  │         \t世代       \t            \t世代       \tNN ───►NP ───┴►NP ───┐               │       │       │   ││  │    ┌─►\t最        \tadvmod\tAD \t最        \t                \t最        \t  │         \t最        \t───►ARGM-ADV\t最        \tAD ───────────►ADVP──┼►ADJP──┐       ├►VP ───┘       ├►IP││  │┌──►├──\t先进       \trcmod \tJJ \t先进       \t                \t先进       \t  │         \t先进       \t╟──►PRED    \t先进       \tJJ ───────────►VP ───┘       │       │               │   ││  ││   └─►\t的        \tassm  \tDEG\t的        \t                \t的        \t  ├►ARG1    \t的        \t            \t的        \tDEG──────────────────────────┤       │               │   ││  ││   ┌─►\t多        \tnummod\tCD \t多        \t                \t多        \t  │         \t多        \t            \t多        \tCD ───►QP ───┐               ├►NP ───┘               │   ││  ││┌─►└──\t语种       \tnn    \tNN \t语种       \t                \t语种       \t  │         \t语种       \t            \t语种       \tNN ───►NP ───┴────────►NP────┤                       │   ││  │││  ┌─►\tNLP      \tnn    \tNR \tNLP      \t                \tNLP      \t  │         \tNLP      \t            \tNLP      \tNR ──┐                       │                       │   │└─►└┴┴──┴──\t技术       \tdobj  \tNN \t技术       \t                \t技术       \t◄─┘         \t技术       \t───►ARG0    \t技术       \tNN ──┴────────────────►NP ───┘                       │   └──────────►\t。        \tpunct \tPU \t。        \t                \t。        \t            \t。        \t            \t。        \tPU ──────────────────────────────────────────────────┘   Dep Tree    \tTok\tRelat\tPo\tTok\tNER Type        \tTok\tSRL PA1 \tTok\tSRL PA2 \tTok\tPo    3       4       5       6 ────────────\t───\t─────\t──\t───\t────────────────\t───\t────────\t───\t────────\t───\t────────────────────────────────         ┌─►\t阿婆主\tnsubj\tNN\t阿婆主\t                \t阿婆主\t───►ARG0\t阿婆主\t───►ARG0\t阿婆主\tNN───────────────────►NP ───┐   ┌┬────┬──┴──\t来到 \troot \tVV\t来到 \t                \t来到 \t╟──►PRED\t来到 \t        \t来到 \tVV──────────┐               │   ││    │  ┌─►\t北京 \tnn   \tNR\t北京 \t───►LOCATION    \t北京 \t◄─┐     \t北京 \t        \t北京 \tNR──┐       ├►VP ───┐       │   ││    └─►└──\t立方庭\tdobj \tNR\t立方庭\t───►LOCATION    \t立方庭\t◄─┴►ARG1\t立方庭\t        \t立方庭\tNR──┴►NP ───┘       │       │   │└─►┌───────\t参观 \tconj \tVV\t参观 \t                \t参观 \t        \t参观 \t╟──►PRED\t参观 \tVV──────────┐       ├►VP────┤   │   │  ┌───►\t自然 \tnn   \tNN\t自然 \t◄─┐             \t自然 \t        \t自然 \t◄─┐     \t自然 \tNN──┐       │       │       ├►IP│   │  │┌──►\t语义 \tnn   \tNN\t语义 \t  │             \t语义 \t        \t语义 \t  │     \t语义 \tNN  │       ├►VP ───┘       │   │   │  ││┌─►\t科技 \tnn   \tNN\t科技 \t  ├►ORGANIZATION\t科技 \t        \t科技 \t  ├►ARG1\t科技 \tNN  ├►NP ───┘               │   │   └─►└┴┴──\t公司 \tdobj \tNN\t公司 \t◄─┘             \t公司 \t        \t公司 \t◄─┘     \t公司 \tNN──┘                       │   └──────────►\t。  \tpunct\tPU\t。  \t                \t。  \t        \t。  \t        \t。  \tPU──────────────────────────┘   关于标注集含义，请参考《语言学标注规范》及《格式规范》。我们购买、标注或采用了世界上量级最大、种类最多的语料库用于联合多语种多任务学习，所以HanLP的标注集也是覆盖面最广的。训练你自己的领域模型写深度学习模型一点都不难，难的是复现较高的准确率。下列代码展示了如何在sighan2005 PKU语料库上花6分钟训练一个超越学术界state-of-the-art的中文分词模型。tokenizer = TransformerTaggingTokenizer()save_dir = 'data/model/cws/sighan2005_pku_bert_base_96.73'tokenizer.fit(    SIGHAN2005_PKU_TRAIN_ALL,    SIGHAN2005_PKU_TEST,  # Conventionally, no devset is used. See Tian et al. (2020).    save_dir,    'bert-base-chinese',    max_seq_len=300,    char_level=True,    hard_constraint=True,    sampler_builder=SortingSamplerBuilder(batch_size=32),    epochs=3,    adam_epsilon=1e-6,    warmup_steps=0.1,    weight_decay=0.01,    word_dropout=0.1,    seed=1660853059,)tokenizer.evaluate(SIGHAN2005_PKU_TEST, save_dir)其中，由于指定了随机数种子，结果一定是96.73。不同于那些虚假宣传的学术论文或商业项目，HanLP保证所有结果可复现。如果你有任何质疑，我们将当作最高优先级的致命性bug第一时间排查问题。请参考demo了解更多训练脚本。性能langcorporamodeltokposnerdepconsrlsdplemfeaamrfinecoarsectbpku863udpkumsraontonotesSemEval16DMPASPSDmulUD2.7OntoNotes5small98.62----93.23--74.4279.1076.8570.63-91.1993.6785.3487.7184.51-base98.97----90.32--80.3278.7471.2373.63-92.6096.0481.1985.0882.13-zhopensmall97.25-96.66-----95.0084.5787.6273.4084.57------base97.50-97.07-----96.0487.1189.8477.7887.11------closesmall96.7095.9396.8797.5695.05-96.2295.7476.7984.4488.1375.8174.28------base97.5296.4496.9997.5995.29-96.4895.7277.7785.2988.5776.5273.76------ernie96.9597.2996.7697.6495.22-97.3196.4777.9585.6789.1778.5174.10------根据我们的最新研究，单任务学习的性能往往优于多任务学习。在乎精度甚于速度的话，建议使用单任务模型。HanLP采用的数据预处理与拆分比例与流行方法未必相同，比如HanLP采用了完整版的MSRA命名实体识别语料，而非大众使用的阉割版；HanLP使用了语法覆盖更广的Stanford Dependencies标准，而非学术界沿用的Zhang and Clark (2008)标准；HanLP提出了均匀分割CTB的方法，而不采用学术界不均匀且遗漏了51个黄金文件的方法。HanLP开源了一整套语料预处理脚本与相应语料库，力图推动中文NLP的透明化。总之，HanLP只做我们认为正确、先进的事情，而不一定是流行、权威的事情。引用如果你在研究中使用了HanLP，请按如下格式引用：@inproceedings{he-choi-2021-stem,    title = \""The Stem Cell Hypothesis: Dilemma behind Multi-Task Learning with Transformer Encoders\"",    author = \""He, Han and Choi, Jinho D.\"",    booktitle = \""Proceedings of the 2021 Conference on Empirical Methods in Natural Language Processing\"",    month = nov,    year = \""2021\"",    address = \""Online and Punta Cana, Dominican Republic\"",    publisher = \""Association for Computational Linguistics\"",    url = \""https://aclanthology.org/2021.emnlp-main.451\"",    pages = \""5555--5577\"",    abstract = \""Multi-task learning with transformer encoders (MTL) has emerged as a powerful technique to improve performance on closely-related tasks for both accuracy and efficiency while a question still remains whether or not it would perform as well on tasks that are distinct in nature. We first present MTL results on five NLP tasks, POS, NER, DEP, CON, and SRL, and depict its deficiency over single-task learning. We then conduct an extensive pruning analysis to show that a certain set of attention heads get claimed by most tasks during MTL, who interfere with one another to fine-tune those heads for their own objectives. Based on this finding, we propose the Stem Cell Hypothesis to reveal the existence of attention heads naturally talented for many tasks that cannot be jointly trained to create adequate embeddings for all of those tasks. Finally, we design novel parameter-free probes to justify our hypothesis and demonstrate how attention heads are transformed across the five tasks during MTL through label analysis.\"",}License源代码HanLP源代码的授权协议为 Apache License 2.0，可免费用做商业用途。请在产品说明中附加HanLP的链接和授权协议。HanLP受版权法保护，侵权必究。自然语义（青岛）科技有限公司HanLP从v1.7版起独立运作，由自然语义（青岛）科技有限公司作为项目主体，主导后续版本的开发，并拥有后续版本的版权。大快搜索HanLP v1.3~v1.65版由大快搜索主导开发，继续完全开源，大快搜索拥有相关版权。上海林原公司HanLP 早期得到了上海林原公司的大力支持，并拥有1.28及前序版本的版权，相关版本也曾在上海林原公司网站发布。预训练模型机器学习模型的授权在法律上没有定论，但本着尊重开源语料库原始授权的精神，如不特别说明，HanLP的多语种模型授权沿用CC BY-NC-SA 4.0，中文模型授权为仅供研究与教学使用。Referenceshttps://hanlp.hankcs.com/docs/references.html"
88,88,langchain-ai/langchain,https://github.com/langchain-ai/langchain/blob/master/README.md,Python,"🦜️🔗 LangChain⚡ Building applications with LLMs through composability ⚡Looking for the JS/TS version? Check out LangChain.js.Production Support: As you move your LangChains into production, we'd love to offer more hands-on support.Fill out this form to share more about what you're building, and our team will get in touch.🚨Breaking Changes for select chains (SQLDatabase) on 7/28/23In an effort to make langchain leaner and safer, we are moving select chains to langchain_experimental.This migration has already started, but we are remaining backwards compatible until 7/28.On that date, we will remove functionality from langchain.Read more about the motivation and the progress here.Read how to migrate your code here.Quick Installpip install langchainorpip install langsmith && conda install langchain -c conda-forge🤔 What is this?Large language models (LLMs) are emerging as a transformative technology, enabling developers to build applications that they previously could not. However, using these LLMs in isolation is often insufficient for creating a truly powerful app - the real power comes when you can combine them with other sources of computation or knowledge.This library aims to assist in the development of those types of applications. Common examples of these applications include:❓ Question Answering over specific documentsDocumentationEnd-to-end Example: Question Answering over Notion Database💬 ChatbotsDocumentationEnd-to-end Example: Chat-LangChain🤖 AgentsDocumentationEnd-to-end Example: GPT+WolframAlpha📖 DocumentationPlease see here for full documentation on:Getting started (installation, setting up the environment, simple examples)How-To examples (demos, integrations, helper functions)Reference (full API docs)Resources (high-level explanation of core concepts)🚀 What can this help with?There are six main areas that LangChain is designed to help with.These are, in increasing order of complexity:📃 LLMs and Prompts:This includes prompt management, prompt optimization, a generic interface for all LLMs, and common utilities for working with LLMs.🔗 Chains:Chains go beyond a single LLM call and involve sequences of calls (whether to an LLM or a different utility). LangChain provides a standard interface for chains, lots of integrations with other tools, and end-to-end chains for common applications.📚 Data Augmented Generation:Data Augmented Generation involves specific types of chains that first interact with an external data source to fetch data for use in the generation step. Examples include summarization of long pieces of text and question/answering over specific data sources.🤖 Agents:Agents involve an LLM making decisions about which Actions to take, taking that Action, seeing an Observation, and repeating that until done. LangChain provides a standard interface for agents, a selection of agents to choose from, and examples of end-to-end agents.🧠 Memory:Memory refers to persisting state between calls of a chain/agent. LangChain provides a standard interface for memory, a collection of memory implementations, and examples of chains/agents that use memory.🧐 Evaluation:[BETA] Generative models are notoriously hard to evaluate with traditional metrics. One new way of evaluating them is using language models themselves to do the evaluation. LangChain provides some prompts/chains for assisting in this.For more information on these concepts, please see our full documentation.💁 ContributingAs an open-source project in a rapidly developing field, we are extremely open to contributions, whether it be in the form of a new feature, improved infrastructure, or better documentation.For detailed information on how to contribute, see here."
89,89,XX-net/XX-Net,https://github.com/XX-net/XX-Net/blob/master/README.md,Python,"🚀 XX-Net (翻墙VPN)这是一个可靠的翻墙系统，已经连续运行 8 年！我们不去研究墙有什么缺陷，因为所有的缺陷都会被慢慢的补上。我们的策略是化身为普通流量，完全无法区分，最终隐身在茫茫的网络连接中。。。🔌 功能特性支持多平台： Android/iOS/Windows/Mac/Linux采用独特的混淆算法，让您的流量在网络中无法被识别开源绿色软件，无需安装，可以支持多台设备同时连接模拟Chrome浏览器行为，完全无法识别，稳定翻墙内置 ChatGPT，每个套餐赠送 ChatGPT-3.5 一百万token官网下载: https://xx-net.comTelegram: https://t.me/xxnetshareTwitter: https://twitter.com/XXNetDev中文帮助文档      English Document      فارسی صفحه اصلی最新公告：2023-08-15新版 5.5.0, 提升连接性能5.1.0，内置ChatGPT原来是4.x.x 老版本的，需要重新下载新版安装，不能应用内升级。提示：有问题请先看Wiki文档提问 前，请先看最近讨论主题 ，避免重复发问。"
0,0,nightscout/cgm-remote-monitor,https://github.com/nightscout/cgm-remote-monitor/blob/master/README.md,JavaScript,"Nightscout Web Monitor (a.k.a. cgm-remote-monitor) This acts as a web-based CGM (Continuous Glucose Monitor) to allowmultiple caregivers to remotely view a patient's glucose data inreal time.  The server reads a MongoDB which is intended to be datafrom a physical CGM, where it sends new SGV (sensor glucose values) asthe data becomes available.  The data is then displayed graphicallyand blood glucose values are predicted 0.5 hours ahead using anautoregressive second order model.  Alarms are generated for high andlow values, which can be cleared by any watcher of the data.Looking for documentation?End user?Nightscout documentation is currently split to two locations. This page lists all the configuration options inNightscout and is useful for users who've already gone through the installation process. IF you're lookingfor the documentation that looks like it's written for non-programmers, that's located at nightscout.github.io.Older documentation is available at nightscout.info.Developer?See CONTRIBUTING.md#WeAreNotWaiting and this is why.Table of ContentsInstallSupported configurations:Recommended minimum browser versions for using Nightscout:Windows installation software requirements:Installation notes for users with nginx or Apache reverse proxy for SSL/TLS offloading:Installation notes for Microsoft Azure, Windows:DevelopmentUsageUpdating my version?Configure my uploader to matchNightscout APIExample QueriesEnvironmentRequiredFeaturesAlarmsCorePredefined values for your browser settings (optional)Predefined values for your server settings (optional)ViewsPluginsDefault Pluginsdelta (BG Delta)direction (BG Direction)upbat (Uploader Battery)timeago (Time Ago)devicestatus (Device Status)errorcodes (CGM Error Codes)ar2 (AR2 Forecasting)simplealarms (Simple BG Alarms)profile (Treatment Profile)Advanced Plugins:careportal (Careportal)boluscalc (Bolus Wizard)food (Custom Foods)rawbg (Raw BG)iob (Insulin-on-Board)cob (Carbs-on-Board)bwp (Bolus Wizard Preview)cage (Cannula Age)sage (Sensor Age)iage (Insulin Age)bage (Battery Age)treatmentnotify (Treatment Notifications)basal (Basal Profile)bolus (Bolus Rendering)bridge (Share2Nightscout bridge)mmconnect (MiniMed Connect bridge)pump (Pump Monitoring)openaps (OpenAPS)loop (Loop)override (Override Mode)xdripjs (xDrip-js)alexa (Amazon Alexa)googlehome (Google Home/DialogFLow)speech (Speech)cors (CORS)Extended SettingsPushoverIFTTT MakerTreatment ProfileSetting environment variablesVagrant installMore questions?Browser testing suite provided byLicenseInstallSupported configurations:If you plan to use Nightscout, we recommend using Heroku as this is free and easy to use.We used to recommend hostig at Azure, but the resource needs of Nightscout have grown over the years and Azure won't comfortably run Nightscoutanymore in the free tier. If you're hosting in Azure and looking to update your site, we recommend youswitch from Azure to Herokuas you're likely to hit issues in the process of updating the site.Nightscout Setup with Heroku (recommended)While you can install Nightscout on a virtual server or a Raspberry Pi, we do not recommend this unless you have at least someexperience hosting Node applications and development using the toolchain in use with Nightscout. Heroku automates all of thehosting for you and even many of the dvelopers run their production sites in Heroku due to convenience.If you're a hosting provider and want to provide our users additional free hosting options,you're welcome to issue a documentation pull request with instructions on how to setup Nightscout on your system.Recommended minimum browser versions for using Nightscout:Older versions of the browsers might work, but are untested.Android 4iOS 6Chrome 35Edge 17Firefox 61Opera 12.1Safari 6 (macOS 10.7)Internet Explorer: not supportedSome features may not work with devices/browsers on the older end of these requirements.Windows installation software requirements:Node.js Latest Node 12 LTS. Node versions that do not have the latest security patches will not work. Use Install instructions for Node or use bin/setup.sh)MongoDB 3.x or later. MongoDB 2.4 is only supported for Raspberry Pi.As a non-root user clone this repo then install dependencies into the root of the project:$ npm installInstallation notes for users with nginx or Apache reverse proxy for SSL/TLS offloading:Your site redirects insecure connections to https by default. If you use a reverse proxy like nginx or Apache to handle the connection security for you, make sure it sets the X-Forwarded-Proto header. Otherwise nightscout will be unable to know if it was called through a secure connection and will try to redirect you to the https version. If you're unable to set this Header, you can change the INSECURE_USE_HTTP setting in nightscout to true in order to allow insecure connections without being redirected.In case you use a proxy. Do not use an external network interfaces for hosting Nightscout. Make sure the unsecure port is not available from a remote network connectionHTTP Strict Transport Security (HSTS) headers are enabled by default, use settings SECURE_HSTS_HEADER and SECURE_HSTS_HEADER_*See Predefined values for your server settings for more detailsInstallation notes for Microsoft Azure, Windows:If deploying the software to Microsoft Azure, you must set ** in the app settings for WEBSITE_NODE_DEFAULT_VERSION and SCM_COMMAND_IDLE_TIMEOUT before you deploy the latest Nightscout or the site deployment will likely fail. Other hosting environments do not require this setting. Additionally, if using the Azure free hosting tier, the installation might fail due to resource constraints imposed by Azure on the free hosting. Please set the following settings to the environment in Azure:WEBSITE_NODE_DEFAULT_VERSION=10.15.2SCM_COMMAND_IDLE_TIMEOUT=300See install MongoDB, Node.js, and Nightscouton a single Windows system. if you want to host your Nightscout outside of the cloud. Although the instructions are intended for Windows Server the procedure is compatible with client versions of Windows such as Windows 7 and Windows 10.If you deploy to Windows and want to develop or test you need to install Cygwin (use setup-x86_64.exe and make sure to install build-essential package. Test your configuration by executing make and check if all tests are ok.DevelopmentWant to help with development, or just see how Nightscout works? Great! See CONTRIBUTING.md for development-related documentation.UsageThe data being uploaded from the server to the client is from a MongoDB server such as [MongoDB Atlas][https://www.mongodb.com].Updating my version?The easiest way to update your version of cgm-remote-monitor to the latest version is to use the update tool. A step-by-step guide is available [here][http://www.nightscout.info/wiki/welcome/how-to-update-to-latest-cgm-remote-monitor-aka-cookie].To downgrade to an older version, follow [this guide][http://www.nightscout.info/wiki/welcome/how-to-deploy-an-older-version-of-nightscout].Configure my uploader to matchUse the autoconfigure tool to sync an uploader to your config.Nightscout APIThe Nightscout API enables direct access to your data without the need for Mongo access.You can find CGM data in /api/v1/entries, Care Portal Treatments in /api/v1/treatments, and Treatment Profiles in /api/v1/profile.The server status and settings are available from /api/v1/status.json.By default the /entries and /treatments APIs limit results to the the most recent 10 values from the last 2 days.You can get many more results, by using the count, date, dateString, and created_at parameters, depending on the type of data you're looking for.Once you've installed Nightscout, you can access API documentation by loading /api-docs/ URL in your instance.Example Queries(replace http://localhost:1337 with your own URL)100's: http://localhost:1337/api/v1/entries.json?find[sgv]=100Count of 100's in a month: http://localhost:1337/api/v1/count/entries/where?find[dateString][$gte]=2016-09&find[dateString][$lte]=2016-10&find[sgv]=100BGs between 2 days: http://localhost:1337/api/v1/entries/sgv.json?find[dateString][$gte]=2015-08-28&find[dateString][$lte]=2015-08-30Juice Box corrections in a year: http://localhost:1337/api/v1/treatments.json?count=1000&find[carbs]=15&find[eventType]=Carb+Correction&find[created_at][$gte]=2015Boluses over 2U: http://localhost:1337/api/v1/treatments.json?find[insulin][$gte]=2The API is Swagger enabled, so you can generate client code to make working with the API easy.To learn more about the Nightscout API, visit https://YOUR-SITE.com/api-docs/ or review swagger.yaml.EnvironmentVARIABLE (default) - descriptionRequiredMONGODB_URI - The connection string for your Mongo database. Something like mongodb://sally:sallypass@ds099999.mongolab.com:99999/nightscout.API_SECRET - A secret passphrase that must be at least 12 characters long.MONGODB_COLLECTION (entries) - The Mongo collection where CGM entries are stored.DISPLAY_UNITS (mg/dl) - Options are mg/dl or mmol/L (or just mmol).  Setting to mmol/L puts the entire server into mmol/L mode by default, no further settings needed.FeaturesENABLE - Used to enable optional features, expects a space delimited list, such as: careportal rawbg iob, see plugins belowDISABLE - Used to disable default features, expects a space delimited list, such as: direction upbat, see plugins belowBASE_URL - Used for building links to your site's API, i.e. Pushover callbacks, usually the URL of your Nightscout site.AUTH_DEFAULT_ROLES (readable) - possible values readable, denied, or any valid rolename.  When readable, anyone can view Nightscout without a token.Setting it to denied will require a token from every visit, using status-only will enable api-secret based login.IMPORT_CONFIG - Used to import settings and extended settings from a url such as a gist.  Structure of file should be something like: {\""settings\"": {\""theme\"": \""colors\""}, \""extendedSettings\"": {\""upbat\"": {\""enableAlerts\"": true}}}TREATMENTS_AUTH (on) - possible values on or off. Deprecated, if set to off the careportal role will be added to AUTH_DEFAULT_ROLESAlarmsThese alarm setting affect all delivery methods (browser, Pushover, IFTTT, etc.). Values and settings entered here will be the defaults for new browser views, but will be overridden if different choices are made in the settings UI.ALARM_TYPES (simple if any BG_* ENV's are set, otherwise predict) - currently 2 alarm types are supported, and can be used independently or combined.  The simple alarm type only compares the current BG to BG_ thresholds above, the predict alarm type uses highly tuned formula that forecasts where the BG is going based on it's trend.  predict DOES NOT currently use any of the BG_* ENV'sBG_HIGH (260) - the high BG outside the target range that is considered urgent (interprets units based on DISPLAY_UNITS setting)BG_TARGET_TOP (180) - the top of the target range, also used to draw the line on the chart (interprets units based on DISPLAY_UNITS setting)BG_TARGET_BOTTOM (80) - the bottom of the target range, also used to draw the line on the chart (interprets units based on DISPLAY_UNITS setting)BG_LOW (55) - the low BG outside the target range that is considered urgent (interprets units based on DISPLAY_UNITS setting)ALARM_URGENT_HIGH (on) - possible values on or offALARM_URGENT_HIGH_MINS (30 60 90 120) - Number of minutes to snooze urgent high alarms, space separated for options in browser, first used for pushoverALARM_HIGH (on) - possible values on or offALARM_HIGH_MINS (30 60 90 120) - Number of minutes to snooze high alarms, space separated for options in browser, first used for pushoverALARM_LOW (on) - possible values on or offALARM_LOW_MINS (15 30 45 60) - Number of minutes to snooze low alarms, space separated for options in browser, first used for pushoverALARM_URGENT_LOW (on) - possible values on or offALARM_URGENT_LOW_MINS (15 30 45) - Number of minutes to snooze urgent low alarms, space separated for options in browser, first used for pushoverALARM_URGENT_MINS (30 60 90 120) - Number of minutes to snooze urgent alarms (that aren't tagged as high or low), space separated for options in browser, first used for pushoverALARM_WARN_MINS (30 60 90 120) - Number of minutes to snooze warning alarms (that aren't tagged as high or low), space separated for options in browser, first used for pushoverCoreMONGO_TREATMENTS_COLLECTION (treatments) -The collection used to store treatments entered in the Care Portal, see the ENABLE env var aboveMONGO_DEVICESTATUS_COLLECTION(devicestatus) - The collection used to store device status information such as uploader batteryMONGO_PROFILE_COLLECTION(profile) - The collection used to store your profilesMONGO_FOOD_COLLECTION(food) - The collection used to store your food databaseMONGO_ACTIVITY_COLLECTION(activity) - The collection used to store activity dataPORT (1337) - The port that the node.js application will listen on.HOSTNAME - The hostname that the node.js application will listen on, null by default for any hostname for IPv6 you may need to use ::.SSL_KEY - Path to your ssl key file, so that ssl(https) can be enabled directly in node.js. If using Let's Encrypt, make this variable the path to your privkey.pem file (private key).SSL_CERT - Path to your ssl cert file, so that ssl(https) can be enabled directly in node.js. If using Let's Encrypt, make this variable the path to fullchain.pem file (cert + ca).SSL_CA - Path to your ssl ca file, so that ssl(https) can be enabled directly in node.js. If using Let's Encrypt, make this variable the path to chain.pem file (chain).HEARTBEAT (60)  - Number of seconds to wait in between database checksDEBUG_MINIFY (true)  - Debug option, setting to false will disable bundle minification to help tracking down error and speed up developmentDE_NORMALIZE_DATES(true) - The Nightscout REST API normalizes all entered dates to UTC zone. Some Nightscout clients have broken date deserialization logic and expect to received back dates in zoned formats. Setting this variable to true causes the REST API to serialize dates sent to Nightscout in zoned format back to zoned format when served to clients over REST.Predefined values for your browser settings (optional)TIME_FORMAT (12)- possible values 12 or 24DAY_START (7.0) - time for start of day (0.0 - 24.0) for features using day time / night time optionsDAY_END (21.0) - time for end of day (0.0 - 24.0) for features using day time / night time optionsNIGHT_MODE (off) - possible values on or offSHOW_RAWBG (never) - possible values always, never or noiseCUSTOM_TITLE (Nightscout) - Title for the main viewTHEME (colors) - possible values default, colors, or colorblindfriendlyALARM_TIMEAGO_WARN (on) - possible values on or offALARM_TIMEAGO_WARN_MINS (15) - minutes since the last reading to trigger a warningALARM_TIMEAGO_URGENT (on) - possible values on or offALARM_TIMEAGO_URGENT_MINS (30) - minutes since the last reading to trigger a urgent alarmSHOW_PLUGINS - enabled plugins that should have their visualizations shown, defaults to all enabledSHOW_FORECAST (ar2) - plugin forecasts that should be shown by default, supports space delimited values such as \""ar2 openaps\""LANGUAGE (en) - language of Nightscout. If not available english is usedCurrently supported language codes are: bg (Български), cs (Čeština), de (Deutsch), dk (Dansk), el (Ελληνικά), en (English), es (Español), fi (Suomi), fr (Français), he (עברית), hr (Hrvatski), hu (magyar), it (Italiano), ko (한국어), nb (Norsk (Bokmål)), nl (Nederlands), pl (Polski), pt (Português (Brasil)), ro (Română), ru (Русский), sk (Slovenčina), sv (Svenska), tr (Turkish), zh_cn (中文（简体)), zh_tw (中文（繁體))SCALE_Y (log) - The type of scaling used for the Y axis of the charts system wide.The default log (logarithmic) option will let you see more detail towards the lower range, while still showing the full CGM range.The linear option has equidistant tick marks; the range used is dynamic so that space at the top of chart isn't wasted.The log-dynamic is similar to the default log options, but uses the same dynamic range and the linear scale.EDIT_MODE (on) - possible values on or off. Enables the icon allowing for editing of treatments in the main view.Predefined values for your server settings (optional)INSECURE_USE_HTTP (false) - Redirect unsafe http traffic to https. Possible values false, or true. Your site redirects to https by default. If you don't want that from Nightscout, but want to implement that with a Nginx or Apache proxy, set INSECURE_USE_HTTP to true. Note: This will allow (unsafe) http traffic to your Nightscout instance and is not recommended.SECURE_HSTS_HEADER (true) - Add HTTP Strict Transport Security (HSTS) header. Possible values false, or true.SECURE_HSTS_HEADER_INCLUDESUBDOMAINS (false) - includeSubdomains options for HSTS. Possible values false, or true.SECURE_HSTS_HEADER_PRELOAD (false) - ask for preload in browsers for HSTS. Possible values false, or true.SECURE_CSP (false) - Add Content Security Policy headers. Possible values false, or true.SECURE_CSP_REPORT_ONLY (false) - If set to true allows to experiment with policies by monitoring (but not enforcing) their effects. Possible values false, or true.ViewsNightscout allows to create custom, simplified views using a predefined set of elements. This option is available under [+] link in the main menu.List of available items:SGV - Sensor Glucose ValueSGV age - time since the last SGV readSGV delta - change of SGV in the last 5 minutesTrend arrow - icon of the SG trendTime - current timeLine break - invisible item that will move following items to the next line (by default all are showing on the same level)All visible items have Size property which allows to customize the view even more. Also, all items may appear multiple times on the view.Apart from adding items, it is possible to customize other aspects of the views, like selecting Color or Black background. The first one will indicate current BG threshold (green = in range; blue = below range; yellow = above range; red = urgent below/above).Show SGV age option will make SGV age item appear Always or only if the predefined threshold is reached: Only after threshold. Breaching SGV age threshold will also make Color background turn grey and strike through SGV.Clock view configurator will generate an URL (available under Open my clock view! link) that could be bookmarked.There are a few default views available from the main menu:Clock - Shows current BG, trend arrow, and time of day. Grey text on a black background.Color - Shows current BG and trend arrow. White text on a color background.Simple - Shows current BG. Grey text on a black background.If you launch one of these views in a fullscreen view in iOS, you can use a left-to-right swipe gesture to exit the view.Split ViewSome users will need easy access to multiple Nightscout views at the same time. We have a special view for this case, accessed on /split path on your Nightscout URL. The view supports any number of sites between 1 to 8 way split, where the content for the screen can be loaded from multiple Nightscout instances. Note you still need to host separate instances for each Nightscout being monitored including the one that hosts the split view page - these variables only add the ability to load multiple views into one browser page. To set the URLs from which the content is loaded, set:FRAME_URL_1 - URL where content is loaded, for the first view (increment the number up to 8 to get more views)FRAME_NAME_1 - Name for the first split view portion of the screen (increment the number to name more views)PluginsPlugins are used extend the way information is displayed, how notifications are sent, alarms are triggered, and more.The built-in/example plugins that are available by default are listed below.  The plugins may still need to be enabled by adding to the ENABLE environment variable.Default PluginsThese can be disabled by adding them to the DISABLE variable, for example DISABLE=\""direction upbat\""delta (BG Delta)Calculates and displays the change between the last 2 BG values.direction (BG Direction)Displays the trend direction.upbat (Uploader Battery)Displays the most recent battery status from the uploader phone. . Use these extended setting to adjust behavior:UPBAT_ENABLE_ALERTS (false) - Set to true to enable uploader battery alarms via Pushover and IFTTT.UPBAT_WARN (30) - Minimum battery percent to trigger warning.UPBAT_URGENT (20) - Minimum battery percent to trigger urgent alarm.timeago (Time Ago)Displays the time since last CGM entry. Use these extended setting to adjust behavior:TIMEAGO_ENABLE_ALERTS (false) - Set to true to enable stale data alarms via Pushover and IFTTT.ALARM_TIMEAGO_WARN (on) - possible values on or offALARM_TIMEAGO_WARN_MINS (15) - minutes since the last reading to trigger a warningALARM_TIMEAGO_URGENT (on) - possible values on or offALARM_TIMEAGO_URGENT_MINS (30) - minutes since the last reading to trigger a urgent alarmdevicestatus (Device Status)Used by upbat and other plugins to display device status info.  Supports the DEVICESTATUS_ADVANCED=\""true\"" extended setting to send all device statuses to the client for retrospective use and to support other plugins.errorcodes (CGM Error Codes)Generates alarms for CGM codes 9 (hourglass) and 10 (???).Use extended settings to adjust what errorcodes trigger notifications and alarms:ERRORCODES_INFO (1 2 3 4 5 6 7 8) - By default the needs calibration (blood drop) and other codes below 9 generate an info level notification, set to a space separate list of number or off to disableERRORCODES_WARN (off) - By default there are no warning configured, set to a space separate list of numbers or off to disableERRORCODES_URGENT (9 10) - By default the hourglass and ??? generate an urgent alarm, set to a space separate list of numbers or off to disablear2 (AR2 Forecasting)Generates alarms based on forecasted values. See Forecasting using AR2 algorithmEnabled by default if no thresholds are set OR ALARM_TYPES includes predict.Use extended settings to adjust AR2 behavior:AR2_CONE_FACTOR (2) - to adjust size of cone, use 0 for a single line.simplealarms (Simple BG Alarms)Uses BG_HIGH, BG_TARGET_TOP, BG_TARGET_BOTTOM, BG_LOW thresholds to generate alarms.Enabled by default if 1 of these thresholds is set OR ALARM_TYPES includes simple.profile (Treatment Profile)Add link to Profile Editor and allow to enter treatment profile settings. Also uses the extended setting:PROFILE_HISTORY (off) - possible values on or off. Enable/disable NS ability to keep history of your profiles (still experimental)PROFILE_MULTIPLE (off) - possible values on or off. Enable/disable NS ability to handle and switch between multiple treatment profilesAdvanced Plugins:careportal (Careportal)An optional form to enter treatments.boluscalc (Bolus Wizard)food (Custom Foods)An option plugin to enable adding foods from database in Bolus Wizard and enable .rawbg (Raw BG)Calculates BG using sensor and calibration records from and displays an alternate BG values and noise levels. Defaults that can be adjusted with extended settingDISPLAY (unsmoothed) - Allows the user to control which algorithm is used to calculate the displayed raw BG values using the most recent calibration record.unfiltered - Raw BG is calculated by applying the calibration to the glucose record's unfiltered value.filtered - Raw BG is calculated by applying the calibration to the glucose record's filtered value. The glucose record's filtered values are generally produced by the CGM by a running average of the unfiltered values to produce a smoothed value when the sensor noise is high.unsmoothed - Raw BG is calculated by first finding the ratio of the calculated filtered value (the same value calculated by the filtered setting) to the reported glucose value. The displayed raw BG value is calculated by dividing the calculated unfiltered value (the same value calculated by the unfiltered setting) by the ratio.  The effect is to exagerate changes in trend direction so the trend changes are more noticeable to the user. This is the legacy raw BG calculation algorithm.iob (Insulin-on-Board)Adds the IOB pill visualization in the client and calculates values that used by other plugins.  Uses treatments with insulin doses and the dia and sens fields from the treatment profile.cob (Carbs-on-Board)Adds the COB pill visualization in the client and calculates values that used by other plugins.  Uses treatments with carb doses and the carbs_hr, carbratio, and sens fields from the treatment profile.bwp (Bolus Wizard Preview)This plugin in intended for the purpose of automatically snoozing alarms when the CGM indicates high blood sugar but there is also insulin on board (IOB) and secondly, alerting to user that it might be beneficial to measure the blood sugar using a glucometer and dosing insulin as calculated by the pump or instructed by trained medicare professionals. The values provided by the plugin are provided as a reference based on CGM data and insulin sensitivity you have configured, and are not intended to be used as a reference for bolus calculation. The plugin calculates the bolus amount when above your target, generates alarms when you should consider checking and bolusing, and snoozes alarms when there is enough IOB to cover a high BG. Uses the results of the iob plugin and sens, target_high, and target_low fields from the treatment profile. Defaults that can be adjusted with extended settingBWP_WARN (0.50) - If BWP is > BWP_WARN a warning alarm will be triggered.BWP_URGENT (1.00) - If BWP is > BWP_URGENT an urgent alarm will be triggered.BWP_SNOOZE_MINS (10) - minutes to snooze when there is enough IOB to cover a high BG.BWP_SNOOZE - (0.10) If BG is higher then the target_high and BWP < BWP_SNOOZE alarms will be snoozed for BWP_SNOOZE_MINS.cage (Cannula Age)Calculates the number of hours since the last Site Change treatment that was recorded.CAGE_ENABLE_ALERTS (false) - Set to true to enable notifications to remind you of upcoming cannula change.CAGE_INFO (44) - If time since last Site Change matches CAGE_INFO, user will be warned of upcoming cannula changeCAGE_WARN (48) - If time since last Site Change matches CAGE_WARN, user will be alarmed to to change the cannulaCAGE_URGENT (72) - If time since last Site Change matches CAGE_URGENT, user will be issued a persistent warning of overdue change.CAGE_DISPLAY (hours) - Possible values are 'hours' or 'days'. If 'days' is selected and age of canula is greater than 24h number is displayed in days and hourssage (Sensor Age)Calculates the number of days and hours since the last Sensor Start and Sensor Change treatment that was recorded.SAGE_ENABLE_ALERTS (false) - Set to true to enable notifications to remind you of upcoming sensor change.SAGE_INFO (144) - If time since last sensor event matches SAGE_INFO, user will be warned of upcoming sensor changeSAGE_WARN (164) - If time since last sensor event matches SAGE_WARN, user will be alarmed to to change/restart the sensorSAGE_URGENT (166) - If time since last sensor event matches SAGE_URGENT, user will be issued a persistent warning of overdue change.iage (Insulin Age)Calculates the number of days and hours since the last Insulin Change treatment that was recorded.IAGE_ENABLE_ALERTS (false) - Set to true to enable notifications to remind you of upcoming insulin reservoir change.IAGE_INFO (44) - If time since last Insulin Change matches IAGE_INFO, user will be warned of upcoming insulin reservoir changeIAGE_WARN (48) - If time since last Insulin Change matches IAGE_WARN, user will be alarmed to to change the insulin reservoirIAGE_URGENT (72) - If time since last Insulin Change matches IAGE_URGENT, user will be issued a persistent warning of overdue change.bage (Battery Age)Calculates the number of days and hours since the last Pump Battery Change treatment that was recorded.BAGE_ENABLE_ALERTS (false) - Set to true to enable notifications to remind you of upcoming pump battery change.BAGE_DISPLAY (days) - Set to hours to display time since last Pump Battery Change in hours only.BAGE_INFO (312) - If time since last Pump Battery Change matches BAGE_INFO hours, user will be warned of upcoming pump battery change (default of 312 hours is 13 days).BAGE_WARN (336) - If time since last Pump Battery Change matches BAGE_WARN hours, user will be alarmed to to change the pump battery (default of 336 hours is 14 days).BAGE_URGENT (360) - If time since last Pump Battery Change matches BAGE_URGENT hours, user will be issued a persistent warning of overdue change (default of 360 hours is 15 days).treatmentnotify (Treatment Notifications)Generates notifications when a treatment has been entered and snoozes alarms minutes after a treatment.TREATMENTNOTIFY_SNOOZE_MINS (10) - Number of minutes to snooze notifications after a treatment is enteredTREATMENTNOTIFY_INCLUDE_BOLUSES_OVER (0) - U value over which the bolus will trigger a notification and snooze alarmsbasal (Basal Profile)Adds the Basal pill visualization to display the basal rate for the current time.  Also enables the bwp plugin to calculate correction temp basal suggestions.  Uses the basal field from the treatment profile. Also uses the extended setting:BASAL_RENDER (none) - Possible values are none, default, or icicle (inverted)bolus (Bolus Rendering)Settings to configure Bolus renderingBOLUS_RENDER_OVER (0) - U value over which the bolus labels use the format defined in BOLUS_RENDER_FORMAT. This value can be an integer or a float, e.g. 0.3, 1.5, 2, etc.BOLUS_RENDER_FORMAT (default) - Possible values are hidden, default (with leading zero and U), concise (with U, without leading zero), and minimal (without leading zero and U).BOLUS_RENDER_FORMAT_SMALL (default) - Possible values are hidden, default (with leading zero and U), concise (with U, without leading zero), and minimal (without leading zero and U).bridge (Share2Nightscout bridge)Glucose reading directly from the Dexcom Share service, uses these extended settings:BRIDGE_USER_NAME - Your username for the Share service.BRIDGE_PASSWORD - Your password for the Share service.BRIDGE_INTERVAL (150000 2.5 minutes) - The time (in milliseconds) to wait between each update.BRIDGE_MAX_COUNT (1) - The number of records to attempt to fetch per update.BRIDGE_FIRST_FETCH_COUNT (3) - Changes max count during the very first update only.BRIDGE_MAX_FAILURES (3) - How many failures before giving up.BRIDGE_MINUTES (1400) - The time window to search for new data per update (the default value is one day in minutes).BRIDGE_SERVER (``) - The default blank value is used to fetch data from Dexcom servers in the US. Set to (EU) to fetch from European servers instead.mmconnect (MiniMed Connect bridge)Transfer real-time MiniMed Connect data from the Medtronic CareLink server into Nightscout (read more)MMCONNECT_USER_NAME - Your user name for CareLink Connect.MMCONNECT_PASSWORD - Your password for CareLink Connect.MMCONNECT_INTERVAL (60000 1 minute) - Number of milliseconds to wait between requests to the CareLink server.MMCONNECT_MAX_RETRY_DURATION (32) - Maximum number of total seconds to spend retrying failed requests before giving up.MMCONNECT_SGV_LIMIT (24) - Maximum number of recent sensor glucose values to send to Nightscout on each request.MMCONNECT_VERBOSE - Set this to \""true\"" to log CareLink request information to the console.MMCONNECT_STORE_RAW_DATA - Set this to \""true\"" to store raw data returned from CareLink as type: \""carelink_raw\"" database entries (useful for development).MMCONNECT_SERVER - Set this to EU if you're using the European Medtronic servicespump (Pump Monitoring)Generic Pump Monitoring for OpenAPS, MiniMed Connect, RileyLink, t:slim, with more on the wayRequires DEVICESTATUS_ADVANCED=\""true\"" to be setPUMP_ENABLE_ALERTS (false) - Set to true to enable notifications for Pump battery and reservoir.PUMP_WARN_ON_SUSPEND (false) - Set to true to get an alarm when the pump is suspended.PUMP_FIELDS (reservoir battery) - The fields to display by default.  Any of the following fields: reservoir, battery, clock, status, and devicePUMP_RETRO_FIELDS (reservoir battery clock) - The fields to display in retro mode. Any of the above fields.PUMP_WARN_CLOCK (30) - The number of minutes ago that needs to be exceed before an alert is triggered.PUMP_URGENT_CLOCK (60) - The number of minutes ago that needs to be exceed before an urgent alarm is triggered.PUMP_WARN_RES (10) - The number of units remaining, a warning will be triggered when dropping below this threshold.PUMP_URGENT_RES (5) - The number of units remaining, an urgent alarm will be triggered when dropping below this threshold.PUMP_WARN_BATT_P (30) - The % of the pump battery remaining, a warning will be triggered when dropping below this threshold.PUMP_URGENT_BATT_P (20) - The % of the pump battery remaining, an urgent alarm will be triggered when dropping below this threshold.PUMP_WARN_BATT_V (1.35) - The voltage (if percent isn't available) of the pump battery, a warning will be triggered when dropping below this threshold.PUMP_URGENT_BATT_V (1.30) - The  voltage (if percent isn't available) of the pump battery, an urgent alarm will be triggered when dropping below this threshold.PUMP_WARN_BATT_QUIET_NIGHT (false) - Do not generate battery alarms at night.openaps (OpenAPS)Integrated OpenAPS loop monitoring, uses these extended settings:Requires DEVICESTATUS_ADVANCED=\""true\"" to be setOPENAPS_ENABLE_ALERTS (false) - Set to true to enable notifications when OpenAPS isn't looping.  If OpenAPS is going to offline for a period of time, you can add an OpenAPS Offline event for the expected duration from Careportal to avoid getting alerts.OPENAPS_WARN (30) - The number of minutes since the last loop that needs to be exceed before an alert is triggeredOPENAPS_URGENT (60) - The number of minutes since the last loop that needs to be exceed before an urgent alarm is triggeredOPENAPS_FIELDS (status-symbol status-label iob meal-assist rssi) - The fields to display by default.  Any of the following fields: status-symbol, status-label, iob, meal-assist, freq, and rssiOPENAPS_RETRO_FIELDS (status-symbol status-label iob meal-assist rssi) - The fields to display in retro mode. Any of the above fields.OPENAPS_PRED_IOB_COLOR (#1e88e5) - The color to use for IOB prediction lines. Colors can be in #RRGGBB format, but other CSS color units may be used as well.OPENAPS_PRED_COB_COLOR (#FB8C00) - The color to use for COB prediction lines. Same format as above.OPENAPS_PRED_ACOB_COLOR (#FB8C00) - The color to use for ACOB prediction lines. Same format as above.OPENAPS_PRED_ZT_COLOR (#00d2d2) - The color to use for ZT prediction lines. Same format as above.OPENAPS_PRED_UAM_COLOR (#c9bd60) - The color to use for UAM prediction lines. Same format as above.OPENAPS_COLOR_PREDICTION_LINES (true) - Enables / disables the colored lines vs the classic purple color.Also see Pushover and IFTTT Maker.loop (Loop)iOS Loop app monitoring, uses these extended settings:Requires DEVICESTATUS_ADVANCED=\""true\"" to be setLOOP_ENABLE_ALERTS (false) - Set to true to enable notifications when Loop isn't looping.LOOP_WARN (30) - The number of minutes since the last loop that needs to be exceeded before an alert is triggeredLOOP_URGENT (60) - The number of minutes since the last loop that needs to be exceeded before an urgent alarm is triggeredAdd loop to SHOW_FORECAST to show forecasted BG.For remote overrides, the following extended settings must be configured:LOOP_APNS_KEY - Apple Push Notifications service (APNs) Key, created in the Apple Developer website.LOOP_APNS_KEY_ID - The Key ID for the above key.LOOP_DEVELOPER_TEAM_ID - Your Apple developer team ID.LOOP_PUSH_SERVER_ENVIRONMENT - (optional) Set this to production if you are using a provisioning profile that specifies production aps-environment, such as when distributing builds via TestFlight.override (Override Mode)Additional monitoring for DIY automated insulin delivery systems to display real-time overrides such as Eating Soon or Exercise Mode:Requires DEVICESTATUS_ADVANCED=\""true\"" to be setxdripjs (xDrip-js)Integrated xDrip-js monitoring, uses these extended settings:Requires DEVICESTATUS_ADVANCED=\""true\"" to be setXDRIPJS_ENABLE_ALERTS (false) - Set to true to enable notifications when CGM state is not OK or battery voltages fall below threshold.XDRIPJS_STATE_NOTIFY_INTRVL (0.5) - Set to number of hours between CGM state notificationsXDRIPJS_WARN_BAT_V (300) - The voltage of either transmitter battery, a warning will be triggered when dropping below this threshold.alexa (Amazon Alexa)Integration with Amazon Alexa, detailed setup instructionsgooglehome (Google Home/DialogFLow)Integration with Google Home (via DialogFlow), detailed setup instructionsspeech (Speech)Speech synthesis plugin. When enabled, speaks out the blood glucose values, IOB and alarms. Note you have to set the LANGUAGE setting on the server to get all translated alarms.cors (CORS)Enabled CORS so other websites can make request to your Nightscout site, uses these extended settings:CORS_ALLOW_ORIGIN (*) - The list of sites that are allow to make requestsdbsize (Database Size)Show size of Nightscout Database, as a percentage of declared available space or in MiB.Many deployments of Nightscout use free tier of MongoDB Atlas on Heroku, which is limited in size. After some time, as volume of stored data grows, it may happen that this limit is reached and system is unable to store new data. This plugin provides pill that indicates size of Database and shows (when configured) alarms regarding reaching space limit.IMPORTANT: This plugin can only check how much space database already takes, but cannot infer max size available on server for it. To have correct alarms and realistic percentage, DBSIZE_MAX need to be properly set - according to your mongoDB hosting configuration.NOTE: This plugin rely on db.stats() for reporting logical size of database, which may be different than physical size of database on server. It may work for free tier of MongoDB on Atlas, since it calculate quota according to logical size too, but may fail for other hostings or self-hosted database with quota based on physical size.NOTE: MongoDB Atlas quota is for all databases in cluster, while each instance will get only size of its own database only. It is ok when you only have one database in cluster (most common scenario) but will not work for multiple parallel databases. In such case, spliting known quota equally beetween databases and setting DBSIZE_MAX to that fraction may help, but wont be precise.All sizes are expressed as integers, in Mebibytes 1 MiB == 1024 KiB == 1024*1024 BDBSIZE_MAX (496) - Maximal allowed size of database on your mongoDB server, in MiB. You need to adjust that value to match your database hosting limits - default value is for standard Heroku mongoDB free tier.DBSIZE_WARN_PERCENTAGE (60) - Threshold to show first warning about database size. When database reach this percentage of DBSIZE_MAX size - pill will show size in yellow.DBSIZE_URGENT_PERCENTAGE (75) - Threshold to show urgent warning about database size. When database reach this percentage of DBSIZE_MAX size, it is urgent to do backup and clean up old data. At this percentage info pill turns red.DBSIZE_ENABLE_ALERTS (false) - Set to true to enable notifications about database size.DBSIZE_IN_MIB (false) - Set to true to display size of database in MiB-s instead of default percentage.This plugin should be enabled by default, if needed can be diasabled by adding dbsize to the list of disabled plugins, for example: DISABLE=\""dbsize\"".Extended SettingsSome plugins support additional configuration using extra environment variables.  These are prefixed with the name of the plugin and a _.  For example setting MYPLUGIN_EXAMPLE_VALUE=1234 would make extendedSettings.exampleValue available to the MYPLUGIN plugin.Plugins only have access to their own extended settings, all the extended settings of client plugins will be sent to the browser.DEVICESTATUS_ADVANCED (true) - Defaults to true. Users who only have a single device uploading data to Nightscout can set this to false to reduce the data use of the site.DEVICESTATUS_DAYS (1) - Defaults to 1, can optionally be set to 2. Users can use this to show 48 hours of device status data for in retro mode, rather than the default 24 hours. Setting this value to 2 will roughly double the bandwidth usage of nightscout, so users with a data cap may not want to update this setting.PushoverIn addition to the normal web based alarms, there is also support for Pushover based alarms and notifications.To get started install the Pushover application on your iOS or Android device and create an account.Using that account login to Pushover, in the top left you’ll see your User Key, you’ll need this plus an application API Token/Key to complete this setup.You’ll need to Create a Pushover Application.  You only need to set the Application name, you can ignore all the other settings, but setting an Icon is a nice touch.  Maybe you'd like to use this one?Pushover is configured using the following Environment Variables:* `ENABLE` - `pushover` should be added to the list of plugin, for example: `ENABLE=\""pushover\""`.* `PUSHOVER_API_TOKEN` - Used to enable pushover notifications, this token is specific to the application you create from in [Pushover](https://pushover.net/), ***[additional pushover information](#pushover)*** below.* `PUSHOVER_USER_KEY` - Your Pushover user key, can be found in the top left of the [Pushover](https://pushover.net/) site, this can also be a pushover delivery group key to send to a group rather than just a single user.  This also supports a space delimited list of keys.  To disable `INFO` level pushes set this to `off`.* `PUSHOVER_ALARM_KEY` - An optional Pushover user/group key, will be used for system wide alarms (level > `WARN`).  If not defined this will fallback to `PUSHOVER_USER_KEY`.  A possible use for this is sending important messages and alarms to a CWD that you don't want to send all notification too.  This also support a space delimited list of keys.  To disable Alarm pushes set this to `off`.* `PUSHOVER_ANNOUNCEMENT_KEY` - An optional Pushover user/group key, will be used for system wide user generated announcements.  If not defined this will fallback to `PUSHOVER_USER_KEY` or `PUSHOVER_ALARM_KEY`.  This also support a space delimited list of keys. To disable Announcement pushes set this to `off`.* `BASE_URL` - Used for pushover callbacks, usually the URL of your Nightscout site, use https when possible.* `API_SECRET` - Used for signing the pushover callback request for acknowledgments.If you never want to get info level notifications (treatments) use `PUSHOVER_USER_KEY=\""off\""`If you never want to get an alarm via pushover use `PUSHOVER_ALARM_KEY=\""off\""`If you never want to get an announcement via pushover use `PUSHOVER_ANNOUNCEMENT_KEY=\""off\""`If only `PUSHOVER_USER_KEY` is set it will be used for all info notifications, alarms, and announcementsFor testing/development try [localtunnel](http://localtunnel.me/).IFTTT MakerIn addition to the normal web based alarms, and pushover, there is also integration for IFTTT Webhooks.With Maker you are able to integrate with all the other IFTTT Services.  For example you can send a tweet when there is an alarm, change the color of hue light, send an email, send and sms, and so much more.Setup IFTTT account: login or create an accountFollow the  Detailed IFTTT setup InstructionsConfigure Nightscout by setting these webpage environment variables:ENABLE - maker should be added to the list of plugins, for example: ENABLE=\""maker\"".MAKER_KEY - Set this to your secret key (see  [Detailed Instructions ) MAKER_KEY=\""abcMyExampleabc123defjt1DeNSiftttmak-XQb69p\"" This also supports a space delimited list of keys.MAKER_ANNOUNCEMENT_KEY - An optional Maker key, will be used for system wide user generated announcements.  If not defined this will fallback to MAKER_KEY.  A possible use for this is sending important messages and alarms to another device that you don't want to send all notification too.  This also support a space delimited list of keys.Plugins can create custom events, but all events sent to IFTTT webhooks will be prefixed with ns-.  The core events are:ns-event - This event is sent to the maker service for all alarms and notifications.  This is good catch all event for general logging.ns-allclear - This event is sent to the maker service when an alarm has been ack'd or when the server starts up without triggering any alarms.  For example, you could use this event to turn a light to green.ns-info - Plugins that generate notifications at the info level will cause this event to also be triggered.  It will be sent in addition to ns-event.ns-warning - Alarms at the warning level with cause this event to also be triggered.  It will be sent in addition to ns-event.ns-urgent - Alarms at the urgent level with cause this event to also be triggered.  It will be sent in addition to ns-event.see the full list of eventsTreatment ProfileSome of the plugins make use of a treatment profile that can be edited using the Profile Editor, see the link in the Settings drawer on your site.Treatment Profile Fields:timezone (Time Zone) - time zone local to the patient. Should be set.units (Profile Units) - blood glucose units used in the profile, either \""mg/dl\"" or \""mmol\""dia (Insulin duration) - value should be the duration of insulin action to use in calculating how much insulin is left active. Defaults to 3 hours.carbs_hr (Carbs per Hour) - The number of carbs that are processed per hour, for more information see #DIYPS.carbratio (Carb Ratio) - grams per unit of insulin.sens (Insulin sensitivity) How much one unit of insulin will normally lower blood glucose.basal The basal rate set on the pump.target_high - Upper target for correction boluses.target_low - Lower target for correction boluses.Some example profiles are here.Setting environment variablesEasy to emulate on the commandline:    echo 'MONGO_CONNECTION=mongodb://sally:sallypass@ds099999.mongolab.com:99999/nightscout' >> my.env    echo 'MONGO_COLLECTION=entries' >> my.envFrom now on you can run using    $ (eval $(cat my.env | sed 's/^/export /') && PORT=1337 node server.js)Your hosting provider probably has a way to set these through their GUI.Vagrant installOptionally, use Vagrant with theincluded Vagrantfile and bin/setup.sh to install OS and node packages toa virtual machine.host$ vagrant uphost$ vagrant sshvm$ ./bin/setup.shThe setup script will install OS packages then run npm install.The Vagrant VM serves to your host machine only on 192.168.33.10, you can accessthe web interface on http://192.168.33.10:1337More questions?Feel free to post an issue, but read the wiki first.Browser testing suite provided byLicensecgm-remote-monitor - web app to broadcast cgm readingsCopyright (C) 2017 Nightscout contributors.  See the COPYRIGHT fileat the root directory of this distribution and athttps://github.com/nightscout/cgm-remote-monitor/blob/master/COPYRIGHTThis program is free software: you can redistribute it and/or modifyit under the terms of the GNU Affero General Public License as publishedby the Free Software Foundation, either version 3 of the License, or(at your option) any later version.This program is distributed in the hope that it will be useful,but WITHOUT ANY WARRANTY; without even the implied warranty ofMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See theGNU Affero General Public License for more details.You should have received a copy of the GNU Affero General Public Licensealong with this program.  If not, see <http://www.gnu.org/licenses/>."
1,1,trekhleb/javascript-algorithms,https://github.com/trekhleb/javascript-algorithms/blob/master/README.ar-AR.md,JavaScript,"جافا سكريبت خوارزميات  وهياكل البياناتتحتوي هذا مقالة على أمثلة عديدة تستند إلى الخوارزميات الشائعة وهياكل البيانات في الجافا سكريبت.كل خوارزمية وهياكل البيانات لها برنامج README منفصل خاص بهامع التفسيرات والروابط ذات الصلة لمزيد من القراءة (بما في ذلك تلكإلى مقاطع فيديو YouTube).اقرأ هذا في لغات أخرى:简体中文,繁體中文,한국어,日本語,Polski,Français,Español,Português,Русский,Türk,Italiana,Tiếng Việt,Deutsch☝ ملاحضة هذا المشروع مخصص للاستخدام لأغراض التعلم والبحثفقط ، و ** ليست ** معدة للاستخدام في الإنتاجهياكل البياناتهياكل البيانات هي طريقة خاصة لتنظيم البيانات وتخزينها في جهاز الكمبيوتر بحيثيمكن الوصول إليها وتعديلها بكفاءة. بتعبير أدق ، هيكل البيانات هو مجموعة من البياناتالقيم والعلاقات فيما بينها والوظائف أو العمليات التي يمكن تطبيقها عليهاالبيانات.B - مبتدئ, A - المتقدمةB قائمة مرتبطةB قائمة مرتبطة بشكل مضاعفB طابور, QueueB كومةB جدول التجزئةB كومة -الحد الأقصى والحد الأدنى من إصدارات الكومةB طابور الأولويةA تريA شجرةA شجرة البحث الثنائيةA شجرة AVLA شجرة الأحمر والأسودA شجرة القطعة - مع أمثلة على استفسارات النطاق الأدنى / الأقصى / المجموعA شجرة فينويك (شجرة ثنائية مفهرسة)A Graph (كلاهما موجه وغير موجه)A مجموعة منفصلةA مرشح بلومالخوارزمياتالخوارزمية هي تحديد لا لبس فيه لكيفية حل فئة من المشاكل. أنهمجموعة من القواعد التي تحدد بدقة تسلسل العمليات.B - مبتدئ ، A - متقدمالخوارزميات حسب الموضوعرياضياتB معالجة البتB عامليB رقم فيبوناتشي - الإصدارات الكلاسيكية والمغلقةB اختبار البدائية (طريقة تقسيم المحاكمة)B الخوارزمية الإقليدية - احسب القاسم المشترك الأكبر (GCD)B أقل مضاعف مشترك (LCM)B منخل إراتوستينس - إيجاد جميع الأعداد الأولية حتى أي حد معينB هي قوة اثنين - تحقق مما إذا كان الرقم هو قوة اثنين (الخوارزميات الساذجة والبتية)B مثلث باسكالB عدد مركب - الأعداد المركبة والعمليات الأساسية معهمB راديان ودرجة - راديان لدرجة التحويل والعكسB تشغيل سريعB طريقة هورنر - تقييم متعدد الحدودA قسم صحيحA الجذر التربيعي - طريقة نيوتنA خوارزمية ليو هوي π - π حسابات تقريبية على أساس N-gonsA تحويل فورييه المنفصل - حلل وظيفة الوقت (إشارة) في الترددات التي يتكون منهامجموعاتB المنتج الديكارتي - منتج من مجموعات متعددةB فيشر ييتس شافل - التقليب العشوائي لتسلسل محدودA مجموعة الطاقة - جميع المجموعات الفرعية للمجموعة (حلول البت والتتبع التراجعي)A التباديل (مع وبدون التكرار)A مجموعات (مع وبدون التكرار)A أطول نتيجة مشتركة (LCS)A أطول زيادة متتاليةA أقصر تسلسل فائق مشترك (SCS)A مشكلة حقيبة الظهر - \""0/1\"" و \""غير منضم\""A الحد الأقصى من Subarray -إصدارات \""القوة الغاشمة\"" و \""البرمجة الديناميكية\"" (كادان)A مجموع الجمع - ابحث عن جميع التركيبات التي تشكل مبلغًا محددًاسلاسلB مسافة هامنج - عدد المواقف التي تختلف فيها الرموزA المسافة ليفنشتاين - الحد الأدنى لمسافة التحرير بين تسلسلينA خوارزمية كنوث - موريس - برات (خوارزمية KMP) - بحث السلسلة الفرعية (مطابقة النمط)A خوارزمية Z - بحث سلسلة فرعية (مطابقة النمط)A خوارزمية رابين كارب - بحث السلسلة الفرعيةA أطول سلسلة فرعية مشتركةA مطابقة التعبير العاديعمليات البحثB البحث الخطيB بحث سريع (أو حظر البحث) - ابحث في مصفوفة مرتبةB بحث ثنائي - البحث في مجموعة مرتبةB بحث الاستيفاء - البحث في مجموعة مرتبة موزعة بشكل موحدفرزB Bubble SortB Selection SortB Insertion SortB Heap SortB Merge SortB Quicksort - عمليات التنفيذ في المكان وغير في المكانB ShellsortB Counting SortB Radix Sortالقوائم المرتبطةB Straight TraversalB Reverse TraversalالأشجارB Depth-First Search (DFS)B Breadth-First Search (BFS)الرسوم البيانيةB Depth-First Search (DFS)B Breadth-First Search (BFS)B Kruskal’s Algorithm - إيجاد الحد الأدنى من شجرة الامتداد (MST) للرسم البياني الموزون غير الموجهA Dijkstra Algorithm -إيجاد أقصر المسارات لجميع رؤوس الرسم البياني من رأس واحدA Bellman-Ford Algorithm - إيجاد أقصر المسارات لجميع رؤوس الرسم البياني من رأس واحدA Floyd-Warshall Algorithm - إيجاد أقصر المسارات بين جميع أزواج الرؤوسA Detect Cycle - لكل من الرسوم البيانية الموجهة وغير الموجهة (الإصدارات القائمة على DFS و Disjoint Set)A Prim’s Algorithm - إيجاد الحد الأدنى من شجرة الامتداد (MST) للرسم البياني الموزون غير الموجهA Topological Sorting - طريقة البحث العمق الأول (DFS)A Articulation Points - خوارزمية تارجان (تعتمد على DFS)A Bridges - خوارزمية تعتمد على DFSA Eulerian Path and Eulerian Circuit - خوارزمية فلوري - قم بزيارة كل حافة مرة واحدة بالضبطA Hamiltonian Cycle - قم بزيارة كل قمة مرة واحدة بالضبطA Strongly Connected Components - خوارزمية KosarajuA Travelling Salesman Problem - أقصر طريق ممكن يزور كل مدينة ويعود إلى المدينة الأصلية**التشفيرB Polynomial Hash - المتداول دالة التجزئة على أساس متعدد الحدودB Caesar Cipher - استبدال بسيط للشفراتالتعلم الاليB NanoNeuron - 7 وظائف JS بسيطة توضح كيف يمكن للآلات أن تتعلم بالفعل (الانتشار إلى الأمام / الخلف)غير مصنفB Tower of HanoiB Square Matrix Rotation - خوارزمية في المكانB Jump Game - التراجع ، البرمجة الديناميكية (من أعلى إلى أسفل + من أسفل إلى أعلى) والأمثلة الجشعةB Unique Paths - التراجع والبرمجة الديناميكية والأمثلة القائمة على مثلث باسكالB Rain Terraces - محاصرة مشكلة مياه الأمطار (البرمجة الديناميكية وإصدارات القوة الغاشمة)B Recursive Staircase - احسب عدد الطرق للوصول إلى القمة (4 حلول)A N-Queens ProblemA Knight's Tourالخوارزميات حسب النموذجالنموذج الحسابي هو طريقة أو نهج عام يكمن وراء تصميم الفصلمن الخوارزميات. إنه تجريد أعلى من مفهوم الخوارزمية ، تمامًا مثلالخوارزمية هي تجريد أعلى من برنامج الكمبيوتر.القوة الغاشمة - انظر في جميع الاحتمالات وحدد الحل الأفضلB Linear SearchB Rain Terraces - محاصرة مشكلة مياه الأمطارB Recursive Staircase - احسب عدد الطرق للوصول إلى القمةA Maximum SubarrayA Travelling Salesman Problem - أقصر طريق ممكن يزور كل مدينة ويعود إلى المدينة الأصليةA Discrete Fourier Transform - حلل وظيفة الوقت (إشارة) في الترددات التي يتكون منهاجشع - اختر الخيار الأفضل في الوقت الحالي ، دون أي اعتبار للمستقبلB Jump GameA Unbound Knapsack ProblemA Dijkstra Algorithm - إيجاد أقصر مسار لجميع رؤوس الرسم البيانيA Prim’s Algorithm - إيجاد الحد الأدنى من شجرة الامتداد (MST) للرسم البياني الموزون غير الموجهA Kruskal’s Algorithm - إيجاد الحد الأدنى من شجرة الامتداد (MST) للرسم البياني الموزون غير الموجهفرق تسد - قسّم المشكلة إلى أجزاء أصغر ثم حل تلك الأجزاءB Binary SearchB Tower of HanoiB Pascal's TriangleB Euclidean Algorithm - حساب القاسم المشترك الأكبر (GCD)B Merge SortB QuicksortB Tree Depth-First Search (DFS)B Graph Depth-First Search (DFS)B Jump GameB Fast PoweringA Permutations (مع التكرار وبدونه)A Combinations (مع التكرار وبدونه)البرمجة الديناميكية - بناء حل باستخدام الحلول الفرعية التي تم العثور عليها مسبقًاB Fibonacci NumberB Jump GameB Unique PathsB Rain Terraces - محاصرة مشكلة مياه الأمطارB Recursive Staircase - احسب عدد الطرق للوصول إلى القمةA Levenshtein Distance - الحد الأدنى لمسافة التحرير بين تسلسلينA Longest Common Subsequence (LCS)A Longest Common SubstringA Longest Increasing SubsequenceA Shortest Common SupersequenceA 0/1 Knapsack ProblemA Integer PartitionA Maximum SubarrayA Bellman-Ford Algorithm - إيجاد أقصر مسار لجميع رؤوس الرسم البيانيA Floyd-Warshall Algorithm - إيجاد أقصر المسارات بين جميع أزواج الرؤوسA Regular Expression Matchingالتراجع - على غرار القوة الغاشمة ، حاول إنشاء جميع الحلول الممكنة ، ولكن في كل مرة تقوم فيها بإنشاء الحل التالي الذي تختبرهإذا استوفت جميع الشروط ، وعندها فقط استمر في إنشاء الحلول اللاحقة. خلاف ذلك ، تراجع ، واذهب إلىطريق مختلف لإيجاد حل. عادةً ما يتم استخدام اجتياز DFS لمساحة الدولة.B Jump GameB Unique PathsB Power Set - جميع المجموعات الفرعية للمجموعةA Hamiltonian Cycle - قم بزيارة كل قمة مرة واحدة بالضبطA N-Queens ProblemA Knight's TourA Combination Sum - ابحث عن جميع التركيبات التي تشكل مبلغًا محددًا** Branch & Bound ** - تذكر الحل الأقل تكلفة الموجود في كل مرحلة من مراحل التراجعالبحث ، واستخدام تكلفة الحل الأقل تكلفة الموجود حتى الآن بحد أدنى لتكلفةالحل الأقل تكلفة للمشكلة ، من أجل تجاهل الحلول الجزئية بتكاليف أكبر منتم العثور على حل بأقل تكلفة حتى الآن. اجتياز BFS عادةً بالاشتراك مع اجتياز DFS لمساحة الحالةيتم استخدام الشجرة.كيفية استخدام هذا المستودعتثبيت كل التبعياتnpm installقم بتشغيل ESLintقد ترغب في تشغيله للتحقق من جودة الكود.npm run lintقم بإجراء جميع الاختباراتnpm testقم بإجراء الاختبارات بالاسمnpm test -- 'LinkedList'ملعبيمكنك اللعب بهياكل البيانات والخوارزميات في ملف . /src/playground/playground.js والكتابةاختبارات لها في ./src/playground/__test__/playground.test.js.ثم قم ببساطة بتشغيل الأمر التالي لاختبار ما إذا كان كود الملعب الخاص بك يعمل كما هو متوقع:npm test -- 'playground'معلومات مفيدةالمراجع▶ هياكل البيانات والخوارزميات على موقع يوتيوبBig O Notationيتم استخدام Big O notation لتصنيف الخوارزميات وفقًا لكيفية نمو متطلبات وقت التشغيل أو المساحة مع نمو حجم الإدخال.قد تجد في الرسم البياني أدناه الأوامر الأكثر شيوعًا لنمو الخوارزميات المحددة في تBig O notation.مصدر: Big O Cheat Sheet.فيما يلي قائمة ببعض رموز Big O notation الأكثر استخدامًا ومقارنات أدائها مقابل أحجام مختلفة من بيانات الإدخال.Big O NotationComputations for 10 elementsComputations for 100 elementsComputations for 1000 elementsO(1)111O(log N)369O(N)101001000O(N log N)306009000O(N^2)100100001000000O(2^N)10241.26e+291.07e+301O(N!)36288009.3e+1574.02e+2567تعقيد عمليات بنية البياناتData StructureAccessSearchInsertionDeletionCommentsArray1nnnStacknn11Queuenn11Linked Listnn1nHash Table-nnnفي حالة وجود تكاليف دالة تجزئة مثالية ستكون O (1)Binary Search Treennnnفي حالة توازن تكاليف الشجرة ستكون O (log (n))B-Treelog(n)log(n)log(n)log(n)Red-Black Treelog(n)log(n)log(n)log(n)AVL Treelog(n)log(n)log(n)log(n)Bloom Filter-11-الإيجابيات الكاذبة ممكنة أثناء البحثتعقيد خوارزميات فرز الصفيفNameBestAverageWorstMemoryStableCommentsBubble sortnn2n21نعمInsertion sortnn2n21نعمSelection sortn2n2n21لاHeap sortn log(n)n log(n)n log(n)1لاMerge sortn log(n)n log(n)n log(n)nنعمQuick sortn log(n)n log(n)n2log(n)Noعادةً ما يتم إجراء الفرز السريع في مكانه مع مساحة مكدس O (log (n))Shell sortn log(n)depends on gap sequencen (log(n))21لاCounting sortn + rn + rn + rn + rYesr - أكبر رقم في المجموعةRadix sortn * kn * kn * kn + kYesك - طول أطول مفتاحمؤيدو المشروعيمكنك دعم هذا المشروع عبر ❤️️ GitHub أو ❤️️ Patreon.الناس الذين يدعمون هذا المشروع ∑ = 0ℹ️ A few more projects and articles about JavaScript and algorithms on trekhleb.dev"
2,2,angular/angular.js,https://github.com/angular/angular.js/blob/master/README.closure.md,JavaScript,"Using AngularJS with the Closure CompilerThe Closure Compiler project contains definitions for the AngularJS JavaScriptin its contrib/externs directory.The definitions contain externs for use with the Closure compiler (akaJSCompiler). Passing these files to the --externs parameter of a compilerpass allows using type annotations for AngularJS objects. For example,AngularJS's $scope objects can be annotated as:/** @type {angular.Scope} */var scope = $scope;This allows JSCompiler to type check accesses to scope, give warnings aboutmissing methods or incorrect arguments, and also prevents renaming of propertyaccesses with advanced compilation.The externs are incomplete and maintained on an as-needed basis, but strive tobe correct. Externs for individual modules should be added in separate files.See https://developers.google.com/closure/compiler/"
3,3,TheOdinProject/javascript-exercises,https://github.com/TheOdinProject/javascript-exercises/blob/main/README.md,JavaScript,"JavaScript ExercisesThese JavaScript exercises are intended to complement the JavaScript content on The Odin Project (TOP). They should only be done when instructed during the course of the curriculum.Note: The generator-exercise file is not actually an exercise; it is a script that generates exercises. It was created to help efficiently write these exercises.ContributingIf you have a suggestion to improve an exercise, an idea for a new exercise, or notice an issue with an exercise, please feel free to open an issue after thoroughly reading our contributing guide.How To Use These ExercisesFork and clone this repository. To learn how to fork a repository, see the GitHub documentation on how to fork a repo.Copies of repositories on your machine are called clones. If you need help cloning to your local environment you can learn how from the GitHub documentation on cloning a repository.Before you start working on any exercises, you should first ensure you have the following installed:NPM. You should have installed NPM already in our Installing Node.js lesson. Just in case you need to check, type npm --version in your terminal. If you get back Command 'npm' not found, but can be installed with:, do not follow the instructions in the terminal to install with apt-get as this causes permission issues. Instead, go back to the installation lesson and install Node with NVM by following the instructions there.Jest. After cloning this repository to your local machine and installing NPM, go into the newly created directory (cd javascript-exercises) and run npm install. This will install Jest and set up the testing platform based on our preconfigured settings.Each exercise includes the following:A markdown file with a description of the task, an empty (or mostly empty) JavaScript file, and a set of tests.A solutions directory that contains a solution and the same test file with all of the tests unskipped.To complete an exercise, you'll need to go to the exercise directory with cd exerciseName in the terminal and run npm test exerciseName.spec.js. This should run the test file and show you the output. When you first run a test, it will fail. This is by design! You must open the exercise file and write the code needed to get the test to pass.Some of the exercises have test conditions defined in their spec file as test.skip compared to test. This is purposeful. After you pass one test, you will change the next test.skip to test and test your code again. You'll do this until all conditions are satisfied. All tests must pass at the same time, and you should not have any test.skip instances by the time you finish an exercise.Once you successfully finish an exercise, check the solutions directory within each exercise to compare it with yours.You should not be checking the solution for an exercise until you finish it!Keep in mind that TOP's solution is not the only solution. Generally as long as all of the tests pass, your solution should be fine.Do not submit your solutions to this repo, as any PRs that do so will be closed without merging.Note: Due to the way Jest handles failed tests, it may return an exit code of 1 if any tests fail. NPM will interpret this as an error and you may see some npm ERR! messages after Jest runs. You can ignore these, or run your test with npm test exerciseName.spec.js --silent to supress the errors.The first exercise, helloWorld, will walk you through the process in-depth.DebuggingTo debug functions, you can run the tests in the Visual Studio Code debugger terminal. You can open this by clicking the \""Run and Debug\"" icon on the left or pressing Ctrl + Shift + D, then clicking JavaScript Debug Terminal. You will be able to set breakpoints as you would in the Chrome DevTools debugger. You can run npm test exerciseName.spec.js to then execute your code up until your breakpoint and step through your code as necessary. NOTE: To take advantage of the debugger, you MUST run the script in the debugger terminal, not the bash or zsh terminal."
4,4,jquery/jquery,https://github.com/jquery/jquery/blob/main/README.md,JavaScript,"jQuery — New Wave JavaScriptMeetings are currently held on the matrix.org platform.Meeting minutes can be found at meetings.jquery.org.Contribution GuidesIn the spirit of open source software development, jQuery always encourages community code contribution. To help you get started and before you jump into writing code, be sure to read these important contribution guidelines thoroughly:Getting InvolvedCore Style GuideWriting Code for jQuery Foundation ProjectsReferences to issues/PRsGitHub issues/PRs are usually referenced via gh-NUMBER, where NUMBER is the numerical ID of the issue/PR. You can find such an issue/PR under https://github.com/jquery/jquery/issues/NUMBER.jQuery has used a different bug tracker - based on Trac - in the past, available under bugs.jquery.com. It is being kept in read only mode so that referring to past discussions is possible. When jQuery source references one of those issues, it uses the pattern trac-NUMBER, where NUMBER is the numerical ID of the issue. You can find such an issue under https://bugs.jquery.com/ticket/NUMBER.Environments in which to use jQueryBrowser supportjQuery also supports Node, browser extensions, and other non-browser environments.What you need to build your own jQueryTo build jQuery, you need to have the latest Node.js/npm and git 1.7 or later. Earlier versions might work, but are not supported.For Windows, you have to download and install git and Node.js.macOS users should install Homebrew. Once Homebrew is installed, run brew install git to install git,and brew install node to install Node.js.Linux/BSD users should use their appropriate package managers to install git and Node.js, or build from sourceif you swing that way. Easy-peasy.How to build your own jQueryFirst, clone the jQuery git repo.Then, enter the jquery directory and run the build script:cd jquery && npm run buildThe built version of jQuery will be put in the dist/ subdirectory, along with the minified copy and associated map file.If you want to create custom build or help with jQuery development, it would be better to install grunt command line interface as a global package:npm install -g grunt-cliMake sure you have grunt installed by testing:grunt -VNow by running the grunt command, in the jquery directory, you can build a full version of jQuery, just like with an npm run build command:gruntThere are many other tasks available for jQuery Core:grunt -helpModulesSpecial builds can be created that exclude subsets of jQuery functionality.This allows for smaller custom builds when the builder is certain that those parts of jQuery are not being used.For example, an app that only used JSONP for $.ajax() and did not need to calculate offsets or positions of elements could exclude the offset and ajax/xhr modules.Any module may be excluded except for core, and selector. To exclude a module, pass its path relative to the src folder (without the .js extension).Some example modules that can be excluded are:ajax: All AJAX functionality: $.ajax(), $.get(), $.post(), $.ajaxSetup(), .load(), transports, and ajax event shorthands such as .ajaxStart().ajax/xhr: The XMLHTTPRequest AJAX transport only.ajax/script: The <script> AJAX transport only; used to retrieve scripts.ajax/jsonp: The JSONP AJAX transport only; depends on the ajax/script transport.css: The .css() method. Also removes all modules depending on css (including effects, dimensions, and offset).css/showHide:  Non-animated .show(), .hide() and .toggle(); can be excluded if you use classes or explicit .css() calls to set the display property. Also removes the effects module.deprecated: Methods documented as deprecated but not yet removed.dimensions: The .width() and .height() methods, including inner- and outer- variations.effects: The .animate() method and its shorthands such as .slideUp() or .hide(\""slow\"").event: The .on() and .off() methods and all event functionality.event/trigger: The .trigger() and .triggerHandler() methods.offset: The .offset(), .position(), .offsetParent(), .scrollLeft(), and .scrollTop() methods.wrap: The .wrap(), .wrapAll(), .wrapInner(), and .unwrap() methods.core/ready: Exclude the ready module if you place your scripts at the end of the body. Any ready callbacks bound with jQuery() will simply be called immediately. However, jQuery(document).ready() will not be a function and .on(\""ready\"", ...) or similar will not be triggered.deferred: Exclude jQuery.Deferred. This also removes jQuery.Callbacks. Note that modules that depend on jQuery.Deferred(AJAX, effects, core/ready) will not be removed and will still expect jQuery.Deferred to be there. Include your own jQuery.Deferred implementation or exclude those modules as well (grunt custom:-deferred,-ajax,-effects,-core/ready).exports/global: Exclude the attachment of global jQuery variables ($ and jQuery) to the window.exports/amd: Exclude the AMD definition.As a special case, you may also replace the full jQuery selector module by using a special flag grunt custom:-selector.selector: The full jQuery selector engine. When this module is excluded, it is replaced by a rudimentary selector engine based on the browser's querySelectorAll method that does not support jQuery selector extensions or enhanced semantics. See the selector-native.js file for details.Note: Excluding the full selector module will also exclude all jQuery selector extensions (such as effects/animatedSelector and css/hiddenVisibleSelectors).The build process shows a message for each dependent module it excludes or includes.AMD nameAs an option, you can set the module name for jQuery's AMD definition. By default, it is set to \""jquery\"", which plays nicely with plugins and third-party libraries, but there may be cases where you'd like to change this. Simply pass it to the --amd parameter:grunt custom --amd=\""custom-name\""Or, to define anonymously, set the name to an empty string.grunt custom --amd=\""\""File nameThe default name for the built jQuery file is jquery.js; it is placed under the dist/ directory. It's possible to change the file name using the --filename parameter:grunt custom:slim --filename=\""jquery.slim.js\""This would create a slim version of jQuery and place it under dist/jquery.slim.js. In fact, this is exactly the command we use to generate the slim jQuery during the release process.ECMAScript Module (ESM) modeBy default, jQuery generates a regular script JavaScript file. You can also generate an ECMAScript module exporting jQuery as the default export using the --esm parameter:grunt custom --esmThe default is script but you can also pass it explicitly via --no-esm:grunt custom --no-esmCustom Build ExamplesTo create a custom build, first check out the version:git pull; git checkout VERSIONWhere VERSION is the version you want to customize. Then, make sure all Node dependencies are installed:npm installCreate the custom build using the grunt custom option, listing the modules to be excluded.Exclude all ajax functionality:grunt custom:-ajaxExcluding css removes modules depending on CSS: effects, offset, dimensions.grunt custom:-cssExclude a bunch of modules:grunt custom:-ajax/jsonp,-css,-deprecated,-dimensions,-effects,-offset,-wrapThere is also a special alias to generate a build with the same configuration as the official jQuery Slim build is generated:grunt custom:slimFor questions or requests regarding custom builds, please start a thread on the Developing jQuery Core section of the forum. Due to the combinatorics and custom nature of these builds, they are not regularly tested in jQuery's unit test process.Running the Unit TestsMake sure you have the necessary dependencies:npm installStart grunt watch or npm start to auto-build jQuery as you work:grunt watchRun the unit tests with a local server that supports PHP. Ensure that you run the site from the root directory, not the \""test\"" directory. No database is required. Pre-configured php local servers are available for Windows and Mac. Here are some options:Windows: WAMP downloadMac: MAMP downloadLinux: Setting up LAMPMongoose (most platforms)Building to a different directoryTo copy the built jQuery files from /dist to another directory:grunt && grunt dist:/path/to/special/location/With this example, the output files would be:/path/to/special/location/jquery.js/path/to/special/location/jquery.min.jsTo add a permanent copy destination, create a file in dist/ called \"".destination.json\"". Inside the file, paste and customize the following:{  \""/Absolute/path/to/other/destination\"": true}Additionally, both methods can be combined.Essential GitAs the source code is handled by the Git version control system, it's useful to know some features used.CleaningIf you want to purge your working directory back to the status of upstream, the following commands can be used (remember everything you've worked on is gone after these):git reset --hard upstream/maingit clean -fdxRebasingFor feature/topic branches, you should always use the --rebase flag to git pull, or if you are usually handling many temporary \""to be in a github pull request\"" branches, run the following to automate this:git config branch.autosetuprebase local(see man git-config for more information)Handling merge conflictsIf you're getting merge conflicts when merging, instead of editing the conflicted files manually, you can use the featuregit mergetool. Even though the default tool xxdiff looks awful/old, it's rather useful.The following are some commands that can be used there:Ctrl + Alt + M - automerge as much as possibleb - jump to next merge conflicts - change the order of the conflicted linesu - undo a mergeleft mouse button - mark a block to be the winnermiddle mouse button - mark a line to be the winnerCtrl + S - saveCtrl + Q - quitQUnit ReferenceTest methodsexpect( numAssertions );stop();start();Note: QUnit's eventual addition of an argument to stop/start is ignored in this test suite so that start and stop can be passed as callbacks without worrying about their parameters.Test assertionsok( value, [message] );equal( actual, expected, [message] );notEqual( actual, expected, [message] );deepEqual( actual, expected, [message] );notDeepEqual( actual, expected, [message] );strictEqual( actual, expected, [message] );notStrictEqual( actual, expected, [message] );throws( block, [expected], [message] );Test Suite Convenience Methods Reference (See test/data/testinit.js)Returns an array of elements with the given IDsq( ... );Example:q(\""main\"", \""foo\"", \""bar\"");=> [ div#main, span#foo, input#bar ]Asserts that a selection matches the given IDst( testName, selector, [ \""array\"", \""of\"", \""ids\"" ] );Example:t(\""Check for something\"", \""//[a]\"", [\""foo\"", \""bar\""]);Fires a native DOM event without going through jQueryfireNative( node, eventType )Example:fireNative( jQuery(\""#elem\"")[0], \""click\"" );Add random number to url to stop cachingurl( \""some/url\"" );Example:url(\""index.html\"");=> \""data/index.html?10538358428943\""url(\""mock.php?foo=bar\"");=> \""data/mock.php?foo=bar&10538358345554\""Run tests in an iframeSome tests may require a document other than the standard test fixture, andthese can be run in a separate iframe. The actual test code and assertionsremain in jQuery's main test files; only the minimal test fixture markupand setup code should be placed in the iframe file.testIframe( testName, fileName,  function testCallback(      assert, jQuery, window, document,\t  [ additional args ] ) {\t...  } );This loads a page, constructing a url with fileName \""./data/\"" + fileName.The iframed page determines when the callback occurs in the test byincluding the \""/test/data/iframeTest.js\"" script and callingstartIframeTest( [ additional args ] ) when appropriate. Often thiswill be after either document ready or window.onload fires.The testCallback receives the QUnit assert object created by testIframefor this test, followed by the global jQuery, window, and document fromthe iframe. If the iframe code passes any arguments to startIframeTest,they follow the document argument.Questions?If you have any questions, please feel free to ask on theDeveloping jQuery Core forum or in #jquery on libera."
5,5,scutan90/DeepLearning-500-questions,https://github.com/scutan90/DeepLearning-500-questions/blob/master/README.md,JavaScript,京东售卖链接：https://item.jd.com/12785031.html京东商城100多家书店有现货。深度学习500问——AI工程师面试宝典(博文视点出品)，谈继勇 主编，郭子钊，李剑，佃松宜 副主编 著内容简介本书系统地描述了深度学习的基本理论算法及应用。全书共14章，第1-3章论述了数学基础、机器学习基础和深度学习基础；第4-7章介绍了一些经典网络及计算机视觉领域中常用的CNN、RNN、GAN等网络结构技术；第8-9章介绍了深度学习在计算机视觉领域的目标检测及图像分割两大应用；第10-14章介绍了计算机视觉领域主要的优化方法及思路等，包括迁移学习、网络架构及训练、网络优化技巧、超参数调整及模型的压缩和加速等。本书凝聚了众多一线科研人员及工程师的经验，旨在培养读者发现问题、解决问题、扩展问题的能力。本书内容取材于编者在日常学习过程中总结的知识点及各大公司常见的笔试、面试题。本书可为高等院校计算机科学、信息科学、人工智能、控制科学与工程、电子科学与技术等领域的研究及教学人员提供参考，也可为相关专业本科生及研究生提供思考方向，还可为深度学习及计算机视觉领域的初、中级研究人员和工程技术人员提供参考，尤其适合需要查漏补缺的应聘者及提供相关岗位的面试官阅读。作者简介谈继勇 主编南方科技大学和哈尔滨工业大学联合培养博士（在读），现任瀚维智能医疗技术总监，深圳工信局专家库专家，兼任南方科技大学、四川大学研究生企业导师，南方科技大学和瀚维智能医疗联合实验室副主任，北京探工所特聘技术专家，曾先后在中科院信工所、香港中文大学（深圳）、FOXCONN机器人与人工智能实验室、顺丰科技等单位任职。主要专注于智能感知与控制、实时智能与计算机视觉方向的研究，主持/主研国家自然科学基金、省重点研发计划、深圳战略性新兴产业计划等项目20余项，发表SCI/EI论文20余篇，申请发明专利40余项，获全国发明金奖。郭子钊 副主编四川大学计算机科学专业博士，硕士毕业于四川大学自动化系，主要从事AI芯片、深度学习、行为检测识别、人脸检测识别等相关研究工作。李剑 副主编同济大学计算机科学专业博士，浙江农林大学副教授、硕士生导师，主要从事推荐系统、排序学习、凸优化等机器学习领域的科研和教学工作，发表SCI论文10余篇，曾获浙江省科技进步二等奖等多项省部级奖项。佃松宜 副主编日本东北大学博士，四川大学电气工程学院教授、自动化系系主任，四川省信息与自动化技术重点实验室主任。主要专注于先进控制理论与人工智能算法研究、嵌入式计算与实时智能系统的研究与开发、机器人与智能装备的智能感知与控制技术的研究、工业测控与智能物联的研究。近5年来主持包括国家重点研发计划、基金、国网总部项目等各类科研项目近30项，累计总经费近2200万元；发表论文100多篇，其中SCI/EI检索近40篇，ESI高引论文1篇。参与编撰专著3部（其中英文专著1部），参编国家九五规划教材1部。王晋东 特邀编委中科院计算所博士，微软亚洲研究院机器学习研究员，主要从事迁移学习和机器学习方向的研究工作，在IJCAI、CVPR、ICDM、UbiComp、ACMMM、PERCOM、IJCNN、PRICAI、IEEE TNNLS、NEUNET、PRL、PMCJ、IMWUT、IJMLC、ICME、ACM TIST等国际权威期刊和会议上发表论文20余篇，多次获得“最佳论文”奖。作品有《迁移学习简明手册》等。王超锋上海大学硕士，百度计算机视觉算法工程师，主研图像处理，深度学习等方向。曾多次在国内外各类知名计算机视觉挑战赛中获得优异成绩。郭晓锋中国科学院硕士，爱奇艺算法工程师，主要从事图像处理、深度学习等方向的研究，曾获“2017华为软件精英挑战赛”复赛第6名。黄伟华南理工大学硕士，顺丰科技机器人算法工程师，主要从事计算机视觉和自然语言处理方向的研究。曾在相关领域国际期刊、会议上发表论文，并在相关竞赛中获得优异成绩。陈方杰（Amusi）上海大学硕士，CVer（计算机视觉知识分享和学习交流平台）创始人。李元伟国防科技大学硕士，深圳瀚维智能医疗科技公司高级算法工程师，南方科技大学和瀚维智能医疗联合实验室委员，主要从事机器视觉、图像处理及深度学习方向的研究工作，参编普通高等教育十三五规划教材《图像通信基础》，在IEEE TCSVT、COGN COMPUT等发表学术论文多篇，曾获湖南省/全军优秀硕士论文。陈琳北京航空航天大学博士（在读），研究方向为无人机智能控制与决策、仿生智能计算。目录第1章 数学基础 11.1 向量和矩阵 11.1.1 标量、向量、矩阵和张量 11.1.2 张量与矩阵的区别 21.1.3 矩阵和向量相乘的结果 21.1.4 向量和矩阵的范数归纳 21.1.5 判断一个矩阵是否为正定矩阵 41.2 导数和偏导数 51.2.1 导数偏导计算 51.2.2 导数和偏导数的区别 61.3 特征值和特征向量 61.3.1 特征值分解 61.3.2 奇异值和特征值的关系 61.4 概率分布与随机变量 71.4.1 机器学习为什么要使用概率 71.4.2 变量与随机变量的区别 71.4.3 随机变量与概率分布的联系 81.4.4 离散型随机变量和概率质量函数 81.4.5 连续型随机变量和概率密度函数 81.4.6 举例理解条件概率 91.4.7 联合概率与边缘概率的区别和联系 91.4.8 条件概率的链式法则 101.4.9 独立性和条件独立性 101.5 常见概率分布 111.5.1 伯努利分布 111.5.2 高斯分布 111.5.3 何时采用正态分布 121.5.4 指数分布 121.5.5 Laplace分布 131.5.6 Dirac分布和经验分布 131.6 期望、方差、协方差、相关系数 131.6.1 期望 131.6.2 方差 141.6.3 协方差 141.6.4 相关系数 15第2章 机器学习基础 162.1 基本概念 162.1.1 大话机器学习本质 162.1.2 什么是神经网络 162.1.3 各种常见算法图示 172.1.4 计算图的导数计算 172.1.5 理解局部最优与全局最优 182.1.6 大数据与深度学习之间的关系 192.2 机器学习的学习方式 202.2.1 监督学习 202.2.2 非监督学习 202.2.3 半监督学习 202.2.4 弱监督学习 202.2.5 监督学习模型的搭建步骤 212.3 分类算法 222.3.1 常用分类算法的优缺点 222.3.2 分类算法的评估方法 232.3.3 正确率能否很好地评估分类算法 252.3.4 什么样的分类器是最好的 262.4 逻辑回归 262.4.1 回归的种类 262.4.2 逻辑回归适用性 272.4.3 逻辑回归与朴素贝叶斯的区别 272.4.4 线性回归与逻辑回归的区别 272.5 代价函数 282.5.1 为什么需要代价函数 282.5.2 代价函数作用原理 282.5.3 常见代价函数 302.5.4 为什么代价函数要非负 312.5.5 为什么用交叉熵代替二次代价函数 312.6 损失函数 322.6.1 什么是损失函数 322.6.2 常见的损失函数 322.6.3 逻辑回归为什么使用对数损失函数 342.6.4 对数损失函数如何度量损失 342.7 梯度下降法 352.7.1 梯度下降法的作用 362.7.2 梯度下降法的直观理解 362.7.3 梯度下降法算法描述 372.7.4 梯度下降法的缺点 382.7.5 如何对梯度下降法进行调优 382.7.6 随机梯度下降和批量梯度下降的区别 382.7.7 各种梯度下降法性能比较 402.8 线性判别分析 402.8.1 LDA思想总结 402.8.2 图解LDA核心思想 412.8.3 二类LDA算法原理 412.8.4 LDA算法流程总结 422.8.5 LDA和PCA的异同 432.8.6 LDA的优缺点 432.9 主成分分析 432.9.1 图解PCA核心思想 432.9.2 PCA算法推理 442.9.3 PCA算法流程总结 452.9.4 PCA思想总结 462.9.5 PCA算法的优缺点 462.9.6 降维的必要性及目的 462.9.7 KPCA与PCA的区别 472.10 模型评估 472.10.1 模型评估常用方法 482.10.2 误差、偏差和方差的区别和联系 482.10.3 为什么使用标准差 492.10.4 经验误差与泛化误差 502.10.5 图解欠拟合与过拟合 502.10.6 如何解决欠拟合与过拟合 522.10.7 交叉验证的主要作用 522.10.8 理解K折交叉验证 532.10.9 理解混淆矩阵 532.10.10 理解查准率与查全率 532.10.11 理解ROC与AUC 542.10.12 如何绘制ROC曲线 552.10.13 如何计算TPR和FPR 562.10.14 如何计算AUC 582.10.15 直观理解AUC 582.10.16 ROC评估分类器 602.10.17 代价敏感错误率与代价曲线 602.10.18 比较检验方法 612.11 决策树 612.11.1 决策树的基本原理 622.11.2 决策树的生成过程 622.11.3 决策树学习基本算法步骤 622.11.4 决策树算法的优缺点 632.11.5 决策树和熵的联系 632.11.6 熵的概念及定义 632.11.7 理解信息增益 642.11.8 决策树中熵、条件熵和信息增益的联系 642.11.9 决策树算法中剪枝的作用及策略 652.12 支持向量机（SVM） 652.12.1 什么是SVM 652.12.2 SVM能解决的问题 662.12.3 核函数特点及其作用 672.12.4 SVM为什么引入对偶问题 672.12.5 如何理解SVM中的对偶问题 672.12.6 常见的核函数 692.12.7 SVM的主要特点 692.12.8 SVM的主要缺点 702.12.9 逻辑回归与SVM的异同 702.13 贝叶斯分类器 722.13.1 贝叶斯分类器的基本原理 722.13.2 朴素贝叶斯分类器 722.13.3 举例理解朴素贝叶斯分类器 732.13.4 半朴素贝叶斯分类器 752.13.5 极大似然估计和贝叶斯估计的联系与区别 752.13.6 极大似然估计原理 762.13.7 图解极大似然估计 762.14 EM算法 772.14.1 EM算法的基本思想 772.14.2 EM算法推导 772.14.3 图解EM算法 782.14.4 EM算法流程 792.15 降维和聚类 792.15.1 图解为什么会产生维数灾难 792.15.2 怎样避免维数灾难 832.15.3 聚类和降维 832.15.4 聚类算法优劣的衡量标准 842.15.5 聚类和分类 852.15.6 聚类算法的性能比较 852.15.7 4种常用聚类方法比较 85第3章 深度学习基础 893.1 基本概念 893.1.1 神经网络的类型 893.1.2 神经网络的常用模型结构 923.1.3 深度学习和机器学习的区别与联系 933.1.4 为什么使用深层表示 933.1.5 深度学习架构分类 943.1.6 如何选择深度学习开发平台 943.2 神经网络计算 953.2.1 前向传播和反向传播 953.2.2 如何计算神经网络的输出 963.2.3 如何计算卷积神经网络输出值 973.2.4 如何计算池化层输出值 1003.2.5 反向传播实例 1013.2.6 神经网络更“深”的意义 1043.3 激活函数 1043.3.1 为什么需要激活函数 1043.3.2 为什么激活函数需要非线性函数 1053.3.3 常见的激活函数及其图像 1053.3.4 常见激活函数的导数计算 1073.3.5 激活函数有哪些性质 1083.3.6 如何选择激活函数 1083.3.7 为什么tanh收敛速度比sigmoid快 1093.3.8 Relu激活函数的优点 1093.3.9 理解Relu激活函数的稀疏激活性 1093.3.10 什么时候可以用线性激活函数 1093.3.11 softmax函数的定义及作用 1103.3.12 softmax函数如何应用于多分类 1103.4 BATCH SIZE 1123.4.1 为什么需要Batch Size 1123.4.2 如何选择Batch Size值 1123.4.3 调节Batch Size对训练效果的影响 1133.4.4 在合理范围内增大Batch Size的好处 1133.4.5 盲目增大Batch Size的坏处 1143.5 归一化 1143.5.1 理解归一化含义 1143.5.2 归一化和标准化的联系与区别 1143.5.3 为什么要归一化或标准化 1153.5.4 图解为什么要归一化 1153.5.5 为什么归一化能提高求最优解速度 1153.5.6 归一化有哪些类型 1163.5.7 局部响应归一化作用 1163.5.8 局部响应归一化原理 1173.5.9 什么是批归一化 1183.5.10 批归一化的优点 1183.5.11 批归一化算法流程 1183.5.12 批归一化和组归一化比较 1193.5.13 权重归一化和批归一化比较 1193.5.14 批归一化适用范围 1203.5.15 BN、LN、IN和GN的对比 1203.6 参数初始化 1213.6.1 参数初始化应满足的条件 1213.6.2 常用的几种初始化方式 1213.6.3 全0初始化带来的问题 1213.6.4 全都初始化为同样的值 1223.6.5 初始化为小的随机数 1233.6.6 用 校准方差 1233.7 预训练与微调 1233.7.1 什么是预训练和微调 1233.7.2 预训练和微调的作用 1243.7.3 预训练模型的复用 1243.7.4 预训练和迁移学习 1253.7.5 微调时网络参数是否更新 1253.7.6 微调模型的三种状态 1253.7.7 为什么深层神经网络难以训练 1253.8 超参数 1273.8.1 超参数有哪些 1273.8.2 参数和模型的关系 1273.8.3 参数和超参数的区别 1273.8.4 如何寻找超参数的最优值 1283.8.5 超参数搜索的一般过程 1283.9 学习率 1293.9.1 学习率的作用 1293.9.2 学习率衰减的常用参数 1293.9.3 常用的学习率衰减方法 1293.10 正则化 1333.10.1 为什么要正则化 1333.10.2 常见正则化方法 1333.10.3 图解L1和L2正则化 1343.10.4 Dropout具体工作流程 1353.10.5 为什么Dropout可以解决过拟合问题 1373.10.6 Dropout的缺点
6,6,cyclic-software/starter-express-api,https://github.com/cyclic-software/starter-express-api/blob/main/README.md,JavaScript,starter-express-apiThis is the simplest possible nodejs api using express that responds to any request with:Yo!Deploy it in 7 seconds:
7,7,Binaryify/NeteaseCloudMusicApi,https://github.com/Binaryify/NeteaseCloudMusicApi/blob/master/README.MD,JavaScript,"网易云音乐 API网易云音乐 Node.js API service灵感来自disoul/electron-cloud-musicdarknessomi/musicboxsqaiyan/netmusic-nodegreats3an/pyncm环境要求需要 NodeJS 14+ 环境安装$ git clone git@github.com:Binaryify/NeteaseCloudMusicApi.git$ cd NeteaseCloudMusicApi$ npm install或者$ git clone https://github.com/Binaryify/NeteaseCloudMusicApi.git$ cd NeteaseCloudMusicApi$ npm install运行调用前务必阅读文档的调用前须知$ node app.js服务器启动默认端口为 3000,若不想使用 3000 端口,可使用以下命令: Mac/Linux$ PORT=4000 node app.jswindows 下使用 git-bash 或者 cmder 等终端执行以下命令:$ set PORT=4000 && node app.jsVercel 部署v4.0.8 加入了 Vercel 配置文件,可以直接在 Vercel 下部署了,不需要自己的服务器操作方法fork 此项目在 Vercel 官网点击 New Project点击 Import Git Repository 并选择你 fork 的此项目并点击import点击 PERSONAL ACCOUNT 的 select直接点ContinuePROJECT NAME自己填,FRAMEWORK PRESET 选 Other 然后直接点 Deploy 接着等部署完成即可腾讯云 serverless 部署因 Vercel 在国内访问太慢,在此提供腾讯云 serverless 部署方法(注意:腾讯云 serverless 并不是免费的,前三个月有免费额度,之后收费)操作方法fork 此项目在腾讯云serverless应用管理页面( https://console.cloud.tencent.com/sls ),点击新建应用顶部创建方式选择 Web 应用选择 Express框架,点击底部下一步按钮输入应用名,上传方式选择代码仓库,进行GitHub授权(如已授权可跳过这一步),代码仓库选择刚刚fork的项目启动文件填入:#!/bin/bashexport PORT=9000/var/lang/node16/bin/node app.js点击完成,等待部署完成,点击资源列表的 API网关 里的 URL,正常情况会打开文档地址,点击文档例子可查看接口调用效果可以在Node.js调用v3.31.0后支持Node.js调用,导入的方法为module内的文件名,返回内容包含status和body,status为状态码,body为请求返回内容,参考module_example 文件夹下的 test.jsconst { login_cellphone, user_cloud } = require('NeteaseCloudMusicApi')async function main() {  try {    const result = await login_cellphone({      phone: '手机号',      password: '密码'    })    console.log(result)    const result2 = await user_cloud({      cookie: result.body.cookie // 凭证    })    console.log(result2.body)        } catch (error) {    console.log(error)  }}main()支持 TypeScript// test.tsimport { banner } from 'NeteaseCloudMusicApi'banner({ type:0 }).then(res=>{  console.log(res)})使用文档文档地址文档地址2功能特性登录刷新登录发送验证码校验验证码注册(修改密码)获取用户信息 , 歌单，收藏，mv, dj 数量获取用户歌单获取用户电台获取用户关注列表获取用户粉丝列表获取用户动态获取用户播放记录获取精品歌单获取歌单详情搜索搜索建议获取歌词歌曲评论收藏单曲到歌单专辑评论歌单评论mv 评论电台节目评论banner获取歌曲详情获取专辑内容获取歌手单曲获取歌手 mv获取歌手专辑获取歌手描述获取相似歌手获取相似歌单相似 mv获取相似音乐获取最近 5 个听了这首歌的用户获取每日推荐歌单获取每日推荐歌曲私人 FM签到喜欢音乐垃圾桶歌单 ( 网友精选碟 )新碟上架热门歌手最新 mv推荐 mv推荐歌单推荐新音乐推荐电台推荐节目独家放送mv 排行获取 mv 数据播放 mv/视频排行榜歌手榜云盘电台 - 推荐电台 - 分类电台 - 分类推荐电台 - 订阅电台 - 详情电台 - 节目给评论点赞获取动态热搜列表(简略)发送私信发送私信歌单新建歌单收藏/取消收藏歌单歌单分类收藏的歌手列表订阅的电台列表相关歌单推荐付费精选接口音乐是否可用检查接口登录状态获取视频播放地址发送/删除评论热门评论视频评论退出登录所有榜单所有榜单内容摘要收藏视频收藏 MV视频详情相关视频关注用户新歌速递喜欢音乐列表(无序)收藏的 MV 列表获取最新专辑听歌打卡获取视频标签/分类下的视频已收藏专辑列表获取动态评论歌单收藏者列表云盘歌曲删除热门话题电台 - 推荐类型电台 - 非热门类型电台 - 今日优选心动模式/智能播放转发动态删除动态分享歌曲、歌单、mv、电台、电台节目到动态通知-私信通知-评论通知-@我通知-通知设置云盘数据详情私信内容我的数字专辑batch批量请求接口获取视频标签列表全部mv网易出品mv收藏/取消收藏专辑专辑动态信息热搜列表(详细)更换绑定手机检测手机号码是否已注册初始化昵称更新歌单描述更新歌单名更新歌单标签默认搜索关键词删除歌单电台banner用户电台热门电台电台 - 节目详情电台 - 节目榜电台 - 新晋电台榜/热门电台榜类别热门电台云村热评电台24小时节目榜电台24小时主播榜电台最热主播榜电台主播新人榜电台付费精品榜歌手热门50首歌曲购买数字专辑获取 mv 点赞转发评论数数据获取视频点赞转发评论数数据调整歌单顺序调整歌曲顺序独家放送列表获取推荐视频获取视频分类列表获取全部视频列表接口获取历史日推可用日期列表获取历史日推详细数据国家编码列表首页-发现首页-发现-圆形图标入口列表数字专辑-全部新碟数字专辑-热门新碟数字专辑&数字单曲-榜单数字专辑-语种风格馆数字专辑详情更新头像歌单封面上传楼层评论歌手全部歌曲精品歌单标签列表用户等级信息电台个性推荐用户绑定信息用户绑定手机新版评论点赞过的视频收藏视频到视频歌单删除视频歌单里的视频最近播放的视频音乐日历电台订阅者列表云贝签到信息云贝签到云贝所有任务云贝todo任务云贝今日签到信息云贝完成任务云贝收入云贝支出云贝账户信息账号信息最近联系人私信音乐抱一抱评论评论抱一抱列表收藏的专栏关注歌手新歌关注歌手新MV歌手详情云盘上传二维码登录话题详情话题详情热门动态歌单详情动态绑定手机一起听状态用户历史评论云盘歌曲信息匹配纠正云贝推歌云贝推歌历史记录已购单曲获取mlog播放地址将mlog id转为视频idvip成长值vip成长值获取记录vip任务领取vip成长值歌手粉丝数字专辑详情数字专辑销量音乐人数据概况音乐人播放趋势音乐人任务账号云豆数领取云豆获取 VIP 信息音乐人签到发送文本动态获取客户端歌曲下载 url获取歌单所有歌曲乐签信息最近播放-歌曲最近播放-视频最近播放-声音最近播放-歌单最近播放-专辑最近播放-播客签到进度重复昵称检测歌手粉丝数量音乐人任务(新)内部版本接口歌单更新播放量黑胶时光机音乐百科 - 简要信息乐谱列表乐谱内容曲风列表曲风偏好曲风详情曲风-歌曲曲风-专辑曲风-歌单曲风-歌手更新日志changelog单元测试$ npm testSDK语言作者地址类型JavaJackuXLhttps://github.com/JackuXL/NeteaseCloudMusicApi-SDK第三方Java1015770492https://github.com/1015770492/yumbo-music-utils第三方贡献者LicenseThe MIT License (MIT)"
8,8,tastejs/todomvc,https://github.com/Binaryify/NeteaseCloudMusicApi/blob/master/README.MD,JavaScript,"网易云音乐 API网易云音乐 Node.js API service灵感来自disoul/electron-cloud-musicdarknessomi/musicboxsqaiyan/netmusic-nodegreats3an/pyncm环境要求需要 NodeJS 14+ 环境安装$ git clone git@github.com:Binaryify/NeteaseCloudMusicApi.git$ cd NeteaseCloudMusicApi$ npm install或者$ git clone https://github.com/Binaryify/NeteaseCloudMusicApi.git$ cd NeteaseCloudMusicApi$ npm install运行调用前务必阅读文档的调用前须知$ node app.js服务器启动默认端口为 3000,若不想使用 3000 端口,可使用以下命令: Mac/Linux$ PORT=4000 node app.jswindows 下使用 git-bash 或者 cmder 等终端执行以下命令:$ set PORT=4000 && node app.jsVercel 部署v4.0.8 加入了 Vercel 配置文件,可以直接在 Vercel 下部署了,不需要自己的服务器操作方法fork 此项目在 Vercel 官网点击 New Project点击 Import Git Repository 并选择你 fork 的此项目并点击import点击 PERSONAL ACCOUNT 的 select直接点ContinuePROJECT NAME自己填,FRAMEWORK PRESET 选 Other 然后直接点 Deploy 接着等部署完成即可腾讯云 serverless 部署因 Vercel 在国内访问太慢,在此提供腾讯云 serverless 部署方法(注意:腾讯云 serverless 并不是免费的,前三个月有免费额度,之后收费)操作方法fork 此项目在腾讯云serverless应用管理页面( https://console.cloud.tencent.com/sls ),点击新建应用顶部创建方式选择 Web 应用选择 Express框架,点击底部下一步按钮输入应用名,上传方式选择代码仓库,进行GitHub授权(如已授权可跳过这一步),代码仓库选择刚刚fork的项目启动文件填入:#!/bin/bashexport PORT=9000/var/lang/node16/bin/node app.js点击完成,等待部署完成,点击资源列表的 API网关 里的 URL,正常情况会打开文档地址,点击文档例子可查看接口调用效果可以在Node.js调用v3.31.0后支持Node.js调用,导入的方法为module内的文件名,返回内容包含status和body,status为状态码,body为请求返回内容,参考module_example 文件夹下的 test.jsconst { login_cellphone, user_cloud } = require('NeteaseCloudMusicApi')async function main() {  try {    const result = await login_cellphone({      phone: '手机号',      password: '密码'    })    console.log(result)    const result2 = await user_cloud({      cookie: result.body.cookie // 凭证    })    console.log(result2.body)        } catch (error) {    console.log(error)  }}main()支持 TypeScript// test.tsimport { banner } from 'NeteaseCloudMusicApi'banner({ type:0 }).then(res=>{  console.log(res)})使用文档文档地址文档地址2功能特性登录刷新登录发送验证码校验验证码注册(修改密码)获取用户信息 , 歌单，收藏，mv, dj 数量获取用户歌单获取用户电台获取用户关注列表获取用户粉丝列表获取用户动态获取用户播放记录获取精品歌单获取歌单详情搜索搜索建议获取歌词歌曲评论收藏单曲到歌单专辑评论歌单评论mv 评论电台节目评论banner获取歌曲详情获取专辑内容获取歌手单曲获取歌手 mv获取歌手专辑获取歌手描述获取相似歌手获取相似歌单相似 mv获取相似音乐获取最近 5 个听了这首歌的用户获取每日推荐歌单获取每日推荐歌曲私人 FM签到喜欢音乐垃圾桶歌单 ( 网友精选碟 )新碟上架热门歌手最新 mv推荐 mv推荐歌单推荐新音乐推荐电台推荐节目独家放送mv 排行获取 mv 数据播放 mv/视频排行榜歌手榜云盘电台 - 推荐电台 - 分类电台 - 分类推荐电台 - 订阅电台 - 详情电台 - 节目给评论点赞获取动态热搜列表(简略)发送私信发送私信歌单新建歌单收藏/取消收藏歌单歌单分类收藏的歌手列表订阅的电台列表相关歌单推荐付费精选接口音乐是否可用检查接口登录状态获取视频播放地址发送/删除评论热门评论视频评论退出登录所有榜单所有榜单内容摘要收藏视频收藏 MV视频详情相关视频关注用户新歌速递喜欢音乐列表(无序)收藏的 MV 列表获取最新专辑听歌打卡获取视频标签/分类下的视频已收藏专辑列表获取动态评论歌单收藏者列表云盘歌曲删除热门话题电台 - 推荐类型电台 - 非热门类型电台 - 今日优选心动模式/智能播放转发动态删除动态分享歌曲、歌单、mv、电台、电台节目到动态通知-私信通知-评论通知-@我通知-通知设置云盘数据详情私信内容我的数字专辑batch批量请求接口获取视频标签列表全部mv网易出品mv收藏/取消收藏专辑专辑动态信息热搜列表(详细)更换绑定手机检测手机号码是否已注册初始化昵称更新歌单描述更新歌单名更新歌单标签默认搜索关键词删除歌单电台banner用户电台热门电台电台 - 节目详情电台 - 节目榜电台 - 新晋电台榜/热门电台榜类别热门电台云村热评电台24小时节目榜电台24小时主播榜电台最热主播榜电台主播新人榜电台付费精品榜歌手热门50首歌曲购买数字专辑获取 mv 点赞转发评论数数据获取视频点赞转发评论数数据调整歌单顺序调整歌曲顺序独家放送列表获取推荐视频获取视频分类列表获取全部视频列表接口获取历史日推可用日期列表获取历史日推详细数据国家编码列表首页-发现首页-发现-圆形图标入口列表数字专辑-全部新碟数字专辑-热门新碟数字专辑&数字单曲-榜单数字专辑-语种风格馆数字专辑详情更新头像歌单封面上传楼层评论歌手全部歌曲精品歌单标签列表用户等级信息电台个性推荐用户绑定信息用户绑定手机新版评论点赞过的视频收藏视频到视频歌单删除视频歌单里的视频最近播放的视频音乐日历电台订阅者列表云贝签到信息云贝签到云贝所有任务云贝todo任务云贝今日签到信息云贝完成任务云贝收入云贝支出云贝账户信息账号信息最近联系人私信音乐抱一抱评论评论抱一抱列表收藏的专栏关注歌手新歌关注歌手新MV歌手详情云盘上传二维码登录话题详情话题详情热门动态歌单详情动态绑定手机一起听状态用户历史评论云盘歌曲信息匹配纠正云贝推歌云贝推歌历史记录已购单曲获取mlog播放地址将mlog id转为视频idvip成长值vip成长值获取记录vip任务领取vip成长值歌手粉丝数字专辑详情数字专辑销量音乐人数据概况音乐人播放趋势音乐人任务账号云豆数领取云豆获取 VIP 信息音乐人签到发送文本动态获取客户端歌曲下载 url获取歌单所有歌曲乐签信息最近播放-歌曲最近播放-视频最近播放-声音最近播放-歌单最近播放-专辑最近播放-播客签到进度重复昵称检测歌手粉丝数量音乐人任务(新)内部版本接口歌单更新播放量黑胶时光机音乐百科 - 简要信息乐谱列表乐谱内容曲风列表曲风偏好曲风详情曲风-歌曲曲风-专辑曲风-歌单曲风-歌手更新日志changelog单元测试$ npm testSDK语言作者地址类型JavaJackuXLhttps://github.com/JackuXL/NeteaseCloudMusicApi-SDK第三方Java1015770492https://github.com/1015770492/yumbo-music-utils第三方贡献者LicenseThe MIT License (MIT)"
9,9,OpenZeppelin/openzeppelin-contracts,https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/README.md,JavaScript,"WarningVersion 5.0 is under active development. The code in this branch is not recommended for use.A library for secure smart contract development. Build on a solid foundation of community-vetted code.Implementations of standards like ERC20 and ERC721.Flexible role-based permissioning scheme.Reusable Solidity components to build custom contracts and complex decentralized systems.🧙 Not sure how to get started? Check out Contracts Wizard — an interactive smart contract generator.🏗️ Want to scale your decentralized application? Check out OpenZeppelin Defender — a secure platform for automating and monitoring your operations.OverviewInstallationHardhat, Truffle (npm)$ npm install @openzeppelin/contractsOpenZeppelin Contracts features a stable API, which means that your contracts won't break unexpectedly when upgrading to a newer minor version.Foundry (git)Warning When installing via git, it is a common error to use the master branch. This is a development branch that should be avoided in favor of tagged releases. The release process involves security measures that the master branch does not guarantee.Warning Foundry installs the latest version initially, but subsequent forge update commands will use the master branch.$ forge install OpenZeppelin/openzeppelin-contractsAdd @openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/ in remappings.txt.UsageOnce installed, you can use the contracts in the library by importing them:pragma solidity ^0.8.20;import {ERC721} from \""@openzeppelin/contracts/token/ERC721/ERC721.sol\"";contract MyCollectible is ERC721 {    constructor() ERC721(\""MyCollectible\"", \""MCO\"") {    }}If you're new to smart contract development, head to Developing Smart Contracts to learn about creating a new project and compiling your contracts.To keep your system secure, you should always use the installed code as-is, and neither copy-paste it from online sources nor modify it yourself. The library is designed so that only the contracts and functions you use are deployed, so you don't need to worry about it needlessly increasing gas costs.Learn MoreThe guides in the documentation site will teach about different concepts, and how to use the related contracts that OpenZeppelin Contracts provides:Access Control: decide who can perform each of the actions on your system.Tokens: create tradeable assets or collectives, and distribute them via Crowdsales.Utilities: generic useful tools including non-overflowing math, signature verification, and trustless paying systems.The full API is also thoroughly documented, and serves as a great reference when developing your smart contract application. You can also ask for help or follow Contracts's development in the community forum.Finally, you may want to take a look at the guides on our blog, which cover several common use cases and good practices. The following articles provide great background reading, though please note that some of the referenced tools have changed, as the tooling in the ecosystem continues to rapidly evolve.The Hitchhiker’s Guide to Smart Contracts in Ethereum will help you get an overview of the various tools available for smart contract development, and help you set up your environment.A Gentle Introduction to Ethereum Programming, Part 1 provides very useful information on an introductory level, including many basic concepts from the Ethereum platform.For a more in-depth dive, you may read the guide Designing the Architecture for Your Ethereum Application, which discusses how to better structure your application and its relationship to the real world.SecurityThis project is maintained by OpenZeppelin with the goal of providing a secure and reliable library of smart contract components for the ecosystem. We address security through risk management in various areas such as engineering and open source best practices, scoping and API design, multi-layered review processes, and incident response preparedness.The OpenZeppelin Contracts Security Center contains more details about the secure development process.The security policy is detailed in SECURITY.md as well, and specifies how you can report security vulnerabilities, which versions will receive security patches, and how to stay informed about them. We run a bug bounty program on Immunefi to reward the responsible disclosure of vulnerabilities.The engineering guidelines we follow to promote project quality can be found in GUIDELINES.md.Past audits can be found in audits/.Smart contracts are a nascent technology and carry a high level of technical risk and uncertainty. Although OpenZeppelin is well known for its security audits, using OpenZeppelin Contracts is not a substitute for a security audit.OpenZeppelin Contracts is made available under the MIT License, which disclaims all warranties in relation to the project and which limits the liability of those that contribute and maintain the project, including OpenZeppelin. As set out further in the Terms, you acknowledge that you are solely responsible for any use of OpenZeppelin Contracts and you assume all risks associated with any such use.ContributeOpenZeppelin Contracts exists thanks to its contributors. There are many ways you can participate and help build high quality software. Check out the contribution guide!LicenseOpenZeppelin Contracts is released under the MIT License.LegalYour use of this Project is governed by the terms found at www.openzeppelin.com/tos (the \""Terms\"")."
10,10,learn-co-curriculum/phase-0-pac-3-what-is-a-test-lab,https://github.com/learn-co-curriculum/phase-0-pac-3-what-is-a-test-lab/blob/master/README.md,JavaScript,"Testing with JavaScript LabLearning GoalsRunning testsReading test resultsRunning TestsYou understand how to read tests; now it's time to run the tests.Recall that in the previous lesson, the tests were commented out. Be sure to forkand clone this lab into your local environment so you have the version of the testfile that is not commented out. (Return to the previous lesson if you need a reminderof how to do this.)Navigate into its directory in the terminal, then run code . to open the filesin Visual Studio Code. (If you are using a different text editor, the commandwill be different.) Finally, run npm install to install the lab'sdependencies.What exactly do we mean by installing dependencies? Open the package.json fileand scroll down to the bottom. You'll see a list of 'DevDependencies'. What'slisted here are JavaScript packages: files or sets of files full of existing,reusable code. They are designed to be shared, allowing many developers to usethe same code in their own projects. The packages you see listed inpackage.json make it possible to run the lab's tests. In order to use thepackages, we have to install them; npm install does that for us.If you take a look at index.js and indexTest.js, you should see the samecode as in the previous lesson. The only difference is that the test code inindexTest.js is no longer commented out.Important: You should never need to make changes to test files unless alab's instructions specifically tell you to do so.To run the tests, run npm test in the terminal. That's it!The next step is learning how to read the results that the tests give you.Reading Results of TestsThe first time you run npm test, you should see something that looks likethis:> js-functions-lab@0.1.0 test> mocha --timeout 5000 -R mocha-multi --reporter-options spec=-,json=.results.json  what-is-a-test    Name      1) returns \""Susan\""    Height      2) is less than 40 and greater than 0    Message      ✓ gives the name and height  1 passing (552ms)  2 failing  1) what-is-a-test       Name         returns \""Susan\"":      Error: Expected 'Joe' to equal 'Susan'      + expected - actual      -Joe      +Susan      at assert (node_modules/expect/lib/assert.js:29:9)      at Expectation.toEqual (node_modules/expect/lib/Expectation.js:81:30)      at Context.<anonymous> (test/indexTest.js:6:26)      at processImmediate (internal/timers.js:461:21)  2) what-is-a-test       Height         is less than 40 and greater than 0:     Error: Expected 74 to be less than 40      at assert (node_modules/expect/lib/assert.js:29:9)      at Expectation.toBeLessThan (node_modules/expect/lib/Expectation.js:156:28)      at Context.<anonymous> (test/indexTest.js:13:28)      at processImmediate (internal/timers.js:461:21)npm ERR! Test failed.  See above for more details.Note: If you also get an error that ends with \""unexpected character (after) at line 1, column 1 [parse.c:769] (Oj::ParseError)\"", make sure you've cloneddown the files for this lab, and are not running the tests on the files fromthe previous lesson.Let's break this down a bit. If you look about a third of the way down in theoutput, you'll see a summary of how the tests went:  1 passing (552ms)  2 failingGreat! We've already got one test passing! Now let's see how we failed the othertwo tests.  1) what-is-a-test       Name         returns \""Susan\"":      Error: Expected 'Joe' to equal 'Susan'      + expected - actual      -Joe      +Susan      at assert (node_modules/expect/lib/assert.js:29:9)      at Expectation.toEqual (node_modules/expect/lib/Expectation.js:81:30)      at Context.<anonymous> (test/indexTest.js:6:26)      at processImmediate (internal/timers.js:461:21)  2) what-is-a-test       Height         is less than 40 and greater than 0:     Error: Expected 74 to be less than 40      at assert (node_modules/expect/lib/assert.js:29:9)      at Expectation.toBeLessThan (node_modules/expect/lib/Expectation.js:156:28)      at Context.<anonymous> (test/indexTest.js:13:28)      at processImmediate (internal/timers.js:461:21)While there is no hard and fast rule, and there will be exceptions, it is mostoften best to address your test errors in order. So let's take a look at ourfirst error:1) what-is-a-test       Name         returns \""Susan\"":      Error: Expected 'Joe' to equal 'Susan'      + expected - actual      -Joe      +Susan      at assert (node_modules/expect/lib/assert.js:29:9)      at Expectation.toEqual (node_modules/expect/lib/Expectation.js:81:30)      at Context.<anonymous> (test/indexTest.js:6:26)      at processImmediate (internal/timers.js:456:21)Here is the specific error:      Error: Expected 'Joe' to equal 'Susan'      + expected - actual      -Joe      +SusanIt tells us what the test is expecting (Expected 'Joe' to equal 'Susan') andthen gives us details about the expected and actual values. This shows youexactly how the value your code is returning (the actual value) differs fromwhat the test is looking for. Make sure you understand what this is telling you— it will come in handy in later labs!This error makes sense because we have the name variable set equal to \""Joe\"" inour index.js file. Let's change that line of code to set name equal to\""Susan\"" instead. Run the tests again by typing npm test in the terminal'scommand line (don't forget to save the file first!), and you should see thatwe are now passing 2 of the 3 tests!  what-is-a-test    Name      ✓ returns \""Susan\""    Height      1) is less than 40 and greater than 0    Message      ✓ gives the name and height  2 passing (736ms)  1 failing  1) what-is-a-test       Height         is less than 40 and greater than 0:     Error: Expected 74 to be less than 40      at assert (node_modules/expect/lib/assert.js:29:9)      at Expectation.toBeLessThan (node_modules/expect/lib/Expectation.js:156:28)      at Context.<anonymous> (test/indexTest.js:13:28)      at processImmediate (internal/timers.js:461:21)Woot! You passed another one. Now go ahead and try to pass the remaining test onyour own.Common ErrorsWhile you are solving the other tests you may come across a few errors. Let's goover some common ones:Variable Not DefinedReferenceError: name is not definedThat one says that the name variable is not defined. That makes no sense! Weinitialized the name variable in index.js! What that actually means is thatthe test couldn't find the variable name. You'll get this error if the name ofone of your variables is different than the test is expecting. Check to makesure you used the correct variable names and look carefully for typos.Unexpected Identifier/Users/lizburton_fs/Development/code/phase-0-pac-3-what-is-a-test-lab/index.js:1cnst name = \""Susan\"";     ^^^^SyntaxError: Unexpected identifier    at wrapSafe (internal/modules/cjs/loader.js:979:16)    at Module._compile (internal/modules/cjs/loader.js:1027:27)    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)    at Module.load (internal/modules/cjs/loader.js:928:32)    at Function.Module._load (internal/modules/cjs/loader.js:769:14)    at Module.require (internal/modules/cjs/loader.js:952:19)    at require (internal/modules/cjs/helpers.js:88:18)    at Object.<anonymous> (/Users/lizburton_fs/Development/code/phase-0-pac-3-what-is-a-test-lab/test/indexTest.js:1:15)    at Module._compile (internal/modules/cjs/loader.js:1063:30)    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)    at Module.load (internal/modules/cjs/loader.js:928:32)    at Function.Module._load (internal/modules/cjs/loader.js:769:14)    at Module.require (internal/modules/cjs/loader.js:952:19)    at require (internal/modules/cjs/helpers.js:88:18)    at /Users/lizburton_fs/Development/code/phase-0-pac-3-what-is-a-test-lab/node_modules/mocha/lib/mocha.js:311:36    at Array.forEach (<anonymous>)    at Mocha.loadFiles (/Users/lizburton_fs/Development/code/phase-0-pac-3-what-is-a-test-lab/node_modules/mocha/lib/mocha.js:308:14)    at Mocha.run (/Users/lizburton_fs/Development/code/phase-0-pac-3-what-is-a-test-lab/node_modules/mocha/lib/mocha.js:849:10)    at Object.exports.singleRun (/Users/lizburton_fs/Development/code/phase-0-pac-3-what-is-a-test-lab/node_modules/mocha/lib/cli/run-helpers.js:108:16)    at exports.runMocha (/Users/lizburton_fs/Development/code/phase-0-pac-3-what-is-a-test-lab/node_modules/mocha/lib/cli/run-helpers.js:143:13)    at Object.exports.handler (/Users/lizburton_fs/Development/code/phase-0-pac-3-what-is-a-test-lab/node_modules/mocha/lib/cli/run.js:305:3)    at Object.runCommand (/Users/lizburton_fs/Development/code/phase-0-pac-3-what-is-a-test-lab/node_modules/yargs/lib/command.js:242:26)    at Object.parseArgs [as _parseArgs] (/Users/lizburton_fs/Development/code/phase-0-pac-3-what-is-a-test-lab/node_modules/yargs/yargs.js:1104:24)    at Object.parse (/Users/lizburton_fs/Development/code/phase-0-pac-3-what-is-a-test-lab/node_modules/yargs/yargs.js:566:25)    at Object.exports.main (/Users/lizburton_fs/Development/code/phase-0-pac-3-what-is-a-test-lab/node_modules/mocha/lib/cli/cli.js:68:6)    at Object.<anonymous> (/Users/lizburton_fs/Development/code/phase-0-pac-3-what-is-a-test-lab/node_modules/mocha/bin/mocha:133:29)    at Module._compile (internal/modules/cjs/loader.js:1063:30)    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)    at Module.load (internal/modules/cjs/loader.js:928:32)    at Function.Module._load (internal/modules/cjs/loader.js:769:14)    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)    at internal/main/run_main_module.js:17:47npm ERR! Test failed.  See above for more details.Whoa! So many words that make no sense. Don't worry though. The most importantline is the SyntaxError: Unexpected identifier line. What that means is youhave some sort of typo or syntax mistake. It could be a HUGE variety of thingsbut usually, JS will try and give you a hint. This time it's pointing to thecnst name = \""Susan\"" line of code. Take a look and read very carefully:const is misspelled. Whoops! Once we fix that everything will work.One note on this type of error is that it is sort of a catch-all. Tons and tonsof problems end in that sort of error message. Whenever you see it, be sure toread over your code with a fine-toothed comb... and you'll find the problem!Type ErrorsOn the second test, there is a chance you might see the following error:1) what-is-a-test       Height         is less than 40 and greater than 0:     Error: The \""actual\"" argument in expect(actual).toBeLessThan() must be a number      at assert (node_modules/expect/lib/assert.js:29:9)      at Expectation.toBeLessThan (node_modules/expect/lib/Expectation.js:156:28)      at Context.<anonymous> (test/indexTest.js:13:28)      at processImmediate (internal/timers.js:456:21)This error is slightly different than the last two. In this case, the test isgiving us a unique message because it recognizes a problem. If we look at thistest in test/indexTest.js, we see this:describe(\""Height\"", () => {    it(\""is less than 40 and greater than 0\"", () => {      expect(height).toBeMoreThan(0)      expect(height).toBeLessThan(40);    });  });We can see that the word \""actual\"" in this case is referring to the heightvariable. The error message is telling us that height must be a number. Ifyou're seeing this, make sure that you have set the height variable to anumber that's less than 40 (e.g. 39), not a string (\""39\""). The testwill interpret the value as a string due to the quotation marks wrapping it.Optional Mocha ConfigurationIn this lab, we only had three tests to pass, but as you continue through thecurriculum you will encounter labs with many more tests. You can imagine thatthe test output could get very long, making it more difficult to focus in on howto fix a particular error.To help with this issue, there is some very simple setup you can put in place inMocha that will cause the tests to stop as soon as the first failing test isencountered.To implement this, open up the package.json file and find the test script. Itshould look something like this:\""test\"": \""mocha --timeout 5000 -R mocha-multi --reporter-options spec=-,json=.results.json\""Add the --bail flag to the end of the line, inside the quotes:\""test\"": \""mocha --timeout 5000 -R mocha-multi --reporter-options spec=-,json=.results.json --bail\""That's it!Submitting Your Work to CanvasOnce you've got all the tests passing, it's time to push your completed code upto GitHub and submit it to Canvas using CodeGrade. We'll do a quick review ofhow to do that below, but you may want to review the full process in theComplete Your First Software Engineering Assignmentlesson. You'll be going through this process for every lab you do in thisprogram!Let's review the process. First, you need to \""stage\"" your changes using the git add command:$ git add index.jsor$ git add .Recall that the . shortcut will stage all files that have changes. In thiscase there's only one so either command will work.Next, you need to \""commit\"" your changes, which basically saves a record of thechanges you've made. Don't forget to use the -m flag and include a commitmessage! Use the message shown below or choose your own:$ git commit -m \""complete lab\""Finally, push your changes up to your GitHub account (your fork of this lab):$ git pushIf you go back to your repo in GitHub and refresh the page, you should now see anew commit with your commit message.The final step is to submit your work to Canvas:Scroll to the bottom of this lesson page in Canvas and click the buttonlabeled \""Load Review: Variables Lab in a new window\"".In the CodeGrade window that opens, click \""Create Submission\"". You should nowsee a list of your repositories.Find the repo for this lab and click Connect.When you get the message that your repo has been connected, click on theembedded link, then the \""AutoTest\"" tab to watch your progress. Once the testshave finished running, you should see the green checkmark in the \""Pass\""column, indicating that you've successfully completed the lab.Note about the git push commandYou may recall from the Complete Your First Software EngineeringAssignment lesson that a different form of the git pushcommand was used:$ git push <remote> <branch>where remote is the \""alias\"" for the repo's url on GitHub, and branch is therepo's default branch (generally main for newer repos and master for olderones). For this lab, therefore, the full command would be:$ git push origin masterThis command tells git to push the code in the master branch of the local repoto the master branch of the remote repo identified by the origin alias.So why didn't you need to run that command?When you use the git clone command to clone down a repo from GitHub, gitautomatically assigns the \""origin\"" alias to the url you clone from, and usesthe default branch for that repo.As you work through the labs in this program, you should always:fork the lab's repo to your GitHub account, andclone that fork down to your local machine.As long as you always fork before you clone, it should be safe to run git push without specifying the remote and branch.If you want to verify that you're pushing to the right repo, you can use thegit remote command and include the -v flag:$ git remote -vorigin\tgit@github.com:your-github-username/phase-0-pac-3-what-is-a-test-lab.git (fetch)origin\tgit@github.com:your-github-username/phase-0-pac-3-what-is-a-test-lab.git (push)Here you can see that the origin alias points to your fork of the repo, soit's safe to run the shorter command, git push.ConclusionNow that you've gotten all your tests passing and submitted your work (andlearned a bit more about git push), you're ready to move on. Congratulations!You've solved your first JavaScript tests!"
11,11,RedHatTraining/DO101-apps,https://github.com/RedHatTraining/DO101-apps/blob/main/README.md,JavaScript,DO101-appsApps for the DO101 course.
12,12,aws-samples/aws-elastic-beanstalk-express-js-sample,https://github.com/aws-samples/aws-elastic-beanstalk-express-js-sample/blob/main/README.md,JavaScript,"AWS Elastic Beanstalk Node.js Sample AppThis repository contains a sample Node.js web application built using Express, meant to be used as part of the AWS DevOps Learning Path.SecuritySee CONTRIBUTING for more information.LicenseThis library is licensed under the MIT-0 License. See the LICENSE file."
13,13,learn-co-curriculum/phase-0-css-kitten-lab,https://github.com/learn-co-curriculum/phase-0-css-kitten-lab/blob/master/README.md,JavaScript,"BONUS: CSS Kitten WheelbarrowLearning GoalsPosition elements absolutelyPractice using CSS selectorsIntroductionOh no! All of our kittens have escaped from the wheelbarrow and we need to getthem back in. Help collect all the kittens and put them into the wheelbarrowusing CSS selectors and absolute positioning.Getting StartedFork and clone this lesson into your local environment. Navigate into itsdirectory in the terminal, then run code . to open the files in Visual StudioCode.Position Elements AbsolutelyThere are a few different ways we can use CSS to position elements in our webpages. Absolute positioning means placing the element in its containingelement in a certain location that will stay the same no matter where otherelements are placed. We can use absolute positioning to specify exactly wherein the document layout we want an element to be placed:Here's an example of what absolute positioning looks like in CSS:.parent-element {  position: relative;}.child-element {  position: absolute;  top: 50px;  left: 50px;}Note When using position: absolute, the browser calculates the positionusing top/left from the closest parent element that has a position specified —that's why in the example, we're specifying position: relative for theparent element. Check out the resources on positioning for more info on thisif you're interested!For this lab, we've done the work of calculating the absolute positions andcreating CSS rules for a bunch of different kitten image elements. It's your jobto use CSS selectors to apply the correct positioning to each of these elements.To get started with this lab, open the index.html file in the browser. Use thecomments in css/place-kitty.css to write the correct selectors to move eachkitty into the wheelbarrow.ConclusionNice work getting practice with more CSS selectors, and learning about absolutepositioning along the way! Now that you've seen absolute positioning in action,you'll have a better sense of when you might need to use it to build morecomplex CSS layouts in the future.ResourcesMozilla Developer Network: CSS SelectorsW3 CSS Selector ReferenceMozilla Developer Network: Positioning"
14,14,learn-co-curriculum/phase-0-pac-3-arithmetic-lab,https://github.com/learn-co-curriculum/phase-0-pac-3-arithmetic-lab/blob/master/README.md,JavaScript,"JavaScript Calculator Challenge LabLearning GoalsPractice doing math with JavaScriptPractice writing functions that do things with numbersPractice parsing strings as numbersIntroductionIn this lab, we're going to practice writing functions and manipulating numbersin JavaScript. First, though, we need to review some basic math. In this lab,we're going to learn about various arithmetic operators. What's an operator, yousay? It's a symbol that operates on one or more (usually two) objects —+ is a good example. The + operator says \""add what's to the left of + andwhat's to the right of + together.\""If you haven't already, fork and clone this lab into your local environment.Remember to fork a copy into your GitHub account first, then clone from thatcopy. Once you've cloned it down, navigate into its directory in the terminal,then run code . to open the files in Visual Studio Code. (If you are using adifferent text editor, the command will be different.)As you read through this lesson, you're going to be adding your solutions toindex.js. You'll write a total of eight functions. Use the results of runningnpm test to guide you towards the right function names and functionality.Remember to run npm install first to install the dependencies.Basic MathThe most fundamental math operations work as one might expect in JavaScript: +adds two numbers; - subtracts one number from another; * multiplies twonumbers; and / divides one number by another.Give it a try: type each of the following math examples into the REPL console.You can use the embedded console below or open replit in a separate windowif you prefer.1 + 80; //=> 8160 - 40; //=> 202 * 3.4; //=> 6.85.0 / 2.5; //=> 2<iframe height=\""400px\"" width=\""100%\"" src=\""https://replit.com/@lizbur10/Sandbox?embed=true\"" scrolling=\""no\"" frameborder=\""no\"" allowtransparency=\""true\"" allowfullscreen=\""true\"" sandbox=\""allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals\""></iframe>Go ahead and run npm test and take a look at the first failing test:  1) basic math functions       'add()' is a valid function:     ReferenceError: add is not defined      at Context.<anonymous> (test/indexTest.js:10:12)      at processImmediate (node:internal/timers:464:21)The description of the test, 'add()' is a valid function, along with the errormessage, referenceError: add is not defined, tells us that we need to define afunction add(). Go ahead and create the add() function in index.js. Thistest is only looking for the function to exist, so we can leave the code blockempty for now:function add() {  // we'll fill this in shortly}Once you've added the empty function, run npm test again; the first testshould be passing. Go ahead and get the next three tests passing as well beforemoving on.Once you have the first four tests passing, the first error you get should looksimilar to this:  1) basic math functions       add(a, b) adds two numbers and returns the result:     Error: Expected undefined to equal 1078      at assert (node_modules/expect/lib/assert.js:29:9)      at Expectation.toEqual (node_modules/expect/lib/Expectation.js:81:30)      at Context.<anonymous> (test/indexTest.js:26:23)      at processImmediate (node:internal/timers:464:21)Note: the test document is randomly creating numbers to pass as arguments tothe functions in this lab, so the specific values you see in your errors willbe different from what's shown in this lesson, and will be different each timeyou run the tests!The tests have found our add() function, getting us past the first test, andnow we need to write the code inside the function to return what the test isexpecting. Let's break down the information from our error:add(a, b) adds two numbers and returns the result:Error: Expected undefined to equal 1078The first line tells us what our function needs to do, and the second line tellsus the specific error that is being thrown. Any time you see the error \""Expectedundefined to equal\"" something, that means the test is expecting your function toreturn a value but it's currently not returning anything (undefined). Let'ssee if we can just get that specific error cleared. We won't worry about exactlywhat we're returning just yet:function add() {  return \""something\"";}Running the tests now we get:  1) basic math functions       add(a, b) adds two numbers and returns the result:     Error: Expected 'something' to equal 853      at assert (node_modules/expect/lib/assert.js:29:9)      at Expectation.toEqual (node_modules/expect/lib/Expectation.js:81:30)      at Context.<anonymous> (test/indexTest.js:26:23)      at processImmediate (node:internal/timers:464:21)Great! So now our function is returning \""something\"" instead of nothing! So thenext step is to look more closely at the test's description of the function tofigure out what should be returned:add(a, b) adds two numbers and returns the resultThe add(a, b) tells us the test is trying to pass two arguments to ourfunction, so let's get that set up:function add(a, b) {  return \""something\"";}The rest of the description tells us we need to add the two arguments togetherand return that value:function add(a, b) {  return a + b;}With this code, both tests for the add() function should now be passing!A Quick Note about Hard CodingThink back to the errors we were getting above, e.g., Expected undefined to equal 1078. One thing that might be tempting to do when addressing an errorlike this is to explicitly return exactly what the test is looking for:function add(a, b) {  return 1078;}This is what's known as hard coding and is virtually never what you shoulddo! If you think about it, it doesn't really make sense. We've created anadd() function that can take any two numbers as arguments but will alwaysreturn 1078. This makes it a pretty useless function. Instead, we want to createfunctions that will return the correct answer for whatever argument or argumentswe pass in.Go ahead and tackle the next three tests on your own. You should follow aprocess very similar to what we did above. Once you have those passing, continueto the next section.Math + AssignmentRecall that we can increment (++) and decrement (--) a number if it'sassigned to a variable. Don't forget to follow along in the REPL console.let number = 5;number++; //=> 5... hmmmmnumber; //=> 6 -- the number was incremented after it was evaluatednumber--; //=> 6number; //=> 5We can also put the increment and decrement operators before the number, inwhich case the number is evaluated after the operator is executed:--number; //=> 4number; //=> 4++number; //=> 5number; //=> 5But generally, you will see them placed after the number (and we recommendthat that's where you put them). If you're interested in the difference, take alook at the MDN documentation.And, while we're on the subject, you'll usually only want to use theseincrementors and decrementors when the shorthand makes what you're writingeasier to read (more on when exactly in a later lesson). Instead, it's best touse the basic arithmetic operators combined with =.Follow along in the REPL console. You can pick up where we left off with theprevious examples. Start by setting number equal to 5.+= modifies the value to the operator's left by adding to it the value tothe operator's right:number += 3; //=> 8-= modifies the value to the operator's left by subtracting from it thevalue to the operator's right:number -= 2; //=> 6*= modifies the value to the operator's left by multiplying it by the valueto the operator's right:number *= 10; //=> 60/= modifies the value to the operator's left by dividing it by the value tothe operator's right:number /= 5; //=> 12Note that these methods modify the variable in place. So, if we have twofunctions that depend on the same external variable, the order in which they arecalled matters. Follow along in the console://reset numbernumber = 10;function add5() {  return (number += 5);}function divideBy3() {  return (number /= 3);}divideBy3(); //=> 3.3333333333333335add5(); //=> 8.333333333333334// reset numbernumber = 10;add5(); //=> 15divideBy3(); //=> 5Because these methods are more explicit, we prefer += to ++ and -= to-- (usually).Okay, now we're ready to write solutions for the next two functions:increment(n) and decrement(n). As indicated by the tests, these methodsshould take a number as an argument, increment/decrement the provided value byone, and return the result.Parsing NumbersSometimes, we'll receive a number wrapped in quotes. We recognize it as anumber, but JavaScript will think it's a string. Luckily, JavaScript gives ustools to turn these strings into proper numbers (that is, numbers thatJavaScript understands).parseInt()The first such tool is the function parseInt(), which accepts two arguments:the value to parse and the base of the value being parsed (called the radix).Usually you will want to work with base 10, so a typical call to parseInt()looks like:parseInt(\""2\"", 10); //=> 2What happens if we pass a representation of a non-integer to parseInt()? Let'stry it:parseInt(\""2.2222\"", 10);If we enter the above in the REPL console, we will see that parseInt() forcesthe parsed number to be an integer — which makes sense when we think about it,right?What happens, though, if we pass utter nonsense to parseInt()? Go ahead andtry it — something like:parseInt(\""nonsense!\"", 10);What did it return? NaN? What is that?NaN stands for \""Not a Number\"" — pretty handy, right? This is the number (inthe JavaScript sense) that JavaScript returns when it can't determine a validvalue for a numeric operation.Note: You may see parseInt() used without a radix specified. In mostcases, the radix will default to 10, but not always! To be safe, you shouldalways specify a radix.parseFloat()Above, we saw that parseInt() lops off everything after the decimal point andonly returns integers. If we want to preserve decimals, we'll need to useparseFloat().Unlike parseInt(), parseFloat() accepts only a single argument, the thing tobe parsed. We can use it like so:parseFloat(\""80.123999\""); // 80.123999You now have the information you need to write the final two functions,makeInt(string) and preserveDecimal(string). makeInt(string) should takein a string, parse it into a base 10 integer and return it.preserveDecimal(string) should take in a string, parse it into a float andreturn it.After you have all the tests passing, remember to commit and push your changesup to GitHub, then submit your work to Canvas using CodeGrade. If you need areminder, go back to the Complete Your First Software EngineeringAssignment lesson to review the process.ResourcesMDN - parseInt()MDN - parseFloat()"
15,15,learn-co-students/js-functions-lab-bootcamp-prep-000,https://github.com/learn-co-students/js-functions-lab-bootcamp-prep-000/blob/master/README.md,JavaScript,"JavaScript FunctionsObjectivesWrite a function that returns a valueWrite a function that takes in a parameterWrite a function that takes in multiple parametersIntroductionYou'll be writing your solution in index.js.In this lab, we're going to develop our communication skills in JavaScript.We're feeling festive, so we're going to be wrapping up common holiday greetingsas functions so that we don't have to repeat ourselves. The beauty of functionsis that we could reuse these functions for the text of greeting cards, forspoken greetings, for song lyrics, etc...Template LiteralsThere are two ways main ways to include variables inside a string. Say we had a variable named date that we assign to a value:var date = \""July 3rd\""In JavaScript, we can use operators to concatenate (join) two strings, or in this case, a string and a variable, like so:console.log(\""My birthday is \"" + date)With date defined, the above code will log My birthday is July 3rd. However,by using a slightly modified syntax, we can achieve the same thing by embeddinga variable into a string. These are called templateliteralsand rewriting the above console.log with one would look like this:console.log(`My birthday is ${date}`)This will also log My birthday is July 3rd.Now, there are two important changes to the syntax: Any variables we want toinclude must be wrapped in curly braces ({ }) and preceded by a dollar sign($). In addition, instead of single, ', or double quotes, \"", wemust use backticks, `. If backticks are not used, JavaScript willinterpret the dollar sign and curly braces as a normal part of the string,resulting in My birthday is ${date}! Any expression can be included intemplate literals, not just variables, so we could write something like:console.log(`I have ${1 + 1} pets`)And get I have 2 pets. Note that this will not log the same thing if you didthe following:console.log(\""I have \"" + 1 + 1 + \"" pets\"")This logs I have 11 pets! JavaScript converts both 1s into strings rather than adding them together first. You would need to write the following to get the same result as template literals:console.log(\""I have \"" + (1 + 1) + \"" pets\"")You can use either operators or template literals to construct larger stringswith dynamic values. Template literals are just a way to make your code a littleeasier to read and to help ensure JavaScript does not misinterpret whencombining different data types into strings, like we just saw.InstructionsWrite a function named happyHolidays. This function should not accept anyparameters and should return the string \""Happy holidays!\"".Write a function named happyHolidaysTo. This function should accept aparameter of the name of the person you want to wish happy holidays, andreturn the string `Happy holidays, ${name}!`Write a function named happyCustomHolidayTo. This function should accept twoparameters, the holiday you want to wish them well for, and the name of theperson you're wishing well. Order of parameters matters, so make sure to first pass in the holiday and then the name. This function should return the string`Happy ${holiday}, ${name}!`Write a function named holidayCountdown. This function should accept twoparameters, the holiday name and number of days until that holiday. Thefunction should return the string`It's ${days} days until ${holiday}!`. Note that although days isused first when constructing the returned string, holidayCountdown shouldtake in the holiday name first, then the days until that holiday."
16,16,learn-co-students/js-if-else-files-lab-bootcamp-prep-000,https://github.com/learn-co-students/js-if-else-files-lab-bootcamp-prep-000/blob/master/README.md,JavaScript,"Using Conditionals and Multiple Files in JSIntroductionWe now know how to use conditionals. Now, let's use conditionals to test ourcode for correctness. This is your first step towards how professionaldevelopers write software. Professional developers test their code forcorrectness. Instead of constantly clicking around their applications, mostdevelopers write additional code, called tests that ensure their code isoutputting the right things. In fact, they may even write tests first beforethey actually do any work towards a project to help ensure the code they writedoes what they expect it to do!We will eventually explain how to use the professional testing tools but first,let's go over a simple example.InstructionsAfter you open this lesson in the IDE, in the js folder, double-click onindex.js. You'll see some basic code:// ./js/index.jsvar name = \""Joe\""var height = \""74\""// Don't worry about thismodule.exports = { name, height}First of all, don't worry about the module.exports stuff right now, we'll getto that later. You've seen the rest of this stuff before but let's review. Thisassigns \""Joe\"" to the name variable using the assignment operator (=). Italso assigns \""74\"" to height. Both \""Joe\"" and \""74\"" are Strings. We knowthat because they are wrapped in quotes. We have our code, but we don't have ourtests. Let's write a test right below the var height = \""74\"" line to check thatname is equal to \""Susan\"". That should look something like this:if (name === \""Susan\"") {    console.log(\""The name is correct\"")}Write that, and then run your index.js file with node js/index.js in theterminal. You'll see nothing printed out. That's because our name variabledoesn't equal \""Susan\"". Let's put in an else statement that prints \""Expected the name to be Susan\"". Give it a try on your own.OK, you gave it a try, now let's look at the solution:if (name === \""Susan\"") {    console.log(\""The name is correct\"")} else {    console.log(\""Expected the name to be Susan\"")}See what we did there? Great! Now run your code again by typingnode js/index.js in the terminal and you should getExpected the name to be Susan printed out. Let's fix our name variable toequal \""Susan\"". Modify the first line to say:var name = \""Susan\""Re-run your code and boom! you did it :)In later steps, we'll be doing our testing in other files. So, for now, let'srevert index.js to its original state. Make sure the index.js file is saved andthat it looks like this:var name = \""Joe\""var height = \""74\""// Don't worry about thismodule.exports = { name, height}Separating Tests from Application CodeAs you can probably imagine, a large application will have many tests. Averagesized applications will have thousands of tests. It gets a bit confusing to havethe application code mixed in with your test code. We want to separate them outso it's not a pain to sift through our files.Let's open up another JavaScript file and play around with separating thingsout. There is a blank JS file included in this lab called other_file.jslocated in the js folder. Double click on that and you'll see a blank file.Let's say we wanted to console.log the name variable from our index.jsfile. Seems fairly easy. Go ahead and type console.log(name). Now let's runthis new file by typing node js/other_file.js in our terminal. BOOM! You'll getan error that looks like this:/home/jmburges/code/labs/js-functions-lab/test.js:1(function (exports, require, module, __filename, __dirname) { console.log(name)                                                                          ^ReferenceError: name is not defined    at Object.<anonymous> (/home/jmburges/code/labs/js-functions-lab/test.js:1:75)    at Module._compile (module.js:570:32)    at Object.Module._extensions..js (module.js:579:10)    at Module.load (module.js:487:32)    at tryModuleLoad (module.js:446:12)    at Function.Module._load (module.js:438:3)    at Module.runMain (module.js:604:10)    at run (bootstrap_node.js:393:7)    at startup (bootstrap_node.js:150:9)    at bootstrap_node.js:508:3The important line here is the ReferenceError: name is not defined line. Thatsays that our name variable doesn't exist in the other_file.js file. Thatmakes sense. In other_file.js we never write the line of code to createname. We have the line var name = \""Joe\"" in index.js. We need to tellother_file.js about the existence of index.js! Let's do that by replacingthe contents of other_file.js with the following line of code:var index = require(\""./index.js\"")This tells javascript to load the index.js file and put its contents inside ofthe index variable within other_file.js. That's a bit confusing, but it'sfairly straight forward to use. Thanks to require(), we now have access to thevariables we exported from index.js, including name. To access name withinother_file.js, we can simply refer to the name property of the indexvariable, which, again, is where we used require() to store the contents ofindex.js. Let's add the following line to other_file.js:var index = require(\""./index.js\"")console.log(index.name)Give that a run by typing node js/other_file.js and you should see the namegetting printed out. Awesome!Your TurnYou now know how multiple files interact as well as how if statements work.Now, you have to write your code to match some specific tests. Open upjs/tests.js and you will see two if statements. Let's give this a run tostart things off by typing node js/tests.js. You should get two messages:Expected: Susan, Received: JoeExpected: 70, Received: 74Now, it's your job to modify index.js so that when you run node js/tests.jsthe messages you see logged to the console are:The name is correctThe height is correctNote: Capitalization matters. Also, whether or not you use a String orNumber matters. Numbers don't have any quotes around them, Strings do havequotes around them!When you've finished your solution, and the tests show the output above, runlearn submit from the console to submit your solution."
17,17,learn-co-curriculum/phase-0-css-issue-bot-9000,https://github.com/learn-co-curriculum/phase-0-css-issue-bot-9000/blob/master/README.md,JavaScript,"CSS Validation Lab: Issue Bot 9000Learning GoalsChange invalid CSS to valid CSSIntroductionAlthough today's browsers are becoming more capable of handing errors in CSS,some errors are not always caught gracefully. This variable can make itextremely difficult to apply style or layout consistently. What can be done toquickly scan our CSS documents for issues? Let's practice using the W3C's CSSValidator!Getting StartedFork and clone this lesson into your local environment. Navigate into itsdirectory in the terminal, then run code . to open the files in Visual StudioCode. Run npm test as you go to see your test progress.Change Invalid CSS to Valid CSSIn this lesson, we will be taking the invalid CSS in css/style.css andchanging it to valid.Open index.html in your browser. Notice how our styles don't look quiteright?Open css/style.css in your text editor.Visit the W3C CSS validatorhttp://jigsaw.w3.org/css-validator/#validate_by_input.If not already selected, click on the tab labeled \""By direct input\"".Copy the code from css/style.css and paste it into the text area. Click the\""Check\"" button.Use the error messages to correct the CSS.Repeat steps 3-5 until your readout states \""Congratulations! No ErrorFound.\"".Remember to check your progress in index.html in your browser!ConclusionWith a CSS validator, you can work your way through cleaning up errors in a CSSdocument and reduce the likelihood of display errors across platforms. Using theW3C CSS validator will help you quickly and efficiently troubleshoot your CSS.ResourcesW3C CSS Validator - Validate Direct Input"
18,18,learn-co-curriculum/phase-1-javascript-functions-continued,https://github.com/learn-co-curriculum/phase-1-javascript-functions-continued/blob/master/README.md,JavaScript,"Functions: ContinuedLearning GoalsDefine a function using a function declarationDefine hoistingDefine function expressionDefine anonymous functionDefine a function using a function expressionDefine an IIFE: Immediately-Invoked Function ExpressionDefine function-level scopeDefine scope chainDefine closureIntroductionThis lab describes some more advanced concepts related to JavaScript functions.Be sure to take time to experiment or read up on a concept if you're notcomfortable with the idea before moving on. If you're struggling here, theremainder of this module will be challenging. Fix any gaps now before moving on.We also recommend that you complete the lab as you read through the sections.Reinforcing what you read by physically typing in the code will help make surethe concepts are locked in. We'll prompt you when it's a good time to shiftmodes from \""reading along\"" to coding.Getting StartedIf you haven't already, fork and clone this lab into your local environment.Remember to fork a copy into your GitHub account first, then clone fromthat copy. Navigate into its directory in the terminal, then run code . toopen the files in Visual Studio Code.Define a Function Using Function DeclarationIn JavaScript, the most common way to define functions is with a functiondeclaration:function razzle() {  console.log(\""You've been razzled!\"");}The word razzle becomes a pointer to some stored, potential,not-yet-actually-run bit of work (the function). We use the pointer to callor invoke the function. We call the function by adding () after thepointer.function razzle() {  console.log(\""You've been razzled!\"");}razzle();//=> \""You've been razzled!\""Interestingly, you can write function declarations after you call them:razzle(); //=> \""You've been razzled!\""function razzle() {  console.log(\""You've been razzled!\"");}Functions can be passed arguments, given default arguments, etc. Here's abrief code synopsis:function razzle(lawyer = \""Billy\"", target = \""'em\"") {  console.log(`${lawyer} razzle-dazzles ${target}!`);}razzle(); //=> Billy razzle-dazzles 'em!razzle(\""Methuselah\"", \""T'challah\""); //=> Methuselah razzle-dazzles T'challah!LAB: Implement a function called saturdayFun. It should return a Stringlike \""This Saturday, I want to ....!\"" Fill in the ... with the activitythat's passed in as the first parameter. If nothing is passed in, default to\""roller-skate\"". Run npm test to verify you've gotten the first set oftests passing before continuing with the lesson.Define HoistingJavaScript's ability to call functions before they appear in the code iscalled hoisting. For hoisting to work, the function must be defined using afunction declaration.Define Function ExpressionWe've learned that programming languages feature expressions: arrangements ofconstants, variables, and symbols that, when interpreted by the language,produce a value. To review, open up your browser console and type in theseexamples:1 + 1; //=> 2\""Razzle \"" + \""dazzle!\""; //=> \""Razzle dazzle!\""The examples above are expressions that return primitive values, butJavaScript also has function expressions that look like this:function() {  console.log(\""Yet more razzling\"");}The value returned by this expression is the function itself. Go ahead andenter the above into the browser console; you should see the following:Uncaught SyntaxError: Function statements require a function nameThe problem is that, when the function expression appears by itself as shownabove, JavaScript does not recognize it as a function expression; it insteadinterprets it as a function declaration that's missing its name. One way to tellthe JavaScript engine that it's a function expression is to use thegrouping operator () to wrap the entire thing:(function () {  console.log(\""Yet more razzling\"");});Recall that the grouping operator is usually used in arithmetic operations totell the JavaScript engine to evaluate the value that's inside it first. It'sserving a similar purpose in this case: it's telling JavaScript to interpretwhat's inside the parentheses as a value. With the grouping operator in place,the JavaScript engine recognizes our function as a function expression. Enterthe function into your console again, this time using the grouping operator. Youshould see the following:ƒ () {  console.log(\""Yet more razzling\"");}JavaScript now correctly shows us the return value of our function expression: afunction (indicated by the ƒ ()) storing the work of logging our message.Define Anonymous FunctionAn anonymous function is, quite simply, a function that doesn't have a name:function() {  console.log(\""Yet more razzling\"");}Unlike a function declaration, there's no function name in front of the ().Note, however, that if we don't assign a name to the function, we have no way tocall it. We lose access to our function immediately after it's created. So howcan we invoke an anonymous function? We've seen one way before: we can use it asa callback function. For example, you'll often see anonymous functions passed asan argument to an event listener:const button = document.getElementById(\""button\"");button.addEventListener(\""click\"", function () {  console.log(\""Yet more razzling\"");});Our anonymous function is being passed as an argument to addEventListener. TheJavaScript engine \""stores it away\"" as work to be executed later, when the buttonis clicked.Define a Function Using a Function ExpressionAnother way we can solve the problem of accessing an anonymous function is bydeclaring a variable and assigning the function as its value. Recall that anyexpression can be assigned to a variable; this includes function expressions:const fn = function () {  console.log(\""Yet more razzling\"");};The code above defines our function using a function expression. If we askJavaScript what's in fn, it tells us:fn; //=> ƒ () { console.log(\""Yet more razzling\"") }Here, fn is a pointer to the stored block of work that hasn't yet beeninvoked. Just as with function declaration, to actually do the work, we needto invoke or call the function. We do this by adding () to the end of our\""pointer\"", the variable name:const fn = function () {  console.log(\""Yet more razzling\"");}; //=> undefinedfn; //=> ƒ () { console.log(\""Yet more razzling\"") }fn(); // \""Yet more razzling\""Also as with a function declaration, if we need to pass arguments to thefunction, we would include those in the parentheses when we call the function.We now know how to define a function as a function expression. Very importantly,function expressions are not hoisted. The same is true for any variableassignment: if we assign a String or the result of an arithmetic expression toa variable, those assignments are not hoisted either.LAB: Implement a function expression called mondayWork. The functionshould return a String like \""This Monday, I will ... .\"" Fill in the ...with the activity that's passed in as the first parameter. If nothing is passedin, default to \""go to the office\"". Run npm test to verify you've gottenthis set of tests passing before continuing with the lesson.Define an IIFE: Immediately-Invoked Function ExpressionAnother way to invoke an anonymous function is by creating what's known as animmediately-invoked function expression (IIFE).As a thought experiment, consider what happens here:(function (baseNumber) {  return baseNumber + 3;})(2); //=> ???We recognize the first () as the grouping operator that tells the JavaScriptengine to interpret the contents as a value — in this case, a functionexpression. What this means is that, in the IIFE statement, the value returnedby the first set of parentheses is an anonymous function, which can be invoked(immediately).The second () are the () of function invocation. When we put themimmediately after the first set of parentheses, we're invoking the function thatthose parentheses return immediately after defining it. Try it out in thebrowser console:(function (baseNumber) {  return baseNumber + 3;})(2); //=> 5Interestingly, any variables, functions, Arrays, etc. that are definedinside of the function expression's body can't be seen outside of theIIFE. To see this, check the value of baseNumber in the console. It's likeopening up a micro-dimension, a bubble-universe, doing all the work you couldever want to do there, and then closing the space-time rift. We'll see some ofthe practical power of \""hiding things\"" in IIFEs a little later in this lesson.Define Function-Level ScopeJavaScript exhibits \""function-level\"" scope. This means that if a function isdefined inside another function, the inner function has access to all theparameters of, as well as any variables defined in, the outer function. Thisworks recursively: if we nest a third function inside the inner function, itwill have access to all the variables of both the inner and outer enclosingfunctions. Each of the enclosing parents' scopes are made available via thescope chain. We will define the scope chain a bit later in this lesson. Let'sstart by seeing it in action.ASIDE: This is where people really start to get awed by JavaScript.Consider this code:function outer(greeting, msg = \""It's a fine day to learn\"") {  // 2  const innerFunction = function (name, lang = \""Python\"") {    // 3    return `${greeting}, ${name}! ${msg} ${lang}`; // 4  };  return innerFunction(\""student\"", \""JavaScript\""); // 5}outer(\""Hello\""); // 1//=> \""Hello, student! It's a fine day to learn JavaScript\""Let's break this down:We call outer, passing \""Hello\"" as an argument.The argument (\""Hello\"") is saved in outer's greeting parameter. Theother parameter, msg, is set to a default value.Here's our old friend the function expression. It expects two arguments, tobe stored in the parameters name and lang, and lang is assigned thedefault value of \""Python\"". The function expression itself is saved in thelocal variable innerFunction.Inside innerFunction we make use of its parameters, name and lang,as well as the greeting and msg parameters defined ininnerFunction's containing (parent) function, outer. innerFunction hasaccess to those variables via the scope chain.Finally, inside outer, we invoke innerFunction, passing arguments thatget stored in innerFunction's name and lang parameters.This might look a little bit weird, but it generally makes sense to ourintuition about scopes: inner things can see their parent outer things.Note that currently, the values of the arguments being passed to innerFunctionare part of the definition of outer. In order to change those values wehave to modify the outer function. This is not ideal.With a simple change, something miraculous can happen. Rather than having outerreturn the result of calling innerFunction, let's have it return the functionitself:function outer(greeting, msg = \""It's a fine day to learn\"") {  const innerFunction = function (name, lang = \""Python\"") {    return `${greeting}, ${name}! ${msg} ${lang}`;  };  return innerFunction;}The return value of outer is now an anonymous function. To invoke it, weupdate the function call as follows:outer(\""Hello\"")(\""student\"", \""JavaScript\"");//=> \""Hello, student! It's a fine day to learn JavaScript\""The function call is processed by the JavaScript engine from left to right.First, outer is called with the argument \""Hello.\"" The return value of callingouter(\""Hello\"") is itself a function and, therefore, can itself be called. Wedo this by chaining on the second set of parentheses. This is basically the sameconcept as assigning a function expression to a variable and using the variablename followed by () to invoke the function. You can almost think ofouter(\""Hello\"") as the \""name\"" of the function that's returned by outer. It'sthe same as if we did this:const storedFunction = outer(\""Hello\"");storedFunction(\""student\"", \""JavaScript\"");//=> \""Hello, student! It's a fine day to learn JavaScript\""Note that we are no longer calling innerFunction from inside outer.Amazingly, the code works exactly the same: it still has access tothose parent function's variables. It's like a little wormhole in space-time tothe outer's scope!We can tighten this code up a bit more: instead of assigning the functionexpression to innerFunction and returning that, let's just return the functionexpression.function outer(greeting, msg = \""It's a fine day to learn\"") {  return function (name, lang = \""Python\"") {    return `${greeting}, ${name}! ${msg} ${lang}`;  };}outer(\""Hello\"")(\""student\"", \""JavaScript\"");//=> \""Hello, student! It's a fine day to learn JavaScript\""To review: we first called outer, passing in the argument \""Hello\"". outerreturned an anonymous function inside which the default value of msg andthe passed-in value of greeting have now been set. It's almost as if outerreturned:function(name, lang=\""Python\"") { // The \""inner\"" function  return `Hello, ${name}! It's a fine day to learn ${lang}`}We invoked this returned \""inner\"" function\"" by adding the second set ofparentheses and passing the arguments \""student\"" and \""JavaScript\"", which werestored in name and lang. This filled in the final two values inside of thetemplate string and returned:\""Hello, student! It's a fine day to learn JavaScript\"";Define ClosureIn the previous example, we could call the \""inner\"" function, the anonymousfunction, a \""closure.\"" It \""encloses\"" the function-level scope of its parent.And, like a backpack, it can carry out the knowledge that it saw — even whenyou're out of the parent's scope.Recall the IIFE discussion. Since what's inside an IIFE can't be seen, if wewanted to let just tiny bits of information leak back out, we might want topass that information back out, through a closure.const array = (function (thingToAdd) {  const base = 3;  return [    function () {      return base + thingToAdd;    },    function () {      return base;    },  ];})(2);Note that the value on the right of the = in the first line is a functionexpression. That function takes a single argument and returns an array thatcontains two functions. The (2) after the function expression executes thatfunction (immediately), and the two inner functions are stored in the arrayvariable.Go ahead and copy the code above into your browser console and take a look at thevalues of the two elements of array. You should see the following:array[0]; //=> ƒ () { return base + thingToAdd; }array[1]; //=> ƒ () { return base; }However, if you try looking at the value of base in the console you'll get areference error: the value of base is not accessible outside the function it'sdefined in. Now go ahead and call the two returned functions; you should seethe following:array[0](); //=> 5array[1](); //=> 3The two functions being returned in array are closures; they have accessto the base variable because it's defined in their parent function. Whenthey're executed, they \""let out\"" the values of the sum and the original basenumber, allowing us to see them.Define Scope ChainThe mechanism behind all the cool stuff we just saw is the scope chain whichallows functions defined inside functions (inside functions) to access all theirparent (and grandparent) scopes' variables. Here's a simple example:function demoChain(name) {  const part1 = \""hi\"";  return function () {    const part2 = \""there\"";    return function () {      console.log(`${part1.toUpperCase()} ${part2} ${name}`);    };  };}demoChain(\""Dr. Stephen Strange\"")()(); //=> HI there Dr. Stephen StrangeWhen it is called, the innermost function has access to name, part1, andpart2 through the scope chain. As a result, when the console.log()statement is run, the string includes all three values. That's awesome wormhole,space-time magic!LAB:Implement a function called saturdayFun:It should define a function.It uses a default argument, 'roller-skate' when no arguments are passed.It allows the default argument to be overridden.Implement a function called mondayWork:It should define a function.It uses a default argument, 'go to the office' when no arguments are passed.It allows the default argument to be overridden.Implement a function called wrapAdjective:It should return a function. This \""inner\"" function should:take a single parameter that should default to \""special\"". Name ithowever you wish.return a String of the form \""You are ...!\"" where ... should be theadjective this function received wrapped in visual flair.It should take as parameter a String that will be used to create visual flair.You may call the parameter whatever you like, but its default value shouldbe \""*\"".Call example: const encouragingPromptFunction = wrapAdjective(\""!!!\"")Thus a total call should be:wrapAdjective(\""%\"")(\""a dedicated programmer\""); //=> \""You are %a dedicated programmer%!\""Run npm test to verify you've gotten this set of tests passing. Once you'redone, commit and push your changes up to GitHub, then submit your work to Canvasusing CodeGrade.ConclusionIn this lesson, we've covered the basics of function declaration, invocation,and function scope. As a refresher on your skills, we've provided a simple labto make sure that you're set for the new information coming up in the rest ofthis module.ResourcesWikipedia — First-class functionStackOverflow — What is meant by 'first class object'?Helephant — Functions are first class objects in javascript (Wayback Machine)2ality — Expressions versus statements in JavaScriptMDN — FunctionsMDN — Statements and declarations"
19,19,learn-co-students/js-what-is-a-test-lab-bootcamp-prep-000,https://github.com/learn-co-students/js-what-is-a-test-lab-bootcamp-prep-000/blob/master/README.md,JavaScript,"Running TestsYou understand how to read tests, now it's time to run the tests. We've made itfairly easy. In the same terminal that you used to write node tests.js ornode index.js now, you just need to write learn. That's it! No matter whatthe lab, our Learn command will figure out where you are and run the appropriatetests and give you results.Speaking of results... let's talk about how to read the results that tests giveyou.Reading Results of TestsIf we run learn in our terminal right now, you'll get a bunch of failed tests.It will look something like this:Output from running learn in Terminal> js-functions-lab@0.1.0 test /Users/mbenton/Desktop/curriculum-team/js-what-is-a-test-lab> mocha -R mocha-multi --reporter-options spec=-,json=.results.json  what-is-a-test    Name      1) returns \""Susan\""    Height      2) is less than 40    Message      3) gives the name and height  0 passing (293ms)  3 failing  1) what-is-a-test       Name         returns \""Susan\"":      Error: Expected 'Joe' to equal 'Susan'      + expected - actual      -Joe      +Susan      at assert (node_modules/expect/lib/assert.js:29:9)      at Expectation.toEqual (node_modules/expect/lib/Expectation.js:81:30)      at Context.<anonymous> (test/index-test.js:6:26)      at processImmediate (internal/timers.js:456:21)  2) what-is-a-test       Height         is less than 40:     Error: Expected 74 to be less than 40      at assert (node_modules/expect/lib/assert.js:29:9)      at Expectation.toBeLessThan (node_modules/expect/lib/Expectation.js:156:28)      at Context.<anonymous> (test/index-test.js:13:28)      at processImmediate (internal/timers.js:456:21)  3) what-is-a-test       Message         gives the name and height:     Error: Expected ' is 74 inches tall' to include 'Joe'      at assert (node_modules/expect/lib/assert.js:29:9)      at Expectation.toInclude (node_modules/expect/lib/Expectation.js:215:28)      at Context.<anonymous> (test/index-test.js:19:29)      at processImmediate (internal/timers.js:456:21)npm ERR! Test failed.  See above for more details.Let's break this down a bit. If you look at about a third of the way down theoutput, you'll see a summary of how the tests went:  0 passing (293ms)  3 failingThat should be fairly obvious. You passed 0 tests and failed 3 tests. Not agreat start, but plenty of room for improvement. Let's see how we failed thethree tests.1) what-is-a-test       Name         returns \""Susan\"":      Error: Expected 'Joe' to equal 'Susan'      + expected - actual      -Joe      +Susan      at assert (node_modules/expect/lib/assert.js:29:9)      at Expectation.toEqual (node_modules/expect/lib/Expectation.js:81:30)      at Context.<anonymous> (test/index-test.js:6:26)      at processImmediate (internal/timers.js:456:21)  2) what-is-a-test       Height         is less than 40:     Error: Expected 74 to be less than 40      at assert (node_modules/expect/lib/assert.js:29:9)      at Expectation.toBeLessThan (node_modules/expect/lib/Expectation.js:156:28)      at Context.<anonymous> (test/index-test.js:13:28)      at processImmediate (internal/timers.js:456:21)  3) what-is-a-test       Message         gives the name and height:     Error: Expected ' is 74 inches tall' to include 'Joe'      at assert (node_modules/expect/lib/assert.js:29:9)      at Expectation.toInclude (node_modules/expect/lib/Expectation.js:215:28)      at Context.<anonymous> (test/index-test.js:19:29)      at processImmediate (internal/timers.js:456:21)This is all three of the fails. If we break it down even further we can see justthe test for name:1) what-is-a-test       Name         returns \""Susan\"":      Error: Expected 'Joe' to equal 'Susan'      + expected - actual      -Joe      +Susan      at assert (node_modules/expect/lib/assert.js:29:9)      at Expectation.toEqual (node_modules/expect/lib/Expectation.js:81:30)      at Context.<anonymous> (test/index-test.js:6:26)      at processImmediate (internal/timers.js:456:21)The tests expects name to return \""Susan\"". But if you look at theError: Expected 'Joe' to equal 'Susan' line you can see that it received Joeand expected Susan. That makes sense! In our index.js file we have thename variable equal \""Joe\"". If you change that line to be equal to \""Susan\""and then run the tests again by typing learn in the command line you shouldsee progress!what-is-a-test    Name      ✓ returns \""Susan\""    Height      1) is less than 40    Message      2) gives the name and height  1 passing (544ms)  2 failing  1) what-is-a-test       Height         is less than 40:     Error: Expected 74 to be less than 40      at assert (node_modules/expect/lib/assert.js:29:9)      at Expectation.toBeLessThan (node_modules/expect/lib/Expectation.js:156:28)      at Context.<anonymous> (test/index-test.js:13:28)      at processImmediate (internal/timers.js:456:21)  2) what-is-a-test       Message         gives the name and height:     Error: Expected ' is 74 inches tall' to include 'Susan'      at assert (node_modules/expect/lib/assert.js:29:9)      at Expectation.toInclude (node_modules/expect/lib/Expectation.js:215:28)      at Context.<anonymous> (test/index-test.js:19:29)      at processImmediate (internal/timers.js:456:21)Woot! You passed one. Now you can go ahead and try and pass all of the othertests on your own.Common ErrorsWhile you are solving the other tests you may come across a few errors. Let's goover some common ones:Expected UndefinedError: Expected undefined to equal 'Susan'That one says that it expected undefined to equal Susan. That makes no sense!You didn't set the name variable to undefined. Why does it think that nameis equal to undefined? What that actually means is that the test couldn't findthe variable name. This can happen if you by accident rename the variable.Taking a look at index.js I made this mistake: var nae = \""Susan\"". Whoops! IfI change that back to name everything works. :)Unexpected Identifier/Users/joe/Documents/Documents/flatiron/js-what-is-a-test-lab/index.js:2vr name = \""Susan\""   ^^^^SyntaxError: Unexpected identifier    at createScript (vm.js:56:10)    at Object.runInThisContext (vm.js:97:10)    at Module._compile (module.js:542:28)    at Object.Module._extensions..js (module.js:579:10)    at Module.load (module.js:487:32)    at tryModuleLoad (module.js:446:12)    at Function.Module._load (module.js:438:3)    at Module.require (module.js:497:17)    at require (internal/module.js:20:19)    at Object.<anonymous> (/Users/joe/Documents/Documents/flatiron/js-what-is-a-test-lab/test/index-test.js:1:75)    at Module._compile (module.js:570:32)    at Object.Module._extensions..js (module.js:579:10)    at Module.load (module.js:487:32)    at tryModuleLoad (module.js:446:12)    at Function.Module._load (module.js:438:3)    at Module.require (module.js:497:17)    at require (internal/module.js:20:19)    at /Users/joe/Documents/Documents/flatiron/js-what-is-a-test-lab/node_modules/mocha/lib/mocha.js:220:27    at Array.forEach (native)    at Mocha.loadFiles (/Users/joe/Documents/Documents/flatiron/js-what-is-a-test-lab/node_modules/mocha/lib/mocha.js:217:14)    at Mocha.run (/Users/joe/Documents/Documents/flatiron/js-what-is-a-test-lab/node_modules/mocha/lib/mocha.js:469:10)    at Object.<anonymous> (/Users/joe/Documents/Documents/flatiron/js-what-is-a-test-lab/node_modules/mocha/bin/_mocha:404:18)    at Module._compile (module.js:570:32)    at Object.Module._extensions..js (module.js:579:10)    at Module.load (module.js:487:32)    at tryModuleLoad (module.js:446:12)    at Function.Module._load (module.js:438:3)    at Module.runMain (module.js:604:10)    at run (bootstrap_node.js:393:7)    at startup (bootstrap_node.js:150:9)    at bootstrap_node.js:508:3Woah! So many words that make no sense. Don't worry though. The most importantline is the SyntaxError: Unexpected identifier line. What that means is youhave some sort of typo or syntax mistake, It could be a HUGE variety of thingsbut usually, JS will try and give you a hint. This time it's pointing to the vr name = \""Susan\"" line of code. Take a look and read very carefully. Imisspelled var. Whoops! If you fix that everything will work.One note on this type of error is that it is sort of a catch-all. Tons and tonsof problems end in that sort of error message. Whenever you see it, be sure toread over your code with a fine toothed comb...and you'll find the problem!Type ErrorsOn the second test, there is a chance you might see the following error:1) what-is-a-test       Height         is less than 40:     Error: The \""actual\"" argument in expect(actual).toBeLessThan() must be a number      at assert (node_modules/expect/lib/assert.js:29:9)      at Expectation.toBeLessThan (node_modules/expect/lib/Expectation.js:156:28)      at Context.<anonymous> (test/index-test.js:13:28)      at processImmediate (internal/timers.js:456:21)This error is slightly different than the last two. In this case, the test is giving us a unique message because it recognizes a problem. If we look at this test in test/index-test.js, we see this:  describe('Height', () => {    it('is less than 40', () => {      expect(index.height).toBeLessThan(40)    })  })The word \""actual\"" is no where to be found - index.height is what is beingtested. The test expects index.height to be less than 40. The error messageis telling us that index.height must be a number. If you're seeing this,make sure that you have set index.height to be equal to the number 40,not the string \""40\"". Ruby will interpret the value as a string due to thequotation marks wrapping it.ConclusionOnce you have all three tests passing, run learn submit to register completion. Congratulations, you've solved your first tests! On to many more!"
20,20,linuxacademy/cicd-pipeline-train-schedule-git,https://github.com/linuxacademy/cicd-pipeline-train-schedule-git/blob/master/README.md,JavaScript,"cicd-pipeline-train-schedule-gitThis is a simple train schedule app written using nodejs. It is intended to be used as a sample application for a series of hands-on learning activities.Running the appIt is not necessary to run this app locally in order to complete the learning activities, but if you wish to do so you will need a local installation of npm. Begin by installing the npm dependencies with:npm installThen, you can run the app with:npm startOnce it is running, you can access it in a browser at http://localhost:3000"
21,21,hasura/imad-app,https://github.com/hasura/imad-app/blob/master/README.md,JavaScript,imad-appIMAD course application.
22,22,videojs/video.js,https://github.com/videojs/video.js/blob/main/README.md,JavaScript,"Video.js - HTML5 Video PlayerVideo.js is a web video player built from the ground up for an HTML5 world. It supports HTML5 video and Media Source Extensions, as well as other playback techs like YouTube and Vimeo (through plugins). It supports video playback on desktops and mobile devices. This project was started mid 2010, and the player is now used on over 50,000 100,000 200,000 400,000 700,000 websites.Table of ContentsQuick StartContributingCode of ConductLicenseQuick StartThanks to the awesome folks over at Fastly, there's a free, CDN hosted version of Video.js that anyone can use. Add these tags to your document's <head>:<link href=\""//vjs.zencdn.net/8.3.0/video-js.min.css\"" rel=\""stylesheet\""><script src=\""//vjs.zencdn.net/8.3.0/video.min.js\""></script>For the latest version of video.js and URLs to use, check out the Getting Started page on our website.Video.js version 7 (and newer) CDN builds do not send any data to Google Analytics.In older versions of Video.js (6 and earlier), in the vjs.zencdn.net CDN-hosted versions we include a stripped down Google Analytics pixel that tracks a random sampling (currently 1%) of players loaded from the CDN. This allows us to see (roughly) what browsers are in use in the wild, along with other useful metrics such as OS and device. If you'd like to disable analytics, you can simply include the following global before including Video.js via the free CDN:<script>window.HELP_IMPROVE_VIDEOJS = false;</script>Alternatively, you can include Video.js by getting it from npm, downloading from GitHub releases or by including it via unpkg or another JavaScript CDN like CDNjs. These releases do not include Google Analytics tracking at all.<!-- unpkg : use the latest version of Video.js --><link href=\""https://unpkg.com/video.js/dist/video-js.min.css\"" rel=\""stylesheet\""><script src=\""https://unpkg.com/video.js/dist/video.min.js\""></script><!-- unpkg : use a specific version of Video.js (change the version numbers as necessary) --><link href=\""https://unpkg.com/video.js@8.3.0/dist/video-js.min.css\"" rel=\""stylesheet\""><script src=\""https://unpkg.com/video.js@8.3.0/dist/video.min.js\""></script><!-- cdnjs : use a specific version of Video.js (change the version numbers as necessary) --><link href=\""https://cdnjs.cloudflare.com/ajax/libs/video.js/8.3.0/video-js.min.css\"" rel=\""stylesheet\""><script src=\""https://cdnjs.cloudflare.com/ajax/libs/video.js/8.3.0/video.min.js\""></script>Next, using Video.js is as simple as creating a <video> element, but with an additional data-setup attribute. At a minimum, this attribute must have a value of '{}', but it can include any Video.js options - just make sure it contains valid JSON!<video    id=\""my-player\""    class=\""video-js\""    controls    preload=\""auto\""    poster=\""//vjs.zencdn.net/v/oceans.png\""    data-setup='{}'>  <source src=\""//vjs.zencdn.net/v/oceans.mp4\"" type=\""video/mp4\""></source>  <source src=\""//vjs.zencdn.net/v/oceans.webm\"" type=\""video/webm\""></source>  <source src=\""//vjs.zencdn.net/v/oceans.ogv\"" type=\""video/ogg\""></source>  <p class=\""vjs-no-js\"">    To view this video please enable JavaScript, and consider upgrading to a    web browser that    <a href=\""https://videojs.com/html5-video-support/\"" target=\""_blank\"">      supports HTML5 video    </a>  </p></video>When the page loads, Video.js will find this element and automatically setup a player in its place.If you don't want to use automatic setup, you can leave off the data-setup attribute and initialize a <video> element manually using the videojs function:var player = videojs('my-player');The videojs function also accepts an options object and a callback to be invokedwhen the player is ready:var options = {};var player = videojs('my-player', options, function onPlayerReady() {  videojs.log('Your player is ready!');  // In this context, `this` is the player that was created by Video.js.  this.play();  // How about an event listener?  this.on('ended', function() {    videojs.log('Awww...over so soon?!');  });});If you're ready to dive in, the Getting Started page and documentation are the best places to go for more information. If you get stuck, head over to our Slack channel!ContributingVideo.js is a free and open source library, and we appreciate any help you're willing to give - whether it's fixing bugs, improving documentation, or suggesting new features. Check out the contributing guide for more!Video.js uses BrowserStack for compatibility testing.Code of ConductPlease note that this project is released with a Contributor Code of Conduct. By participating in this project you agree to abide by its terms.LicenseVideo.js is licensed under the Apache License, Version 2.0."
23,23,education/GitHubGraduation-2021,https://github.com/education/GitHubGraduation-2021/blob/main/README.md,JavaScript,"UpdatesFebruary 7, 2022Thank you all for your patience as swag ships! It's been fun to see your posts on social media as the cards arrive.Haven't received swag yet?We're so sorry to hear! Please fill out the trading card replacement form before March 1 and we'll re-ship your card by March 15, 2022.<3GitHub EducationDecember 2, 2021Swag has shipped! 🎉🎉🎉🎉🎉🎉🎉Keep an eye out for something fun in the mail. If you live in the United States, this means anytime from today through next week. If you live internationally, expect 3-4 weeks for shipments to arrive.If you have not received your swag by January 31, 2022, head back to this repository and we'll open a new form to replace lost or damaged shipments.Happy coding 💖GitHub EducationOctober 11, 2021First off, THANK YOU 🙌 all for your patience. Production and shipping around the world are still quite delayed, but we are getting closer. We are 3-weeks away from finishing printing trading cards. Once printed, we'll work hard to get everything into envelopes and shipped straight to you 💌. For international shipments, this can mean 2-3 additional weeks. Anyone in the United States can expect something in the mail within a week after printing.If you need to update your shipping information, we can for three more weeks. Please submit your updated address in the Notes section of the question form.Congrats again on your graduation 💖@elisemoe + @juanpfloresMay 27, 2021And that’s a wrap on the GitHub 2021 Yearbook ✨✅Submissions to the repository are closed as of 12:00pm PT. Yearbook will be live on Tuesday June 1. Check back here for updates!If you believe there has been a mistake with reviews, please let us know in an Issue. All Issues will be responded to before the event on June 5.Don’t forget to save the date and follow us on Twitch for notifications! See you on stage at graduation 👋May 14, 2021Hi Octograds!You all have made our week with your messages, pull requests, and support for each other 💖 We are honored to be a part of your graduation experience.We have merged 5,000 pull requests and swag eligibility is now closed. If your pull request is merged as of today (May 14), we will send you a custom holographic trading card in the mail. Please have patience. Swag production and shipping takes time and we will post updates to this repository as we have them. It is unlikely you will receive a shipment before the event.In the meantime, be sure to update your GitHub profile image and bio! We will use both to create your custom card.Our team is offline this weekend and will be back, on Monday (PT), to review pull requests to join the yearbook and \""walk\"" the stage at GitHub Graduation on June 5. Pull requests are no longer eligible for swag but we would love to have you a part of the ceremony🎓! We will review all pull requests submitted before May 27 at 12:00pm PT (May 28 at 12:30am IT) to join the event.Think there was a mistake? Send us a link to any relevant pull requests and Issues, along with a description of events. This does not include pull requests accidentally closed and recreated at a later time, or pull requests not eligible for merge before May 14 at 5:52pm PT (when the 5,000th pull request was merged). Use this form only for scenarios where you believe our bot or team made a mistake.Looking for more ways to support the Class of 2021? Here are a few ideas:👩‍💻 Continue providing feedback on pull requests to help your classmates get their pull request ready to merge. We appreciate your help and love seeing the magic of social coding.✍️ Share your message to a teacher or educator who has supported your journey as a student. Note: these submissions no longer qualify for swag but we would love to hear your stories nonetheless!📪 Have patience. Our team is working hard to get through your pull requests and provide everyone with the feedback needed to join the event. GitHub Actions saved our team an enormous amount of time managing reviews this year but, as much as we love our automations, this is still a manual process to ensure the Code of Conduct is followed and the event can be enjoyed by all.We can’t wait to see you “on stage” June 5! Follow us on Twitch for notification and save the date. In the words of @juanpflores, let’s make this AWESOME.❤️  @elisemoe + GitHub EducationThis repository contains the yearbook for GitHub Graduation 2021. By issuing a pull request to this repository, you can request to be added to the Class of 2021.The first 5,000 pull request successfully merged into the repository by May 27 will receive custom swag in the mail.Privacy Notice 👀Consider that all the information that you add to this repository will be publicly available.If you don't feel comfortable with displaying your full name, you can include a short name or nickname instead.Who can apply 📝We invite any student who has graduated, or plans to graduate, in 2021 to apply to the yearbook. This includes bootcamps, code camps, high school graduates, Master's graduates, Ph. D. Graduates, etc.The eligibility criteria are -You have been verified as a student with the GitHub Student Developer Pack. Not yet a part of the Pack? Apply here.You have not participated in a past GitHub Graduation event.How to join the Class of 2021Here are two steps to join graduation and receive swag in the mail.Fill out the swag shipment form. Note: the form needs to be done before creating your Pull Request and does not guarantee participation in the event. Your PR must be successfully merged to be included and only the first 5,000 merged PRs will receive swag.Submit a pull request with your profile information to join the Yearbook and be highlighted in the graduation event.(optional) Level up your swag and make an additional appearance at graduation by sharing a story of a teacher who has made an impact in your education. More info below!Save the date (Google calendar invite) and attend graduation 🥳1. Fill out the swag shipment form.Information submitted to the swag shipment form will only be used to ship swag for graduation. Submitting the form does not guarantee you will receive swag in the mail. Only the first 5,000 graduates to successfully merge their pull request to the Yearbook will receive a shipment.2. Add yourself to Yearbook 🏫Replace <YOUR-USERNAME> with your GitHub username in this guide.First, create the folder _data/YOUR-USERNAME/Fork this repository, create a new folder inside the _data folder, and name it with your username. It should look something like this _data/<YOUR-USERNAME>/. Ex._data/MonaTheOctocat/Second, add your profile informationCreate a markdown file in your folder following the convention <YOUR-USERNAME>.md. Ex._data/MonaTheOctocat/MonaTheOctocat.mdCopy the next template into your file, delete the boilerplate data and fill the information with yours.---name: FULLNAME-OR-NICKNAME # No longer than 28 charactersinstitution: INSTITUTION-NAME 🚩 # no longer than 58 charactersquote: YOUR-SENIOR-QUOTE # no longer than 100 characters, avoid using quotes(\"") to guarantee the format remains the same.github_user: YOUR-GITHUB-USERNAME---Do not use special characters in the template above.Third, submit your Pull RequestGo through the checklist on the pull request template to guarantee your submission is valid. The GitHub Education team will review your application, approve and merge your submission if everything is correct. Otherwise, you will get notified of the changes requested in the pull request comment section.3. Share your story of a teacher who made an impact 👩‍🏫👨‍🏫This year, we want to hear stories of teachers or educators who made a difference on your journey in 2021. Similar to last year's \""A Message to the Octograds\"" video, we're putting together a compilation of your stories. Every participant will level up their swag with an extra special design. To take part,Fill out the video release form.Record and submit your video message. (full instructions for recording)Not sure what to say? Even a \""thank-you teachers!\"" in your local language is appreciated to help us in honoring educators around the world.Share your message to teachers.A note on swag 🛍The first 5,000 successfully merged PRs will receive a custom holographic developer trading card with their GitHub status in the mail.What does this mean? We will use your public GitHub profile information to create a trading card. To ensure your trading card best reflects you, please make sure your GitHub profile picture and bio are up to date and what you would like shown on the card.Graduation Day 🎓Don't forget to watch the livestream!📆 Saturday, June 5, 2021⏰ 9:00am PT | 21:30 IST📍 Follow the GitHub Education Twitch Channel for notifications.📎 Add the event to your calendar (Google calendar invite)."
24,24,learn-co-curriculum/phase-0-pac-3-what-is-a-test,https://github.com/learn-co-curriculum/phase-0-pac-3-what-is-a-test/blob/master/README.md,JavaScript,"Testing with JavaScriptLearning GoalsLearn about testing in JavaScriptIntroductionMany of the labs you will complete in this program use tests. Passing the testsverifies that the code you write behaves as desired and produces the expectedresults. But writing tests is also a way to provide specifics about exactly howthe code should function. In a common development strategy known as test-drivendevelopment (or TDD), programmers first write the test for a specificfunction of the code then write the code to make the tests pass. TDD isconsidered the most reliable methodology for delivering quality code.What this means is that the results of running the tests will be an importanttool in figuring out how to get those tests passing. Code testing can feel likean abstract concept at first, but it's worth starting to learn how it works.When you're having difficulty passing a test, being able to read and understandthe test output — and the tests themselves — can be an invaluable skill.Getting StartedThe lesson is set up as a code-along, so you'll first need to fork and cloneit to your local environment.Quick Review:1. Click the Octocat icon in the upper right of this page. This willbring you to GitHub. Click the Fork button. If necessary, select yourpersonal GitHub account as the Owner of the new fork. Click the Create forkbutton.2. Once your fork is created, click the Code button in GitHub, make sureSSH is selected, and copy the provided git URL info.Then, in your terminal:3. Make sure you're in Development/code/se-prep (or wherever you'restoring your code for the course) and clone the repo to your local machine withgit clone followed by the git URL you copied.$ git clone git@github.com:your-github-username/phase-0-pac-3-what-is-a-test.gitREMEMBER: Don't type the $. That's the universal symbol for a commandprompt. It's how technical documentation says \""Here's a thing for the shell toprocess.\""4. The previous command will create a folder in the se-prep foldercontaining your fork of this lab's repository. cd into the repository that youjust cloned down in the terminal, then run code . to open the files in VisualStudio Code.$ cd phase-0-pac-3-what-is-a-test$ code .Open up index.js in your code editor. You are going to see mostly familiarthings:const name = \""Joe\"";const height = 74;const message = `${name} is ${height} inches tall`;module.exports = { name, height, message };This should all look familiar except for that last line. You don't need to worryabout it for now — just know that line of code makes the variables available tothe test file.Take a look at the message variable:const message = `${name} is ${height} inches tall`;We can use console.log to take a look at the value of the message variable.To do that, first type console.log(message); on the last line of index.jsand save the file. Next, navigate to the terminal, and type the followingcommand in the command line and hit enter (be sure you're still in the lab'sdirectory):$ node index.jsThe node command executes the code in whatever file you specify (in thiscase, index.js). You should see \""Joe is 74 inches tall\"" logged in theterminal.Top Tip: console.log is one of the debugging tools you can use as you'rewriting your code. Logging a variable and executing the code will allow you toverify that the value of the variable is what you're expecting.In the line of code above, we are using string interpolation to inject thevalues of the name and height variables into the message. Recall that, forthis to work, you have to wrap the entire string in backticks and wrap thevariables themselves in ${}. If you'd like a refresher, try leaving out the${}s or switching to a different type of quotes and run your code again to seewhat the value of message is. The backticks and the ${} tell Javascript tograb the value inside the variable, not just that variable name.The TestsWe have our code, now let's take a look at the tests. They are located in thetest folder inside a file named indexTest.js. In this lesson we'll getfamiliar with the tests, and then run them in the next lesson.const { name, height, message } = require(\""../index.js\"");/*describe('what-is-a-test', () => {  describe('Name', () => {    it('returns \""Susan\""', () => {      expect(name).toEqual('Susan')    })  })  describe('Height', () => {    it('is less than 40', () => {      expect(height).toBeLessThan(40)    })  })  describe('Message', () => {    it('gives the name and height', () => {      expect(message).toInclude(name)      expect(message).toInclude(height)    })  })})*/In the first line, we're enabling the tests to access the variables inindex.js. You don't need to worry about exactly how this works at this point —just know that the module.exports and require keywords allow us to accessvariables written in the index.js file from within the test file.The next thing to notice is that the test code itself is commented out using the/* and */ block commenting syntax. This is because, as mentioned above, wedon't actually want to run the tests yet. We will run the tests in the lab thatfollows this lesson; when you fork and clone that version of the files, you'llsee that the /* and */ have been removed.Next, note that the test code consists of three individual tests (each startingwith describe) nested inside a block for the tests as a whole (also startingwith describe).The first grouping is testing our name variable:describe(\""Name\"", () => {  it('returns \""Susan\""', () => {    expect(name).toEqual(\""Susan\"");  });});Take a look at the line that begins with expect. If we read it out loud, weget \""Expect name to equal Susan\"". That's exactly what it's saying! If wecontinue down to the Height section you'll see this code:describe(\""Height\"", () => {  it(\""is less than 40\"", () => {    expect(height).toBeLessThan(40);  });});Again, reading the line starting with expect out loud, we get \""Expect heightto be less than 40.\"" Again, this is just what the test is checking. Let's lookat the final one:describe(\""Message\"", () => {  it(\""gives the name and height\"", () => {    expect(message).toInclude(name);    expect(message).toInclude(height);  });});This one has two expect statements. If you read them out as English you'lldiscover that the tests expect the value of index.message to include bothindex.name and index.height.OK great. You now understand what the tests are saying. In the next lesson weare going to cover how to run them, and then you will solve the lab!Submitting the Code-AlongEven though you didn't need to write any code for this lesson, you'll still needto submit it using CodeGrade in order for it to be marked as complete in Canvas.Scroll to the bottom of this lesson page in Canvas and click the button labeled\""Load Testing With JavaScript in a new window\"".In the CodeGrade window that opens, click \""Create Submission\"". You should nowsee a list of your repositories. Find the repo for this lesson and clickConnect. When you get the message that your repo has been connected, click onthe embedded link, then the \""AutoTest\"" tab. After a few moments, you should seethe green checkmark in the \""Pass\"" column, indicating that you've successfullysubmitted the lesson."
25,25,learn-co-curriculum/phase-0-html-images-lab,https://github.com/learn-co-curriculum/phase-0-html-images-lab/blob/master/README.md,JavaScript,"HTML ImagesLearning GoalsRecognize the img tagUse img tag attributesCreate imagesIntroductionImages are absolutely critical to making appealing and engaging websites. Canyou imagine the web without them? No cat memes. No animated dancing bananas! NoInstagram, at all. The internet would be a pretty boring and sad place!In this lesson, we will be discussing how to include images in your HTML, alongwith some important attributes of the tag. With images, you can make your webpages much more engaging and visually appealing.Getting StartedFork and clone this lesson into your local environment. Navigate into itsdirectory in the terminal, then run code . to open the files in Visual StudioCode.Recognize the img TagImages are inserted into HTML using the img tag. The tag can display a varietyof image types, including animated GIFs, bitmaps and vector graphics, thoughmost often, the images we see on the internet are JPEG and PNG files.The img tag is self closing, meaning it doesn't wrap around content or text.Instead, the relevant information is stored in attributes within the tag itself.There are two main attributes, src, the source of the image, and alt, thealternate text.Use the img Tag AttributesThe Image Source AttributeThe src attribute provides the relative path or URL to the image file we wantto display. The image file can be local; for example, if you're publishing awebsite and have your images stored in a folder within your file structure, yoursource may look like this:<img src=\""../images/my_company_logo.png\"" />However, it's very common, even when publishing your own websites, to haveimages hosted somewhere else on the internet. In these situations, we need toprovide a full URL as the source:<img src=\""https://i.imgur.com/H1qsYEl.png\"" />The src attribute is always necessary, as without it, the img tag would havenothing to display.The Image Alt AttributeThe alt attribute contains text relevant to the image we're displaying, andwill appear in its place if the image fails to load.Alt text is important for screen readers for the visually impaired, as the textwill be read out loud to the site visitor. Alt text also improves accessibilityfor non-disabled users, who will get a message if the image fails to load. It isespecially important if the image is used as additional content that expandsupon the written content.Alt text on a failed image will appear along with a small 'broken image' icon:To include an alt attribute, add it in along with the src attribute:<img  src=\""https://i.imgur.com/H1qsYEl.png\""  alt=\""comedic crow gets wholesome support\""/>Note that we've separated out each attribute on its own line in the HTML above.When an element gets too long for one line in your text editor, separating thecode as shown above will keep your HTML code more readable.Note: While alt text isn't required for the browser, adherence to theAmericans with Disabilities Act is often enforced through legislation. Yourbrowser will not throw an error if there is no alt text with an image, so itis up to you as the developer to adhere to best practices for accessibility.The Image Title AttributeOne additional attribute that can be useful is the title. Content added tothis attribute will display when we hover over the image with our mouse. If wewere creating an img tag with src, alt and title for a company logo, itmight look something like this:<img  src=\""../images/my_company_logo.png\""  alt=\""my company name\""  title=\""We're here to help you!\""/>When a visitor to your company site hovers over the logo, they'll see a messageappear saying 'We're here to help you!'The title attribute isn't necessary and is often left out, but can be a nicedetail to include.Create ImagesIts time to practice creating some images! For this challenge, feel free to useany images you'd like — the tests are looking for the correct tag andattributes, not the content. If you're not sure what to use, feel free to usethe following URL as your source:https://s3.amazonaws.com/ironboard-learn/lion.jpgYour challenge is to write three image tags:The first should have just a source attributeThe second should include an alt attribute, in addition to a sourceThe third should have both an alt and source attribute, as well as a titleattributeRun npm test and read the tests as you go.ConclusionWith images, we can fill our web pages with visual content in addition to text.Brand logos, animated instructional guides, personal artwork and photography, orpictures of you and your friends — you now have the ability to create visuallyappealing content of any type!"
26,26,learn-co-curriculum/phase-0-html-album-cover-lab,https://github.com/learn-co-curriculum/phase-0-html-album-cover-lab/blob/master/README.md,JavaScript,"HTML Album CoverLearning GoalsUse common HTML tags to produce a webpage based on a mock-upIntroductionLearning all the individual pieces that make up a web page is a necessary firststep in the process of learning HTML, but one of the best ways to solidify theconcepts we've learned is to apply concepts together. In this lab, your taskwill be to update index.html based on commented notes in the file, using whatwe've learned about text formatting and displaying images.Getting StartedFork and clone this lesson into your local environment. Navigate into itsdirectory in the terminal, then run code . to open the files in Visual StudioCode.Apply Header, Paragraph, Image and Span TagsPharrell isn't quite happy, he needs some help coding the album cover for hishit song \""Happy.\"" His dev chops aren't quite as skilled as yours, so he's hiredyou to take care of business.Pharrell did provide us with a mock-up of what he would like to see for thedesign of the album cover:In the industry, front-end developers are typically given specs just like thisfrom the product team and then asked to write the code to make a website lookjust like the spec. Today, you're the developer and Pharrell is the productteam.Use SOURCE.mdPharrell has provided us with the text for the album and all the legalmumbo-jumbo to give credit where credit is due. You can find that text inSOURCE.md. Again, this is a typical industry standard workflow, where thedevelopers are given a copy for the site from the product team.Each line of text in this file corresponds to a note in index.html that willindicate where you'll need to add this information. It will be up to you to pickwhich HTML tags to use.DeliverablesWrite your code in index.html. Your job is to make sure the text fromSOURCE.md makes it into index.html surrounded by the appropriate HTML tags.You can see the images you'll be using in the 'images' folder, but you'll haveto write the correct URL paths (like http://..../image-name) in order for themto display correctly. The comments in the index.html will help you with this.You may not have encountered the span tag before, so if you are curious, takea moment to read up on some reference material to better understand its use.Open index.html in a separate browser tab to see your progress on the AlbumCover as you build it.Run npm test to make sure you've met all the deliverables and passed thetests.ConclusionA lot of the formatting in this lab is done using CSS, or Cascading StyleSheets, a language that defines styling for HTML. Before we can get to moreelaborate styling, though, it is important to have a strong understanding ofHTML fundamentals.In this lab, we've tested that understanding by having you practice applyingheaders, image, and paragraphs. Completing this lab means that you have a solidfoundation that we can build upon as we continue to learn about web development.Clap along if you feel you're getting the hang of HTML!"
27,27,layui/layui,https://github.com/layui/layui/blob/main/README.md,JavaScript,"        Layui  Classic modular front-end UI library                                  Layui 是一套开源免费的 Web UI 组件库，采用自身轻量级模块化规范，遵循原生态的 HTML/CSS/JavaScript 开发模式，极易上手，拿来即用。其风格简约轻盈，而内在雅致丰盈，甚至包括文档在内的每一处细节都经过精心雕琢，非常适合网页界面的快速构建。Layui 区别于一众主流的前端框架，却并非逆道而行，而是信奉返璞归真之道。确切地说，它更多是面向于追求简单的务实主义者，即无需涉足各类构建工具，只需面向浏览器本身，便可将页面所需呈现的元素与交互信手拈来。快速上手使用 Layui 只需在页面中引入核心文件即可：<!DOCTYPE html><html>  <head>    <meta charset=\""utf-8\"">    <meta name=\""viewport\"" content=\""width=device-width, initial-scale=1\"">    <title>Quick Start - Layui</title>    <link href=\""./layui/css/layui.css\"" rel=\""stylesheet\"">  </head>  <body>    <!-- HTML Content -->    <script src=\""./layui/layui.js\""></script>    <script>    // Usage    layui.use(function(){      var layer = layui.layer;      // Welcome      layer.msg('Hello World', {icon: 6});    });    </script>   </body></html>使用文档最新文档项目参与项目参与者破旧立新 🌱2016年10月14日，Layui 发布了 1.0.0 首版，此后多年被广泛应用于众多 Web 平台。2021年10月13日，Layui 发布了原官网下线的公告（导读），并将文档站点切换到了 Gitee Pages，社区及日常维护亦全面转移到了 Gitee 和 Github 平台，以此呼吁大家拥抱其他更好的主流框架，导致大家误以为 Layui 停更了。事实上，自那以后，Layui 仍然在 Github 和 Gitee 保持活跃，并不存在所谓的停止更新，从当时的 2.6.8 一直连续迭代到如今的最新版本。2023年4月24日，Layui 发布了 2.8.0 正式版，并上线了新的文档站点，这是一次朴实的回归，更是情怀的延续。 但我们仍然坚持两年前那则公告中的观点， 即仍然推荐大家去拥抱主流，始终保持对前沿技术的无限热爱，是开发者们都应具备的思维属性。 而 Layui 所做的，是为填补主流之外的那些略显狭小的空隙。Layui 虽不是前端主流，但也早已不是作者个人的 Layui，而是所有仍在坚持使用它的人的 Layui，它仍然支撑着许多项目，也代表着许多人的工作。作为开源创作者，应该要为这些坚持者而守望。未来，Layui 会持续陪伴着所有为之热爱的人们，共同去论证 Layui 开发模式的可行性。开源许可Layui 采用 MIT 许可发布。其他相关协议亦可参考《免责声明》。"
28,28,learn-co-curriculum/phase-0-css-intro-lab,https://github.com/learn-co-curriculum/phase-0-css-intro-lab/blob/master/README.md,JavaScript,"Introduction to CSS LabLearning GoalsImport a CSS file in our HTMLImplement CSS declarationsIntroductionHTML's role in our websites is to provide structure, content, and link resources(e.g. CSS files). Its role in describing the style (\""presentation\"") of contentis minimal. HTML's ability to style is pretty much limited to \""pretty good\""defaults.In order to further customize the style, appearance, and interactive behavior ofour websites, we turn to Cascading Style Sheets, or CSS. In this lab, we willwork on implementing CSS declarations in our HTML.Writing HTML vs. Writing CSSHTMLCSSDeals with:Content layerPresentation layerConcerns:Structure, hierarchy & meaningAesthetic & displayQuestions:- Should the order of items within a list matter?- Should the layout of the text be in a single or double column?- Should we wrap a list of links inside a navigation tag?- Should we use a different font color for the header?- Is this the most important header in the HTML document?- How should the content appear on a desktop vs. a mobile device?Getting StartedFork and clone this lesson into your local environment. Navigate into itsdirectory in the terminal, then run code . to open the files in Visual StudioCode.Import a CSS File in Our HTMLFirst things first: we need to make sure our HTML is loading our style sheet.We have two options:Write CSS rules inside of a <style> tag (\""internal CSS\""), which tells HTML\""Hey, I want to define some CSS styling here.\""Write CSS rules in an external file that is specified with the <link> tag(\""external CSS\"").In our case, we want to provide a link to our style sheet, instead of writingall of our CSS code directly in the <style> tag. This allows us to only haveto write styles for the entire site once, instead of repeating every <style>element on every page. A common workflow is to see developers work on CSS insideof the <style> tag until their styling is done. At that point they move it totheir external file and remove the <style> element from the HTML page. Feelfree to try it out!In index.html, provide a <link> tag which correctly sources the CSS filelocated in this directory. The <link> tag will link to our file with an hrefattribute, like so:<link rel=\""stylesheet\"" href=\""relative path to CSS file\"" />The href attribute should point to the file style.css which is located inthis directory using a relative path. The rel attribute is used to note thatthe file which is being linked has a relation of being a \""stylesheet.\""Now, what is a relative path? You could write href=\""style.css\"" and the contentof style.css would change your index.html file. But we want to teach you torequire external resources (like CSS or JavaScript) by using relative paths.Relative paths make it crystal clear which file is being used. Relative pathsstart with ./ which means \""from the directory I am currently in.\"" So, when weuse link to associate with a style sheet and we write href=\""./style.css\""we're saying: \""From the directory in which I, the index.html file live, lookfor a file called style.css and use it. This pattern will help you and otherdevelopers remove any possible confusion.<link rel=\""stylesheet\"" href=\""relative path to CSS file\"" />Links to style sheets should go at the end of the <head> section! Make sureyou provide a relative path to the style sheet. Hint: Open index.html in thebrowser. You can test whether your link is working or not by the color of yourheadline. If it's red, it's working! If it's black, keep going - you'll get it.Implement CSS DeclarationsNow, we are going to create some CSS declarations and add styling to ourdocument! First, open index.html in the browser to get a good idea of whatour un-styled page page looks like.What we would really like is something a little more jazzed up! Let'swork towards that. Set the following properties to specific values. Makesure to, after each update, look at index.html in the browser to see how ithas changed:Set the background of the <body> element (whole document) to #00b3e6(light blue)Set the <div> elements:width to 700pxmargin to auto (centers our element)font-family to \""Helvetica Neue\""background to whitepadding to 30px (creates an invisible space around the element)Set the element with the id of #main-header to a font-size of 22pxSet the elements with the class of .perspective-questions to a font-styleof italicRun npm test to test your work. Remember to push and submit your work usingCodeGrade when you're done.ConclusionCSS allows us to easily separate our 'styling' logic into separate files thatfollow the 'cascading' rule set. This enables us to keep our HTML clean andsimple to read, without sacrificing the customization that we have come toexpect on websites.ResourcesW3 Introduction to CSS"
29,29,learn-co-students/js-functions-lab-bootcamp-prep-000,https://github.com/learn-co-students/js-functions-lab-bootcamp-prep-000/blob/master/README.md,JavaScript,"JavaScript FunctionsObjectivesWrite a function that returns a valueWrite a function that takes in a parameterWrite a function that takes in multiple parametersIntroductionYou'll be writing your solution in index.js.In this lab, we're going to develop our communication skills in JavaScript.We're feeling festive, so we're going to be wrapping up common holiday greetingsas functions so that we don't have to repeat ourselves. The beauty of functionsis that we could reuse these functions for the text of greeting cards, forspoken greetings, for song lyrics, etc...Template LiteralsThere are two ways main ways to include variables inside a string. Say we had a variable named date that we assign to a value:var date = \""July 3rd\""In JavaScript, we can use operators to concatenate (join) two strings, or in this case, a string and a variable, like so:console.log(\""My birthday is \"" + date)With date defined, the above code will log My birthday is July 3rd. However,by using a slightly modified syntax, we can achieve the same thing by embeddinga variable into a string. These are called templateliteralsand rewriting the above console.log with one would look like this:console.log(`My birthday is ${date}`)This will also log My birthday is July 3rd.Now, there are two important changes to the syntax: Any variables we want toinclude must be wrapped in curly braces ({ }) and preceded by a dollar sign($). In addition, instead of single, ', or double quotes, \"", wemust use backticks, `. If backticks are not used, JavaScript willinterpret the dollar sign and curly braces as a normal part of the string,resulting in My birthday is ${date}! Any expression can be included intemplate literals, not just variables, so we could write something like:console.log(`I have ${1 + 1} pets`)And get I have 2 pets. Note that this will not log the same thing if you didthe following:console.log(\""I have \"" + 1 + 1 + \"" pets\"")This logs I have 11 pets! JavaScript converts both 1s into strings rather than adding them together first. You would need to write the following to get the same result as template literals:console.log(\""I have \"" + (1 + 1) + \"" pets\"")You can use either operators or template literals to construct larger stringswith dynamic values. Template literals are just a way to make your code a littleeasier to read and to help ensure JavaScript does not misinterpret whencombining different data types into strings, like we just saw.InstructionsWrite a function named happyHolidays. This function should not accept anyparameters and should return the string \""Happy holidays!\"".Write a function named happyHolidaysTo. This function should accept aparameter of the name of the person you want to wish happy holidays, andreturn the string `Happy holidays, ${name}!`Write a function named happyCustomHolidayTo. This function should accept twoparameters, the holiday you want to wish them well for, and the name of theperson you're wishing well. Order of parameters matters, so make sure to first pass in the holiday and then the name. This function should return the string`Happy ${holiday}, ${name}!`Write a function named holidayCountdown. This function should accept twoparameters, the holiday name and number of days until that holiday. Thefunction should return the string`It's ${days} days until ${holiday}!`. Note that although days isused first when constructing the returned string, holidayCountdown shouldtake in the holiday name first, then the days until that holiday."
30,30,learn-co-curriculum/phase-0-the-dom-modifying-elements-lab,https://github.com/learn-co-curriculum/phase-0-the-dom-modifying-elements-lab/blob/master/README.md,JavaScript,"Creating and Inserting DOM Nodes LabLearning GoalsCreate DOM elements programmaticallyAdd elements to the DOMUpdate elements using innerHTMLChange properties on DOM nodesRemove elements from the DOMIntroductionNow that you have an understanding of the DOM and powerful tools for selectingthe right elements, it's time to learn how to:Create new nodesDelete nodesUpdate node propertiesIf you haven't already, fork and clone this lab into your local environment.Navigate into its directory in the terminal, then run code . to open the filesin Visual Studio Code.Create DOM Elements Programmaticallydocument.createElement()Creating an element in JavaScript is an easy process. You simply calldocument.createElement('tagName'), where tagName is the name of any validHTML tag ('p', 'div', 'span', etc.).Open the index.html file in your browser and open up the browser's console. Inthe console, enter:const element = document.createElement(\""div\"");Then take a look at the Elements tab. The element doesn't show up on the page.Why not?Add Elements to the DOMTo get an element to appear in the DOM, we have to append() it to an existingDOM node. To go back to our tree metaphor, we have to glue our new leaf onto abranch that's already there. We can start as high up on the tree asdocument.body, or we can find a more specific element using any of the methodswe've learned for traversing the DOM.append()Let's append element to body to start:document.body.append(element);(Recall that element is a variable containing the div we created above.)Now if you look at the Elements tab, you'll see our new (empty) <div> nestedinside the body element.Next, let's create an unordered list:const ul = document.createElement(\""ul\"");To populate our unordered list, we'll use a for loop to create three li's,give them some content, and append them to the ul:for (let i = 0; i < 3; i++) {  const li = document.createElement(\""li\"");  li.textContent = (i + 1).toString();  ul.append(li);}In each iteration of our loop, we calculate the value i + 1 (an integer), turnit into a string using JavaScript's toString() method, and assign the resultas the value of the li's textContent attribute.Note: although the textContent attribute must be a string, the code wouldstill work even if we didn't use the toString() method — JavaScript willturn the value into a string for us. However, for clarity and completeness, itis best to set it to a string value explicitly.Finally, we'll append the ul to the div we created:element.append(ul);You should now see the unordered list rendered on the page, and see the newelements in the \""Elements\"" tab, like this:<div>  <ul>    <li>1</li>    <li>2</li>    <li>3</li>  </ul></div>Note that, each time we create a new element, we create a variable and save areference to it. That makes it quite easy to make additional updates and to addit to the DOM using append().Add Elements to the DOM via innerHTMLCreating elements and then appending them into the DOM is a multi-step process.It's also the safest and most reliable way to add content to the DOM. Mostrepeated code can be removed by using variables, functions and loops. It's TheRight Way.That said, however, there's another process that will also work, usingElement.innerHTML. Inside our loop above, we create an li element and setits textContent property to a simple number (expressed as a string) thatrepresents the current iteration through the loop. Once we append the li tothe ul and the ul to the document body, we see our unordered list in thebrowser window. This is a perfectly valid way to use textContent to addcontent to the DOM — essentially, textContent changes only what text shows upinside a DOM element:li.textContent = \""Hi there!\"";// => <li>Hi there!</li>console.log(li.textContent);// => \""Hi there!\""Imagine, however, that we want to add content that's more complicated.Assume our HTML includes a main element with an id of \""main.\"" We can grabthat element and set its innerHTML attribute to any HTML we like:const main = document.getElementById(\""main\"");main.innerHTML =  \""<h1>Poodles!</h1><h3>An Essay into the Pom-Pom as Aesthetic Reconfiguration of the Other from a post-Frankfurt School Appropriationist Perspective</h3><p><em>By: Byron Q. Poodle, Esq., BA.</em></p>\"";Here we are using one big, long string, complete with multiple HTML tags, tocreate the following HTML in the DOM:<main id=\""main\"">  <h1>Poodles!</h1>  <h3>    An Essay into the Pom-Pom as Aesthetic Reconfiguration of the Other from a    post-Frankfurt School Appropriationist Perspective  </h3>  <p><em>By: Byron Q. Poodle, Esq., BA.</em></p></main>This process works but it is not recommended for several reasons. First,it's more error-prone, and the errors can be difficult to find. Second, it cannegatively impact site performance. Finally, if you're inserting user-deriveddata (e.g., comments) into the DOM using innerHTML, you can expose your siteto the risk of users injecting malicious code.Programmatically creating and appending elements is safer and more efficient,and it results in code that's easier to read, easier to debug, and easier tomaintain.Change Properties on DOM NodesWe can change the appearance of a DOM node using its style attribute. Try thisout in the console:const element = document.getElementById(\""main\"");element.style.height = \""300px\"";element.style.backgroundColor = \""#27647B\"";You've changed what's on the screen!Feel free to set as many properties as you'd like — this is a good chance tolook around and explore different properties of DOM elements.Let's adjust the display. Add some text:element.textContent = \""You've changed what's on the screen!\"";Then change the style to see the effect:element.style.fontSize = \""24px\"";element.style.marginLeft = \""30px\"";element.style.lineHeight = 2;Perhaps the most common way to change how things appear in the DOM is bychanging an element's class attribute. As you know from CSS, we often changethe way a bit of rendered HTML appears by adding or removing a class.For example, we could create an alert class that turns the text red (using theCSS color attribute) and makes it big (using the CSS font-size attribute).We can then use JavaScript to first grab the element and then add the class byupdating the element's className property. This has the same effect as settingthe class property in the HTML. The className property expects a Stringwith one or more class names, separated by spaces:element.className = \""pet-listing dog\"";Check out the Elements tab to see the effect of this change:<main id=\""main\"" class=\""pet-listing dog\""></main>Another way to accomplish the same thing is by using the Element.classListproperty. This property has .add() and .remove() methods thatcan be used as follows:element.classList.remove(\""dog\"");element.classList.add(\""cat\"", \""sale\"");This approach allows you to easily add and remove classes programmatically,without having to create a long string of class names.<main id=\""main\"" class=\""pet-listing cat sale\""></main>Separation of ConcernsAn important thing to bear in mind is that we only want to use JavaScript tochange the appearance of an element when we need to make a change dynamically,i.e., in response to user actions. This goes back to a fundamental programmingconcept about separating concerns between technologies:HTML defines the structure of the website (not appearance or functionality)JavaScript defines functionality of the website (not structure or styling)CSS defines the visualization and style of the website (not structure orfunctionality)Defining the base CSS should still happen in the CSS files that are loaded intothe DOM when the page is opened.Remove Elements from the DOMWe know how to add elements and change their attributes. What if we want toremove an element from a page?removeChild()We use removeChild(), as you might guess, to remove a particular child of anelement:someElement.removeChild(someChildElement);Let's take a look at a more complex example:const ul = document.getElementsByTagName(\""ul\"")[0];const secondChild = ul.querySelector(\""li:nth-child(2)\"");ul.removeChild(secondChild);Here you can see the power of querySelector(): we can use it to find thesecond li element of ul. We then pass that element as the argument to ourremoveChild method, which removes the element from our ul.What if we want to remove the whole unordered list (ul)?element.remove()We can just call remove() on the element itself:ul.remove();And it's gone!InstructionsFrom this point forward, many of the labs will work a little differently fromones you've done before. Specifically, the tests will mock the process of 1)running JavaScript code in the browser and 2) seeing the results of that coderepresented in the DOM. Take a look at test/indexTest.js to see the tests'descriptions of the changes your code should be making to the DOM elements.Note that you do not need to create functions for this lab. Just create the lineor lines of JavaScript necessary to pass each test. As usual, you will writeyour code in the index.js file.One final note: the last test in the test/indexTest.js file is looking for thetext \""YOUR-NAME is the champion\"" (with your name — or whatever text you choose —in place of YOUR-NAME) inside your newly created DOM node. While there are anumber of ways you could accomplish this, you should use either thetextContent or innerHTML property to setthe text inside your DOM node. The innerText property would technically workas well; however, the tests won't pass if you use this approach, and generallyit's not a good practice to use innerText when setting the contents of anelement. This StackOverflow answer does a good job explaining somedifferences between these properties.Resourcesdocument.createElement()append()removeChild()element.remove()classList Property"
31,31,learn-co-students/js-if-else-files-lab-bootcamp-prep-000,https://github.com/learn-co-students/js-if-else-files-lab-bootcamp-prep-000/blob/master/README.md,JavaScript,"Using Conditionals and Multiple Files in JSIntroductionWe now know how to use conditionals. Now, let's use conditionals to test ourcode for correctness. This is your first step towards how professionaldevelopers write software. Professional developers test their code forcorrectness. Instead of constantly clicking around their applications, mostdevelopers write additional code, called tests that ensure their code isoutputting the right things. In fact, they may even write tests first beforethey actually do any work towards a project to help ensure the code they writedoes what they expect it to do!We will eventually explain how to use the professional testing tools but first,let's go over a simple example.InstructionsAfter you open this lesson in the IDE, in the js folder, double-click onindex.js. You'll see some basic code:// ./js/index.jsvar name = \""Joe\""var height = \""74\""// Don't worry about thismodule.exports = { name, height}First of all, don't worry about the module.exports stuff right now, we'll getto that later. You've seen the rest of this stuff before but let's review. Thisassigns \""Joe\"" to the name variable using the assignment operator (=). Italso assigns \""74\"" to height. Both \""Joe\"" and \""74\"" are Strings. We knowthat because they are wrapped in quotes. We have our code, but we don't have ourtests. Let's write a test right below the var height = \""74\"" line to check thatname is equal to \""Susan\"". That should look something like this:if (name === \""Susan\"") {    console.log(\""The name is correct\"")}Write that, and then run your index.js file with node js/index.js in theterminal. You'll see nothing printed out. That's because our name variabledoesn't equal \""Susan\"". Let's put in an else statement that prints \""Expected the name to be Susan\"". Give it a try on your own.OK, you gave it a try, now let's look at the solution:if (name === \""Susan\"") {    console.log(\""The name is correct\"")} else {    console.log(\""Expected the name to be Susan\"")}See what we did there? Great! Now run your code again by typingnode js/index.js in the terminal and you should getExpected the name to be Susan printed out. Let's fix our name variable toequal \""Susan\"". Modify the first line to say:var name = \""Susan\""Re-run your code and boom! you did it :)In later steps, we'll be doing our testing in other files. So, for now, let'srevert index.js to its original state. Make sure the index.js file is saved andthat it looks like this:var name = \""Joe\""var height = \""74\""// Don't worry about thismodule.exports = { name, height}Separating Tests from Application CodeAs you can probably imagine, a large application will have many tests. Averagesized applications will have thousands of tests. It gets a bit confusing to havethe application code mixed in with your test code. We want to separate them outso it's not a pain to sift through our files.Let's open up another JavaScript file and play around with separating thingsout. There is a blank JS file included in this lab called other_file.jslocated in the js folder. Double click on that and you'll see a blank file.Let's say we wanted to console.log the name variable from our index.jsfile. Seems fairly easy. Go ahead and type console.log(name). Now let's runthis new file by typing node js/other_file.js in our terminal. BOOM! You'll getan error that looks like this:/home/jmburges/code/labs/js-functions-lab/test.js:1(function (exports, require, module, __filename, __dirname) { console.log(name)                                                                          ^ReferenceError: name is not defined    at Object.<anonymous> (/home/jmburges/code/labs/js-functions-lab/test.js:1:75)    at Module._compile (module.js:570:32)    at Object.Module._extensions..js (module.js:579:10)    at Module.load (module.js:487:32)    at tryModuleLoad (module.js:446:12)    at Function.Module._load (module.js:438:3)    at Module.runMain (module.js:604:10)    at run (bootstrap_node.js:393:7)    at startup (bootstrap_node.js:150:9)    at bootstrap_node.js:508:3The important line here is the ReferenceError: name is not defined line. Thatsays that our name variable doesn't exist in the other_file.js file. Thatmakes sense. In other_file.js we never write the line of code to createname. We have the line var name = \""Joe\"" in index.js. We need to tellother_file.js about the existence of index.js! Let's do that by replacingthe contents of other_file.js with the following line of code:var index = require(\""./index.js\"")This tells javascript to load the index.js file and put its contents inside ofthe index variable within other_file.js. That's a bit confusing, but it'sfairly straight forward to use. Thanks to require(), we now have access to thevariables we exported from index.js, including name. To access name withinother_file.js, we can simply refer to the name property of the indexvariable, which, again, is where we used require() to store the contents ofindex.js. Let's add the following line to other_file.js:var index = require(\""./index.js\"")console.log(index.name)Give that a run by typing node js/other_file.js and you should see the namegetting printed out. Awesome!Your TurnYou now know how multiple files interact as well as how if statements work.Now, you have to write your code to match some specific tests. Open upjs/tests.js and you will see two if statements. Let's give this a run tostart things off by typing node js/tests.js. You should get two messages:Expected: Susan, Received: JoeExpected: 70, Received: 74Now, it's your job to modify index.js so that when you run node js/tests.jsthe messages you see logged to the console are:The name is correctThe height is correctNote: Capitalization matters. Also, whether or not you use a String orNumber matters. Numbers don't have any quotes around them, Strings do havequotes around them!When you've finished your solution, and the tests show the output above, runlearn submit from the console to submit your solution."
32,32,learn-co-curriculum/phase-0-the-dom-editing-lab,https://github.com/learn-co-curriculum/phase-0-the-dom-editing-lab/blob/master/README.md,JavaScript,"DOM Editing LabLearning GoalsIdentify that DOM nodes are written as HTMLIntroductionWe've started looking at the DOM and how it's created. Now it's time to see itsstructure.If you haven't already, fork and clone this lab into your local environment.Navigate into its directory in the terminal, then run code . to open the filesin Visual Studio Code.Identify That DOM Nodes Are Written As HTMLIn the previous lesson, we learned that, when we load a web page in a browser,the content we see in the DOM is a representation of the underlying HTML, CSSand JavaScript. If we were to view the DOM in Chrome Dev Tools (we'll learn howto do that shortly), we would see HTML that is a clone of the HTML found in thesource HTML file. As we learned earlier in the course, that HTML consists ofelements that in turn consist of HTML tags and their content.When we're working in the DOM, the structure is the same. We can access objectsin the DOM (called nodes) that consist of tags, just like the HTML elementsthat make up the base HTML. Nodes and elements are not the same thing —all elements in the DOM are nodes but not all nodes are HTML elements. However,when we're working in the DOM, the nodes we access and modify are virtuallyalways HTML elements.The Structure of DOM ContentWe'll start by going over how content in the DOM is structured using nodes. Theinformation below should be familiar from what you've learned about HTMLelements.DOM nodes most often have a starting tag and an ending tag. Examples include aparagraph:<p>I am a paragraph.</p>or a main section:<main></main>Because they have both starting and ending tags, we can nest other nodes insidethem. The inner node is called a child node, and the outer node is called aparent node. To nest items, we simply add the child node and its content betweenits parent's starting and ending tags:<body>  <main>    <p>I am a nested paragraph, inside the main element, inside the body!</p>  </main></body>Some nodes only have a starting tag. Those are called self-closing elements orvoid elements. Void elements do not have any content nested inside of them andcannot be parent nodes.An example of a self-closing tag is an image:<img  src=\""https://media.giphy.com/media/3o6MbkZSYy4mI3gLYc/giphy.gif\""  alt=\""A cartoon gif\""/>In self-closing tags, the trailing / is optional. This is valid too:<img  src=\""https://media.giphy.com/media/3o6MbkZSYy4mI3gLYc/giphy.gif\""  alt=\""A cartoon gif\"">Enough review, let's write some HTML!InstructionsStart by running the tests and taking a look through the errors. You'll see thatthe tests are looking for certain content to be present in the HTML file.Next, open the index.html file in the browser using the instructions in theprevious lesson for your development environment.Just to speed things up a bit, paste the following code into index.html:<!DOCTYPE html><html lang=\""en\"">  <head>    <meta charset=\""UTF-8\"" />    <meta name=\""viewport\"" content=\""width=device-width, initial-scale=1.0\"" />    <meta http-equiv=\""X-UA-Compatible\"" content=\""ie=edge\"" />    <title>Introduction to the DOM Lab</title>  </head>  <body>    <!--All our work for this lesson will go here-->  </body></html>Refresh the browser page to see the changes.Open the Google Developer Tools by clicking on the \""View\"" menu and selectingDeveloper -> Developer Tools. The Elements tab should be selected but, if itisn't, click on it. Here we have the DOM representation of the HTML sourceloaded by the browser. You should see the head and body elements nestedinside the html element. If the body element is collapsed, use thedisclosure triangle to expand it. You should see that the body element is,temporarily, child-less. Let's go ahead and start adding some content inindex.html.Note: thedisclosure triangle is thetriangle to the left of the <body> tag. When you first open the Elements tab,the nodes are generally collapsed, hiding their contents. You can click thetriangle to expand the node and see its contents. Disclosure triangles arestandard for hiding information throughout Chrome DevTools. If you want to seemore, feel free to click on the triangle! You're not going to break anything.First, let's add a title to our page:<h1>My HTML adventure</h1>Refresh the page to see the changes displayed in the browser. If you view theElements tab again, you should see that a new child node is nested inside thebody. Finally, run the tests again; the first test should now be passing.Next, we'll add a paragraph below the title. We'll also add some highlightedbits of text to the paragraph to make it stand out a little.<p>  We're writing HTML markup to display in our <strong>browser</strong>. We're  basically telling computers what to do. <em>Neat!</em></p>Save the file and check out the page in the 'Elements' tab. What's happeningabove is that we added some inline elements, <strong> and <em> to ourparagraph to style things a little. The <strong> tag makes any text withinlook important. It's usually bold in browsers by default. The <em> tagallows us to emphasize certain text. This text is typically rendered as italicin browsers.Run the tests again; you should now have all but two of the tests passing.In our paragraph, let's make \""HTML\"" a hyperlink and link to the MDN definition.We'll use the<a> tag for this. Add this to our existing <p>:We're writing<a href=\""https://developer.mozilla.org/en-US/docs/Web/HTML\"">HTML</a> markup todisplay in our <strong>browser</strong>.Notice that HTML attributes (in this case, the href attribute) are shownalongside their opening tag.Lastly, we'll add a table below the paragraph to recap some of the stuff inthis lesson:<table>  <thead>    <tr>      <th>Element name</th>      <th>Display value</th>    </tr>  </thead>  <tbody>    <tr>      <td>h1</td>      <td>block</td>    </tr>    <tr>      <td>p</td>      <td>block</td>    </tr>    <tr>      <td>strong</td>      <td>inline</td>    </tr>    <tr>      <td>em</td>      <td>inline</td>    </tr>  </tbody></table>Woah. That's a lot of markup! If you take a look at the result, though,you'll see that it's a fairly complex visual — it's a table! Our tableconsists of a header and a body. The header allows us to give the columns aname, and the table body contains the rows of content. Both <thead> and<tbody> tags contains rows, which are represented as <tr> (table row). Theserows then contain cells which form the table's columns. In the <thead> row,cells are represented as <th>, while cells in <tbody> have their content in<td> tags.That's a lot of nesting.Look again at the Elements tab. Expand out all the children of the table.This is the DOM tree!When you're done, go ahead and run the tests. They should now all be passing."
33,33,aosabook/500lines,https://github.com/aosabook/500lines/blob/master/README.md,JavaScript,"500 Lines or Less\""What I cannot create, I do not understand.\""-- Richard FeynmanThis is the source for the book 500 Lines or Less, the fourth in theArchitecture of Open Source Applications series.  Aswith other books in the series, all written material will be covered by theCreative Commons - Attribution license, and all code by the MIT License: pleasesee the license description for details.  In addition, allroyalties from paid-for versions will all go to Amnesty International.The production of this book has been made possible by the financial support ofPagerDuty.    MissionEvery architect studies family homes, apartments, schools, and other commontypes of buildings during her training.  Equally, every programmer ought toknow how a compiler turns text into instructions, how a spreadsheet updatescells, and how a database efficiently persists data.Previous books in the AOSA series have done this by describing the high-levelarchitecture of several mature open-source projects. While the lessons learnedfrom those stories are valuable, they are sometimes difficult to absorb forprogrammers who have not yet had to build anything at that scale.\""500 Lines or Less\"" focuses on the design decisions and tradeoffs thatexperienced programmers make when they are writing code:Why divide the application into these particular modules with theseparticular interfaces?Why use inheritance here and composition there?How do we predict where our program might need to be extended, and how canwe make that easy for other programmers?Each chapter consists of a walkthrough of a program that solves a canonicalproblem in software engineering in at most 500 source lines of code. We hopethat the material in this book will help readers understand the variedapproaches that engineers take when solving problems in different domains, andwill serve as a basis for projects that extend or modify the contributionshere.Contributors      Name    Affiliation    Project    Online    GitHub        Mike DiBernardo    Wave    editorial                        @mdibernardo            mikedebo.ca                MichaelDiBernardo         Amy Brown    indie    editorial    amyrbrown.ca        @amyrbrown    amyrbrown        Allison Kaptur    Dropbox    byterun    @akaptur    akaptur        Audrey Tang    g0v.tw, Socialtext, Apple    spreadsheet                        @audreyt                audreyt        Brandon Rhodes    Dropbox    contingent    @brandon_rhodes    brandon-rhodes        Carl Friedrich Bolz    King's College London    object model                        cfbolz.de            @cfbolz                cfbolz        Cate Huston         Image Filter app                        www.accidentallyincode.com/            @catehstn                catehstn        Christian Muise    University of Melbourne    flow-shop                        @cjmuise                haz        Daniel Jackson         same-origin-policy                  Daniel Rocco    BrightLink Technology    contingent    @drocco007    drocco007        Dann Toliver    Bento Box    dagoba                        danntoliver.com            @dann                dxnn        Dessy Daskalov    Nudge Rewards    Pedometer                        www.dessydaskalov.com            @dess_e                dessy        Dethe Elza         blockcode         dethe        Dustin Mitchell    Mozilla    cluster         djmitche        Erick Dransch         Modeller                        @ErickDransch                EkkiD        Eunsuk Kang         same-origin-policy                  Greg Wilson         web-server                        @gvwilson                gvwilson        Guido van Rossum    Dropbox    crawler                        @gvanrossum                gvanrossum        A. Jesse Jiryu Davis    MongoDB    crawler                        @jessejiryudavis                ajdavis        Jessica Hamrick    University of California, Berkeley    sampler                        www.jesshamrick.com            @jhamrick                jhamrick        Leah Hanson    Google    static analysis                        @astrieanna                astrieanna        Leo Zovic         event-web-framework                  Malini Das    Twitch    ci                        malinidas.com            @malinidas                malini        Marina Samuel    Mozilla    ocr                        www.marinasamuel.com            @emtwos                emtwo        Ned Batchelder    edX    templating engine                        nedbatchelder.com            @nedbat                nedbat        Santiago Perez De Rosso         same-origin-policy                  Taavi Burns    Previously at Points, now at PagerDuty    data-store                        @jaaaarel                taavi        Yoav Rubin    Microsoft    In-memory functional database                        @yoavrubin                yoavrubin  Technical Reviewers      Amber Yust    Andrew Gwozdziewycz    Andrew Kuchling        Andrew Svetlov    Andy Shen    Anton Beloglazov        Ben Trofatter    Borys Pierov    Carise Fernandez        Charles Stanhope    Chris Atlee    Chris Seaton        Cyryl Płotnicki-Chudyk    Dan Langer    Dan Shapiro        David Pokorny    Eric Bouwers    Frederic De Groef        Graham Lee    Gregory Eric Sanderson    James O'Beirne        Jan de Baat    Jana Beck    Jessica McKellar        Jo Van Eyck    Joel Crocker    Johan Thelin        Johannes Fürmann    John Morrissey    Joseph Kaptur        Josh Crompton    Joshua T. Corbin    Kevin Huang        Maggie Zhou    Marc Towler    Marcin Milewski        Marco Lancini    Mark Reid    Matthias Bussonnier        Max Mautner    Meggin Kearney    Mike Aquino        Natalie Black    Nick Presta    Nikhil Almeida        Nolan Prescott    Paul Martin    Piotr Banaszkiewicz        Preston Holmes    Pulkit Sethi    Rail Aliiev        Ronen Narkis    Rose Ames    Sina Jahan        Stefan Turalski    William Lachance  "
34,34,bigbluebutton/bigbluebutton,https://github.com/bigbluebutton/bigbluebutton/blob/develop/README.md,JavaScript,"BigBlueButtonBigBlueButton is an open source virtual classroom designed to help teachers teach and learners learn.BigBlueButton supports real-time sharing of audio, video, slides (with whiteboard annotations), chat, and the screen.  Instructors can engage remote students with polling, emojis, multi-user whiteboard, shared notes, and breakout rooms.  During the session, BigBlueButton generates analytics that are visible to moderators in the Learning Analytics Dashboard.Presenters can record and playback content for later sharing with others.We designed BigBlueButton for online learning, it can be used for many other applicationsas well).  The educational use cases for BigBlueButton areOnline tutoring (one-to-one)Flipped classrooms (recording content ahead of your session)Group collaboration (many-to-many)Online classes (one-to-many)The latest version is BigBlueButton 2.6.  You can install BigBlueButton 2.6 on Ubuntu 20.04 using bbb-install.sh within 30 minutes (or your money back 😉).For full technical documentation BigBlueButton -- including architecture, features, API, and GreenLight (the default front-end) -- see https://docs.bigbluebutton.org/.BigBlueButton and the BigBlueButton Logo are trademarks of BigBlueButton Inc ."
35,35,CodingTrain/website-archive,https://github.com/CodingTrain/website-archive/blob/main/README.ja.md,JavaScript,  こんにちは、The Coding Train WebサイトのGitHubリポジトリへようこそ！ これには、 thecodingtrain.com のすべてのコンテンツと、対応する動画のソースコードが含まれています。 このサイトは、さまざまな方法でコミュニティからの貢献を歓迎します！ 詳細については、 CONTRIBUTING.md をご覧ください。＃その他のリンクThe Coding Train on YouTubeBecome a YouTube MemberFor topic suggestionsJoin The Coding Train DiscordCoding questions＃ライブストリームライブストリームはYouTubeでイベントとして発表されます、[イベントの通知を受け取るにはサブスクライブしてください]（https://www.youtube.com/channel/UCvjgXvBlbQiydffZU7m1_aw/subscribe）！＃独自のバリエーションを追加Coding Trainビデオに基づいて独自のバリエーションを共有したい場合は、[Webサイト]（http://thecodingtrain.com）のビデオに対応するページにアクセスしてください。 [コミュニティ貢献ガイド]（https://thecodingtrain.com/Guides/community-contribution-guide.html）をチェックして、その方法を確認してください。その後、ウェブサイトのビデオのすぐ下に掲載され、誰もが見ることができます！＃ビデオチュートリアルのページの追加を支援する現在、動画とコミュニティの貢献を新しいシステムに移行中です。これを支援したい場合は、[コンテンツ寄稿ガイド]（https://thecodingtrain.com/Guides/content-contribution-guide.html）を参照してください。私たちを助けてくれてありがとう！＃Hacktoberfest[Hacktoberfest]（https://hacktoberfest.digitalocean.com/）にアクセスしている場合は、この問題を確認してください：https：//github.com/CodingTrain/website/issues/2615。
36,36,learn-co-curriculum/phase-0-javascript-events-acting-on-events-lab,https://github.com/learn-co-curriculum/phase-0-javascript-events-acting-on-events-lab/blob/master/README.md,JavaScript,"Moving Things with JavaScript by Acting on EventsLearning GoalsPractice moving elements on the pageDemonstrate how to move an element in response to a browser eventDemonstrate how to update an element's position on the page conditionallyIntroductionThink back to the first video game you played.Think about the mechanics of that game. When you tilted a joystick orpressed a button it responded to your whims. It pulled you into its story bygiving you a window into its world and a way of interacting with — shaping, even— that world. When you performed an event, the computer made the worldrespond: the little plumber from Brooklyn jumped (Super Mario Franchise), theundead warrior slashed at an evil foe (Dark Souls), or the banana-yellow guyate the power pellet (Pac-Man).Programming means that you can create such a world for other people. Sure,it'll be a while before you're ready to build something like one of the classicgames above, but we can start with the essential steps. In this lab we'll learnhow to move an element on a page in response to an event.If you haven't already, fork and clone this lab into your local environment.Navigate into its directory in the terminal, then run code . to open the filesin Visual Studio Code.Go ahead and run the tests. You'll see that you need to create two functions toget the tests passing: moveDodgerLeft() and moveDodgerRight(). We'll writemoveDodgerLeft() together, then you'll create moveDodgerRight() on your own.Practice Moving Elements on the PageOpen index.html in the browser. You'll see a black square which represents thegame field and a white rectangle at the bottom of that field which is our gamepiece, the dodger. Now open DevTools and click on the Elements tab. You'll seethat the game field is a <div> with an id of \""game.\"" Expand that div andyou'll see that the game piece is a second, nested <div> with an id of\""dodger.\""Click on the game div and take a look at its CSS in the styles tab. You'll seethat the game field has a height and width of 400px. Now click on the dodger andnote that it has a height of 20px and a width of 40px. Finally, take a look atthe inline style on the dodger <div>: the bottom and left propertiesdefine the dodger's starting position relative to its parent element, the gamefield. In other words, the lower left corner of the game field correspondstoleft and bottom positions of 0px. The starting values of the dodger'sbottom and left properties are what places it at the bottom center of thegame field when our game launches.Before we can use JavaScript to move the dodger, we first need to grab it andsave a reference to it in a variable. Enter the following in the console:const dodger = document.getElementById(\""dodger\"");Awesome. Now let's change its color:dodger.style.backgroundColor = \""#000000\"";Whoa, where'd it go? Well, we changed the color to #000000, another way ofexpressing \""black.\"" So it just blends in with the background.Let's change it to something more visible.dodger.style.backgroundColor = \""#FF69B4\"";Much better!Accessing the style property of the dodger element allows us to changethings like the backgroundColor, height, width, etc. We can also use it tochange an element's position on the page.Let's start by moving the element up:dodger.style.bottom = \""100px\"";Note: Even though we're talking about numeric coordinates, note that weneed to move the dodger by assigning a new string value.We can verify our dodger's current position by simply typing dodger.style.leftor dodger.style.bottom into the console.Let's return it to where it started by resetting the bottom attribute:dodger.style.bottom = \""0px\"";Now let's visually verify that the dodger's position is determined relative tothe game field by changing its left attribute:dodger.style.left = \""0px\"";You should see the dodger nestled up against the bottom left corner of the gamefield.Demonstrate How to Move an Element in Response to a Browser EventNow that we know how to write the code to move the dodger, let's figure out howto tie that action to an event.Let's say we want the user to be able to move the dodger to the left using theleft arrow key. We learned in an earlier lesson that, when a key is pressed, thekeydown event provides a code to indicate which key it was. So the first thingwe have to do is figure out what code is used to identify the left arrow key. Wecould look it up, but we're programmers — let's explore!So what do we mean when we say that an event provides a code? Any time an eventlistener is in place and the event it's listening for is triggered, a JavaScriptobject containing a bunch of information about the event is automaticallypassed as an argument to the callback function. We can access that object andthe information it contains by defining a parameter for the callback. It lookslike this:document.addEventListener(\""keydown\"", function (event) {  console.log(event);});By defining the event parameter in the parentheses, we've given the body ofthe callback access to that event object, which is what allows us to log it tothe console. Note that, as with any JavaScript parameter (and, in fact, anyJavaScript variable), we can give it any valid JavaScript variable name we like.By convention, and in keeping with programming best practice of using meaningfulvariable names, the name JavaScript programmers use for this parameter isusually either event or e. You will see these in a lot of JavaScript code,and we recommend you use them as well.This pattern, when you first encounter it, is tricky to wrap your head around.Don't worry if it doesn't make total sense yet — it will become clearer asyou continue through the curriculum. You might also want to read the excellentaccepted answer in this Stack Overflow thread.Let's take a look at what that event object looks like. Enter the code aboveinto the console then click in the browser window (where the game field anddodger are rendered). Now, if you press the left arrow key, you should see aKeyboardEvent logged in the console. Expand the event and you'll see itsproperties listed; the one we're interested in is the key property. Trypressing some other keys as well and check out their key properties.Top Tip: You can explore other event types as well: just change the name ofthe event in the code above.Now that we know the code the event uses to identify the left arrow key, we canwrite the JavaScript code to move the dodger left when the key is pressed:document.addEventListener(\""keydown\"", function (event) {  if (event.key === \""ArrowLeft\"") {    const leftNumbers = dodger.style.left.replace(\""px\"", \""\"");    const left = parseInt(leftNumbers, 10);    dodger.style.left = `${left - 1}px`;  }});So what are we doing here? Well, when our event listener detects a keydownevent, we first check to see whether the key property of the event object hasthe value \""ArrowLeft.\"" If it does, we get the current value of the dodger'sstyle.left property and use the String replace() method to stripout the \""px\"", then store the result in leftNumbers. Next, we parseleftNumbers as an integer and store that result in left. Finally, we updatethe dodger's style.left property using string interpolation, injecting thecurrent value minus 1. If the key that's pressed is not the left arrow key, wedo zilch. Try it out in the browser yourself!! (Be sure to refresh the pagefirst.)We do still have a problem, though. Even though we're only going one pixel at atime, eventually our dodger will zoom (well, relatively speaking) right out ofview.How can we prevent this? We need to check where the left edge of the dodger isand only move it if it hasn't yet reached the left edge of the game field.Update an Element's Position on the Page ConditionallyOur callback function is starting to get pretty complex. This is probably a goodtime to break the dodger's movement out into a separate function. We want tomove the dodger left if our if statement returns true, so let's pull out the bodyof that if statement into a function called moveDodgerLeft().Refresh the page so we're starting with a blank slate, then grab the dodger again:const dodger = document.getElementById(\""dodger\"");Now we'll build our moveDodgerLeft() function, adding a check on the currentposition of the dodger:function moveDodgerLeft() {  const leftNumbers = dodger.style.left.replace(\""px\"", \""\"");  const left = parseInt(leftNumbers, 10);  if (left > 0) {    dodger.style.left = `${left - 1}px`;  }}We're doing essentially the same thing, but we first ensure that the dodger'sleft edge has not reached the left edge of its container.Now let's wire this up to our event listener:document.addEventListener(\""keydown\"", function (e) {  if (e.key === \""ArrowLeft\"") {    moveDodgerLeft();  }});Now try moving the dodger past the left edge. No can do!Copy the final code into index.js and run the tests. You should now have thefirst one passing.LabNow it's your turn. With the code implemented from the code-along, think aboutwhat needs to change to make a moveDodgerRight() function. You'll need to addanother condition to your event listener's callback function to callmoveDodgerRight(). Then, inside the function, instead of moving the dodger${left - 1}px, you'll be moving it ${left + 1}px.Note: It may seem logical that you would use the dodger's style.rightproperty to move the dodger right, but that won't work. The reason is thatchanging the style.right property doesn't change the style.left property,which means we'd have conflicting information about where the dodger should beon the screen. JavaScript solves this problem by giving precedence tostyle.left. In other words, once the user presses the left arrow key for thefirst time and the value of style.left is changed, any subsequent changes tostyle.right will be ignored.Finally, implement the code needed to prevent the dodger from escaping off theright-hand side. How can we check whether the right edge of the dodger hasreached the right edge of the game field? (Keep in mind that the dodger is40px wide.)Once you've completed the work to get the tests to pass (and submitted yourwork using CodeGrade), the last step is to \""try out\"" your application. Makesure it works the way you expect in the browser. In professional applications,tests can't cover 100% of the use of the application. It's important torealize that \""passing all the tests\"" is not the same as \""building a workingapplication.\""Be sure to do a human-level manual \""play through\"" with your dodger to make sureyour working code really works!ConclusionEvents and event handling are vital to web programming. JavaScript allows fordynamic page rendering, so users can interact with the contents of the page inreal time. Knowledge of the basic techniques we've learned so far sets you onthe road toward being able to create complex interactions like those in videogames you may have played before!"
37,37,thinkgem/jeesite,https://github.com/thinkgem/jeesite/blob/master/README.md,JavaScript," JeeSite 快速开发平台      关注 JeeSite V4.x / 5.x 请点击: https://gitee.com/thinkgem/jeesite4关注 JeeSite Cloud 微服务 请点击: https://gitee.com/thinkgem/jeesite4-cloud关注 JeeSite Mobile 移动端 请点击: https://gitee.com/thinkgem/jeesite4-uniapp关注 JeeSite PC 客户端程序 请点击: https://gitee.com/thinkgem/jeesite-client关注 JeeSite Vue 前后分离 请点击: https://gitee.com/thinkgem/jeesite-vue平台简介JeeSite是基于多个优秀的开源项目，高度整合封装而成的高效，高性能，强安全性的开源Java EE快速开发平台。JeeSite是您快速完成项目的最佳基础平台解决方案，JeeSite是您想学习Java平台的最佳学习案例，JeeSite还是接私活的最佳助手。JeeSite是在Spring Framework基础上搭建的一个Java基础开发平台，以Spring MVC为模型视图控制器，MyBatis为数据访问层，Apache Shiro为权限授权层，Ehcahe对常用数据进行缓存，Activit为工作流引擎。是JavaEE界的最佳整合。JeeSite主要定位于企业信息化领域，已内置企业信息化系统的基础功能和高效的代码生成工具，包括：系统权限组件、数据权限组件、数据字典组件、核心工具组件、视图操作组件、工作流组件、代码生成等。前端界面风格采用了结构简单、性能优良、页面美观大气的Twitter Bootstrap页面展示框架。采用分层设计、双重验证、提交数据安全编码、密码加密、访问验证、数据权限验证。使用Maven做项目管理，提高项目的易开发性、扩展性。JeeSite目前包括以下四大模块，系统管理（SYS）模块、内容管理（CMS）模块、在线办公（OA）模块、代码生成（GEN）模块。 系统管理模块 ，包括企业组织架构（用户管理、机构管理、区域管理）、菜单管理、角色权限管理、字典管理等功能； 内容管理模块 ，包括内容管理（文章、链接），栏目管理、站点管理、公共留言、文件管理、前端网站展示等功能； 在线办公模块 ，提供简单的请假流程实例；代码生成模块 ，完成重复的工作。JeeSite 提供了常用工具进行封装，包括日志工具、缓存工具、服务器端验证、数据字典、当前组织机构数据（用户、机构、区域）以及其它常用小工具等。另外还提供一个强大的在线 代码生成 工具，此工具提供简单的单表、一对多、树结构功能的生成，如果对外观要求不是很高，生成的功能就可以用了。如果你使用了JeeSite基础框架，就可以很高效的快速开发出，优秀的信息管理系统。内置功能用户管理：用户是系统操作者，该功能主要完成系统用户配置。机构管理：配置系统组织机构（公司、部门、小组），树结构展现，可随意调整上下级。区域管理：系统城市区域模型，如：国家、省市、地市、区县的维护。菜单管理：配置系统菜单，操作权限，按钮权限标识等。角色管理：角色菜单权限分配、设置角色按机构进行数据范围权限划分。字典管理：对系统中经常使用的一些较为固定的数据进行维护，如：是否、男女、类别、级别等。操作日志：系统正常操作日志记录和查询；系统异常信息日志记录和查询。连接池监视：监视当期系统数据库连接池状态，可进行分析SQL找出系统性能瓶颈。工作流引擎：实现业务工单流转、在线流程设计器。为何选择JeeSite使用 Apache License 2.0 协议，源代码完全开源，无商业限制。使用目前主流的Java EE开发框架，简单易学，学习成本低。数据库无限制，目前支持MySql、Oracle，可扩充SQL Server、PostgreSQL、H2等。模块化设计，层次结构清晰。内置一系列企业信息管理的基础功能。操作权限控制精密细致，对所有管理链接都进行权限验证，可控制到按钮。数据权限控制精密细致，对指定数据集权限进行过滤，七种数据权限可供选择。提供在线功能代码生成工具，提高开发效率及质量。提供常用工具类封装，日志、缓存、验证、字典、组织机构等，常用标签（taglib），获取当前组织机构、字典等数据。兼容目前最流行浏览器（IE7+、Chrome、Firefox）IE6也支持，但体验效果差。技术选型1、后端核心框架：Spring Framework 5.3安全框架：Apache Shiro 1.9视图框架：Spring MVC 5.3服务端验证：Hibernate Validator 5.2布局框架：SiteMesh 2.4工作流引擎：Activiti 5.21任务调度：Spring Task 4.1持久层框架：MyBatis 3.2数据库连接池：Alibaba Druid 1.0缓存框架：Ehcache 2.6、Redis日志管理：SLF4J 1.7、Logback工具类：Apache Commons、Jackson、POI 3.92、前端JS框架：jQuery 1.9。CSS框架：Twitter Bootstrap 2.3.1（稳定是后台，UI方面根据需求自己升级改造吧）。客户端验证：JQuery Validation Plugin 1.11。富文本在线编辑：CKEditor在线文件管理：CKFinder动态页签：Jerichotab手机端框架：Jingle数据表格：jqGrid对话框：jQuery jBox下拉选择框：jQuery Select2树结构控件：jQuery zTree日期控件： My97DatePicker4、平台服务器中间件：在Java EE 7规范（Servlet 3.1、JSP 2.1）下开发。数据库支持：目前仅提供MySql和Oracle数据库的支持，但不限于数据库，平台留有其它数据库支持接口，你可以很方便的更改为其它数据库，如：SqlServer 2008、MySql 5.5、H2等开发环境：Java、Eclipse Java EE 4.3、Maven 3.1、Git安全考虑开发语言：系统采用Java 语言开发，具有卓越的通用性、高效性、平台移植性和安全性。分层设计：（数据库层，数据访问层，业务逻辑层，展示层）层次清楚，低耦合，各层必须通过接口才能接入并进行参数校验（如：在展示层不可直接操作数据库），保证数据操作的安全。双重验证：用户表单提交双验证：包括服务器端验证及客户端验证，防止用户通过浏览器恶意修改（如不可写文本域、隐藏变量篡改、上传非法文件等），跳过客户端验证操作数据库。安全编码：用户表单提交所有数据，在服务器端都进行安全编码，防止用户提交非法脚本及SQL注入获取敏感数据等，确保数据安全。密码加密：登录用户密码进行SHA1散列加密，此加密方法是不可逆的。保证密文泄露后的安全问题。强制访问：系统对所有管理端链接都进行用户身份权限验证，防止用户直接填写url进行访问。快速体验具备运行环境：JDK1.8、Maven3.0+、MySql5+或Oracle10g+、Tomcat8.5。修改src\\main\\resources\\jeesite.properties文件中的数据库设置参数。根据修改参数创建对应MySql或Oracle数据库用户和参数。运行bin\\init-db.bat脚本，即可导入表结构及演示数据(linux操作系统：在控制台中切换至项目根目录，运行命令：mvn antrun:run -Pinit-db)运行bin\\package.bat进行打包系统，完成后会在target目录生成jeesite.war文件将jeesite.war文件，拷贝到您的Tomcat8 webapps目录下进行部署，启动Tomcat8。启动Tomcat后浏览器访问系统，最高管理员账号，用户名：thinkgem 密码：admin常见问题用一段时间提示内存溢出，请修改JVM参数：-Xmx512m -XX:MaxPermSize=256m有时出现文字乱码：修改Tomcat的server.xml文件的Connector项，增加URIEncoding=\""UTF-8\""为什么新建菜单后看不到新建的菜单？因为授权问题，菜单管理只允许最高管理员账号管理（最高管理员默认账号：thinkgem 密码：admin）。更多文档https://gitee.com/thinkgem/jeesite/tree/master/doc如何交流、反馈、参与贡献？QQ 群号： 127515876、209330483、223507718、709534275、730390092、183903863(外包)GitHub：https://github.com/thinkgem/jeesite开源中国：https://gitee.com/thinkgem/jeesite官方网址：http://jeesite.com  论坛：http://www.jeesite.net支持JeeSite发展：（加我好友）支付宝：thinkgem@163.com   微信：thinkgem一个人的个人能力再强，也无法战胜一个团队，希望兄弟姐妹的支持，能够贡献出自己的部分代码，参与进来共同完善它(^_^)。怎么共享我的代码：手把手教你如何加入到github的开源世界！版权声明本软件使用 Apache License 2.0 协议，请严格遵照协议内容：需要给代码的用户一份Apache Licence。如果你修改了代码，需要在被修改的文件中说明。在延伸的代码中（修改和有源代码衍生的代码中）需要带有原来代码中的协议，商标，专利声明和其他原来作者规定需要包含的说明。如果再发布的产品中包含一个Notice文件，则在Notice文件中需要带有Apache Licence。你可以在Notice中增加自己的许可，但不可以表现为对Apache Licence构成更改。Apache Licence也是对商业应用友好的许可。使用者也可以在需要的时候修改代码来满足需要并作为开源或商业产品发布/销售你可以二次包装出售，但还请保留文件中的版权和作者信息，并在你的产品说明中注明JeeSite。你可以以任何方式获得，你可以修改包名或类名，但还请保留文件中的版权和作者信息。为何使用MyBatis学习成本：Hibernate的真正掌握要比Mybatis来得难不少。Mybatis框架相对简单很容易上手，也更加灵活。对于学习过Hibernate的用户，学习起MyBatis也更容易上手。开发成本：大家都说Hibernate开发效率高，个人认为MyBatis的开发效率并不比Hibernate低，通过代码生成器和封装开发效率不是问题，并且MyBatis可控性比较高，并更易于维护。性能方面：由于Hibernate比较难以掌握，性能方面也成为了Hibernate的问题瓶颈，当然如果你对Hibernate非常熟，Hibernate性能上定不是问题。但对于大多数情况下，真正掌握Hibernate的人少之又少，然而的也就造就了项目风险加大。多数据库支持：有些人说MyBatis对多数据库支持困难，我认为这个不是问题，虽说目前JeeSite仅提供对MySql或Oracle数据库的支持，但对于支持其它数据库的改动也不是很麻烦，SQL是被专门写在XML中，对于大多数SQL来说都是通用的，对于不同的数据库可通过dbName区分和修改各别的SQL片段即可。上述纯属个人观点，欢迎指正（thinkgem@163.com）。如果你仍然喜欢Hibernate，请点击下载JeeSite Hibernate版本。"
38,38,learn-co-curriculum/phase-1-javascript-functions-continued,https://github.com/learn-co-curriculum/phase-1-javascript-functions-continued/blob/master/README.md,JavaScript,"Functions: ContinuedLearning GoalsDefine a function using a function declarationDefine hoistingDefine function expressionDefine anonymous functionDefine a function using a function expressionDefine an IIFE: Immediately-Invoked Function ExpressionDefine function-level scopeDefine scope chainDefine closureIntroductionThis lab describes some more advanced concepts related to JavaScript functions.Be sure to take time to experiment or read up on a concept if you're notcomfortable with the idea before moving on. If you're struggling here, theremainder of this module will be challenging. Fix any gaps now before moving on.We also recommend that you complete the lab as you read through the sections.Reinforcing what you read by physically typing in the code will help make surethe concepts are locked in. We'll prompt you when it's a good time to shiftmodes from \""reading along\"" to coding.Getting StartedIf you haven't already, fork and clone this lab into your local environment.Remember to fork a copy into your GitHub account first, then clone fromthat copy. Navigate into its directory in the terminal, then run code . toopen the files in Visual Studio Code.Define a Function Using Function DeclarationIn JavaScript, the most common way to define functions is with a functiondeclaration:function razzle() {  console.log(\""You've been razzled!\"");}The word razzle becomes a pointer to some stored, potential,not-yet-actually-run bit of work (the function). We use the pointer to callor invoke the function. We call the function by adding () after thepointer.function razzle() {  console.log(\""You've been razzled!\"");}razzle();//=> \""You've been razzled!\""Interestingly, you can write function declarations after you call them:razzle(); //=> \""You've been razzled!\""function razzle() {  console.log(\""You've been razzled!\"");}Functions can be passed arguments, given default arguments, etc. Here's abrief code synopsis:function razzle(lawyer = \""Billy\"", target = \""'em\"") {  console.log(`${lawyer} razzle-dazzles ${target}!`);}razzle(); //=> Billy razzle-dazzles 'em!razzle(\""Methuselah\"", \""T'challah\""); //=> Methuselah razzle-dazzles T'challah!LAB: Implement a function called saturdayFun. It should return a Stringlike \""This Saturday, I want to ....!\"" Fill in the ... with the activitythat's passed in as the first parameter. If nothing is passed in, default to\""roller-skate\"". Run npm test to verify you've gotten the first set oftests passing before continuing with the lesson.Define HoistingJavaScript's ability to call functions before they appear in the code iscalled hoisting. For hoisting to work, the function must be defined using afunction declaration.Define Function ExpressionWe've learned that programming languages feature expressions: arrangements ofconstants, variables, and symbols that, when interpreted by the language,produce a value. To review, open up your browser console and type in theseexamples:1 + 1; //=> 2\""Razzle \"" + \""dazzle!\""; //=> \""Razzle dazzle!\""The examples above are expressions that return primitive values, butJavaScript also has function expressions that look like this:function() {  console.log(\""Yet more razzling\"");}The value returned by this expression is the function itself. Go ahead andenter the above into the browser console; you should see the following:Uncaught SyntaxError: Function statements require a function nameThe problem is that, when the function expression appears by itself as shownabove, JavaScript does not recognize it as a function expression; it insteadinterprets it as a function declaration that's missing its name. One way to tellthe JavaScript engine that it's a function expression is to use thegrouping operator () to wrap the entire thing:(function () {  console.log(\""Yet more razzling\"");});Recall that the grouping operator is usually used in arithmetic operations totell the JavaScript engine to evaluate the value that's inside it first. It'sserving a similar purpose in this case: it's telling JavaScript to interpretwhat's inside the parentheses as a value. With the grouping operator in place,the JavaScript engine recognizes our function as a function expression. Enterthe function into your console again, this time using the grouping operator. Youshould see the following:ƒ () {  console.log(\""Yet more razzling\"");}JavaScript now correctly shows us the return value of our function expression: afunction (indicated by the ƒ ()) storing the work of logging our message.Define Anonymous FunctionAn anonymous function is, quite simply, a function that doesn't have a name:function() {  console.log(\""Yet more razzling\"");}Unlike a function declaration, there's no function name in front of the ().Note, however, that if we don't assign a name to the function, we have no way tocall it. We lose access to our function immediately after it's created. So howcan we invoke an anonymous function? We've seen one way before: we can use it asa callback function. For example, you'll often see anonymous functions passed asan argument to an event listener:const button = document.getElementById(\""button\"");button.addEventListener(\""click\"", function () {  console.log(\""Yet more razzling\"");});Our anonymous function is being passed as an argument to addEventListener. TheJavaScript engine \""stores it away\"" as work to be executed later, when the buttonis clicked.Define a Function Using a Function ExpressionAnother way we can solve the problem of accessing an anonymous function is bydeclaring a variable and assigning the function as its value. Recall that anyexpression can be assigned to a variable; this includes function expressions:const fn = function () {  console.log(\""Yet more razzling\"");};The code above defines our function using a function expression. If we askJavaScript what's in fn, it tells us:fn; //=> ƒ () { console.log(\""Yet more razzling\"") }Here, fn is a pointer to the stored block of work that hasn't yet beeninvoked. Just as with function declaration, to actually do the work, we needto invoke or call the function. We do this by adding () to the end of our\""pointer\"", the variable name:const fn = function () {  console.log(\""Yet more razzling\"");}; //=> undefinedfn; //=> ƒ () { console.log(\""Yet more razzling\"") }fn(); // \""Yet more razzling\""Also as with a function declaration, if we need to pass arguments to thefunction, we would include those in the parentheses when we call the function.We now know how to define a function as a function expression. Very importantly,function expressions are not hoisted. The same is true for any variableassignment: if we assign a String or the result of an arithmetic expression toa variable, those assignments are not hoisted either.LAB: Implement a function expression called mondayWork. The functionshould return a String like \""This Monday, I will ... .\"" Fill in the ...with the activity that's passed in as the first parameter. If nothing is passedin, default to \""go to the office\"". Run npm test to verify you've gottenthis set of tests passing before continuing with the lesson.Define an IIFE: Immediately-Invoked Function ExpressionAnother way to invoke an anonymous function is by creating what's known as animmediately-invoked function expression (IIFE).As a thought experiment, consider what happens here:(function (baseNumber) {  return baseNumber + 3;})(2); //=> ???We recognize the first () as the grouping operator that tells the JavaScriptengine to interpret the contents as a value — in this case, a functionexpression. What this means is that, in the IIFE statement, the value returnedby the first set of parentheses is an anonymous function, which can be invoked(immediately).The second () are the () of function invocation. When we put themimmediately after the first set of parentheses, we're invoking the function thatthose parentheses return immediately after defining it. Try it out in thebrowser console:(function (baseNumber) {  return baseNumber + 3;})(2); //=> 5Interestingly, any variables, functions, Arrays, etc. that are definedinside of the function expression's body can't be seen outside of theIIFE. To see this, check the value of baseNumber in the console. It's likeopening up a micro-dimension, a bubble-universe, doing all the work you couldever want to do there, and then closing the space-time rift. We'll see some ofthe practical power of \""hiding things\"" in IIFEs a little later in this lesson.Define Function-Level ScopeJavaScript exhibits \""function-level\"" scope. This means that if a function isdefined inside another function, the inner function has access to all theparameters of, as well as any variables defined in, the outer function. Thisworks recursively: if we nest a third function inside the inner function, itwill have access to all the variables of both the inner and outer enclosingfunctions. Each of the enclosing parents' scopes are made available via thescope chain. We will define the scope chain a bit later in this lesson. Let'sstart by seeing it in action.ASIDE: This is where people really start to get awed by JavaScript.Consider this code:function outer(greeting, msg = \""It's a fine day to learn\"") {  // 2  const innerFunction = function (name, lang = \""Python\"") {    // 3    return `${greeting}, ${name}! ${msg} ${lang}`; // 4  };  return innerFunction(\""student\"", \""JavaScript\""); // 5}outer(\""Hello\""); // 1//=> \""Hello, student! It's a fine day to learn JavaScript\""Let's break this down:We call outer, passing \""Hello\"" as an argument.The argument (\""Hello\"") is saved in outer's greeting parameter. Theother parameter, msg, is set to a default value.Here's our old friend the function expression. It expects two arguments, tobe stored in the parameters name and lang, and lang is assigned thedefault value of \""Python\"". The function expression itself is saved in thelocal variable innerFunction.Inside innerFunction we make use of its parameters, name and lang,as well as the greeting and msg parameters defined ininnerFunction's containing (parent) function, outer. innerFunction hasaccess to those variables via the scope chain.Finally, inside outer, we invoke innerFunction, passing arguments thatget stored in innerFunction's name and lang parameters.This might look a little bit weird, but it generally makes sense to ourintuition about scopes: inner things can see their parent outer things.Note that currently, the values of the arguments being passed to innerFunctionare part of the definition of outer. In order to change those values wehave to modify the outer function. This is not ideal.With a simple change, something miraculous can happen. Rather than having outerreturn the result of calling innerFunction, let's have it return the functionitself:function outer(greeting, msg = \""It's a fine day to learn\"") {  const innerFunction = function (name, lang = \""Python\"") {    return `${greeting}, ${name}! ${msg} ${lang}`;  };  return innerFunction;}The return value of outer is now an anonymous function. To invoke it, weupdate the function call as follows:outer(\""Hello\"")(\""student\"", \""JavaScript\"");//=> \""Hello, student! It's a fine day to learn JavaScript\""The function call is processed by the JavaScript engine from left to right.First, outer is called with the argument \""Hello.\"" The return value of callingouter(\""Hello\"") is itself a function and, therefore, can itself be called. Wedo this by chaining on the second set of parentheses. This is basically the sameconcept as assigning a function expression to a variable and using the variablename followed by () to invoke the function. You can almost think ofouter(\""Hello\"") as the \""name\"" of the function that's returned by outer. It'sthe same as if we did this:const storedFunction = outer(\""Hello\"");storedFunction(\""student\"", \""JavaScript\"");//=> \""Hello, student! It's a fine day to learn JavaScript\""Note that we are no longer calling innerFunction from inside outer.Amazingly, the code works exactly the same: it still has access tothose parent function's variables. It's like a little wormhole in space-time tothe outer's scope!We can tighten this code up a bit more: instead of assigning the functionexpression to innerFunction and returning that, let's just return the functionexpression.function outer(greeting, msg = \""It's a fine day to learn\"") {  return function (name, lang = \""Python\"") {    return `${greeting}, ${name}! ${msg} ${lang}`;  };}outer(\""Hello\"")(\""student\"", \""JavaScript\"");//=> \""Hello, student! It's a fine day to learn JavaScript\""To review: we first called outer, passing in the argument \""Hello\"". outerreturned an anonymous function inside which the default value of msg andthe passed-in value of greeting have now been set. It's almost as if outerreturned:function(name, lang=\""Python\"") { // The \""inner\"" function  return `Hello, ${name}! It's a fine day to learn ${lang}`}We invoked this returned \""inner\"" function\"" by adding the second set ofparentheses and passing the arguments \""student\"" and \""JavaScript\"", which werestored in name and lang. This filled in the final two values inside of thetemplate string and returned:\""Hello, student! It's a fine day to learn JavaScript\"";Define ClosureIn the previous example, we could call the \""inner\"" function, the anonymousfunction, a \""closure.\"" It \""encloses\"" the function-level scope of its parent.And, like a backpack, it can carry out the knowledge that it saw — even whenyou're out of the parent's scope.Recall the IIFE discussion. Since what's inside an IIFE can't be seen, if wewanted to let just tiny bits of information leak back out, we might want topass that information back out, through a closure.const array = (function (thingToAdd) {  const base = 3;  return [    function () {      return base + thingToAdd;    },    function () {      return base;    },  ];})(2);Note that the value on the right of the = in the first line is a functionexpression. That function takes a single argument and returns an array thatcontains two functions. The (2) after the function expression executes thatfunction (immediately), and the two inner functions are stored in the arrayvariable.Go ahead and copy the code above into your browser console and take a look at thevalues of the two elements of array. You should see the following:array[0]; //=> ƒ () { return base + thingToAdd; }array[1]; //=> ƒ () { return base; }However, if you try looking at the value of base in the console you'll get areference error: the value of base is not accessible outside the function it'sdefined in. Now go ahead and call the two returned functions; you should seethe following:array[0](); //=> 5array[1](); //=> 3The two functions being returned in array are closures; they have accessto the base variable because it's defined in their parent function. Whenthey're executed, they \""let out\"" the values of the sum and the original basenumber, allowing us to see them.Define Scope ChainThe mechanism behind all the cool stuff we just saw is the scope chain whichallows functions defined inside functions (inside functions) to access all theirparent (and grandparent) scopes' variables. Here's a simple example:function demoChain(name) {  const part1 = \""hi\"";  return function () {    const part2 = \""there\"";    return function () {      console.log(`${part1.toUpperCase()} ${part2} ${name}`);    };  };}demoChain(\""Dr. Stephen Strange\"")()(); //=> HI there Dr. Stephen StrangeWhen it is called, the innermost function has access to name, part1, andpart2 through the scope chain. As a result, when the console.log()statement is run, the string includes all three values. That's awesome wormhole,space-time magic!LAB:Implement a function called saturdayFun:It should define a function.It uses a default argument, 'roller-skate' when no arguments are passed.It allows the default argument to be overridden.Implement a function called mondayWork:It should define a function.It uses a default argument, 'go to the office' when no arguments are passed.It allows the default argument to be overridden.Implement a function called wrapAdjective:It should return a function. This \""inner\"" function should:take a single parameter that should default to \""special\"". Name ithowever you wish.return a String of the form \""You are ...!\"" where ... should be theadjective this function received wrapped in visual flair.It should take as parameter a String that will be used to create visual flair.You may call the parameter whatever you like, but its default value shouldbe \""*\"".Call example: const encouragingPromptFunction = wrapAdjective(\""!!!\"")Thus a total call should be:wrapAdjective(\""%\"")(\""a dedicated programmer\""); //=> \""You are %a dedicated programmer%!\""Run npm test to verify you've gotten this set of tests passing. Once you'redone, commit and push your changes up to GitHub, then submit your work to Canvasusing CodeGrade.ConclusionIn this lesson, we've covered the basics of function declaration, invocation,and function scope. As a refresher on your skills, we've provided a simple labto make sure that you're set for the new information coming up in the rest ofthis module.ResourcesWikipedia — First-class functionStackOverflow — What is meant by 'first class object'?Helephant — Functions are first class objects in javascript (Wayback Machine)2ality — Expressions versus statements in JavaScriptMDN — FunctionsMDN — Statements and declarations"
39,39,aws-samples/aws-elastic-beanstalk-express-js-sample,https://github.com/aws-samples/aws-elastic-beanstalk-express-js-sample/blob/main/README.md,JavaScript,"AWS Elastic Beanstalk Node.js Sample AppThis repository contains a sample Node.js web application built using Express, meant to be used as part of the AWS DevOps Learning Path.SecuritySee CONTRIBUTING for more information.LicenseThis library is licensed under the MIT-0 License. See the LICENSE file."
40,40,learn-co-curriculum/phase-0-pac-3-intro-to-functions-lab,https://github.com/learn-co-curriculum/phase-0-pac-3-intro-to-functions-lab/blob/master/README.md,JavaScript,"Introduction to Functions LabLearning GoalsPractice reading tests and test errorsPractice writing functionsLearn how to use JavaScript's toUpperCase() and toLowerCase() methodsPractice using return and console.log()Practice creating conditional statementsIntroductionWelcome to the JavaScript functions lab! You'll notice a few new things in thislesson that we haven't encountered before. Don't worry, we'll walk you throughthem.If you haven't already, fork and clone this lab into your local environment.Remember to fork a copy into your GitHub account first, then clone fromthat copy. Navigate into its directory in the terminal, then run code . toopen the files in Visual Studio Code. (If you are using a different code editor,the command will be different.)Code-AlongTo start, open up index.js in your text editor. You should see, well, nothing.We'll fix that soon.Now open up test/root.js. Hey, there's something! What's all of this stuffdoing?At the very top of the file, you'll seeglobal.expect = require(\""expect\"");const babel = require(\""babel-core\"");const jsdom = require(\""jsdom\"");const path = require(\""path\"");This might be a bit bewildering, but all we're doing is referencing differentlibraries that help us run the tests. You may recall that we talked aboutpackages in an earlier lesson. A library is similar: it's code that someoneelse (usually multiple someones) wrote for our use. The code above makes thelibraries available inside our test environment, which enables us to run thetests.If you go to test/indexTest.js, you'll seedescribe(\""shout(string)\"", function () {  // there's stuff in here, too});describe is a function provided by our test runner (in this case, we're usingMocha) — it's basically a container for our tests.Let's take a closer look at that describe():describe(\""shout(string)\"", function () {  it(\""receives one argument and returns it in all caps\"", function () {    // we'll get to this in a sec  });});These internal describe() calls are used for describing the functions thatyou're going to write. In this case, the test is saying, \""Okay, I think there'sgoing to be a function called shout, and it should take one argument (itdoesn't actually matter what the argument is called, but string, is nice andspecific, don't you think?). It should return that argument in all caps.Finally, we haveexpect(shout(\""hello\"")).toEqual(\""HELLO\"");which says that it expects a call to shout() with the string 'hello' willequal the string 'HELLO'. This is the actual test — otherwise called a spec,expectation, or assertion — for this function. We can have more than one testper function, but let's start with this one.Running the TestsTo run the tests, first run npm install in the terminal to install thedependencies, then run npm test. The first output you'll see will looksomething like this:$ npm test> java-script-intro-to-functions-lab@0.1.0 test> mocha --timeout 5000 -R mocha-multi --reporter-options spec=-,json=.results.json  shout(string)    1) receives one argument and returns it in all caps  whisper(string)    2) receives one argument and returns it in all lowercase  logShout(string)    3) takes a string argument and logs it in all caps using console.log()  logWhisper(string)    4) takes a string argument and logs it in all lowercase using console.log()  sayHiToHeadphonedRoommate(string)    5) returns \""I can't hear you!\"" if `string` is lowercase    6) returns \""YES INDEED!\"" if `string` is uppercase    7) returns \""I would love to!\"" if `string` is \""Let's have dinner together!\""`  0 passing (120ms)  7 failing  1) shout(string)       receives one argument and returns it in all caps:     ReferenceError: shout is not defined      at Context.<anonymous> (test/indexTest.js:4:5)      at processImmediate (internal/timers.js:461:21)  2) whisper(string)       receives one argument and returns it in all lowercase:     ReferenceError: whisper is not defined      at Context.<anonymous> (test/indexTest.js:10:5)      at processImmediate (internal/timers.js:461:21)  3) logShout(string)       takes a string argument and logs it in all caps using console.log():     ReferenceError: logShout is not defined      at Context.<anonymous> (test/indexTest.js:18:5)      at processImmediate (internal/timers.js:461:21)  4) logWhisper(string)       takes a string argument and logs it in all lowercase using console.log():     ReferenceError: logWhisper is not defined      at Context.<anonymous> (test/indexTest.js:30:5)      at processImmediate (internal/timers.js:461:21)  5) sayHiToHeadphonedRoommate(string)       returns \""I can't hear you!\"" if `string` is lowercase:     ReferenceError: sayHiToHeadphonedRoommate is not defined      at Context.<anonymous> (test/indexTest.js:40:5)      at processImmediate (internal/timers.js:461:21)  6) sayHiToHeadphonedRoommate(string)       returns \""YES INDEED!\"" if `string` is uppercase:     ReferenceError: sayHiToHeadphonedRoommate is not defined      at Context.<anonymous> (test/indexTest.js:44:5)      at processImmediate (internal/timers.js:461:21)  7) sayHiToHeadphonedRoommate(string)       returns \""I would love to!\"" if `string` is \""Let's have dinner together!\""`:     ReferenceError: sayHiToHeadphonedRoommate is not defined      at Context.<anonymous> (test/indexTest.js:48:5)      at processImmediate (internal/timers.jHm, seven failed tests - that seems like a lot to navigate. Let's go ahead andget Mocha set up to only show the first failing test. Find the test script inthe package.json file and add the --bail tag to the end:\""test\"": \""mocha --timeout 5000 -R mocha-multi --reporter-options spec=-,json=.results.json --bail\""Save the file and run the tests. You should now see something like this:$ npm test> java-script-intro-to-functions-lab@0.1.0 test> mocha --timeout 5000 -R mocha-multi --reporter-options spec=-,json=.results.json --bail  shout(string)    1) receives one argument and returns it in all caps  0 passing (159ms)  1 failing  1) shout(string)       receives one argument and returns it in all caps:     ReferenceError: shout is not defined      at Context.<anonymous> (test/indexTest.js:4:5)      at processImmediate (internal/timers.js:461:21)Much better! Now let's see if we can get that first test to pass. Open upindex.js.When we write our code, we follow the guidance of the tests. Let's take a lookat that first error:  1) shout(string)       receives one argument and returns it in all caps:     ReferenceError: shout is not defined      at Context.<anonymous> (test/indexTest.js:4:5)      at processImmediate (internal/timers.js:461:21)The output above comes from this test in indexTest.js:describe(\""shout(string)\"", function () {  it(\""receives one argument and returns it in all caps\"", function () {    expect(shout(\""hello\"")).toEqual(\""HELLO\"");  });});We know that the test is expecting a function called shout that accepts anargument. The error tells us that shout isn't defined. So let's start bydeclaring our function in index.js:function shout(string) {  // todo}We know we won't pass the test yet because our function doesn't do anything yet.However, if we rerun the test, it should now give us more information about whatwe need to do:  1) shout(string)       receives one argument and returns it in all caps:     Error: Expected undefined to equal 'HELLO'      at assert (node_modules/expect/lib/assert.js:29:9)      at Expectation.toEqual (node_modules/expect/lib/Expectation.js:81:30)      at Context.<anonymous> (test/indexTest.js:4:28)      at processImmediate (internal/timers.js:461:21)Anytime you see Error: Expected undefined to equal [something], that meansthat the test is looking for a return value. We can also see the descriptionof what the function should do: it receives one argument and returns it in all caps.Okay, so with that information, we know that our function should return whateverstring is passed in as an argument:function shout(string) {  return string;}But we're still missing one piece: how do we make string all caps? JavaScripthas a built-in method for that! It's called toUpperCase(). We can call it onany string:\""Hello!\"".toUpperCase(); // 'HELLO!'Above, we've called it directly on a literal string but, of course, we can alsocall it on a variable. So let's try it with our shout() function:function shout(string) {  return string.toUpperCase();}and run our tests again. We get:  shout(string)    ✓ receives one argument and returns it in all caps  whisper(string)    1) receives one argument and returns it in all lowercase  1 passing (147ms)  1 failing  1) whisper(string)       receives one argument and returns it in all lowercase:     ReferenceError: whisper is not defined      at Context.<anonymous> (test/indexTest.js:10:5)      at processImmediate (internal/timers.js:461:21)Hey! We got one to pass! Time to tackle the next error!Your TurnNow it's your turn to get the rest of the tests to pass. Note that some of themrequire you to use console.log() instead of return — follow the guidance ofthe tests!InstructionsIn this lab, we're writing functions that \""speak\"" at different volumes — theywhisper or they shout. The next test is similar to the first:1) whisper(string)       receives one argument and returns it in all lowercase:     ReferenceError: whisper is not defined      at Context.<anonymous> (test/indexTest.js:10:5)      at processImmediate (internal/timers.js:456:21)This test is telling us that whisper(string) receives one argument and returnsit in all lowercase. At the moment, the test is failing because whisper is notdefined.Note: Just like .toUpperCase() changes any string to all uppercase inJavaScript, .toLowerCase() (e.g., 'HELLO'.toLowerCase()) changes anystring to all lowercase.After you get whisper(string) passing, the next two tests will be checking tosee if a specific string is logged when a function is called. You will stillneed to use the .toUpperCase() and .toLowerCase() methods forlogShout(string) and logWhisper(string). Keep in mind, though, that thesetests are not looking for return values, only logs.The final function you need to create is sayHiToHeadphonedRoommate(). Yourroommate is very into their music, so whispering can be a bit difficult, butthey'll always hear you if you say, \""Let's have dinner together!\"" This time,you will need to return different strings depending on the string passed intothe function.Note: Although there are 3 tests for sayHiToHeadphonedRoommate(), you onlyneed to write one function. This function should be able to handle all threetest conditions:If the string that is passed into the function is all lowercase, the functionshould return \""I can't hear you!\""If the string that is passed into the function is all uppercase, the functionshould return \""YES INDEED!\""If the string that is passed into the function is equal to \""Let's have dinnertogether!\"", the function should return \""I would love to!\""How do we check if a string is all lowercase or all uppercase? Let's take a lookusing a REPL. Click on \""Show files\"" and then the \""index.js\"" file to see the code:<iframe height=\""400px\"" width=\""100%\"" src=\""https://replit.com/@lizbur10/InsubstantialTanInternet?lite=true\"" scrolling=\""no\"" frameborder=\""no\"" allowtransparency=\""true\"" allowfullscreen=\""true\"" sandbox=\""allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals\""></iframe>In the first line we're defining a string variable. In the next two lines we logthe original variable, then the variable after calling toUpperCase() on it.Finally, we're checking to see whether those two values are equal. If you clickthe Run button, you'll see that the original string is mixed case and the uppercased version of it is (not surprisingly) uppercase. It should not come as asurprise, therefore, that comparing them with the equality operator (===)returns false. What do you think will happen if we initialize string to\""HELLO!\"" instead? Play around with different values for string in replitand see what happens. Also try doing the same thing with toLowerCase() andmake sure you understand what's happening.Basically, if we compare a string to its uppercased (or lowercased) version andthe two values are equal, then we know that the original string is uppercase (orlowercase). So now that we know how to make these comparisons, how can we usethem to conditionally return different strings? If you need a refresher, go backand review the lesson on Selection with Conditionals.Remember that punctuation is important! Humans might be able to understand that\""Lets have dinner together\"" is close enough to \""Let's have dinner together!\"" andmeans the same thing, but JavaScript will not consider these equal!Reminder: As you're working through the tests, you can run your code byrunning node index.js in the terminal. If you want to do this, remember thatyou'll need to call the function inside index.js. If you are just runningtests, however, you don't need to include a function call — the tests willhandle that for you.After you have all the tests passing, remember to commit and push your changesup to GitHub, then submit your work to Canvas using CodeGrade. If you need areminder, go back to the Complete Your First Software EngineeringAssignment lesson to review the process.Good luck!"
41,41,learn-co-curriculum/phase-0-pac-3-function-parameters-lab,https://github.com/learn-co-curriculum/phase-0-pac-3-function-parameters-lab/blob/master/README.md,JavaScript,"JavaScript Function Parameters LabLearning GoalsDefine a function that uses a parameterDefine a function that uses two parametersDefine a function with a parameter that has a default valueIntroductionIn this lab, we'll practice using parameters in our functions. We'll also learnhow to create a default value for a parameter.If you haven't already, fork and clone this lab into your local environment.Remember to fork a copy into your GitHub account first, then clone from thatcopy. Once you've cloned it down, navigate into its directory in the terminal,then run code . to open the files in Visual Studio Code. (If you are using adifferent text editor, the command will be different.)You will be writing your code in the index.js file and running the tests byrunning npm test in the terminal. Remember to run npm install first toinstall the lab's dependencies.Define a Function That Uses a ParameterInstructions: Define a function called introduction that defines aparameter, name, and returns the phrase: \""Hi, my name is ${name}.\""Define a Function That Uses Two ParametersSetting up your function to use two parameters is straightforward: simplyinclude both parameters in the parentheses in the function declaration line,separated by a comma:function logTwoValues(value1, value2) {  console.log(`The two values are ${value1} and ${value2}.`);}As you might expect, if we instead wanted to log three values — or tenvalues — we can just continue listing the parameters in the parentheses,with commas between each.Instructions: To pass the second test, you'll need to define a functioncalled introductionWithLanguage that defines two parameters, name andlanguage, and returns the phrase: \""Hi, my name is [name] and I am learning toprogram in [language].\""Define a Function That Uses an Optional ParameterIn a previous lesson, we created a function that logs a personalized greeting:function sayHelloTo(firstName) {  console.log(`Hello, ${firstName}!`);}What if we wanted to make this function work whether or not a first name ispassed in as an argument? We can do this by setting a default value for thefirstName parameter:function sayHelloTo(firstName = \""User\"") {  console.log(`Hello, ${firstName}!`);}Note that we have used the assignment operator (=) here to assign a defaultvalue. The way this works is, if the function is called with an argument, theargument's value will supersede the default value. If it's called without anargument, the function will use the default value, logging \""Hello, User!\""Instructions: Copy the function you created for the second test and name itintroductionWithLanguageOptional. It should have two parameters, name andlanguage, and the second parameter should have a default value of\""JavaScript\"".After you have all the tests passing, remember to commit and push your changesup to GitHub, then submit your work to Canvas using CodeGrade. If you need areminder, go back to the Complete Your First Software EngineeringAssignment lesson to review the process."
42,42,ironhack-labs/lab-javascript-functions-and-arrays,https://github.com/ironhack-labs/lab-javascript-functions-and-arrays/blob/master/README.md,JavaScript,"LAB | JS Functions & Arrays     Learning Goals  This exercise allows you to practice and apply the concepts and techniques taught in class.Upon completion of this exercise, you will be able to:Run predefined tests in Jasmine to verify that the program meets the technical requirements.Identify expected code behavior by reading and understanding test results and errors.Declare and invoke functions using function declaration, function expression, and arrow function syntax.Use the return  keyword to return a value from a function.Pass primitive values as arguments to functions.Pass arrays to functions as arguments.Access items stored in arrays using the indexes,Add, remove and check for items in an array using the index and array methods (unshift, push, splice, shift, pop, indexOf, and includes).Iterate over arrays using the for  and forEach loops.     IntroductionArray manipulation is a common task in programming. Whether you are calculating a total for a shopping cart, grabbing only the first names from a list of people, or moving a piece on a chessboard, you are probably modifying or manipulating an array somewhere in the code.RequirementsFork this repoClone it to your machineSubmissionUpon completion, run the following commands:git add .git commit -m \""Solved lab\""git push origin masterCreate a Pull Request so that your TAs can check your work.Automated Testing IntroductionWhat is automated testing?Automated software testing is the process of programmatically executing an application to validate and verify that it meets the business needs, as well as the technical requirements, and that it behaves as expected.Testing should be viewed as a continuous process, not a discrete operation or single activity in the development lifecycle. Designing tests at the beginning of the product lifecycle can mitigate common issues that arise when developing complex code bases.Having a strong test suite can provide you the ease of mind since you will be able to confidently improve upon your work while knowing that your not breaking a previously developed feature.Testing labsThis LAB and some labs you will work on during the bootcamp are equipped with unit tests to provide automated feedback on your lab progress.Testing with JasmineJasmine is an automated testing framework for JavaScript. It is designed to be used in Behavior-driven Development (BDD) programming, focusing more on the business value than the technical details.We have already included Jasmine in the project you just forked, so let's see how to use it to implement our code.UsageBefore starting coding, we will explain the project structure we have provided you:lab-js-functions-and-arrays  ├── README.md  ├── SpecRunner.html  ├── jasmine  │   └── ...  ├── src  │   └── functions-and-arrays.js  └── tests      └── functions-and-arrays.spec.jsWe will be working with the src/functions-and-arrays.js. You can find all the files in the jasmine folder needed to use Jasmine. All these files are already linked with the SpecRunner.html file.If you want to check the tests, they are in the tests/functions-and-arrays.spec.js file.Run testsRunning automated tests with Jasmine is super easy. All you need to do is open the SpecRunner.html file in your browser. You will find something similar to this:Pass the testsYou should write your code on the src/functions-and-arrays.js file. While following the instructions for each iteration, you should check every test and ensure it's passing, before moving on.Do not rush. You should take your time to read every iteration carefully and address the breaking tests as you progress through the exercise.When coding with tests, it is super important that you carefully read and understand the errors you are getting. This way, you will know what's expected from your code.To see the output of your JavaScript code, open the Console in the Developer Tools.Important: Note that you don't need to execute the functions yourself; the tests will automatically load and execute the functions on each test run. All you need to do is declare the functions, ensure they handle the parameters passed and return what is indicated in the iteration instructions and the test description. We provide you with a sample array for some iterations, so you can do some manual testing if you wish.InstructionsWhile following the instructions for each iteration, carefully read the instructions and test descriptions to understand the task requirements fully. Do not rush. It would be best if you took your time to read every iteration carefully.Iteration #1: Find the maximumImplement the function maxOfTwoNumbers that takes two numbers as arguments and returns the bigger number.Iteration #2: Find the longest wordImplement the function findLongestWord that takes as an argument an array of words and returns the longest one. If there are 2 with the same length, it should return the first occurrence.You can use the following array to test your solution:const words = ['mystery', 'brother', 'aviator', 'crocodile', 'pearl', 'orchard', 'crackpot'];Iteration #3: Calculate the sumIteration #3.1: Sum numbersCalculating a sum can be as simple as iterating over an array and adding each of the elements together.Implement the function named sumNumbers that takes an array of numbers as an argument and returns the sum of all the numbers in the array. Later in the course, we will learn how to do this using the reduce array method, making your work significantly easier. For now, let's practice the \""declarative\"" way of adding values using loops.You can use the following array to test your solution:const numbers = [6, 12, 1, 18, 13, 16, 2, 1, 8, 10];Bonus - Iteration #3.2: A generic sum() functionIn iteration 3, you created a function that returns the sum of an array of numbers. But what if we want to calculate the sum of the length of words in an array? What if it also includes boolean values? To achieve this, we must create a function allowing this flexibility.You should implement the function sum() in this iteration. The function should take an array of mixed values - numbers, strings, and booleans. The function should add all the string lengths, numeric values, and numeric values of booleans to the total sum and return the sum.You can use the following array to test your solution:const mixedArr = [6, 12, 'miami', 1, true, 'barca', '200', 'lisboa', 8, 10];// should return: 57Note: Your function should only accept an array with numbers, strings, or booleans. If the array contains any other data type, such as an object, you should throw an error. In JavaScript, the syntax for throwing an error is as follows:throw new Error(\""Error message goes here\"");When specifying the error message, you should be specific and descriptive in explaining the error.Iteration #4: Calculate the averageCalculating an average is a prevalent task. So let's practice it a bit.The logic behind this:Find the sum as we did in the first exercise (or how about reusing the function sumNumbers()?)Divide that sum by the number of elements in the array.Iteration #4.1: Array of numbersImplement the function averageNumbers that expects an array of numbers and returns the average of the numbers.You can use the following array to test your solution:const numbers = [2, 6, 9, 10, 7, 4, 1, 9];Iteration #4.2: Array of stringsImplement the function named averageWordLength that receives as a single argument an array of words and returns the average length of the words:You can use the following array to test your solution:const words = ['seat', 'correspond', 'linen', 'motif', 'hole', 'smell', 'smart', 'chaos', 'fuel', 'palace'];Bonus - Iteration #4.3: A generic avg() functionCreate function avg(arr) that receives any mixed array and calculates the average. For example, consider an array filled with numbers and/or strings and/or booleans as a mixed array.The non-numerical values should be counted as follows:Booleans: true counts as 1 and false counts as 0.Strings: use the string length as the numeric value.const mixedArr = [6, 12, 'miami', 1, true, 'barca', '200', 'lisboa', 8, 10];// should return: 5.7Iteration #5: Unique arraysTake the following array, remove the duplicates, and return a new array. You are more than likely going to want to check out the Array methods indexOf and includes.Do this in the form of a function uniquifyArray that receives an array of words as an argument.You can use the following array to test your solution:const words = [  'crab',  'poison',  'contagious',  'simple',  'bring',  'sharp',  'playground',  'poison',  'communion',  'simple',  'bring'];Iteration #6: Find elementsLet's create a simple array search.Declare a function named doesWordExist that will take in an array of words as one argument and a word to search for as the other. Return true if the word exists in the array; otherwise, return false.You can use the following array to test your solution:const words = ['machine', 'subset', 'trouble', 'starting', 'matter', 'eating', 'truth', 'disobedience'];Iteration #7: Count repetitionDeclare a function named howManyTimes that will take in an array of words as the first argument and a word to search for as the second argument. The function will return the number of times that word appears in the array.You can use the following array to test your solution:const words = [  'machine',  'matter',  'subset',  'trouble',  'starting',  'matter',  'eating',  'matter',  'truth',  'disobedience',  'matter'];Bonus - Iteration #8Bonus - Iteration #8.1: Product of adjacent numbersGiven multiple arrays, find the greatest product of four adjacent numbers.We consider adjacent any four numbers that are next to each other horizontally or vertically. For example, if we have a 5x5 Matrix like:[ 1,  2, 3, 4, 5][ 1, 20, 3, 4, 5][ 1, 20, 3, 4, 5][ 1, 20, 3, 4, 5][ 1,  4, 3, 4, 5]The greatest product will be the 20x20x20x4 = 32000.Declare a function named greatestProduct(matrix) to find it in the 20×20 grid below!const matrix = [  [08, 02, 22, 97, 38, 15, 00, 40, 00, 75, 04, 05, 07, 78, 52, 12, 50, 77, 91, 08],  [49, 49, 99, 40, 17, 81, 18, 57, 60, 87, 17, 40, 98, 43, 69, 48, 04, 56, 62, 00],  [81, 49, 31, 73, 55, 79, 14, 29, 93, 71, 40, 67, 53, 88, 30, 03, 49, 13, 36, 65],  [52, 70, 95, 23, 04, 60, 11, 42, 69, 24, 68, 56, 01, 32, 56, 71, 37, 02, 36, 91],  [22, 31, 16, 71, 51, 67, 63, 89, 41, 92, 36, 54, 22, 40, 40, 28, 66, 33, 13, 80],  [24, 47, 32, 60, 99, 03, 45, 02, 44, 75, 33, 53, 78, 36, 84, 20, 35, 17, 12, 50],  [32, 98, 81, 28, 64, 23, 67, 10, 26, 38, 40, 67, 59, 54, 70, 66, 18, 38, 64, 70],  [67, 26, 20, 68, 02, 62, 12, 20, 95, 63, 94, 39, 63, 08, 40, 91, 66, 49, 94, 21],  [24, 55, 58, 05, 66, 73, 99, 26, 97, 17, 78, 78, 96, 83, 14, 88, 34, 89, 63, 72],  [21, 36, 23, 09, 75, 00, 76, 44, 20, 45, 35, 14, 00, 61, 33, 97, 34, 31, 33, 95],  [78, 17, 53, 28, 22, 75, 31, 67, 15, 94, 03, 80, 04, 62, 16, 14, 09, 53, 56, 92],  [16, 39, 05, 42, 96, 35, 31, 47, 55, 58, 88, 24, 00, 17, 54, 24, 36, 29, 85, 57],  [86, 56, 00, 48, 35, 71, 89, 07, 05, 44, 44, 37, 44, 60, 21, 58, 51, 54, 17, 58],  [19, 80, 81, 68, 05, 94, 47, 69, 28, 73, 92, 13, 86, 52, 17, 77, 04, 89, 55, 40],  [04, 52, 08, 83, 97, 35, 99, 16, 07, 97, 57, 32, 16, 26, 26, 79, 33, 27, 98, 66],  [88, 36, 68, 87, 57, 62, 20, 72, 03, 46, 33, 67, 46, 55, 12, 32, 63, 93, 53, 69],  [04, 42, 16, 73, 38, 25, 39, 11, 24, 94, 72, 18, 08, 46, 29, 32, 40, 62, 76, 36],  [20, 69, 36, 41, 72, 30, 23, 88, 34, 62, 99, 69, 82, 67, 59, 85, 74, 04, 36, 16],  [20, 73, 35, 29, 78, 31, 90, 01, 74, 31, 49, 71, 48, 86, 81, 16, 23, 57, 05, 54],  [01, 70, 54, 71, 83, 51, 54, 69, 16, 92, 33, 48, 61, 43, 52, 01, 89, 19, 67, 48]];Bonus - Iteration #8.2: Product of diagonalsFollowing the logic you've used in iteration #8.1, declare a function called greatestProductOfDiagonals(matrix). It takes a matrix as a parameter and returns the greatest product of any four values laid out diagonally, in either direction.Happy coding! ❤️FAQs  I am stuck in the exercise and don't know how to solve the problem or where to start.  If you are stuck in your code and don't know how to solve the problem or where to start, you should take a step back and try to form a clear question about the specific issue you are facing. This will help you narrow down the problem and come up with potential solutions.For example, is it a concept that you don't understand, or are you receiving an error message that you don't know how to fix? It is usually helpful to try to state the problem as clearly as possible, including any error messages you are receiving. This can help you communicate the issue to others and potentially get help from classmates or online resources.Once you have a clear understanding of the problem, you will be able to start working toward the solution.Back to top  All of the Jasmine tests are failing and in red. Why did this happen?  One possible reason why all of the Jasmine tests are failing is that there is a syntax error in the code being tested. If the code contains a syntax error, it will not be loaded properly and none of the tests will be able to run. This will cause all of the tests to fail.To troubleshoot this issue, you will need to examine the code being tested for syntax errors. Look for missing brackets, semicolons, or other syntax issues that could be causing the problem. If you find a syntax error, correct it and try running the tests again.Another possibility is that there is an issue with the tests. It is possible that you may have modified the test file and caused an issue. If you have made changes to the test file, try copying and pasting the original test file and running the tests again to see if this resolves the issue.Back to top  How do you find a length of a string in JavaScript?  To find the length of a string, use the length property. Here is an example:const str = \""Hello, world!\""\"";console.log(str.length); // 13The length property returns the number of characters in the string, including spaces and special characters.Back to top  How do I loop over an array?  Loops allow you to repeat a block of code a certain number of times. There are several ways to loop over an array in JavaScript:For loopThe for loop is the most traditional way to loop through an array in JavaScript. It consists of three parts: the initialization, the condition, and the increment/decrement:const animals = ['cat', 'dog', 'bird'];// initialize counter variable (let i = 0)// set condition (i < animals.length)// increment counter (i++)for (let i = 0; i < animals.length; i++) {  console.log(animals[i]);}In initialization, you declare a counter variable and set its initial value.The condition is a boolean expression that is evaluated before each iteration of the loop. If the condition is true, the loop will continue. Once the condition turns false, the loop will terminate.The increment/decrement is where you update the counter variable and it happens at the end of each iteration.The block of code inside the loop is repeated during each iteration.While loopThe while loop is another way to loop through an array in JavaScript. It consists of a condition and a block of code that is executed as long as the condition is true.Like the for loop, the while loop requires a counter variable to keep track of the current position in the array. The counter variable must be initialized before the loop and incremented or decremented at the end of each iteration.const animals = ['cat', 'dog', 'bird'];// initialize a counter variable (i)let i = 0;// set condition (i < animals.length)while (i < animals.length) {  console.log(animals[i]);    // increment counter (i++)  i++;}Back to top  How do I loop over an array using the forEach() method?  The forEach() method executes a provided function once for each array element. It does not return a new array but rather executes the function on each element in the array.The syntax of the forEach() method is as follows:array.forEach( function(element) {  // code to be executed for each element});  Here is an example that uses the forEach() method to log each element and its index in an array to the console:const fruits = ['apple', 'banana', 'cherry'];fruits.forEach( function(element, index) {  console.log(`${index}: ${element}`);});You can also use an arrow function as the callback function for forEach():fruits.forEach((element, index) => {  console.log(`${index}: ${element}`);});Back to top  What could cause array.length to return undefined?  If you try to access the .length property on an array (e.g., array.length) but get undefined, it means that the variable you are accessing is not actually an array.  How do I fix this?Check that the variable you are trying to access is actually an array.Back to top  Why is my function returning the last element of the array instead of the longest one?  Your function might not be correctly checking for the longest element in the array. In other words, there may be an issue with the logic of the conditional statements in the function or with the comparison being used in the conditionals.To fix this issue, you should check the logic of the conditional statements in the function.Back to top  How can I compare the length of each word in an array in JavaScript?  To compare the length of each word in an array in JavaScript, you can use a loop to iterate through the array and compare the length of each element using the .length property.Here is an example of how you loop over an array:function findLongestWord(words) {  for (let i = 0; i < words.length; i++) {    console.log(words[i]);  }}  To compare the length of each element, you should use a conditional statement in the following way:  if ( words[i].length > longestWord.length) {    console.log(`${words[i].length} is longer than ${longestWord.length}`);  }Back to top  I am unable to push changes to the repository. What should I do?  There are a couple of possible reasons why you may be unable to push changes to a Git repository:You have not committed your changes: Before you can push your changes to the repository, you need to commit them using the git commit command. Make sure you have committed your changes and try pushing again. To do this, run the following terminal commands from the project folder:git add .git commit -m \""Your commit message\""git pushYou do not have permission to push to the repository: If you have cloned the repository directly from the main Ironhack repository without making a Fork first, you do not have write access to the repository.To check which remote repository you have cloned, run the following terminal command from the project folder:git remote -vIf the link shown is the same as the main Ironhack repository, you will need to fork the repository to your GitHub account first and then clone your fork to your local machine to be able to push the changes.Note: You should make a copy of your local code to avoid losing it in the process.Back to top"
43,43,Asabeneh/30-Days-Of-React,https://github.com/ironhack-labs/lab-javascript-functions-and-arrays/blob/master/README.md,JavaScript,"LAB | JS Functions & Arrays     Learning Goals  This exercise allows you to practice and apply the concepts and techniques taught in class.Upon completion of this exercise, you will be able to:Run predefined tests in Jasmine to verify that the program meets the technical requirements.Identify expected code behavior by reading and understanding test results and errors.Declare and invoke functions using function declaration, function expression, and arrow function syntax.Use the return  keyword to return a value from a function.Pass primitive values as arguments to functions.Pass arrays to functions as arguments.Access items stored in arrays using the indexes,Add, remove and check for items in an array using the index and array methods (unshift, push, splice, shift, pop, indexOf, and includes).Iterate over arrays using the for  and forEach loops.     IntroductionArray manipulation is a common task in programming. Whether you are calculating a total for a shopping cart, grabbing only the first names from a list of people, or moving a piece on a chessboard, you are probably modifying or manipulating an array somewhere in the code.RequirementsFork this repoClone it to your machineSubmissionUpon completion, run the following commands:git add .git commit -m \""Solved lab\""git push origin masterCreate a Pull Request so that your TAs can check your work.Automated Testing IntroductionWhat is automated testing?Automated software testing is the process of programmatically executing an application to validate and verify that it meets the business needs, as well as the technical requirements, and that it behaves as expected.Testing should be viewed as a continuous process, not a discrete operation or single activity in the development lifecycle. Designing tests at the beginning of the product lifecycle can mitigate common issues that arise when developing complex code bases.Having a strong test suite can provide you the ease of mind since you will be able to confidently improve upon your work while knowing that your not breaking a previously developed feature.Testing labsThis LAB and some labs you will work on during the bootcamp are equipped with unit tests to provide automated feedback on your lab progress.Testing with JasmineJasmine is an automated testing framework for JavaScript. It is designed to be used in Behavior-driven Development (BDD) programming, focusing more on the business value than the technical details.We have already included Jasmine in the project you just forked, so let's see how to use it to implement our code.UsageBefore starting coding, we will explain the project structure we have provided you:lab-js-functions-and-arrays  ├── README.md  ├── SpecRunner.html  ├── jasmine  │   └── ...  ├── src  │   └── functions-and-arrays.js  └── tests      └── functions-and-arrays.spec.jsWe will be working with the src/functions-and-arrays.js. You can find all the files in the jasmine folder needed to use Jasmine. All these files are already linked with the SpecRunner.html file.If you want to check the tests, they are in the tests/functions-and-arrays.spec.js file.Run testsRunning automated tests with Jasmine is super easy. All you need to do is open the SpecRunner.html file in your browser. You will find something similar to this:Pass the testsYou should write your code on the src/functions-and-arrays.js file. While following the instructions for each iteration, you should check every test and ensure it's passing, before moving on.Do not rush. You should take your time to read every iteration carefully and address the breaking tests as you progress through the exercise.When coding with tests, it is super important that you carefully read and understand the errors you are getting. This way, you will know what's expected from your code.To see the output of your JavaScript code, open the Console in the Developer Tools.Important: Note that you don't need to execute the functions yourself; the tests will automatically load and execute the functions on each test run. All you need to do is declare the functions, ensure they handle the parameters passed and return what is indicated in the iteration instructions and the test description. We provide you with a sample array for some iterations, so you can do some manual testing if you wish.InstructionsWhile following the instructions for each iteration, carefully read the instructions and test descriptions to understand the task requirements fully. Do not rush. It would be best if you took your time to read every iteration carefully.Iteration #1: Find the maximumImplement the function maxOfTwoNumbers that takes two numbers as arguments and returns the bigger number.Iteration #2: Find the longest wordImplement the function findLongestWord that takes as an argument an array of words and returns the longest one. If there are 2 with the same length, it should return the first occurrence.You can use the following array to test your solution:const words = ['mystery', 'brother', 'aviator', 'crocodile', 'pearl', 'orchard', 'crackpot'];Iteration #3: Calculate the sumIteration #3.1: Sum numbersCalculating a sum can be as simple as iterating over an array and adding each of the elements together.Implement the function named sumNumbers that takes an array of numbers as an argument and returns the sum of all the numbers in the array. Later in the course, we will learn how to do this using the reduce array method, making your work significantly easier. For now, let's practice the \""declarative\"" way of adding values using loops.You can use the following array to test your solution:const numbers = [6, 12, 1, 18, 13, 16, 2, 1, 8, 10];Bonus - Iteration #3.2: A generic sum() functionIn iteration 3, you created a function that returns the sum of an array of numbers. But what if we want to calculate the sum of the length of words in an array? What if it also includes boolean values? To achieve this, we must create a function allowing this flexibility.You should implement the function sum() in this iteration. The function should take an array of mixed values - numbers, strings, and booleans. The function should add all the string lengths, numeric values, and numeric values of booleans to the total sum and return the sum.You can use the following array to test your solution:const mixedArr = [6, 12, 'miami', 1, true, 'barca', '200', 'lisboa', 8, 10];// should return: 57Note: Your function should only accept an array with numbers, strings, or booleans. If the array contains any other data type, such as an object, you should throw an error. In JavaScript, the syntax for throwing an error is as follows:throw new Error(\""Error message goes here\"");When specifying the error message, you should be specific and descriptive in explaining the error.Iteration #4: Calculate the averageCalculating an average is a prevalent task. So let's practice it a bit.The logic behind this:Find the sum as we did in the first exercise (or how about reusing the function sumNumbers()?)Divide that sum by the number of elements in the array.Iteration #4.1: Array of numbersImplement the function averageNumbers that expects an array of numbers and returns the average of the numbers.You can use the following array to test your solution:const numbers = [2, 6, 9, 10, 7, 4, 1, 9];Iteration #4.2: Array of stringsImplement the function named averageWordLength that receives as a single argument an array of words and returns the average length of the words:You can use the following array to test your solution:const words = ['seat', 'correspond', 'linen', 'motif', 'hole', 'smell', 'smart', 'chaos', 'fuel', 'palace'];Bonus - Iteration #4.3: A generic avg() functionCreate function avg(arr) that receives any mixed array and calculates the average. For example, consider an array filled with numbers and/or strings and/or booleans as a mixed array.The non-numerical values should be counted as follows:Booleans: true counts as 1 and false counts as 0.Strings: use the string length as the numeric value.const mixedArr = [6, 12, 'miami', 1, true, 'barca', '200', 'lisboa', 8, 10];// should return: 5.7Iteration #5: Unique arraysTake the following array, remove the duplicates, and return a new array. You are more than likely going to want to check out the Array methods indexOf and includes.Do this in the form of a function uniquifyArray that receives an array of words as an argument.You can use the following array to test your solution:const words = [  'crab',  'poison',  'contagious',  'simple',  'bring',  'sharp',  'playground',  'poison',  'communion',  'simple',  'bring'];Iteration #6: Find elementsLet's create a simple array search.Declare a function named doesWordExist that will take in an array of words as one argument and a word to search for as the other. Return true if the word exists in the array; otherwise, return false.You can use the following array to test your solution:const words = ['machine', 'subset', 'trouble', 'starting', 'matter', 'eating', 'truth', 'disobedience'];Iteration #7: Count repetitionDeclare a function named howManyTimes that will take in an array of words as the first argument and a word to search for as the second argument. The function will return the number of times that word appears in the array.You can use the following array to test your solution:const words = [  'machine',  'matter',  'subset',  'trouble',  'starting',  'matter',  'eating',  'matter',  'truth',  'disobedience',  'matter'];Bonus - Iteration #8Bonus - Iteration #8.1: Product of adjacent numbersGiven multiple arrays, find the greatest product of four adjacent numbers.We consider adjacent any four numbers that are next to each other horizontally or vertically. For example, if we have a 5x5 Matrix like:[ 1,  2, 3, 4, 5][ 1, 20, 3, 4, 5][ 1, 20, 3, 4, 5][ 1, 20, 3, 4, 5][ 1,  4, 3, 4, 5]The greatest product will be the 20x20x20x4 = 32000.Declare a function named greatestProduct(matrix) to find it in the 20×20 grid below!const matrix = [  [08, 02, 22, 97, 38, 15, 00, 40, 00, 75, 04, 05, 07, 78, 52, 12, 50, 77, 91, 08],  [49, 49, 99, 40, 17, 81, 18, 57, 60, 87, 17, 40, 98, 43, 69, 48, 04, 56, 62, 00],  [81, 49, 31, 73, 55, 79, 14, 29, 93, 71, 40, 67, 53, 88, 30, 03, 49, 13, 36, 65],  [52, 70, 95, 23, 04, 60, 11, 42, 69, 24, 68, 56, 01, 32, 56, 71, 37, 02, 36, 91],  [22, 31, 16, 71, 51, 67, 63, 89, 41, 92, 36, 54, 22, 40, 40, 28, 66, 33, 13, 80],  [24, 47, 32, 60, 99, 03, 45, 02, 44, 75, 33, 53, 78, 36, 84, 20, 35, 17, 12, 50],  [32, 98, 81, 28, 64, 23, 67, 10, 26, 38, 40, 67, 59, 54, 70, 66, 18, 38, 64, 70],  [67, 26, 20, 68, 02, 62, 12, 20, 95, 63, 94, 39, 63, 08, 40, 91, 66, 49, 94, 21],  [24, 55, 58, 05, 66, 73, 99, 26, 97, 17, 78, 78, 96, 83, 14, 88, 34, 89, 63, 72],  [21, 36, 23, 09, 75, 00, 76, 44, 20, 45, 35, 14, 00, 61, 33, 97, 34, 31, 33, 95],  [78, 17, 53, 28, 22, 75, 31, 67, 15, 94, 03, 80, 04, 62, 16, 14, 09, 53, 56, 92],  [16, 39, 05, 42, 96, 35, 31, 47, 55, 58, 88, 24, 00, 17, 54, 24, 36, 29, 85, 57],  [86, 56, 00, 48, 35, 71, 89, 07, 05, 44, 44, 37, 44, 60, 21, 58, 51, 54, 17, 58],  [19, 80, 81, 68, 05, 94, 47, 69, 28, 73, 92, 13, 86, 52, 17, 77, 04, 89, 55, 40],  [04, 52, 08, 83, 97, 35, 99, 16, 07, 97, 57, 32, 16, 26, 26, 79, 33, 27, 98, 66],  [88, 36, 68, 87, 57, 62, 20, 72, 03, 46, 33, 67, 46, 55, 12, 32, 63, 93, 53, 69],  [04, 42, 16, 73, 38, 25, 39, 11, 24, 94, 72, 18, 08, 46, 29, 32, 40, 62, 76, 36],  [20, 69, 36, 41, 72, 30, 23, 88, 34, 62, 99, 69, 82, 67, 59, 85, 74, 04, 36, 16],  [20, 73, 35, 29, 78, 31, 90, 01, 74, 31, 49, 71, 48, 86, 81, 16, 23, 57, 05, 54],  [01, 70, 54, 71, 83, 51, 54, 69, 16, 92, 33, 48, 61, 43, 52, 01, 89, 19, 67, 48]];Bonus - Iteration #8.2: Product of diagonalsFollowing the logic you've used in iteration #8.1, declare a function called greatestProductOfDiagonals(matrix). It takes a matrix as a parameter and returns the greatest product of any four values laid out diagonally, in either direction.Happy coding! ❤️FAQs  I am stuck in the exercise and don't know how to solve the problem or where to start.  If you are stuck in your code and don't know how to solve the problem or where to start, you should take a step back and try to form a clear question about the specific issue you are facing. This will help you narrow down the problem and come up with potential solutions.For example, is it a concept that you don't understand, or are you receiving an error message that you don't know how to fix? It is usually helpful to try to state the problem as clearly as possible, including any error messages you are receiving. This can help you communicate the issue to others and potentially get help from classmates or online resources.Once you have a clear understanding of the problem, you will be able to start working toward the solution.Back to top  All of the Jasmine tests are failing and in red. Why did this happen?  One possible reason why all of the Jasmine tests are failing is that there is a syntax error in the code being tested. If the code contains a syntax error, it will not be loaded properly and none of the tests will be able to run. This will cause all of the tests to fail.To troubleshoot this issue, you will need to examine the code being tested for syntax errors. Look for missing brackets, semicolons, or other syntax issues that could be causing the problem. If you find a syntax error, correct it and try running the tests again.Another possibility is that there is an issue with the tests. It is possible that you may have modified the test file and caused an issue. If you have made changes to the test file, try copying and pasting the original test file and running the tests again to see if this resolves the issue.Back to top  How do you find a length of a string in JavaScript?  To find the length of a string, use the length property. Here is an example:const str = \""Hello, world!\""\"";console.log(str.length); // 13The length property returns the number of characters in the string, including spaces and special characters.Back to top  How do I loop over an array?  Loops allow you to repeat a block of code a certain number of times. There are several ways to loop over an array in JavaScript:For loopThe for loop is the most traditional way to loop through an array in JavaScript. It consists of three parts: the initialization, the condition, and the increment/decrement:const animals = ['cat', 'dog', 'bird'];// initialize counter variable (let i = 0)// set condition (i < animals.length)// increment counter (i++)for (let i = 0; i < animals.length; i++) {  console.log(animals[i]);}In initialization, you declare a counter variable and set its initial value.The condition is a boolean expression that is evaluated before each iteration of the loop. If the condition is true, the loop will continue. Once the condition turns false, the loop will terminate.The increment/decrement is where you update the counter variable and it happens at the end of each iteration.The block of code inside the loop is repeated during each iteration.While loopThe while loop is another way to loop through an array in JavaScript. It consists of a condition and a block of code that is executed as long as the condition is true.Like the for loop, the while loop requires a counter variable to keep track of the current position in the array. The counter variable must be initialized before the loop and incremented or decremented at the end of each iteration.const animals = ['cat', 'dog', 'bird'];// initialize a counter variable (i)let i = 0;// set condition (i < animals.length)while (i < animals.length) {  console.log(animals[i]);    // increment counter (i++)  i++;}Back to top  How do I loop over an array using the forEach() method?  The forEach() method executes a provided function once for each array element. It does not return a new array but rather executes the function on each element in the array.The syntax of the forEach() method is as follows:array.forEach( function(element) {  // code to be executed for each element});  Here is an example that uses the forEach() method to log each element and its index in an array to the console:const fruits = ['apple', 'banana', 'cherry'];fruits.forEach( function(element, index) {  console.log(`${index}: ${element}`);});You can also use an arrow function as the callback function for forEach():fruits.forEach((element, index) => {  console.log(`${index}: ${element}`);});Back to top  What could cause array.length to return undefined?  If you try to access the .length property on an array (e.g., array.length) but get undefined, it means that the variable you are accessing is not actually an array.  How do I fix this?Check that the variable you are trying to access is actually an array.Back to top  Why is my function returning the last element of the array instead of the longest one?  Your function might not be correctly checking for the longest element in the array. In other words, there may be an issue with the logic of the conditional statements in the function or with the comparison being used in the conditionals.To fix this issue, you should check the logic of the conditional statements in the function.Back to top  How can I compare the length of each word in an array in JavaScript?  To compare the length of each word in an array in JavaScript, you can use a loop to iterate through the array and compare the length of each element using the .length property.Here is an example of how you loop over an array:function findLongestWord(words) {  for (let i = 0; i < words.length; i++) {    console.log(words[i]);  }}  To compare the length of each element, you should use a conditional statement in the following way:  if ( words[i].length > longestWord.length) {    console.log(`${words[i].length} is longer than ${longestWord.length}`);  }Back to top  I am unable to push changes to the repository. What should I do?  There are a couple of possible reasons why you may be unable to push changes to a Git repository:You have not committed your changes: Before you can push your changes to the repository, you need to commit them using the git commit command. Make sure you have committed your changes and try pushing again. To do this, run the following terminal commands from the project folder:git add .git commit -m \""Your commit message\""git pushYou do not have permission to push to the repository: If you have cloned the repository directly from the main Ironhack repository without making a Fork first, you do not have write access to the repository.To check which remote repository you have cloned, run the following terminal command from the project folder:git remote -vIf the link shown is the same as the main Ironhack repository, you will need to fork the repository to your GitHub account first and then clone your fork to your local machine to be able to push the changes.Note: You should make a copy of your local code to avoid losing it in the process.Back to top"
44,44,learn-co-curriculum/phase-0-pac-3-arithmetic-lab,https://github.com/learn-co-curriculum/phase-0-pac-3-arithmetic-lab/blob/master/README.md,JavaScript,"JavaScript Calculator Challenge LabLearning GoalsPractice doing math with JavaScriptPractice writing functions that do things with numbersPractice parsing strings as numbersIntroductionIn this lab, we're going to practice writing functions and manipulating numbersin JavaScript. First, though, we need to review some basic math. In this lab,we're going to learn about various arithmetic operators. What's an operator, yousay? It's a symbol that operates on one or more (usually two) objects —+ is a good example. The + operator says \""add what's to the left of + andwhat's to the right of + together.\""If you haven't already, fork and clone this lab into your local environment.Remember to fork a copy into your GitHub account first, then clone from thatcopy. Once you've cloned it down, navigate into its directory in the terminal,then run code . to open the files in Visual Studio Code. (If you are using adifferent text editor, the command will be different.)As you read through this lesson, you're going to be adding your solutions toindex.js. You'll write a total of eight functions. Use the results of runningnpm test to guide you towards the right function names and functionality.Remember to run npm install first to install the dependencies.Basic MathThe most fundamental math operations work as one might expect in JavaScript: +adds two numbers; - subtracts one number from another; * multiplies twonumbers; and / divides one number by another.Give it a try: type each of the following math examples into the REPL console.You can use the embedded console below or open replit in a separate windowif you prefer.1 + 80; //=> 8160 - 40; //=> 202 * 3.4; //=> 6.85.0 / 2.5; //=> 2<iframe height=\""400px\"" width=\""100%\"" src=\""https://replit.com/@lizbur10/Sandbox?embed=true\"" scrolling=\""no\"" frameborder=\""no\"" allowtransparency=\""true\"" allowfullscreen=\""true\"" sandbox=\""allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals\""></iframe>Go ahead and run npm test and take a look at the first failing test:  1) basic math functions       'add()' is a valid function:     ReferenceError: add is not defined      at Context.<anonymous> (test/indexTest.js:10:12)      at processImmediate (node:internal/timers:464:21)The description of the test, 'add()' is a valid function, along with the errormessage, referenceError: add is not defined, tells us that we need to define afunction add(). Go ahead and create the add() function in index.js. Thistest is only looking for the function to exist, so we can leave the code blockempty for now:function add() {  // we'll fill this in shortly}Once you've added the empty function, run npm test again; the first testshould be passing. Go ahead and get the next three tests passing as well beforemoving on.Once you have the first four tests passing, the first error you get should looksimilar to this:  1) basic math functions       add(a, b) adds two numbers and returns the result:     Error: Expected undefined to equal 1078      at assert (node_modules/expect/lib/assert.js:29:9)      at Expectation.toEqual (node_modules/expect/lib/Expectation.js:81:30)      at Context.<anonymous> (test/indexTest.js:26:23)      at processImmediate (node:internal/timers:464:21)Note: the test document is randomly creating numbers to pass as arguments tothe functions in this lab, so the specific values you see in your errors willbe different from what's shown in this lesson, and will be different each timeyou run the tests!The tests have found our add() function, getting us past the first test, andnow we need to write the code inside the function to return what the test isexpecting. Let's break down the information from our error:add(a, b) adds two numbers and returns the result:Error: Expected undefined to equal 1078The first line tells us what our function needs to do, and the second line tellsus the specific error that is being thrown. Any time you see the error \""Expectedundefined to equal\"" something, that means the test is expecting your function toreturn a value but it's currently not returning anything (undefined). Let'ssee if we can just get that specific error cleared. We won't worry about exactlywhat we're returning just yet:function add() {  return \""something\"";}Running the tests now we get:  1) basic math functions       add(a, b) adds two numbers and returns the result:     Error: Expected 'something' to equal 853      at assert (node_modules/expect/lib/assert.js:29:9)      at Expectation.toEqual (node_modules/expect/lib/Expectation.js:81:30)      at Context.<anonymous> (test/indexTest.js:26:23)      at processImmediate (node:internal/timers:464:21)Great! So now our function is returning \""something\"" instead of nothing! So thenext step is to look more closely at the test's description of the function tofigure out what should be returned:add(a, b) adds two numbers and returns the resultThe add(a, b) tells us the test is trying to pass two arguments to ourfunction, so let's get that set up:function add(a, b) {  return \""something\"";}The rest of the description tells us we need to add the two arguments togetherand return that value:function add(a, b) {  return a + b;}With this code, both tests for the add() function should now be passing!A Quick Note about Hard CodingThink back to the errors we were getting above, e.g., Expected undefined to equal 1078. One thing that might be tempting to do when addressing an errorlike this is to explicitly return exactly what the test is looking for:function add(a, b) {  return 1078;}This is what's known as hard coding and is virtually never what you shoulddo! If you think about it, it doesn't really make sense. We've created anadd() function that can take any two numbers as arguments but will alwaysreturn 1078. This makes it a pretty useless function. Instead, we want to createfunctions that will return the correct answer for whatever argument or argumentswe pass in.Go ahead and tackle the next three tests on your own. You should follow aprocess very similar to what we did above. Once you have those passing, continueto the next section.Math + AssignmentRecall that we can increment (++) and decrement (--) a number if it'sassigned to a variable. Don't forget to follow along in the REPL console.let number = 5;number++; //=> 5... hmmmmnumber; //=> 6 -- the number was incremented after it was evaluatednumber--; //=> 6number; //=> 5We can also put the increment and decrement operators before the number, inwhich case the number is evaluated after the operator is executed:--number; //=> 4number; //=> 4++number; //=> 5number; //=> 5But generally, you will see them placed after the number (and we recommendthat that's where you put them). If you're interested in the difference, take alook at the MDN documentation.And, while we're on the subject, you'll usually only want to use theseincrementors and decrementors when the shorthand makes what you're writingeasier to read (more on when exactly in a later lesson). Instead, it's best touse the basic arithmetic operators combined with =.Follow along in the REPL console. You can pick up where we left off with theprevious examples. Start by setting number equal to 5.+= modifies the value to the operator's left by adding to it the value tothe operator's right:number += 3; //=> 8-= modifies the value to the operator's left by subtracting from it thevalue to the operator's right:number -= 2; //=> 6*= modifies the value to the operator's left by multiplying it by the valueto the operator's right:number *= 10; //=> 60/= modifies the value to the operator's left by dividing it by the value tothe operator's right:number /= 5; //=> 12Note that these methods modify the variable in place. So, if we have twofunctions that depend on the same external variable, the order in which they arecalled matters. Follow along in the console://reset numbernumber = 10;function add5() {  return (number += 5);}function divideBy3() {  return (number /= 3);}divideBy3(); //=> 3.3333333333333335add5(); //=> 8.333333333333334// reset numbernumber = 10;add5(); //=> 15divideBy3(); //=> 5Because these methods are more explicit, we prefer += to ++ and -= to-- (usually).Okay, now we're ready to write solutions for the next two functions:increment(n) and decrement(n). As indicated by the tests, these methodsshould take a number as an argument, increment/decrement the provided value byone, and return the result.Parsing NumbersSometimes, we'll receive a number wrapped in quotes. We recognize it as anumber, but JavaScript will think it's a string. Luckily, JavaScript gives ustools to turn these strings into proper numbers (that is, numbers thatJavaScript understands).parseInt()The first such tool is the function parseInt(), which accepts two arguments:the value to parse and the base of the value being parsed (called the radix).Usually you will want to work with base 10, so a typical call to parseInt()looks like:parseInt(\""2\"", 10); //=> 2What happens if we pass a representation of a non-integer to parseInt()? Let'stry it:parseInt(\""2.2222\"", 10);If we enter the above in the REPL console, we will see that parseInt() forcesthe parsed number to be an integer — which makes sense when we think about it,right?What happens, though, if we pass utter nonsense to parseInt()? Go ahead andtry it — something like:parseInt(\""nonsense!\"", 10);What did it return? NaN? What is that?NaN stands for \""Not a Number\"" — pretty handy, right? This is the number (inthe JavaScript sense) that JavaScript returns when it can't determine a validvalue for a numeric operation.Note: You may see parseInt() used without a radix specified. In mostcases, the radix will default to 10, but not always! To be safe, you shouldalways specify a radix.parseFloat()Above, we saw that parseInt() lops off everything after the decimal point andonly returns integers. If we want to preserve decimals, we'll need to useparseFloat().Unlike parseInt(), parseFloat() accepts only a single argument, the thing tobe parsed. We can use it like so:parseFloat(\""80.123999\""); // 80.123999You now have the information you need to write the final two functions,makeInt(string) and preserveDecimal(string). makeInt(string) should takein a string, parse it into a base 10 integer and return it.preserveDecimal(string) should take in a string, parse it into a float andreturn it.After you have all the tests passing, remember to commit and push your changesup to GitHub, then submit your work to Canvas using CodeGrade. If you need areminder, go back to the Complete Your First Software EngineeringAssignment lesson to review the process.ResourcesMDN - parseInt()MDN - parseFloat()"
45,45,learn-co-students/js-functions-lab-bootcamp-prep-000,https://github.com/learn-co-students/js-functions-lab-bootcamp-prep-000/blob/master/README.md,JavaScript,"JavaScript FunctionsObjectivesWrite a function that returns a valueWrite a function that takes in a parameterWrite a function that takes in multiple parametersIntroductionYou'll be writing your solution in index.js.In this lab, we're going to develop our communication skills in JavaScript.We're feeling festive, so we're going to be wrapping up common holiday greetingsas functions so that we don't have to repeat ourselves. The beauty of functionsis that we could reuse these functions for the text of greeting cards, forspoken greetings, for song lyrics, etc...Template LiteralsThere are two ways main ways to include variables inside a string. Say we had a variable named date that we assign to a value:var date = \""July 3rd\""In JavaScript, we can use operators to concatenate (join) two strings, or in this case, a string and a variable, like so:console.log(\""My birthday is \"" + date)With date defined, the above code will log My birthday is July 3rd. However,by using a slightly modified syntax, we can achieve the same thing by embeddinga variable into a string. These are called templateliteralsand rewriting the above console.log with one would look like this:console.log(`My birthday is ${date}`)This will also log My birthday is July 3rd.Now, there are two important changes to the syntax: Any variables we want toinclude must be wrapped in curly braces ({ }) and preceded by a dollar sign($). In addition, instead of single, ', or double quotes, \"", wemust use backticks, `. If backticks are not used, JavaScript willinterpret the dollar sign and curly braces as a normal part of the string,resulting in My birthday is ${date}! Any expression can be included intemplate literals, not just variables, so we could write something like:console.log(`I have ${1 + 1} pets`)And get I have 2 pets. Note that this will not log the same thing if you didthe following:console.log(\""I have \"" + 1 + 1 + \"" pets\"")This logs I have 11 pets! JavaScript converts both 1s into strings rather than adding them together first. You would need to write the following to get the same result as template literals:console.log(\""I have \"" + (1 + 1) + \"" pets\"")You can use either operators or template literals to construct larger stringswith dynamic values. Template literals are just a way to make your code a littleeasier to read and to help ensure JavaScript does not misinterpret whencombining different data types into strings, like we just saw.InstructionsWrite a function named happyHolidays. This function should not accept anyparameters and should return the string \""Happy holidays!\"".Write a function named happyHolidaysTo. This function should accept aparameter of the name of the person you want to wish happy holidays, andreturn the string `Happy holidays, ${name}!`Write a function named happyCustomHolidayTo. This function should accept twoparameters, the holiday you want to wish them well for, and the name of theperson you're wishing well. Order of parameters matters, so make sure to first pass in the holiday and then the name. This function should return the string`Happy ${holiday}, ${name}!`Write a function named holidayCountdown. This function should accept twoparameters, the holiday name and number of days until that holiday. Thefunction should return the string`It's ${days} days until ${holiday}!`. Note that although days isused first when constructing the returned string, holidayCountdown shouldtake in the holiday name first, then the days until that holiday."
46,46,learn-co-curriculum/phase-0-the-dom-modifying-elements-lab,https://github.com/learn-co-curriculum/phase-0-the-dom-modifying-elements-lab/blob/master/README.md,JavaScript,"Creating and Inserting DOM Nodes LabLearning GoalsCreate DOM elements programmaticallyAdd elements to the DOMUpdate elements using innerHTMLChange properties on DOM nodesRemove elements from the DOMIntroductionNow that you have an understanding of the DOM and powerful tools for selectingthe right elements, it's time to learn how to:Create new nodesDelete nodesUpdate node propertiesIf you haven't already, fork and clone this lab into your local environment.Navigate into its directory in the terminal, then run code . to open the filesin Visual Studio Code.Create DOM Elements Programmaticallydocument.createElement()Creating an element in JavaScript is an easy process. You simply calldocument.createElement('tagName'), where tagName is the name of any validHTML tag ('p', 'div', 'span', etc.).Open the index.html file in your browser and open up the browser's console. Inthe console, enter:const element = document.createElement(\""div\"");Then take a look at the Elements tab. The element doesn't show up on the page.Why not?Add Elements to the DOMTo get an element to appear in the DOM, we have to append() it to an existingDOM node. To go back to our tree metaphor, we have to glue our new leaf onto abranch that's already there. We can start as high up on the tree asdocument.body, or we can find a more specific element using any of the methodswe've learned for traversing the DOM.append()Let's append element to body to start:document.body.append(element);(Recall that element is a variable containing the div we created above.)Now if you look at the Elements tab, you'll see our new (empty) <div> nestedinside the body element.Next, let's create an unordered list:const ul = document.createElement(\""ul\"");To populate our unordered list, we'll use a for loop to create three li's,give them some content, and append them to the ul:for (let i = 0; i < 3; i++) {  const li = document.createElement(\""li\"");  li.textContent = (i + 1).toString();  ul.append(li);}In each iteration of our loop, we calculate the value i + 1 (an integer), turnit into a string using JavaScript's toString() method, and assign the resultas the value of the li's textContent attribute.Note: although the textContent attribute must be a string, the code wouldstill work even if we didn't use the toString() method — JavaScript willturn the value into a string for us. However, for clarity and completeness, itis best to set it to a string value explicitly.Finally, we'll append the ul to the div we created:element.append(ul);You should now see the unordered list rendered on the page, and see the newelements in the \""Elements\"" tab, like this:<div>  <ul>    <li>1</li>    <li>2</li>    <li>3</li>  </ul></div>Note that, each time we create a new element, we create a variable and save areference to it. That makes it quite easy to make additional updates and to addit to the DOM using append().Add Elements to the DOM via innerHTMLCreating elements and then appending them into the DOM is a multi-step process.It's also the safest and most reliable way to add content to the DOM. Mostrepeated code can be removed by using variables, functions and loops. It's TheRight Way.That said, however, there's another process that will also work, usingElement.innerHTML. Inside our loop above, we create an li element and setits textContent property to a simple number (expressed as a string) thatrepresents the current iteration through the loop. Once we append the li tothe ul and the ul to the document body, we see our unordered list in thebrowser window. This is a perfectly valid way to use textContent to addcontent to the DOM — essentially, textContent changes only what text shows upinside a DOM element:li.textContent = \""Hi there!\"";// => <li>Hi there!</li>console.log(li.textContent);// => \""Hi there!\""Imagine, however, that we want to add content that's more complicated.Assume our HTML includes a main element with an id of \""main.\"" We can grabthat element and set its innerHTML attribute to any HTML we like:const main = document.getElementById(\""main\"");main.innerHTML =  \""<h1>Poodles!</h1><h3>An Essay into the Pom-Pom as Aesthetic Reconfiguration of the Other from a post-Frankfurt School Appropriationist Perspective</h3><p><em>By: Byron Q. Poodle, Esq., BA.</em></p>\"";Here we are using one big, long string, complete with multiple HTML tags, tocreate the following HTML in the DOM:<main id=\""main\"">  <h1>Poodles!</h1>  <h3>    An Essay into the Pom-Pom as Aesthetic Reconfiguration of the Other from a    post-Frankfurt School Appropriationist Perspective  </h3>  <p><em>By: Byron Q. Poodle, Esq., BA.</em></p></main>This process works but it is not recommended for several reasons. First,it's more error-prone, and the errors can be difficult to find. Second, it cannegatively impact site performance. Finally, if you're inserting user-deriveddata (e.g., comments) into the DOM using innerHTML, you can expose your siteto the risk of users injecting malicious code.Programmatically creating and appending elements is safer and more efficient,and it results in code that's easier to read, easier to debug, and easier tomaintain.Change Properties on DOM NodesWe can change the appearance of a DOM node using its style attribute. Try thisout in the console:const element = document.getElementById(\""main\"");element.style.height = \""300px\"";element.style.backgroundColor = \""#27647B\"";You've changed what's on the screen!Feel free to set as many properties as you'd like — this is a good chance tolook around and explore different properties of DOM elements.Let's adjust the display. Add some text:element.textContent = \""You've changed what's on the screen!\"";Then change the style to see the effect:element.style.fontSize = \""24px\"";element.style.marginLeft = \""30px\"";element.style.lineHeight = 2;Perhaps the most common way to change how things appear in the DOM is bychanging an element's class attribute. As you know from CSS, we often changethe way a bit of rendered HTML appears by adding or removing a class.For example, we could create an alert class that turns the text red (using theCSS color attribute) and makes it big (using the CSS font-size attribute).We can then use JavaScript to first grab the element and then add the class byupdating the element's className property. This has the same effect as settingthe class property in the HTML. The className property expects a Stringwith one or more class names, separated by spaces:element.className = \""pet-listing dog\"";Check out the Elements tab to see the effect of this change:<main id=\""main\"" class=\""pet-listing dog\""></main>Another way to accomplish the same thing is by using the Element.classListproperty. This property has .add() and .remove() methods thatcan be used as follows:element.classList.remove(\""dog\"");element.classList.add(\""cat\"", \""sale\"");This approach allows you to easily add and remove classes programmatically,without having to create a long string of class names.<main id=\""main\"" class=\""pet-listing cat sale\""></main>Separation of ConcernsAn important thing to bear in mind is that we only want to use JavaScript tochange the appearance of an element when we need to make a change dynamically,i.e., in response to user actions. This goes back to a fundamental programmingconcept about separating concerns between technologies:HTML defines the structure of the website (not appearance or functionality)JavaScript defines functionality of the website (not structure or styling)CSS defines the visualization and style of the website (not structure orfunctionality)Defining the base CSS should still happen in the CSS files that are loaded intothe DOM when the page is opened.Remove Elements from the DOMWe know how to add elements and change their attributes. What if we want toremove an element from a page?removeChild()We use removeChild(), as you might guess, to remove a particular child of anelement:someElement.removeChild(someChildElement);Let's take a look at a more complex example:const ul = document.getElementsByTagName(\""ul\"")[0];const secondChild = ul.querySelector(\""li:nth-child(2)\"");ul.removeChild(secondChild);Here you can see the power of querySelector(): we can use it to find thesecond li element of ul. We then pass that element as the argument to ourremoveChild method, which removes the element from our ul.What if we want to remove the whole unordered list (ul)?element.remove()We can just call remove() on the element itself:ul.remove();And it's gone!InstructionsFrom this point forward, many of the labs will work a little differently fromones you've done before. Specifically, the tests will mock the process of 1)running JavaScript code in the browser and 2) seeing the results of that coderepresented in the DOM. Take a look at test/indexTest.js to see the tests'descriptions of the changes your code should be making to the DOM elements.Note that you do not need to create functions for this lab. Just create the lineor lines of JavaScript necessary to pass each test. As usual, you will writeyour code in the index.js file.One final note: the last test in the test/indexTest.js file is looking for thetext \""YOUR-NAME is the champion\"" (with your name — or whatever text you choose —in place of YOUR-NAME) inside your newly created DOM node. While there are anumber of ways you could accomplish this, you should use either thetextContent or innerHTML property to setthe text inside your DOM node. The innerText property would technically workas well; however, the tests won't pass if you use this approach, and generallyit's not a good practice to use innerText when setting the contents of anelement. This StackOverflow answer does a good job explaining somedifferences between these properties.Resourcesdocument.createElement()append()removeChild()element.remove()classList Property"
47,47,learn-co-curriculum/phase-1-control-flow-lab,https://github.com/learn-co-curriculum/phase-1-control-flow-lab/blob/master/README.md,JavaScript,"Review: Control Flow LabLearning GoalsPractice writing if...else if...else statements.Practice working with the ternary operator.Practice writing switch statements.IntroductionYou have been hired as a contractor for Scuber, a burgeoning startup that helpsbusy parents transport their children to and from all of their activities onscooters.Scuber's drivers charge their passengers a variable amount based on how farthey need to travel. Modify the index.js file to make sure that Scuber's driversare properly telling their passengers how much the ride will cost.Getting StartedIf you haven't already, fork and clone this lab into your local environment.Remember to fork a copy into your GitHub account first, then clone fromthat copy. Navigate into its directory in the terminal, then run code . toopen the files in Visual Studio Code.Next, run npm install to install the dependencies then run the test suite withthe npm test command.Read the TestsWe know that you do not have much experience with testing, so that is why it isvery important for you to read the instructions in this and every lab. Thatbeing said, reading the tests can often provide important clues on how tocomplete a lab. Let's take a look at the first test for this lab together:describe('index.js', function () {  describe('scuberGreetingForFeet()', function () {    it('gives customers a free sample if the ride is less than or equal to 400 feet', function () {      expect(scuberGreetingForFeet(199)).to.equal('This one is on me!');    });    // tests continue...  });});Okay, so all of the fancy describe words are just there to organize therequirements, and provide a description for what each function should do. Byreading the text inside of the describe words, we can see that there is somefunction that should give customers a free sample, where the first 400 feet arefree. Then in the next line we see a function called scuberGreetingForFeetbeing executed with 199 passed through as an argument to the function.Executing the scuberGreetingForFeet function with the argument should return\""This one is on me!\"".We will tackle the details of function writing in depth in an upcoming lab. Fornow, briefly, a function declaration is written like so:function addFive(someNumber) {  //Everything I want my function to do I put inside these curly braces  //In this example, let's say I want my function, addFive, to add 5 to  //any number I pass in (someNumber), but only IF the number is greater  //than zero:  let result  if (someNumber > 0) {    result = someNumber + 5;  }  //at the end, if I want my function to return something, I need to state it:  return result}//once our function is declared, we can call addFive, passing in values //as arguments:addFive(10);//=> 15addFive(20);//=> 25addFive(-5);//=> undefinedaddFive(addFive(5));//=> 15!! In this case, the return value of addFive(5), 10, is passed in //as the argument to the outer addFive, returning 15So, looking back at our test example, scuberGreetingForFeet(199) is callingthe function scuberGreetingForFeet, and passing in the value 199 as theargument.  When we write this function, we need to write the logic inside thecurly braces to pass our tests and return the result:function scuberGreetingForFeet(someValue) {  //this is where we can use conditionals given our argument, someValue  //don't forget to return whatever the result is!}The big clue from reading the example test above is that the tests in theindexTest.js file are calling the functions that we write inside theindex.js file. These tests pass arguments to our function. When this testpasses an argument of 199 to our function, the scuberGreetingForFeetfunction should return \""This one is on me!\"". That makes sense, consideringthe text in the describe and it functions say that the first 400 feetshould be free. That 199 must be indicating the distance in feet of therequested ride.So reading tests is essentially like reading the instructions. It's somethingwe may have avoided for much of our lives, but when it comes to programming,tests fill in the picture of the goal we are trying to accomplish. They runmini-experiments on our code and help us better understand our code and theproblem we are solving.InstructionsThere are three functions that have been declared for you. You will need to fill in the following code:scuberGreetingForFeet() — Use if and else if statements to return thecorrect greeting based on the distance the passenger desires to travel.ternaryCheckCity() — Use a ternary operator to return the correct responsebased on the desired destination of the passenger.switchOnCharmFromTip() — Use a switch statement to return a differentresponse based on the generosity of the passenger's tip.NOTE: Beware a gotcha! In JavaScript, you cannot express the concept of'between' in the following way:2 < 5 < 4// => trueIt seems like that expression should evaluate to false because 5 is not lessthan 4. However, we're forgetting about the order of operations — let'sthink about how the JavaScript engine evaluates that expression. First, theengine compares 2 < 5, which evaluates to true. At that point, it's asthough the value true has replaced 2 < 5 in the expression, resulting intrue < 4. The engine sees that we're trying to compare a non-number (true)against a number (4), and under the hood it converts true into a number:Number(true);// => 1That leaves us with 1 < 4, which the JavaScript engine correctly evaluates totrue. Can you figure out how to properly evaluate whether 5 is greater than2 AND 5 is less than 4 using logical operators? Ponder that as you workthrough the assignment.After you have all the tests passing, remember to commit and push your changesup to GitHub, then submit your work to Canvas using CodeGrade. If you need areminder, go back to the Completing and Submitting Assignments withCodeGrade lesson to review the process.Good luck!"
48,48,learn-co-students/js-if-else-files-lab-bootcamp-prep-000,https://github.com/learn-co-students/js-if-else-files-lab-bootcamp-prep-000/blob/master/README.md,JavaScript,"Using Conditionals and Multiple Files in JSIntroductionWe now know how to use conditionals. Now, let's use conditionals to test ourcode for correctness. This is your first step towards how professionaldevelopers write software. Professional developers test their code forcorrectness. Instead of constantly clicking around their applications, mostdevelopers write additional code, called tests that ensure their code isoutputting the right things. In fact, they may even write tests first beforethey actually do any work towards a project to help ensure the code they writedoes what they expect it to do!We will eventually explain how to use the professional testing tools but first,let's go over a simple example.InstructionsAfter you open this lesson in the IDE, in the js folder, double-click onindex.js. You'll see some basic code:// ./js/index.jsvar name = \""Joe\""var height = \""74\""// Don't worry about thismodule.exports = { name, height}First of all, don't worry about the module.exports stuff right now, we'll getto that later. You've seen the rest of this stuff before but let's review. Thisassigns \""Joe\"" to the name variable using the assignment operator (=). Italso assigns \""74\"" to height. Both \""Joe\"" and \""74\"" are Strings. We knowthat because they are wrapped in quotes. We have our code, but we don't have ourtests. Let's write a test right below the var height = \""74\"" line to check thatname is equal to \""Susan\"". That should look something like this:if (name === \""Susan\"") {    console.log(\""The name is correct\"")}Write that, and then run your index.js file with node js/index.js in theterminal. You'll see nothing printed out. That's because our name variabledoesn't equal \""Susan\"". Let's put in an else statement that prints \""Expected the name to be Susan\"". Give it a try on your own.OK, you gave it a try, now let's look at the solution:if (name === \""Susan\"") {    console.log(\""The name is correct\"")} else {    console.log(\""Expected the name to be Susan\"")}See what we did there? Great! Now run your code again by typingnode js/index.js in the terminal and you should getExpected the name to be Susan printed out. Let's fix our name variable toequal \""Susan\"". Modify the first line to say:var name = \""Susan\""Re-run your code and boom! you did it :)In later steps, we'll be doing our testing in other files. So, for now, let'srevert index.js to its original state. Make sure the index.js file is saved andthat it looks like this:var name = \""Joe\""var height = \""74\""// Don't worry about thismodule.exports = { name, height}Separating Tests from Application CodeAs you can probably imagine, a large application will have many tests. Averagesized applications will have thousands of tests. It gets a bit confusing to havethe application code mixed in with your test code. We want to separate them outso it's not a pain to sift through our files.Let's open up another JavaScript file and play around with separating thingsout. There is a blank JS file included in this lab called other_file.jslocated in the js folder. Double click on that and you'll see a blank file.Let's say we wanted to console.log the name variable from our index.jsfile. Seems fairly easy. Go ahead and type console.log(name). Now let's runthis new file by typing node js/other_file.js in our terminal. BOOM! You'll getan error that looks like this:/home/jmburges/code/labs/js-functions-lab/test.js:1(function (exports, require, module, __filename, __dirname) { console.log(name)                                                                          ^ReferenceError: name is not defined    at Object.<anonymous> (/home/jmburges/code/labs/js-functions-lab/test.js:1:75)    at Module._compile (module.js:570:32)    at Object.Module._extensions..js (module.js:579:10)    at Module.load (module.js:487:32)    at tryModuleLoad (module.js:446:12)    at Function.Module._load (module.js:438:3)    at Module.runMain (module.js:604:10)    at run (bootstrap_node.js:393:7)    at startup (bootstrap_node.js:150:9)    at bootstrap_node.js:508:3The important line here is the ReferenceError: name is not defined line. Thatsays that our name variable doesn't exist in the other_file.js file. Thatmakes sense. In other_file.js we never write the line of code to createname. We have the line var name = \""Joe\"" in index.js. We need to tellother_file.js about the existence of index.js! Let's do that by replacingthe contents of other_file.js with the following line of code:var index = require(\""./index.js\"")This tells javascript to load the index.js file and put its contents inside ofthe index variable within other_file.js. That's a bit confusing, but it'sfairly straight forward to use. Thanks to require(), we now have access to thevariables we exported from index.js, including name. To access name withinother_file.js, we can simply refer to the name property of the indexvariable, which, again, is where we used require() to store the contents ofindex.js. Let's add the following line to other_file.js:var index = require(\""./index.js\"")console.log(index.name)Give that a run by typing node js/other_file.js and you should see the namegetting printed out. Awesome!Your TurnYou now know how multiple files interact as well as how if statements work.Now, you have to write your code to match some specific tests. Open upjs/tests.js and you will see two if statements. Let's give this a run tostart things off by typing node js/tests.js. You should get two messages:Expected: Susan, Received: JoeExpected: 70, Received: 74Now, it's your job to modify index.js so that when you run node js/tests.jsthe messages you see logged to the console are:The name is correctThe height is correctNote: Capitalization matters. Also, whether or not you use a String orNumber matters. Numbers don't have any quotes around them, Strings do havequotes around them!When you've finished your solution, and the tests show the output above, runlearn submit from the console to submit your solution."
49,49,ironhack-labs/lab-javascript-clue,https://github.com/ironhack-labs/lab-javascript-clue/blob/master/README.md,JavaScript,"LAB | JS Clue (mixing objects and arrays)     Learning Goals  This exercise allows you to practice and apply the concepts and techniques taught in class.Upon completion of this exercise, you will be able to:Run predefined tests in Jasmine to verify that the program meets the technical requirements.Identify expected code behavior by reading and understanding test results and errors.Create objects using the object literal syntaxDeclare and invoke functionsUse the return keyword to return a value from a function.Pass arrays to functions as arguments.Access objects stored in arrays,Access object properties using the dot notation and bracket notationIterate over arrays using the for and forEach loops.     IntroductionDo you remember the classic detective board game Clue? It was a very popular game in the 90s.The plot starts with the death of Mr. Boddy, the very wealthy owner of Tudor Manor. He was killed under highly suspicious circumstances, and the player's mission is to uncover which suspect murdered him, what weapon was used, and in which room of the mansion the crime took place.When playing Clue, these three details are represented by a suspect card, a weapon card and a room card that are kept hidden in an envelope for the duration of the game. By progressively revealing the remaining cards, the players can infer which are the three cards that are hidden. When a player is confident that they know the solution to the mystery, they will try to reveal it. If a player guesses correctly, they win the game.RequirementsFork this repoClone this repoSubmissionUpon completion, run the following commands:git add .git commit -m \""Solved lab\""git push origin masterCreate a Pull Request so that your TAs can check your work.Test Your CodeThis LAB is equipped with unit tests to provide automated feedback on your lab progress. If you want to check the tests, they are in the tests/clue.spec.js file.To run the tests and your JavaScript code, open the SpecRunner.html file using the Live Server VSCode extension.To see the outputs of the console.log in your JavaScript code, open the Console in the Developer Tools.InstructionsYou will work in the src/clue.js file, already loaded in the SpecRunner.html file.To run the tests and your JavaScript code, open the SpecRunner.html file using the Live Server VSCode extension.Iteration 1: Create the cardsClue has three different card types: suspects, rooms, and weapons.Let's create an array for every card type. These arrays should be named suspectsArray, weaponsArray, roomsArray.Each array will contain objects, where each object represents one card.All of the information you need about suspects, rooms, and weapons can be found on the DATA.md file.Suggestion: Copy this data into the clue.js file and model it into objects nested inside your cards' arrays. This is a great chance for you to experiment with IDE shortcuts, multiple-line selection, find and replace, and other great features that VS Code provides.SuspectsAll of six possible suspects in Clue have a first name, last name, occupation, age, description, image and color.To complete this iteration, you should have an array that looks something like the following:const suspectsArray = [  {    firstName: 'Jacob',    lastName: 'Green',    occupation: 'Entrepreneur'    // ...  }  // ...];WeaponsThere are a total of nine weapons. Each of them has a different name and weight.RoomsThe game board represents the blueprints of the mansion and features fifteen different rooms. Each room will only have a name.Iteration 2: Create the mysteryAt the beginning of the game, players shuffle each of the card stacks to create a combination of suspect, weapon and room. This will be the mystery to solve.Random selectorDeclare a function named selectRandom to select one element from a card stack randomly. The function should expect an array as an argument and should return a random element from the array.Create the mysteryDeclare a function named pickMystery that takes no arguments and returns an object with three properties: suspect, weapon and room, each holding as a value a card of that specific type. You can get a random card of each type by calling selectRandom on each card stack.Iteration 3: Reveal the mysteryAt last, we are ready to reveal the mystery.Declare a function named revealMystery that receives an envelope object (with the shape of the object returned by pickMystery) as the single argument and returns a revealing message in the following format:<FIRST NAME> <LAST NAME> killed Mr. Boddy using the <WEAPON> in the <ROOM>!Extra ResourcesData Structures: Objects and Arrays20 Mind-blowing facts about CluedoCluedo - WikipediaHappy coding! ❤️FAQs  I am stuck in the exercise and don't know how to solve the problem or where to start.  If you are stuck in your code and don't know how to solve the problem or where to start, you should take a step back and try to form a clear question about the specific issue you are facing. This will help you narrow down the problem and come up with potential solutions.For example, is it a concept that you don't understand, or are you receiving an error message that you don't know how to fix? It is usually helpful to try to state the problem as clearly as possible, including any error messages you are receiving. This can help you communicate the issue to others and potentially get help from classmates or online resources.Once you have a clear understanding of the problem, you will be able to start working toward the solution.Back to top  How do I loop over an array?  Loops allow you to repeat a block of code a certain number of times. There are several ways to loop over an array in JavaScript:For loopThe for loop is the most traditional way to loop through an array in JavaScript. It consists of three parts: the initialization, the condition, and the increment/decrement:const animals = ['cat', 'dog', 'bird'];// initialize counter variable (let i = 0)// set condition (i < animals.length)// increment counter (i++)for (let i = 0; i < animals.length; i++) {  console.log(animals[i]);}The initialization is where you declare a counter variable and set its initial value.The condition is a boolean expression that is evaluated before each iteration of the loop. If the condition is true, the loop will continue. Once the condition turns false, the loop will terminate.The increment/decrement is where you update the counter variable and it happens at the end of each iteration.The block of code inside the loop is repeated during each iteration.While loopThe while loop is another way to loop through an array in JavaScript. It consists of a condition and a block of code that is executed as long as the condition is true.Like the for loop, the while loop requires a counter variable to keep track of the current position in the array. The counter variable must be initialized before the loop and incremented or decremented at the end of each iteration.const animals = ['cat', 'dog', 'bird'];// initialize a counter variable (i)let i = 0;// set condition (i < animals.length)while (i < animals.length) {  console.log(animals[i]);    // increment counter (i++)  i++;}Back to top  How do I loop over an array using the forEach() method?  The forEach() method executes a provided function once for each array element. It does not return a new array but rather executes the function on each element in the array.The syntax of the forEach() method is as follows:array.forEach( function(element) {  // code to be executed for each element});  Here is an example that uses the forEach() method to log each element and its index in an array to the console:const fruits = ['apple', 'banana', 'cherry'];fruits.forEach( function(element, index) {  console.log(`${index}: ${element}`);});  You can also use an arrow function as the callback function for forEach():fruits.forEach((element, index) => {  console.log(`${index}: ${element}`);});Back to top  What could cause array.length to return undefined?  If you try to access the .length property on an array (e.g., array.length) but get undefined, it means that the variable you are accessing is not actually an array.How do I fix this?Check that the variable you are trying to access is actually an array.Back to top  How do you generate a random number in JavaScript?  To generate a random number using the Math.random() method.The Math.random() method returns a random floating-point (decimal) number in the range between 0 and 0.9999999999999999. Example:const randomNumber = Math.random();console.log(randomNumber);  To generate a random integer within a specific range, use the following formula:const min = 1;const max = 10;const randomInteger = Math.floor(Math.random() * (max-min + 1)) + min;console.log(randomInteger);This will generate a random number that is an integer between 1 and 10 (inclusive).For more information, check: MDN: Math.random()Back to top  All of the Jasmine tests are failing and in red. Why did this happen?  One possible reason why all of the Jasmine tests are failing is that there is a syntax error in the code being tested. If the code contains a syntax error, it will not be loaded properly and none of the tests will be able to run. This will cause all of the tests to fail.To troubleshoot this issue, you will need to examine the code being tested for syntax errors. Look for missing brackets, semicolons, or other syntax issues that could be causing the problem. If you find a syntax error, correct it and try running the tests again.Another possibility is that there is an issue with the tests. It is possible that you may have modified the test file and caused an issue. If you have made changes to the test file, try copying and pasting the original test file and running the tests again to see if this resolves the issue.Back to top  I am unable to push changes to the repository. What should I do?  There are a couple of possible reasons why you may be unable to push changes to a Git repository:You have not committed your changes: Before you can push your changes to the repository, you need to commit them using the git commit command. Make sure you have committed your changes and try pushing again. To do this, run the following terminal commands from the project folder:git add .git commit -m \""Your commit message\""git pushYou do not have permission to push to the repository: If you have cloned the repository directly from the main Ironhack repository without making a Fork first, you do not have write access to the repository.To check which remote repository you have cloned, run the following terminal command from the project folder:git remote -vIf the link shown is the same as the main Ironhack repository, you will need to fork the repository to your GitHub account first and then clone your fork to your local machine to be able to push the changes.Note: You should make a copy of your local code to avoid losing it in the process.Back to top"
50,50,Rob--W/cors-anywhere,https://github.com/Rob--W/cors-anywhere/blob/master/README.md,JavaScript,"CORS Anywhere is a NodeJS proxy which adds CORS headers to the proxied request.The url to proxy is literally taken from the path, validated and proxied. The protocolpart of the proxied URI is optional, and defaults to \""http\"". If port 443 is specified,the protocol defaults to \""https\"".This package does not put any restrictions on the http methods or headers, except forcookies. Requesting user credentials is disallowed.The app can be configured to require a header for proxying a request, for example to avoida direct visit from the browser.Example// Listen on a specific host via the HOST environment variablevar host = process.env.HOST || '0.0.0.0';// Listen on a specific port via the PORT environment variablevar port = process.env.PORT || 8080;var cors_proxy = require('cors-anywhere');cors_proxy.createServer({    originWhitelist: [], // Allow all origins    requireHeader: ['origin', 'x-requested-with'],    removeHeaders: ['cookie', 'cookie2']}).listen(port, host, function() {    console.log('Running CORS Anywhere on ' + host + ':' + port);});Request examples:http://localhost:8080/http://google.com/ - Google.com with CORS headershttp://localhost:8080/google.com - Same as previous.http://localhost:8080/google.com:443 - Proxies https://google.com/http://localhost:8080/ - Shows usage text, as defined in lib/help.txthttp://localhost:8080/favicon.ico - Replies 404 Not foundLive examples:https://cors-anywhere.herokuapp.com/https://robwu.nl/cors-anywhere.html - This demo shows how to use the API.DocumentationClientTo use the API, just prefix the URL with the API URL. Take a look at demo.html for an example.A concise summary of the documentation is provided at lib/help.txt.Note: as of February 2021, access to the demo server requires an opt-in,see: https://github.com/Rob--W/cors-anywhere/issues/301If you want to automatically enable cross-domain requests when needed, use the following snippet:(function() {    var cors_api_host = 'cors-anywhere.herokuapp.com';    var cors_api_url = 'https://' + cors_api_host + '/';    var slice = [].slice;    var origin = window.location.protocol + '//' + window.location.host;    var open = XMLHttpRequest.prototype.open;    XMLHttpRequest.prototype.open = function() {        var args = slice.call(arguments);        var targetOrigin = /^https?:\\/\\/([^\\/]+)/i.exec(args[1]);        if (targetOrigin && targetOrigin[0].toLowerCase() !== origin &&            targetOrigin[1] !== cors_api_host) {            args[1] = cors_api_url + args[1];        }        return open.apply(this, args);    };})();If you're using jQuery, you can also use the following code instead of the previous one:jQuery.ajaxPrefilter(function(options) {    if (options.crossDomain && jQuery.support.cors) {        options.url = 'https://cors-anywhere.herokuapp.com/' + options.url;    }});ServerThe module exports createServer(options), which creates a server that handlesproxy requests. The following options are supported:function getProxyForUrl - If set, specifies which intermediate proxy to use for a given URL.If the return value is void, a direct request is sent. The default implementation isproxy-from-env, which respects the standard proxyenvironment variables (e.g. https_proxy, no_proxy, etc.).array of strings originBlacklist - If set, requests whose origin is listed are blocked.Example: ['https://bad.example.com', 'http://bad.example.com']array of strings originWhitelist - If set, requests whose origin is not listed are blocked.If this list is empty, all origins are allowed.Example: ['https://good.example.com', 'http://good.example.com']function handleInitialRequest - If set, it is called with the request, response and a parsedURL of the requested destination (null if unavailable). If the function returns true, the requestwill not be handled further. Then the function is responsible for handling the request.This feature can be used to passively monitor requests, for example for logging (return false).function checkRateLimit - If set, it is called with the origin (string) of the request. If thisfunction returns a non-empty string, the request is rejected and the string is send to the client.boolean redirectSameOrigin - If true, requests to URLs from the same origin will not be proxied but redirected.The primary purpose for this option is to save server resources by delegating the request to the client(since same-origin requests should always succeed, even without proxying).array of strings requireHeader - If set, the request must include this header or the API will refuse to proxy.Recommended if you want to prevent users from using the proxy for normal browsing.Example: ['Origin', 'X-Requested-With'].array of lowercase strings removeHeaders - Exclude certain headers from being included in the request.Example: [\""cookie\""]dictionary of lowercase strings setHeaders - Set headers for the request (overwrites existing ones).Example: {\""x-powered-by\"": \""CORS Anywhere\""}number corsMaxAge - If set, an Access-Control-Max-Age request header with this value (in seconds) will be added.Example: 600 - Allow CORS preflight request to be cached by the browser for 10 minutes.string helpFile - Set the help file (shown at the homepage).Example: \""myCustomHelpText.txt\""For advanced users, the following options are also provided.httpProxyOptions - Under the hood, http-proxyis used to proxy requests. Use this option if you really need to pass optionsto http-proxy. The documentation for these options can be found here.httpsOptions - If set, a https.Server will be created. The given options are passed to thehttps.createServer method.For even more advanced usage (building upon CORS Anywhere),see the sample code in test/test-examples.js.Demo serverA public demo of CORS Anywhere is available at https://cors-anywhere.herokuapp.com. This server isonly provided so that you can easily and quickly try out CORS Anywhere. To ensure that the servicestays available to everyone, the number of requests per period is limited, except for requests fromsome explicitly whitelisted origins.Note: as of February 2021, access to the demo server requires an opt-in,see: https://github.com/Rob--W/cors-anywhere/issues/301If you expect lots of traffic, please host your own instance of CORS Anywhere, and make sure thatthe CORS Anywhere server only whitelists your site to prevent others from using your instance ofCORS Anywhere as an open proxy.For instance, to run a CORS Anywhere server that accepts any request from some example.com sites onport 8080, use:export PORT=8080export CORSANYWHERE_WHITELIST=https://example.com,http://example.com,http://example.com:8080node server.jsThis application can immediately be run on Heroku, see https://devcenter.heroku.com/articles/nodejsfor instructions. Note that their Acceptable Use Policy forbidsthe use of Heroku for operating an open proxy, so make sure that you either enforce a whitelist asshown above, or severly rate-limit the number of requests.For example, to blacklist abuse.example.com and rate-limit everything to 50 requests per 3 minutes,except for my.example.com and my2.example.com (which may be unlimited), use:export PORT=8080export CORSANYWHERE_BLACKLIST=https://abuse.example.com,http://abuse.example.comexport CORSANYWHERE_RATELIMIT='50 3 my.example.com my2.example.com'node server.jsLicenseCopyright (C) 2013 - 2021 Rob Wu rob@robwu.nlPermission is hereby granted, free of charge, to any person obtaining a copy ofthis software and associated documentation files (the \""Software\""), to deal inthe Software without restriction, including without limitation the rights touse, copy, modify, merge, publish, distribute, sublicense, and/or sell copiesof the Software, and to permit persons to whom the Software is furnished to doso, subject to the following conditions:The above copyright notice and this permission notice shall be included in allcopies or substantial portions of the Software.THE SOFTWARE IS PROVIDED \""AS IS\"", WITHOUT WARRANTY OF ANY KIND, EXPRESS ORIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THEAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHERLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THESOFTWARE."
51,51,cyclic-software/express-hello-world,https://github.com/cyclic-software/express-hello-world/blob/main/README.md,JavaScript,"Cyclic - Express Hello WorldThis is a basic starter Expressjs app with:Static file hostingLogging MiddlewareCatch-all handler that echoes request infoLocal Quick StartClone to your localInstall dependencies npm installRun locally npm serveMake requestsBrowser: http://localhost:3000/some/path?q=query+one&q=second+query&single=valueCommand line: curl -i -XGET \""http://localhost:3000/cmd/line-curl\""Deploy in under 10 secondsSets up instant continuous deployment on git pushRealtime backend logs and API request monitoringCyclic RuntimeCyclic hosts your app on serverless infrastructure. That means there is no guarantee of memory or file system persistence between requests.The runtime expects a nodejs entry point defined as:package.json \""main\"" field defines the entry point file (if missing uses index.js)Entry point starts a server on process.env.PORTSay HiAsk a question or give us a shout out:💌 hello@cyclic.sh🐣 https://twitter.com/cyclicsoftware"
52,52,ViktoryiaYatskova/clean-code-s1e1,https://github.com/cyclic-software/express-hello-world/blob/main/README.md,JavaScript,"Cyclic - Express Hello WorldThis is a basic starter Expressjs app with:Static file hostingLogging MiddlewareCatch-all handler that echoes request infoLocal Quick StartClone to your localInstall dependencies npm installRun locally npm serveMake requestsBrowser: http://localhost:3000/some/path?q=query+one&q=second+query&single=valueCommand line: curl -i -XGET \""http://localhost:3000/cmd/line-curl\""Deploy in under 10 secondsSets up instant continuous deployment on git pushRealtime backend logs and API request monitoringCyclic RuntimeCyclic hosts your app on serverless infrastructure. That means there is no guarantee of memory or file system persistence between requests.The runtime expects a nodejs entry point defined as:package.json \""main\"" field defines the entry point file (if missing uses index.js)Entry point starts a server on process.env.PORTSay HiAsk a question or give us a shout out:💌 hello@cyclic.sh🐣 https://twitter.com/cyclicsoftware"
53,53,sudheerj/javascript-interview-questions,https://github.com/sudheerj/javascript-interview-questions/blob/master/README.md,JavaScript,"JavaScript Interview Questions & AnswersClick ⭐if you like the project and follow @SudheerJonna for more updates. Coding questions available here. PDF and Epub versions available at actions tab.                  Take this JavaScript Projects course to go from a JS beginner to confidently building your own projects    Take this coding interview bootcamp if you’re serious about getting hired and don’t have a CS degree    Take this Advanced JavaScript Course to learn advanced JS concepts and become a top JS developer      Table of ContentsNo.Questions1What are the possible ways to create objects in JavaScript2What is prototype chain3What is the difference between Call, Apply and Bind4What is JSON and its common operations5What is the purpose of the array slice method6What is the purpose of the array splice method7What is the difference between slice and splice8How do you compare Object and Map9What is the difference between == and === operators10What are lambda or arrow functions11What is a first class function12What is a first order function13What is a higher order function14What is a unary function15What is the currying function16What is a pure function17What is the purpose of the let keyword18What is the difference between let and var19What is the reason to choose the name let as a keyword20How do you redeclare variables in switch block without an error21What is the Temporal Dead Zone22What is IIFE(Immediately Invoked Function Expression)23How do you decode or encode a URL in JavaScript?24What is memoization25What is Hoisting26What are classes in ES627What are closures28What are modules29Why do you need modules30What is scope in javascript31What is a service worker32How do you manipulate DOM using a service worker33How do you reuse information across service worker restarts34What is IndexedDB35What is web storage36What is a post message37What is a cookie38Why do you need a Cookie39What are the options in a cookie40How do you delete a cookie41What are the differences between cookie, local storage and session storage42What is the main difference between localStorage and sessionStorage43How do you access web storage44What are the methods available on session storage45What is a storage event and its event handler46Why do you need web storage47How do you check web storage browser support48How do you check web workers browser support49Give an example of a web worker50What are the restrictions of web workers on DOM51What is a promise52Why do you need a promise53What are the three states of promise54What is a callback function55Why do we need callbacks56What is a callback hell57What are server-sent events58How do you receive server-sent event notifications59How do you check browser support for server-sent events60What are the events available for server sent events61What are the main rules of promise62What is callback in callback63What is promise chaining64What is promise.all65What is the purpose of the race method in promise66What is a strict mode in javascript67Why do you need strict mode68How do you declare strict mode69What is the purpose of double exclamation70What is the purpose of the delete operator71What is typeof operator72What is undefined property73What is null value74What is the difference between null and undefined75What is eval76What is the difference between window and document77How do you access history in javascript78How do you detect caps lock key turned on or not79What is isNaN80What are the differences between undeclared and undefined variables81What are global variables82What are the problems with global variables83What is NaN property84What is the purpose of isFinite function85What is an event flow86What is event bubbling87What is event capturing88How do you submit a form using JavaScript89How do you find operating system details90What is the difference between document load and DOMContentLoaded events91What is the difference between native, host and user objects92What are the tools or techniques used for debugging JavaScript code93What are the pros and cons of promises over callbacks94What is the difference between an attribute and a property95What is same-origin policy96What is the purpose of void 097Is JavaScript a compiled or interpreted language98Is JavaScript a case-sensitive language99Is there any relation between Java and JavaScript100What are events101Who created javascript102What is the use of preventDefault method103What is the use of stopPropagation method104What are the steps involved in return false usage105What is BOM106What is the use of setTimeout107What is the use of setInterval108Why is JavaScript treated as Single threaded109What is an event delegation110What is ECMAScript111What is JSON112What are the syntax rules of JSON113What is the purpose JSON stringify114How do you parse JSON string115Why do you need JSON116What are PWAs117What is the purpose of clearTimeout method118What is the purpose of clearInterval method119How do you redirect new page in javascript120How do you check whether a string contains a substring121How do you validate an email in javascript122How do you get the current url with javascript123What are the various url properties of location object124How do get query string values in javascript125How do you check if a key exists in an object126How do you loop through or enumerate javascript object127How do you test for an empty object128What is an arguments object129How do you make first letter of the string in an uppercase130What are the pros and cons of for loop131How do you display the current date in javascript132How do you compare two date objects133How do you check if a string starts with another string134How do you trim a string in javascript135How do you add a key value pair in javascript136Is the '!--' notation represents a special operator137How do you assign default values to variables138How do you define multiline strings139What is an app shell model140Can we define properties for functions141What is the way to find the number of parameters expected by a function142What is a polyfill143What are break and continue statements144What are js labels145What are the benefits of keeping declarations at the top146What are the benefits of initializing variables147What are the recommendations to create new object148How do you define JSON arrays149How do you generate random integers150Can you write a random integers function to print integers with in a range151What is tree shaking152What is the need of tree shaking153Is it recommended to use eval154What is a Regular Expression155What are the string methods available in Regular expression156What are modifiers in regular expression157What are regular expression patterns158What is a RegExp object159How do you search a string for a pattern160What is the purpose of exec method161How do you change the style of a HTML element162What would be the result of 1+2+'3'163What is a debugger statement164What is the purpose of breakpoints in debugging165Can I use reserved words as identifiers166How do you detect a mobile browser167How do you detect a mobile browser without regexp168How do you get the image width and height using JS169How do you make synchronous HTTP request170How do you make asynchronous HTTP request171How do you convert date to another timezone in javascript172What are the properties used to get size of window173What is a conditional operator in javascript174Can you apply chaining on conditional operator175What are the ways to execute javascript after page load176What is the difference between proto and prototype177Give an example where do you really need semicolon178What is a freeze method179What is the purpose of freeze method180Why do I need to use freeze method181How do you detect a browser language preference182How to convert string to title case with javascript183How do you detect javascript disabled in the page184What are various operators supported by javascript185What is a rest parameter186What happens if you do not use rest parameter as a last argument187What are the bitwise operators available in javascript188What is a spread operator189How do you determine whether object is frozen or not190How do you determine two values same or not using object191What is the purpose of using object is method192How do you copy properties from one object to other193What are the applications of assign method194What is a proxy object195What is the purpose of seal method196What are the applications of seal method197What are the differences between freeze and seal methods198How do you determine if an object is sealed or not199How do you get enumerable key and value pairs200What is the main difference between Object.values and Object.entries method201How can you get the list of keys of any object202How do you create an object with prototype203What is a WeakSet204What are the differences between WeakSet and Set205List down the collection of methods available on WeakSet206What is a WeakMap207What are the differences between WeakMap and Map208List down the collection of methods available on WeakMap209What is the purpose of uneval210How do you encode an URL211How do you decode an URL212How do you print the contents of web page213What is the difference between uneval and eval214What is an anonymous function215What is the precedence order between local and global variables216What are javascript accessors217How do you define property on Object constructor218What is the difference between get and defineProperty219What are the advantages of Getters and Setters220Can I add getters and setters using defineProperty method221What is the purpose of switch-case222What are the conventions to be followed for the usage of switch case223What are primitive data types224What are the different ways to access object properties225What are the function parameter rules226What is an error object227When you get a syntax error228What are the different error names from error object229What are the various statements in error handling230What are the two types of loops in javascript231What is nodejs232What is an Intl object233How do you perform language specific date and time formatting234What is an Iterator235How does synchronous iteration works236What is an event loop237What is call stack238What is an event queue239What is a decorator240What are the properties of Intl object241What is an Unary operator242How do you sort elements in an array243What is the purpose of compareFunction while sorting arrays244How do you reversing an array245How do you find min and max value in an array246How do you find min and max values without Math functions247What is an empty statement and purpose of it248How do you get metadata of a module249What is a comma operator250What is the advantage of a comma operator251What is typescript252What are the differences between javascript and typescript253What are the advantages of typescript over javascript254What is an object initializer255What is a constructor method256What happens if you write constructor more than once in a class257How do you call the constructor of a parent class258How do you get the prototype of an object259What happens If I pass string type for getPrototype method260How do you set prototype of one object to another261How do you check whether an object can be extendable or not262How do you prevent an object to extend263What are the different ways to make an object non-extensible264How do you define multiple properties on an object265What is MEAN in javascript266What Is Obfuscation in javascript267Why do you need Obfuscation268What is Minification269What are the advantages of minification270What are the differences between Obfuscation and Encryption271What are the common tools used for minification272How do you perform form validation using javascript273How do you perform form validation without javascript274What are the DOM methods available for constraint validation275What are the available constraint validation DOM properties276What are the list of validity properties277Give an example usage of rangeOverflow property278Is enums feature available in javascript279What is an enum280How do you list all properties of an object281How do you get property descriptors of an object282What are the attributes provided by a property descriptor283How do you extend classes284How do I modify the url without reloading the page285How do you check whether an array includes a particular value or not286How do you compare scalar arrays287How to get the value from get parameters288How do you print numbers with commas as thousand separators289What is the difference between java and javascript290Does javascript supports namespace291How do you declare namespace292How do you invoke javascript code in an iframe from parent page293How do get the timezone offset from date294How do you load CSS and JS files dynamically295What are the different methods to find HTML elements in DOM296What is jQuery297What is V8 JavaScript engine298Why do we call javascript as dynamic language299What is a void operator300How to set the cursor to wait301How do you create an infinite loop302Why do you need to avoid with statement303What is the output of below for loops304List down some of the features of ES6305What is ES6306Can I redeclare let and const variables307Is const variable makes the value immutable308What are default parameters309What are template literals310How do you write multi-line strings in template literals311What are nesting templates312What are tagged templates313What are raw strings314What is destructuring assignment315What are default values in destructuring assignment316How do you swap variables in destructuring assignment317What are enhanced object literals318What are dynamic imports319What are the use cases for dynamic imports320What are typed arrays321What are the advantages of module loaders322What is collation323What is for...of statement324What is the output of below spread operator array325Is PostMessage secure326What are the problems with postmessage target origin as wildcard327How do you avoid receiving postMessages from attackers328Can I avoid using postMessages completely329Is postMessages synchronous330What paradigm is Javascript331What is the difference between internal and external javascript332Is JavaScript faster than server side script333How do you get the status of a checkbox334What is the purpose of double tilde operator335How do you convert character to ASCII code336What is ArrayBuffer337What is the output of below string expression338What is the purpose of Error object339What is the purpose of EvalError object340What are the list of cases error thrown from non-strict mode to strict mode341Do all objects have prototypes342What is the difference between a parameter and an argument343What is the purpose of some method in arrays344How do you combine two or more arrays345What is the difference between Shallow and Deep copy346How do you create specific number of copies of a string347How do you return all matching strings against a regular expression348How do you trim a string at the beginning or ending349What is the output of below console statement with unary operator350Does javascript uses mixins351What is a thunk function352What are asynchronous thunks353What is the output of below function calls354How to remove all line breaks from a string355What is the difference between reflow and repaint356What happens with negating an array357What happens if we add two arrays358What is the output of prepend additive operator on falsy values359How do you create self string using special characters360How do you remove falsy values from an array361How do you get unique values of an array362What is destructuring aliases363How do you map the array values without using map method364How do you empty an array365How do you rounding numbers to certain decimals366What is the easiest way to convert an array to an object367How do you create an array with some data368What are the placeholders from console object369Is it possible to add CSS to console messages370What is the purpose of dir method of console object371Is it possible to debug HTML elements in console372How do you display data in a tabular format using console object373How do you verify that an argument is a Number or not374How do you create copy to clipboard button375What is the shortcut to get timestamp376How do you flattening multi dimensional arrays377What is the easiest multi condition checking378How do you capture browser back button379How do you disable right click in the web page380What are wrapper objects381What is AJAX382What are the different ways to deal with Asynchronous Code383How to cancel a fetch request384What is web speech API385What is minimum timeout throttling386How do you implement zero timeout in modern browsers387What are tasks in event loop388What is microtask389What are different event loops390What is the purpose of queueMicrotask391How do you use javascript libraries in typescript file392What are the differences between promises and observables393What is heap394What is an event table395What is a microTask queue396What is the difference between shim and polyfill397How do you detect primitive or non primitive value type398What is babel399Is Node.js completely single threaded400What are the common use cases of observables401What is RxJS402What is the difference between Function constructor and function declaration403What is a Short circuit condition404What is the easiest way to resize an array405What is an observable406What is the difference between function and class declarations407What is an async function408How do you prevent promises swallowing errors409What is deno410How do you make an object iterable in javascript411What is a Proper Tail Call412How do you check an object is a promise or not413How to detect if a function is called as constructor414What are the differences between arguments object and rest parameter415What are the differences between spread operator and rest parameter416What are the different kinds of generators417What are the built-in iterables418What are the differences between for...of and for...in statements419How do you define instance and non-instance properties420What is the difference between isNaN and Number.isNaN?421How to invoke an IIFE without any extra brackets?422Is that possible to use expressions in switch cases?423What is the easiest way to ignore promise errors?424How do style the console output using CSS?425What is nullish coalescing operator (??)?426How do you group and nest console output?427What is the difference between dense and sparse arrays?428What are the different ways to create sparse arrays?429What is the difference between setTimeout, setImmediate and process.nextTick?430How do you reverse an array without modifying original array?431How do you create custom HTML element?432What is global execution context?433What is function execution context?434What is debouncing?435What is throttling?436What is optional chaining?437What is an environment record?438How to verify if a variable is an array?439What is pass by value and pass by reference?440What are the differences between primitives and non-primitives?441What are hidden classes?442What is inline caching?443How do you create your own bind method using either call or apply method?444What are the differences between pure and impure functions?445What is  referential transparency?446What are the possible side-effects in javascript?447What are compose and pipe functions?448What is module pattern?449What is Functon Composition?450How to use await outside of async function prior to ES2022?What are the possible ways to create objects in JavaScriptThere are many ways to create objects in javascript as belowObject constructor:The simplest way to create an empty object is using the Object constructor. Currently this approach is not recommended.var object = new Object();Object's create method:The create method of Object creates a new object by passing the prototype object as a parametervar object = Object.create(null);Object literal syntax:The object literal syntax (or object initializer), is a comma-separated set of name-value pairs wrapped in curly braces.var object = {     name: \""Sudheer\"",     age: 34};Object literal property values can be of any data type, including array, function, and nested object.Note: This is an easiest way to create an objectFunction constructor:Create any function and apply the new operator to create object instances,function Person(name) {  this.name = name;  this.age = 21;}var object = new Person(\""Sudheer\"");Function constructor with prototype:This is similar to function constructor but it uses prototype for their properties and methods,function Person() {}Person.prototype.name = \""Sudheer\"";var object = new Person();This is equivalent to an instance created with an object create method with a function prototype and then call that function with an instance and parameters as arguments.function func() {};new func(x, y, z);(OR)// Create a new instance using function prototype.var newInstance = Object.create(func.prototype)// Call the functionvar result = func.call(newInstance, x, y, z),// If the result is a non-null object then use it otherwise just use the new instance.console.log(result && typeof result === 'object' ? result : newInstance);ES6 Class syntax:ES6 introduces class feature to create the objectsclass Person {  constructor(name) {    this.name = name;  }}var object = new Person(\""Sudheer\"");Singleton pattern:A Singleton is an object which can only be instantiated one time. Repeated calls to its constructor return the same instance and this way one can ensure that they don't accidentally create multiple instances.var object = new (function () {  this.name = \""Sudheer\"";})();⬆ Back to TopWhat is a prototype chainPrototype chaining is used to build new types of objects based on existing ones. It is similar to inheritance in a class based language.The prototype on object instance is available through Object.getPrototypeOf(object) or __proto__ property whereas prototype on constructors function is available through Object.prototype.⬆ Back to TopWhat is the difference between Call, Apply and BindThe difference between Call, Apply and Bind can be explained with below examples,Call: The call() method invokes a function with a given this value and arguments provided one by onevar employee1 = { firstName: \""John\"", lastName: \""Rodson\"" };var employee2 = { firstName: \""Jimmy\"", lastName: \""Baily\"" };function invite(greeting1, greeting2) {  console.log(    greeting1 + \"" \"" + this.firstName + \"" \"" + this.lastName + \"", \"" + greeting2  );}invite.call(employee1, \""Hello\"", \""How are you?\""); // Hello John Rodson, How are you?invite.call(employee2, \""Hello\"", \""How are you?\""); // Hello Jimmy Baily, How are you?Apply: Invokes the function with a given this value and allows you to pass in arguments as an arrayvar employee1 = { firstName: \""John\"", lastName: \""Rodson\"" };var employee2 = { firstName: \""Jimmy\"", lastName: \""Baily\"" };function invite(greeting1, greeting2) {  console.log(    greeting1 + \"" \"" + this.firstName + \"" \"" + this.lastName + \"", \"" + greeting2  );}invite.apply(employee1, [\""Hello\"", \""How are you?\""]); // Hello John Rodson, How are you?invite.apply(employee2, [\""Hello\"", \""How are you?\""]); // Hello Jimmy Baily, How are you?bind: returns a new function, allowing you to pass any number of argumentsvar employee1 = { firstName: \""John\"", lastName: \""Rodson\"" };var employee2 = { firstName: \""Jimmy\"", lastName: \""Baily\"" };function invite(greeting1, greeting2) {  console.log(    greeting1 + \"" \"" + this.firstName + \"" \"" + this.lastName + \"", \"" + greeting2  );}var inviteEmployee1 = invite.bind(employee1);var inviteEmployee2 = invite.bind(employee2);inviteEmployee1(\""Hello\"", \""How are you?\""); // Hello John Rodson, How are you?inviteEmployee2(\""Hello\"", \""How are you?\""); // Hello Jimmy Baily, How are you?Call and apply are pretty interchangeable. Both execute the current function immediately. You need to decide whether it’s easier to send in an array or a comma separated list of arguments. You can remember by treating Call is for comma (separated list) and Apply is for Array.Whereas Bind creates a new function that will have this set to the first parameter passed to bind().⬆ Back to TopWhat is JSON and its common operationsJSON is a text-based data format following JavaScript object syntax, which was popularized by Douglas Crockford. It is useful when you want to transmit data across a network and it is basically just a text file with an extension of .json, and a MIME type of application/jsonParsing: Converting a string to a native objectJSON.parse(text);Stringification: converting a native object to a string so it can be transmitted across the networkJSON.stringify(object);⬆ Back to TopWhat is the purpose of the array slice methodThe slice() method returns the selected elements in an array as a new array object. It selects the elements starting at the given start argument, and ends at the given optional end argument without including the last element. If you omit the second argument then it selects till the end.Some of the examples of this method are,let arrayIntegers = [1, 2, 3, 4, 5];let arrayIntegers1 = arrayIntegers.slice(0, 2); // returns [1,2]let arrayIntegers2 = arrayIntegers.slice(2, 3); // returns [3]let arrayIntegers3 = arrayIntegers.slice(4); //returns [5]Note: Slice method won't mutate the original array but it returns the subset as a new array.⬆ Back to TopWhat is the purpose of the array splice methodThe splice() method is used either adds/removes items to/from an array, and then returns the removed item. The first argument specifies the array position for insertion or deletion whereas the optional second argument indicates the number of elements to be deleted. Each additional argument is added to the array.Some of the examples of this method are,let arrayIntegersOriginal1 = [1, 2, 3, 4, 5];let arrayIntegersOriginal2 = [1, 2, 3, 4, 5];let arrayIntegersOriginal3 = [1, 2, 3, 4, 5];let arrayIntegers1 = arrayIntegersOriginal1.splice(0, 2); // returns [1, 2]; original array: [3, 4, 5]let arrayIntegers2 = arrayIntegersOriginal2.splice(3); // returns [4, 5]; original array: [1, 2, 3]let arrayIntegers3 = arrayIntegersOriginal3.splice(3, 1, \""a\"", \""b\"", \""c\""); //returns [4]; original array: [1, 2, 3, \""a\"", \""b\"", \""c\"", 5]Note: Splice method modifies the original array and returns the deleted array.⬆ Back to TopWhat is the difference between slice and spliceSome of the major difference in a tabular formSliceSpliceDoesn't modify the original array(immutable)Modifies the original array(mutable)Returns the subset of original arrayReturns the deleted elements as arrayUsed to pick the elements from arrayUsed to insert or delete elements to/from array⬆ Back to TopHow do you compare Object and MapObjects are similar to Maps in that both let you set keys to values, retrieve those values, delete keys, and detect whether something is stored at a key. Due to this reason, Objects have been used as Maps historically. But there are important differences that make using a Map preferable in certain cases.The keys of an Object are Strings and Symbols, whereas they can be any value for a Map, including functions, objects, and any primitive.The keys in Map are ordered while keys added to Object are not. Thus, when iterating over it, a Map object returns keys in order of insertion.You can get the size of a Map easily with the size property, while the number of properties in an Object must be determined manually.A Map is an iterable and can thus be directly iterated, whereas iterating over an Object requires obtaining its keys in some fashion and iterating over them.An Object has a prototype, so there are default keys in the map that could collide with your keys if you're not careful. As of ES5 this can be bypassed by using map = Object.create(null), but this is seldom done.A Map may perform better in scenarios involving frequent addition and removal of key pairs.⬆ Back to TopWhat is the difference between == and === operatorsJavaScript provides both strict(===, !==) and type-converting(==, !=) equality comparison. The strict operators take type of variable in consideration, while non-strict operators make type correction/conversion based upon values of variables. The strict operators follow the below conditions for different types,Two strings are strictly equal when they have the same sequence of characters, same length, and same characters in corresponding positions.Two numbers are strictly equal when they are numerically equal. i.e, Having the same number value.There are two special cases in this,NaN is not equal to anything, including NaN.Positive and negative zeros are equal to one another.Two Boolean operands are strictly equal if both are true or both are false.Two objects are strictly equal if they refer to the same Object.Null and Undefined types are not equal with ===, but equal with ==. i.e,null===undefined --> false but null==undefined --> trueSome of the example which covers the above cases,0 == false   // true0 === false  // false1 == \""1\""     // true1 === \""1\""    // falsenull == undefined // truenull === undefined // false'0' == false // true'0' === false // false[]==[] or []===[] //false, refer different objects in memory{}=={} or {}==={} //false, refer different objects in memory⬆ Back to TopWhat are lambda or arrow functionsAn arrow function is a shorter syntax for a function expression and does not have its own this, arguments, super, or new.target. These functions are best suited for non-method functions, and they cannot be used as constructors.⬆ Back to TopWhat is a first class functionIn Javascript, functions are first class objects. First-class functions means when functions in that language are treated like any other variable.For example, in such a language, a function can be passed as an argument to other functions, can be returned by another function and can be assigned as a value to a variable. For example, in the below example, handler functions assigned to a listenerconst handler = () => console.log(\""This is a click handler function\"");document.addEventListener(\""click\"", handler);⬆ Back to TopWhat is a first order functionFirst-order function is a function that doesn’t accept another function as an argument and doesn’t return a function as its return value.const firstOrder = () => console.log(\""I am a first order function!\"");⬆ Back to TopWhat is a higher order functionHigher-order function is a function that accepts another function as an argument or returns a function as a return value or both.const firstOrderFunc = () =>  console.log(\""Hello, I am a First order function\"");const higherOrder = (ReturnFirstOrderFunc) => ReturnFirstOrderFunc();higherOrder(firstOrderFunc);⬆ Back to TopWhat is a unary functionUnary function (i.e. monadic) is a function that accepts exactly one argument. It stands for a single argument accepted by a function.Let us take an example of unary function,const unaryFunction = (a) => console.log(a + 10); // Add 10 to the given argument and display the value⬆ Back to TopWhat is the currying functionCurrying is the process of taking a function with multiple arguments and turning it into a sequence of functions each with only a single argument. Currying is named after a mathematician Haskell Curry. By applying currying, a n-ary function turns it into a unary function.Let's take an example of n-ary function and how it turns into a currying function,const multiArgFunction = (a, b, c) => a + b + c;console.log(multiArgFunction(1, 2, 3)); // 6const curryUnaryFunction = (a) => (b) => (c) => a + b + c;curryUnaryFunction(1); // returns a function: b => c =>  1 + b + ccurryUnaryFunction(1)(2); // returns a function: c => 3 + ccurryUnaryFunction(1)(2)(3); // returns the number 6Curried functions are great to improve code reusability and functional composition.⬆ Back to TopWhat is a pure functionA Pure function is a function where the return value is only determined by its arguments without any side effects. i.e, If you call a function with the same arguments 'n' number of times and 'n' number of places in the application then it will always return the same value.Let's take an example to see the difference between pure and impure functions,//Impurelet numberArray = [];const impureAddNumber = (number) => numberArray.push(number);//Pureconst pureAddNumber = (number) => (argNumberArray) =>  argNumberArray.concat([number]);//Display the resultsconsole.log(impureAddNumber(6)); // returns 1console.log(numberArray); // returns [6]console.log(pureAddNumber(7)(numberArray)); // returns [6, 7]console.log(numberArray); // returns [6]As per the above code snippets, the Push function is impure itself by altering the array and returning a push number index independent of the parameter value. . Whereas Concat on the other hand takes the array and concatenates it with the other array producing a whole new array without side effects. Also, the return value is a concatenation of the previous array.Remember that Pure functions are important as they simplify unit testing without any side effects and no need for dependency injection. They also avoid tight coupling and make it harder to break your application by not having any side effects. These principles are coming together with Immutability concept of ES6 by giving preference to const over let usage.⬆ Back to TopWhat is the purpose of the let keywordThe let statement declares a block scope local variable. Hence the variables defined with let keyword are limited in scope to the block, statement, or expression on which it is used. Whereas variables declared with the var keyword used to define a variable globally, or locally to an entire function regardless of block scope.Let's take an example to demonstrate the usage,let counter = 30;if (counter === 30) {  let counter = 31;  console.log(counter); // 31}console.log(counter); // 30 (because the variable in if block won't exist here)⬆ Back to TopWhat is the difference between let and varYou can list out the differences in a tabular formatvarletIt is been available from the beginning of JavaScriptIntroduced as part of ES6It has function scopeIt has block scopeVariables will be hoistedHoisted but not initializedLet's take an example to see the difference,function userDetails(username) {  if (username) {    console.log(salary); // undefined due to hoisting    console.log(age); // ReferenceError: Cannot access 'age' before initialization    let age = 30;    var salary = 10000;  }  console.log(salary); //10000 (accessible due to function scope)  console.log(age); //error: age is not defined(due to block scope)}userDetails(\""John\"");⬆ Back to TopWhat is the reason to choose the name let as a keywordlet is a mathematical statement that was adopted by early programming languages like Scheme and Basic. It has been borrowed from dozens of other languages that use let already as a traditional keyword as close to var as possible.⬆ Back to TopHow do you redeclare variables in switch block without an errorIf you try to redeclare variables in a switch block then it will cause errors because there is only one block. For example, the below code block throws a syntax error as below,let counter = 1;switch (x) {  case 0:    let name;    break;  case 1:    let name; // SyntaxError for redeclaration.    break;}To avoid this error, you can create a nested block inside a case clause and create a new block scoped lexical environment.let counter = 1;switch (x) {  case 0: {    let name;    break;  }  case 1: {    let name; // No SyntaxError for redeclaration.    break;  }}⬆ Back to TopWhat is the Temporal Dead ZoneThe Temporal Dead Zone is a behavior in JavaScript that occurs when declaring a variable with the let and const keywords, but not with var. In ECMAScript 6, accessing a let or const variable before its declaration (within its scope) causes a ReferenceError. The time span when that happens, between the creation of a variable’s binding and its declaration, is called the temporal dead zone.Let's see this behavior with an example,function somemethod() {  console.log(counter1); // undefined  console.log(counter2); // ReferenceError  var counter1 = 1;  let counter2 = 2;}⬆ Back to TopWhat is IIFE(Immediately Invoked Function Expression)IIFE (Immediately Invoked Function Expression) is a JavaScript function that runs as soon as it is defined. The signature of it would be as below,(function () {  // logic here})();The primary reason to use an IIFE is to obtain data privacy because any variables declared within the IIFE cannot be accessed by the outside world. i.e, If you try to access variables with IIFE then it throws an error as below,(function () {  var message = \""IIFE\"";  console.log(message);})();console.log(message); //Error: message is not defined⬆ Back to TopHow do you decode or encode a URL in JavaScript?encodeURI() function is used to encode an URL. This function requires a URL string as a parameter and return that encoded string.decodeURI() function is used to decode an URL. This function requires an encoded URL string as parameter and return that decoded string.Note: If you want to encode characters such as / ? : @ & = + $ # then you need to use encodeURIComponent().let uri = \""employeeDetails?name=john&occupation=manager\"";let encoded_uri = encodeURI(uri);let decoded_uri = decodeURI(encoded_uri);⬆ Back to TopWhat is memoizationMemoization is a programming technique which attempts to increase a function’s performance by caching its previously computed results. Each time a memoized function is called, its parameters are used to index the cache. If the data is present, then it can be returned, without executing the entire function. Otherwise the function is executed and then the result is added to the cache.Let's take an example of adding function with memoization,const memoizAddition = () => {  let cache = {};  return (value) => {    if (value in cache) {      console.log(\""Fetching from cache\"");      return cache[value]; // Here, cache.value cannot be used as property name starts with the number which is not a valid JavaScript  identifier. Hence, can only be accessed using the square bracket notation.    } else {      console.log(\""Calculating result\"");      let result = value + 20;      cache[value] = result;      return result;    }  };};// returned function from memoizAdditionconst addition = memoizAddition();console.log(addition(20)); //output: 40 calculatedconsole.log(addition(20)); //output: 40 cached⬆ Back to TopWhat is HoistingHoisting is a JavaScript mechanism where variables, function declarations and classes are moved to the top of their scope before code execution. Remember that JavaScript only hoists declarations, not initialisation.Let's take a simple example of variable hoisting,console.log(message); //output : undefinedvar message = \""The variable Has been hoisted\"";The above code looks like as below to the interpreter,var message;console.log(message);message = \""The variable Has been hoisted\"";In the same fashion, function declarations are hoisted toomessage(\""Good morning\""); //Good morningfunction message(name) {  console.log(name);}This hoisting makes functions to be safely used in code before they are declared.⬆ Back to TopWhat are classes in ES6In ES6, Javascript classes are primarily syntactic sugar over JavaScript’s existing prototype-based inheritance.For example, the prototype based inheritance written in function expression as below,function Bike(model, color) {  this.model = model;  this.color = color;}Bike.prototype.getDetails = function () {  return this.model + \"" bike has\"" + this.color + \"" color\"";};Whereas ES6 classes can be defined as an alternativeclass Bike {  constructor(color, model) {    this.color = color;    this.model = model;  }  getDetails() {    return this.model + \"" bike has\"" + this.color + \"" color\"";  }}⬆ Back to TopWhat are closuresA closure is the combination of a function and the lexical environment within which that function was declared. i.e, It is an inner function that has access to the outer or enclosing function’s variables. The closure has three scope chainsOwn scope where variables defined between its curly bracketsOuter function’s variablesGlobal variablesLet's take an example of closure concept,function Welcome(name) {  var greetingInfo = function (message) {    console.log(message + \"" \"" + name);  };  return greetingInfo;}var myFunction = Welcome(\""John\"");myFunction(\""Welcome \""); //Output: Welcome JohnmyFunction(\""Hello Mr.\""); //output: Hello Mr.JohnAs per the above code, the inner function(i.e, greetingInfo) has access to the variables in the outer function scope(i.e, Welcome) even after the outer function has returned.⬆ Back to TopWhat are modulesModules refer to small units of independent, reusable code and also act as the foundation of many JavaScript design patterns. Most of the JavaScript modules export an object literal, a function, or a constructor⬆ Back to TopWhy do you need modulesBelow are the list of benefits using modules in javascript ecosystemMaintainabilityReusabilityNamespacing⬆ Back to TopWhat is scope in javascriptScope is the accessibility of variables, functions, and objects in some particular part of your code during runtime. In other words, scope determines the visibility of variables and other resources in areas of your code.⬆ Back to TopWhat is a service workerA Service worker is basically a script (JavaScript file) that runs in the background, separate from a web page and provides features that don't need a web page or user interaction. Some of the major features of service workers are Rich offline experiences(offline first web application development), periodic background syncs, push notifications, intercept and handle network requests and programmatically managing a cache of responses.⬆ Back to TopHow do you manipulate DOM using a service workerService worker can't access the DOM directly. But it can communicate with the pages it controls by responding to messages sent via the postMessage interface, and those pages can manipulate the DOM.⬆ Back to TopHow do you reuse information across service worker restartsThe problem with service worker is that it gets terminated when not in use, and restarted when it's next needed, so you cannot rely on global state within a service worker's onfetch and onmessage handlers. In this case, service workers will have access to IndexedDB API in order to persist and reuse across restarts.⬆ Back to TopWhat is IndexedDBIndexedDB is a low-level API for client-side storage of larger amounts of structured data, including files/blobs. This API uses indexes to enable high-performance searches of this data.⬆ Back to TopWhat is web storageWeb storage is an API that provides a mechanism by which browsers can store key/value pairs locally within the user's browser, in a much more intuitive fashion than using cookies. The web storage provides two mechanisms for storing data on the client.Local storage: It stores data for current origin with no expiration date.Session storage: It stores data for one session and the data is lost when the browser tab is closed.⬆ Back to TopWhat is a post messagePost message is a method that enables cross-origin communication between Window objects.(i.e, between a page and a pop-up that it spawned, or between a page and an iframe embedded within it). Generally, scripts on different pages are allowed to access each other if and only if the pages follow same-origin policy(i.e, pages share the same protocol, port number, and host).⬆ Back to TopWhat is a CookieA cookie is a piece of data that is stored on your computer to be accessed by your browser. Cookies are saved as key/value pairs.For example, you can create a cookie named username as below,document.cookie = \""username=John\"";⬆ Back to TopWhy do you need a CookieCookies are used to remember information about the user profile(such as username). It basically involves two steps,When a user visits a web page, the user profile can be stored in a cookie.Next time the user visits the page, the cookie remembers the user profile.⬆ Back to TopWhat are the options in a cookieThere are few below options available for a cookie,By default, the cookie is deleted when the browser is closed but you can change this behavior by setting expiry date (in UTC time).document.cookie = \""username=John; expires=Sat, 8 Jun 2019 12:00:00 UTC\"";By default, the cookie belongs to a current page. But you can tell the browser what path the cookie belongs to using a path parameter.document.cookie = \""username=John; path=/services\"";⬆ Back to TopHow do you delete a cookieYou can delete a cookie by setting the expiry date as a passed date. You don't need to specify a cookie value in this case.For example, you can delete a username cookie in the current page as below.document.cookie =  \""username=; expires=Fri, 07 Jun 2019 00:00:00 UTC; path=/;\"";Note: You should define the cookie path option to ensure that you delete the right cookie. Some browsers doesn't allow to delete a cookie unless you specify a path parameter.⬆ Back to TopWhat are the differences between cookie, local storage and session storageBelow are some of the differences between cookie, local storage and session storage,FeatureCookieLocal storageSession storageAccessed on client or server sideBoth server-side & client-sideclient-side onlyclient-side onlyLifetimeAs configured using Expires optionuntil deleteduntil tab is closedSSL supportSupportedNot supportedNot supportedMaximum data size4KB5 MB5MB⬆ Back to TopWhat is the main difference between localStorage and sessionStorageLocalStorage is the same as SessionStorage but it persists the data even when the browser is closed and reopened(i.e it has no expiration time) whereas in sessionStorage data gets cleared when the page session ends.⬆ Back to TopHow do you access web storageThe Window object implements the WindowLocalStorage and WindowSessionStorage objects which has localStorage(window.localStorage) and sessionStorage(window.sessionStorage) properties respectively. These properties create an instance of the Storage object, through which data items can be set, retrieved and removed for a specific domain and storage type (session or local).For example, you can read and write on local storage objects as belowlocalStorage.setItem(\""logo\"", document.getElementById(\""logo\"").value);localStorage.getItem(\""logo\"");⬆ Back to TopWhat are the methods available on session storageThe session storage provided methods for reading, writing and clearing the session data// Save data to sessionStoragesessionStorage.setItem(\""key\"", \""value\"");// Get saved data from sessionStoragelet data = sessionStorage.getItem(\""key\"");// Remove saved data from sessionStoragesessionStorage.removeItem(\""key\"");// Remove all saved data from sessionStoragesessionStorage.clear();⬆ Back to TopWhat is a storage event and its event handlerThe StorageEvent is an event that fires when a storage area has been changed in the context of another document. Whereas onstorage property is an EventHandler for processing storage events.The syntax would be as belowwindow.onstorage = functionRef;Let's take the example usage of onstorage event handler which logs the storage key and it's valueswindow.onstorage = function (e) {  console.log(    \""The \"" +      e.key +      \"" key has been changed from \"" +      e.oldValue +      \"" to \"" +      e.newValue +      \"".\""  );};⬆ Back to TopWhy do you need web storageWeb storage is more secure, and large amounts of data can be stored locally, without affecting website performance. Also, the information is never transferred to the server. Hence this is a more recommended approach than Cookies.⬆ Back to TopHow do you check web storage browser supportYou need to check browser support for localStorage and sessionStorage before using web storage,if (typeof Storage !== \""undefined\"") {  // Code for localStorage/sessionStorage.} else {  // Sorry! No Web Storage support..}⬆ Back to TopHow do you check web workers browser supportYou need to check browser support for web workers before using itif (typeof Worker !== \""undefined\"") {  // code for Web worker support.} else {  // Sorry! No Web Worker support..}⬆ Back to TopGive an example of a web workerYou need to follow below steps to start using web workers for counting exampleCreate a Web Worker File: You need to write a script to increment the count value. Let's name it as counter.jslet i = 0;function timedCount() {  i = i + 1;  postMessage(i);  setTimeout(\""timedCount()\"", 500);}timedCount();Here postMessage() method is used to post a message back to the HTML pageCreate a Web Worker Object: You can create a web worker object by checking for browser support. Let's name this file as web_worker_example.jsif (typeof w == \""undefined\"") {  w = new Worker(\""counter.js\"");}and we can receive messages from web workerw.onmessage = function (event) {  document.getElementById(\""message\"").innerHTML = event.data;};Terminate a Web Worker:Web workers will continue to listen for messages (even after the external script is finished) until it is terminated. You can use the terminate() method to terminate listening to the messages.w.terminate();Reuse the Web Worker: If you set the worker variable to undefined you can reuse the codew = undefined;⬆ Back to TopWhat are the restrictions of web workers on DOMWebWorkers don't have access to below javascript objects since they are defined in an external filesWindow objectDocument objectParent object⬆ Back to TopWhat is a promiseA promise is an object that may produce a single value some time in the future with either a resolved value or a reason that it’s not resolved(for example, network error). It will be in one of the 3 possible states: fulfilled, rejected, or pending.The syntax of Promise creation looks like below,const promise = new Promise(function (resolve, reject) {  // promise description});The usage of a promise would be as below,const promise = new Promise(  (resolve) => {    setTimeout(() => {      resolve(\""I'm a Promise!\"");    }, 5000);  },  (reject) => {});promise.then((value) => console.log(value));The action flow of a promise will be as below,⬆ Back to TopWhy do you need a promisePromises are used to handle asynchronous operations. They provide an alternative approach for callbacks by reducing the callback hell and writing the cleaner code.⬆ Back to TopWhat are the three states of promisePromises have three states:Pending: This is an initial state of the Promise before an operation beginsFulfilled: This state indicates that the specified operation was completed.Rejected: This state indicates that the operation did not complete. In this case an error value will be thrown.⬆ Back to TopWhat is a callback functionA callback function is a function passed into another function as an argument. This function is invoked inside the outer function to complete an action.Let's take a simple example of how to use callback functionfunction callbackFunction(name) {  console.log(\""Hello \"" + name);}function outerFunction(callback) {  let name = prompt(\""Please enter your name.\"");  callback(name);}outerFunction(callbackFunction);⬆ Back to TopWhy do we need callbacksThe callbacks are needed because javascript is an event driven language. That means instead of waiting for a response javascript will keep executing while listening for other events.Let's take an example with the first function invoking an API call(simulated by setTimeout) and the next function which logs the message.function firstFunction() {  // Simulate a code delay  setTimeout(function () {    console.log(\""First function called\"");  }, 1000);}function secondFunction() {  console.log(\""Second function called\"");}firstFunction();secondFunction();Output;// Second function called// First function calledAs observed from the output, javascript didn't wait for the response of the first function and the remaining code block got executed. So callbacks are used in a way to make sure that certain code doesn’t execute until the other code finishes execution.⬆ Back to TopWhat is a callback hellCallback Hell is an anti-pattern with multiple nested callbacks which makes code hard to read and debug when dealing with asynchronous logic. The callback hell looks like below,async1(function(){    async2(function(){        async3(function(){            async4(function(){                ....            });        });    });});⬆ Back to TopWhat are server-sent eventsServer-sent events (SSE) is a server push technology enabling a browser to receive automatic updates from a server via HTTP connection without resorting to polling. These are a one way communications channel - events flow from server to client only. This has been used in Facebook/Twitter updates, stock price updates, news feeds etc.⬆ Back to TopHow do you receive server-sent event notificationsThe EventSource object is used to receive server-sent event notifications. For example, you can receive messages from server as below,if (typeof EventSource !== \""undefined\"") {  var source = new EventSource(\""sse_generator.js\"");  source.onmessage = function (event) {    document.getElementById(\""output\"").innerHTML += event.data + \""<br>\"";  };}⬆ Back to TopHow do you check browser support for server-sent eventsYou can perform browser support for server-sent events before using it as below,if (typeof EventSource !== \""undefined\"") {  // Server-sent events supported. Let's have some code here!} else {  // No server-sent events supported}⬆ Back to TopWhat are the events available for server sent eventsBelow are the list of events available for server sent eventsEventDescriptiononopenIt is used when a connection to the server is openedonmessageThis event is used when a message is receivedonerrorIt happens when an error occurs⬆ Back to TopWhat are the main rules of promiseA promise must follow a specific set of rules:A promise is an object that supplies a standard-compliant .then() methodA pending promise may transition into either fulfilled or rejected stateA fulfilled or rejected promise is settled and it must not transition into any other state.Once a promise is settled, the value must not change.⬆ Back to TopWhat is callback in callbackYou can nest one callback inside in another callback to execute the actions sequentially one by one. This is known as callbacks in callbacks.loadScript(\""/script1.js\"", function (script) {  console.log(\""first script is loaded\"");  loadScript(\""/script2.js\"", function (script) {    console.log(\""second script is loaded\"");    loadScript(\""/script3.js\"", function (script) {      console.log(\""third script is loaded\"");      // after all scripts are loaded    });  });});⬆ Back to TopWhat is promise chainingThe process of executing a sequence of asynchronous tasks one after another using promises is known as Promise chaining. Let's take an example of promise chaining for calculating the final result,new Promise(function (resolve, reject) {  setTimeout(() => resolve(1), 1000);})  .then(function (result) {    console.log(result); // 1    return result * 2;  })  .then(function (result) {    console.log(result); // 2    return result * 3;  })  .then(function (result) {    console.log(result); // 6    return result * 4;  });In the above handlers, the result is passed to the chain of .then() handlers with the below work flow,The initial promise resolves in 1 second,After that .then handler is called by logging the result(1) and then return a promise with the value of result * 2.After that the value passed to the next .then handler by logging the result(2) and return a promise with result * 3.Finally the value passed to the last .then handler by logging the result(6) and return a promise with result * 4.⬆ Back to TopWhat is promise.allPromise.all is a promise that takes an array of promises as an input (an iterable), and it gets resolved when all the promises get resolved or any one of them gets rejected. For example, the syntax of promise.all method is below,Promise.all([Promise1, Promise2, Promise3]) .then(result) => {   console.log(result) }) .catch(error => console.log(`Error in promises ${error}`))Note: Remember that the order of the promises(output the result) is maintained as per input order.⬆ Back to TopWhat is the purpose of the race method in promisePromise.race() method will return the promise instance which is firstly resolved or rejected. Let's take an example of race() method where promise2 is resolved firstvar promise1 = new Promise(function (resolve, reject) {  setTimeout(resolve, 500, \""one\"");});var promise2 = new Promise(function (resolve, reject) {  setTimeout(resolve, 100, \""two\"");});Promise.race([promise1, promise2]).then(function (value) {  console.log(value); // \""two\"" // Both promises will resolve, but promise2 is faster});⬆ Back to TopWhat is a strict mode in javascriptStrict Mode is a new feature in ECMAScript 5 that allows you to place a program, or a function, in a “strict” operating context. This way it prevents certain actions from being taken and throws more exceptions. The literal expression \""use strict\""; instructs the browser to use the javascript code in the Strict mode.⬆ Back to TopWhy do you need strict modeStrict mode is useful to write \""secure\"" JavaScript by notifying \""bad syntax\"" into real errors. For example, it eliminates accidentally creating a global variable by throwing an error and also throws an error for assignment to a non-writable property, a getter-only property, a non-existing property, a non-existing variable, or a non-existing object.⬆ Back to TopHow do you declare strict modeThe strict mode is declared by adding \""use strict\""; to the beginning of a script or a function.If declared at the beginning of a script, it has global scope.\""use strict\"";x = 3.14; // This will cause an error because x is not declaredand if you declare inside a function, it has local scopex = 3.14; // This will not cause an error.myFunction();function myFunction() {  \""use strict\"";  y = 3.14; // This will cause an error}⬆ Back to TopWhat is the purpose of double exclamationThe double exclamation or negation(!!) ensures the resulting type is a boolean. If it was falsey (e.g. 0, null, undefined, etc.), it will be false, otherwise, it will be true.For example, you can test IE version using this expression as below,let isIE8 = false;isIE8 = !!navigator.userAgent.match(/MSIE 8.0/);console.log(isIE8); // returns true or falseIf you don't use this expression then it returns the original value.console.log(navigator.userAgent.match(/MSIE 8.0/)); // returns either an Array or nullNote: The expression !! is not an operator, but it is just twice of ! operator.⬆ Back to TopWhat is the purpose of the delete operatorThe delete keyword is used to delete the property as well as its value.var user = { name: \""John\"", age: 20 };delete user.age;console.log(user); // {name: \""John\""}⬆ Back to TopWhat is typeof operatorYou can use the JavaScript typeof operator to find the type of a JavaScript variable. It returns the type of a variable or an expression.typeof \""John Abraham\""; // Returns \""string\""typeof (1 + 2); // Returns \""number\""typeof [1, 2, 3] // Returns \""object\"" because all arrays are also objects⬆ Back to TopWhat is undefined propertyThe undefined property indicates that a variable has not been assigned a value, or declared but not initialized at all. The type of undefined value is undefined too.var user; // Value is undefined, type is undefinedconsole.log(typeof user); //undefinedAny variable can be emptied by setting the value to undefined.user = undefined;⬆ Back to TopWhat is null valueThe value null represents the intentional absence of any object value. It is one of JavaScript's primitive values. The type of null value is object.You can empty the variable by setting the value to null.var user = null;console.log(typeof user); //object⬆ Back to TopWhat is the difference between null and undefinedBelow are the main differences between null and undefined,NullUndefinedIt is an assignment value which indicates that variable points to no object.It is not an assignment value where a variable has been declared but has not yet been assigned a value.Type of null is objectType of undefined is undefinedThe null value is a primitive value that represents the null, empty, or non-existent reference.The undefined value is a primitive value used when a variable has not been assigned a value.Indicates the absence of a value for a variableIndicates absence of variable itselfConverted to zero (0) while performing primitive operationsConverted to NaN while performing primitive operations⬆ Back to TopWhat is evalThe eval() function evaluates JavaScript code represented as a string. The string can be a JavaScript expression, variable, statement, or sequence of statements.console.log(eval(\""1 + 2\"")); //  3⬆ Back to TopWhat is the difference between window and documentBelow are the main differences between window and document,WindowDocumentIt is the root level element in any web pageIt is the direct child of the window object. This is also known as Document Object Model(DOM)By default window object is available implicitly in the pageYou can access it via window.document or document.It has methods like alert(), confirm() and properties like document, locationIt provides methods like getElementById, getElementsByTagName, createElement etc⬆ Back to TopHow do you access history in javascriptThe window.history object contains the browser's history. You can load previous and next URLs in the history using back() and next() methods.function goBack() {  window.history.back();}function goForward() {  window.history.forward();}Note: You can also access history without window prefix.⬆ Back to TopHow do you detect caps lock key turned on or notThe mouseEvent getModifierState() is used to return a boolean value that indicates whether the specified modifier key is activated or not. The modifiers such as CapsLock, ScrollLock and NumLock are activated when they are clicked, and deactivated when they are clicked again.Let's take an input element to detect the CapsLock on/off behavior with an example,<input type=\""password\"" onmousedown=\""enterInput(event)\"" /><p id=\""feedback\""></p><script>  function enterInput(e) {    var flag = e.getModifierState(\""CapsLock\"");    if (flag) {      document.getElementById(\""feedback\"").innerHTML = \""CapsLock activated\"";    } else {      document.getElementById(\""feedback\"").innerHTML =        \""CapsLock not activated\"";    }  }</script>⬆ Back to TopWhat is isNaNThe isNaN() function is used to determine whether a value is an illegal number (Not-a-Number) or not. i.e, This function returns true if the value equates to NaN. Otherwise it returns false.isNaN(\""Hello\""); //trueisNaN(\""100\""); //false⬆ Back to TopWhat are the differences between undeclared and undefined variablesBelow are the major differences between undeclared(not defined) and undefined variables,undeclaredundefinedThese variables do not exist in a program and are not declaredThese variables declared in the program but have not assigned any valueIf you try to read the value of an undeclared variable, then a runtime error is encounteredIf you try to read the value of an undefined variable, an undefined value is returned.⬆ Back to TopWhat are global variablesGlobal variables are those that are available throughout the length of the code without any scope. The var keyword is used to declare a local variable but if you omit it then it will become global variablemsg = \""Hello\""; // var is missing, it becomes global variable⬆ Back to TopWhat are the problems with global variablesThe problem with global variables is the conflict of variable names of local and global scope. It is also difficult to debug and test the code that relies on global variables.⬆ Back to TopWhat is NaN propertyThe NaN property is a global property that represents \""Not-a-Number\"" value. i.e, It indicates that a value is not a legal number. It is very rare to use NaN in a program but it can be used as return value for few casesMath.sqrt(-1);parseInt(\""Hello\"");⬆ Back to TopWhat is the purpose of isFinite functionThe isFinite() function is used to determine whether a number is a finite, legal number. It returns false if the value is +infinity, -infinity, or NaN (Not-a-Number), otherwise it returns true.isFinite(Infinity); // falseisFinite(NaN); // falseisFinite(-Infinity); // falseisFinite(100); // true⬆ Back to TopWhat is an event flowEvent flow is the order in which event is received on the web page. When you click an element that is nested in various other elements, before your click actually reaches its destination, or target element, it must trigger the click event for each of its parent elements first, starting at the top with the global window object.There are two ways of event flowTop to Bottom(Event Capturing)Bottom to Top (Event Bubbling)⬆ Back to TopWhat is event bubblingEvent bubbling is a type of event propagation where the event first triggers on the innermost target element, and then successively triggers on the ancestors (parents) of the target element in the same nesting hierarchy till it reaches the outermost DOM element.⬆ Back to TopWhat is event capturingEvent capturing is a type of event propagation where the event is first captured by the outermost element, and then successively triggers on the descendants (children) of the target element in the same nesting hierarchy till it reaches the innermost DOM element.⬆ Back to TopHow do you submit a form using JavaScriptYou can submit a form using document.forms[0].submit(). All the form input's information is submitted using onsubmit event handlerfunction submit() {  document.forms[0].submit();}⬆ Back to TopHow do you find operating system detailsThe window.navigator object contains information about the visitor's browser OS details. Some of the OS properties are available under platform property,console.log(navigator.platform);⬆ Back to TopWhat is the difference between document load and DOMContentLoaded eventsThe DOMContentLoaded event is fired when the initial HTML document has been completely loaded and parsed, without waiting for assets(stylesheets, images, and subframes) to finish loading. Whereas The load event is fired when the whole page has loaded, including all dependent resources(stylesheets, images).⬆ Back to TopWhat is the difference between native, host and user objectsNative objects are objects that are part of the JavaScript language defined by the ECMAScript specification. For example, String, Math, RegExp, Object, Function etc core objects defined in the ECMAScript spec.Host objects are objects provided by the browser or runtime environment (Node). For example, window, XmlHttpRequest, DOM nodes etc are considered as host objects.User objects are objects defined in the javascript code. For example, User objects created for profile information.⬆ Back to TopWhat are the tools or techniques used for debugging JavaScript codeYou can use below tools or techniques for debugging javascriptChrome Devtoolsdebugger statementGood old console.log statement⬆ Back to TopWhat are the pros and cons of promises over callbacksBelow are the list of pros and cons of promises over callbacks,Pros:It avoids callback hell which is unreadableEasy to write sequential asynchronous code with .then()Easy to write parallel asynchronous code with Promise.all()Solves some of the common problems of callbacks(call the callback too late, too early, many times and swallow errors/exceptions)Cons:It makes little complex codeYou need to load a polyfill if ES6 is not supported⬆ Back to TopWhat is the difference between an attribute and a propertyAttributes are defined on the HTML markup whereas properties are defined on the DOM. For example, the below HTML element has 2 attributes type and value,<input type=\""text\"" value=\""Name:\"">You can retrieve the attribute value as below,const input = document.querySelector(\""input\"");console.log(input.getAttribute(\""value\"")); // Good morningconsole.log(input.value); // Good morningAnd after you change the value of the text field to \""Good evening\"", it becomes likeconsole.log(input.getAttribute(\""value\"")); // Good eveningconsole.log(input.value); // Good evening⬆ Back to TopWhat is same-origin policyThe same-origin policy is a policy that prevents JavaScript from making requests across domain boundaries. An origin is defined as a combination of URI scheme, hostname, and port number. If you enable this policy then it prevents a malicious script on one page from obtaining access to sensitive data on another web page using Document Object Model(DOM).⬆ Back to TopWhat is the purpose of void 0Void(0) is used to prevent the page from refreshing. This will be helpful to eliminate the unwanted side-effect, because it will return the undefined primitive value. It is commonly used for HTML documents that use href=\""JavaScript:Void(0);\"" within an <a> element. i.e, when you click a link, the browser loads a new page or refreshes the same page. But this behavior will be prevented using this expression.For example, the below link notify the message without reloading the page<a href=\""JavaScript:void(0);\"" onclick=\""alert('Well done!')\"">  Click Me!</a>⬆ Back to TopIs JavaScript a compiled or interpreted languageJavaScript is an interpreted language, not a compiled language. An interpreter in the browser reads over the JavaScript code, interprets each line, and runs it. Nowadays modern browsers use a technology known as Just-In-Time (JIT) compilation, which compiles JavaScript to executable bytecode just as it is about to run.⬆ Back to TopIs JavaScript a case-sensitive languageYes, JavaScript is a case sensitive language. The language keywords, variables, function & object names, and any other identifiers must always be typed with a consistent capitalization of letters.⬆ Back to TopIs there any relation between Java and JavaScriptNo, they are entirely two different programming languages and have nothing to do with each other. But both of them are Object Oriented Programming languages and like many other languages, they follow similar syntax for basic features(if, else, for, switch, break, continue etc).⬆ Back to TopWhat are eventsEvents are \""things\"" that happen to HTML elements. When JavaScript is used in HTML pages, JavaScript can react on these events. Some of the examples of HTML events are,Web page has finished loadingInput field was changedButton was clickedLet's describe the behavior of click event for button element,<!doctype html><html> <head>   <script>     function greeting() {       alert('Hello! Good morning');     }   </script> </head> <body>   <button type=\""button\"" onclick=\""greeting()\"">Click me</button> </body></html>⬆ Back to TopWho created javascriptJavaScript was created by Brendan Eich in 1995 during his time at Netscape Communications. Initially it was developed under the name Mocha, but later the language was officially called LiveScript when it first shipped in beta releases of Netscape.⬆ Back to TopWhat is the use of preventDefault methodThe preventDefault() method cancels the event if it is cancelable, meaning that the default action or behaviour that belongs to the event will not occur. For example, prevent form submission when clicking on submit button and prevent opening the page URL when clicking on hyperlink are some common use cases.document  .getElementById(\""link\"")  .addEventListener(\""click\"", function (event) {    event.preventDefault();  });Note: Remember that not all events are cancelable.⬆ Back to TopWhat is the use of stopPropagation methodThe stopPropagation method is used to stop the event from bubbling up the event chain. For example, the below nested divs with stopPropagation method prevents default event propagation when clicking on nested div(Div1)<p>Click DIV1 Element</p><div onclick=\""secondFunc()\"">DIV 2  <div onclick=\""firstFunc(event)\"">DIV 1</div></div><script>function firstFunc(event) {  alert(\""DIV 1\"");  event.stopPropagation();}function secondFunc() {  alert(\""DIV 2\"");}</script>⬆ Back to TopWhat are the steps involved in return false usageThe return false statement in event handlers performs the below steps,First it stops the browser's default action or behaviour.It prevents the event from propagating the DOMStops callback execution and returns immediately when called.⬆ Back to TopWhat is BOMThe Browser Object Model (BOM) allows JavaScript to \""talk to\"" the browser. It consists of the objects navigator, history, screen, location and document which are children of the window. The Browser Object Model is not standardized and can change based on different browsers.⬆ Back to TopWhat is the use of setTimeoutThe setTimeout() method is used to call a function or evaluate an expression after a specified number of milliseconds. For example, let's log a message after 2 seconds using setTimeout method,setTimeout(function () {  console.log(\""Good morning\"");}, 2000);⬆ Back to TopWhat is the use of setIntervalThe setInterval() method is used to call a function or evaluate an expression at specified intervals (in milliseconds). For example, let's log a message after 2 seconds using setInterval method,setInterval(function () {  console.log(\""Good morning\"");}, 2000);⬆ Back to TopWhy is JavaScript treated as Single threadedJavaScript is a single-threaded language. Because the language specification does not allow the programmer to write code so that the interpreter can run parts of it in parallel in multiple threads or processes. Whereas languages like java, go, C++ can make multi-threaded and multi-process programs.⬆ Back to TopWhat is an event delegationEvent delegation is a technique for listening to events where you delegate a parent element as the listener for all of the events that happen inside it.For example, if you wanted to detect field changes in inside a specific form, you can use event delegation technique,var form = document.querySelector(\""#registration-form\"");// Listen for changes to fields inside the formform.addEventListener(  \""input\"",  function (event) {    // Log the field that was changed    console.log(event.target);  },  false);⬆ Back to TopWhat is ECMAScriptECMAScript is the scripting language that forms the basis of JavaScript. ECMAScript standardized by the ECMA International standards organization in the ECMA-262 and ECMA-402 specifications. The first edition of ECMAScript was released in 1997.⬆ Back to TopWhat is JSONJSON (JavaScript Object Notation) is a lightweight format that is used for data interchanging. It is based on a subset of JavaScript language in the way objects are built in JavaScript.⬆ Back to TopWhat are the syntax rules of JSONBelow are the list of syntax rules of JSONThe data is in name/value pairsThe data is separated by commasCurly braces hold objectsSquare brackets hold arrays⬆ Back to TopWhat is the purpose JSON stringifyWhen sending data to a web server, the data has to be in a string format. You can achieve this by converting JSON object into a string using stringify() method.var userJSON = { name: \""John\"", age: 31 };var userString = JSON.stringify(userJSON);console.log(userString); //\""{\""name\"":\""John\"",\""age\"":31}\""⬆ Back to TopHow do you parse JSON stringWhen receiving the data from a web server, the data is always in a string format. But you can convert this string value to a javascript object using parse() method.var userString = '{\""name\"":\""John\"",\""age\"":31}';var userJSON = JSON.parse(userString);console.log(userJSON); // {name: \""John\"", age: 31}⬆ Back to TopWhy do you need JSONWhen exchanging data between a browser and a server, the data can only be text. Since JSON is text only, it can easily be sent to and from a server, and used as a data format by any programming language.⬆ Back to TopWhat are PWAsProgressive web applications (PWAs) are a type of mobile app delivered through the web, built using common web technologies including HTML, CSS and JavaScript. These PWAs are deployed to servers, accessible through URLs, and indexed by search engines.⬆ Back to TopWhat is the purpose of clearTimeout methodThe clearTimeout() function is used in javascript to clear the timeout which has been set by setTimeout()function before that. i.e, The return value of setTimeout() function is stored in a variable and it’s passed into the clearTimeout() function to clear the timer.For example, the below setTimeout method is used to display the message after 3 seconds. This timeout can be cleared by the clearTimeout() method.<script>var msg;function greeting() {   alert('Good morning');}function start() {  msg =setTimeout(greeting, 3000);}function stop() {    clearTimeout(msg);}</script>⬆ Back to TopWhat is the purpose of clearInterval methodThe clearInterval() function is used in javascript to clear the interval which has been set by setInterval() function. i.e, The return value returned by setInterval() function is stored in a variable and it’s passed into the clearInterval() function to clear the interval.For example, the below setInterval method is used to display the message for every 3 seconds. This interval can be cleared by the clearInterval() method.<script>var msg;function greeting() {   alert('Good morning');}function start() {  msg = setInterval(greeting, 3000);}function stop() {    clearInterval(msg);}</script>⬆ Back to TopHow do you redirect new page in javascriptIn vanilla javascript, you can redirect to a new page using the location property of window object. The syntax would be as follows,function redirect() {  window.location.href = \""newPage.html\"";}⬆ Back to TopHow do you check whether a string contains a substringThere are 3 possible ways to check whether a string contains a substring or not,Using includes: ES6 provided String.prototype.includes method to test a string contains a substringvar mainString = \""hello\"",  subString = \""hell\"";mainString.includes(subString);Using indexOf: In an ES5 or older environment, you can use String.prototype.indexOf which returns the index of a substring. If the index value is not equal to -1 then it means the substring exists in the main string.var mainString = \""hello\"",  subString = \""hell\"";mainString.indexOf(subString) !== -1;Using RegEx: The advanced solution is using Regular expression's test method(RegExp.test), which allows for testing for against regular expressionsvar mainString = \""hello\"",  regex = /hell/;regex.test(mainString);⬆ Back to TopHow do you validate an email in javascriptYou can validate an email in javascript using regular expressions. It is recommended to do validations on the server side instead of the client side. Because the javascript can be disabled on the client side.function validateEmail(email) {  var re =    /^(([^<>()\\[\\]\\\\.,;:\\s@\""]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\""]+)*)|(\"".+\""))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;  return re.test(String(email).toLowerCase());}⬆ Back to TopThe above regular expression accepts unicode characters.How do you get the current url with javascriptYou can use window.location.href expression to get the current url path and you can use the same expression for updating the URL too. You can also use document.URL for read-only purposes but this solution has issues in FF.console.log(\""location.href\"", window.location.href); // Returns full URL⬆ Back to TopWhat are the various url properties of location objectThe below Location object properties can be used to access URL components of the page,href - The entire URLprotocol - The protocol of the URLhost - The hostname and port of the URLhostname - The hostname of the URLport - The port number in the URLpathname - The path name of the URLsearch - The query portion of the URLhash - The anchor portion of the URL⬆ Back to TopHow do get query string values in javascriptYou can use URLSearchParams to get query string values in javascript. Let's see an example to get the client code value from URL query string,const urlParams = new URLSearchParams(window.location.search);const clientCode = urlParams.get(\""clientCode\"");⬆ Back to TopHow do you check if a key exists in an objectYou can check whether a key exists in an object or not using three approaches,Using in operator: You can use the in operator whether a key exists in an object or not\""key\"" in obj;and If you want to check if a key doesn't exist, remember to use parenthesis,!(\""key\"" in obj);Using hasOwnProperty method: You can use hasOwnProperty to particularly test for properties of the object instance (and not inherited properties)obj.hasOwnProperty(\""key\""); // trueUsing undefined comparison: If you access a non-existing property from an object, the result is undefined. Let’s compare the properties against undefined to determine the existence of the property.const user = {  name: \""John\"",};console.log(user.name !== undefined); // trueconsole.log(user.nickName !== undefined); // false⬆ Back to TopHow do you loop through or enumerate javascript objectYou can use the for-in loop to loop through javascript object. You can also make sure that the key you get is an actual property of an object, and doesn't come from the prototype using hasOwnProperty method.var object = {  k1: \""value1\"",  k2: \""value2\"",  k3: \""value3\"",};for (var key in object) {  if (object.hasOwnProperty(key)) {    console.log(key + \"" -> \"" + object[key]); // k1 -> value1 ...  }}⬆ Back to TopHow do you test for an empty objectThere are different solutions based on ECMAScript versionsUsing Object entries(ECMA 7+): You can use object entries length along with constructor type.Object.entries(obj).length === 0 && obj.constructor === Object; // Since date object length is 0, you need to check constructor check as wellUsing Object keys(ECMA 5+): You can use object keys length along with constructor type.Object.keys(obj).length === 0 && obj.constructor === Object; // Since date object length is 0, you need to check constructor check as wellUsing for-in with hasOwnProperty(Pre-ECMA 5): You can use a for-in loop along with hasOwnProperty.function isEmpty(obj) {  for (var prop in obj) {    if (obj.hasOwnProperty(prop)) {      return false;    }  }  return JSON.stringify(obj) === JSON.stringify({});}⬆ Back to TopWhat is an arguments objectThe arguments object is an Array-like object accessible inside functions that contains the values of the arguments passed to that function. For example, let's see how to use arguments object inside sum function,function sum() {  var total = 0;  for (var i = 0, len = arguments.length; i < len; ++i) {    total += arguments[i];  }  return total;}sum(1, 2, 3); // returns 6Note: You can't apply array methods on arguments object. But you can convert into a regular array as below.var argsArray = Array.prototype.slice.call(arguments);⬆ Back to TopHow do you make first letter of the string in an uppercaseYou can create a function which uses a chain of string methods such as charAt, toUpperCase and slice methods to generate a string with the first letter in uppercase.function capitalizeFirstLetter(string) {  return string.charAt(0).toUpperCase() + string.slice(1);}⬆ Back to TopWhat are the pros and cons of for loopThe for-loop is a commonly used iteration syntax in javascript. It has both pros and consProsWorks on every environmentYou can use break and continue flow control statementsConsToo verboseImperativeYou might face one-by-off errors⬆ Back to TopHow do you display the current date in javascriptYou can use new Date() to generate a new Date object containing the current date and time. For example, let's display the current date in mm/dd/yyyyvar today = new Date();var dd = String(today.getDate()).padStart(2, \""0\"");var mm = String(today.getMonth() + 1).padStart(2, \""0\""); //January is 0!var yyyy = today.getFullYear();today = mm + \""/\"" + dd + \""/\"" + yyyy;document.write(today);⬆ Back to TopHow do you compare two date objectsYou need to use date.getTime() method to compare date values instead of comparison operators (==, !=, ===, and !== operators)var d1 = new Date();var d2 = new Date(d1);console.log(d1.getTime() === d2.getTime()); //Trueconsole.log(d1 === d2); // False⬆ Back to TopHow do you check if a string starts with another stringYou can use ECMAScript 6's String.prototype.startsWith() method to check if a string starts with another string or not. But it is not yet supported in all browsers. Let's see an example to see this usage,\""Good morning\"".startsWith(\""Good\""); // true\""Good morning\"".startsWith(\""morning\""); // false⬆ Back to TopHow do you trim a string in javascriptJavaScript provided a trim method on string types to trim any whitespaces present at the beginning or ending of the string.\""  Hello World   \"".trim(); //Hello WorldIf your browser(<IE9) doesn't support this method then you can use below polyfill.if (!String.prototype.trim) {  (function () {    // Make sure we trim BOM and NBSP    var rtrim = /^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g;    String.prototype.trim = function () {      return this.replace(rtrim, \""\"");    };  })();}⬆ Back to TopHow do you add a key value pair in javascriptThere are two possible solutions to add new properties to an object. Let's take a simple object to explain these solutions.var object = {  key1: value1,  key2: value2,};Using dot notation: This solution is useful when you know the name of the propertyobject.key3 = \""value3\"";Using square bracket notation: This solution is useful when the name of the property is dynamically determined.obj[\""key3\""] = \""value3\"";⬆ Back to TopIs the !-- notation represents a special operatorNo,that's not a special operator. But it is a combination of 2 standard operators one after the other,A logical not (!)A prefix decrement (--)At first, the value decremented by one and then tested to see if it is equal to zero or not for determining the truthy/falsy value.⬆ Back to TopHow do you assign default values to variablesYou can use the logical or operator || in an assignment expression to provide a default value. The syntax looks like as below,var a = b || c;As per the above expression, variable 'a 'will get the value of 'c' only if 'b' is falsy (if is null, false, undefined, 0, empty string, or NaN), otherwise 'a' will get the value of 'b'.⬆ Back to TopHow do you define multiline stringsYou can define multiline string literals using the '\\' character followed by line terminator.var str =  \""This is a \\very lengthy \\sentence!\"";But if you have a space after the '\\' character, the code will look exactly the same, but it will raise a SyntaxError.⬆ Back to TopWhat is an app shell modelAn application shell (or app shell) architecture is one way to build a Progressive Web App that reliably and instantly loads on your users' screens, similar to what you see in native applications. It is useful for getting some initial HTML to the screen fast without a network.⬆ Back to TopCan we define properties for functionsYes, We can define properties for functions because functions are also objects.fn = function (x) {  //Function code goes here};fn.name = \""John\"";fn.profile = function (y) {  //Profile code goes here};⬆ Back to TopWhat is the way to find the number of parameters expected by a functionYou can use function.length syntax to find the number of parameters expected by a function. Let's take an example of sum function to calculate the sum of numbers,function sum(num1, num2, num3, num4) {  return num1 + num2 + num3 + num4;}sum.length; // 4 is the number of parameters expected.⬆ Back to TopWhat is a polyfillA polyfill is a piece of JS code used to provide modern functionality on older browsers that do not natively support it. For example, Silverlight plugin polyfill can be used to mimic the functionality of an HTML Canvas element on Microsoft Internet Explorer 7.⬆ Back to TopWhat are break and continue statementsThe break statement is used to \""jump out\"" of a loop. i.e, It breaks the loop and continues executing the code after the loop.for (i = 0; i < 10; i++) {  if (i === 5) {    break;  }  text += \""Number: \"" + i + \""<br>\"";}The continue statement is used to \""jump over\"" one iteration in the loop. i.e, It breaks one iteration (in the loop), if a specified condition occurs, and continues with the next iteration in the loop.for (i = 0; i < 10; i++) {  if (i === 5) {    continue;  }  text += \""Number: \"" + i + \""<br>\"";}⬆ Back to TopWhat are js labelsThe label statement allows us to name loops and blocks in JavaScript. We can then use these labels to refer back to the code later. For example, the below code with labels avoids printing the numbers when they are same,var i, j;loop1: for (i = 0; i < 3; i++) {  loop2: for (j = 0; j < 3; j++) {    if (i === j) {      continue loop1;    }    console.log(\""i = \"" + i + \"", j = \"" + j);  }}// Output is://   \""i = 1, j = 0\""//   \""i = 2, j = 0\""//   \""i = 2, j = 1\""⬆ Back to TopWhat are the benefits of keeping declarations at the topIt is recommended to keep all declarations at the top of each script or function. The benefits of doing this are,Gives cleaner codeIt provides a single place to look for local variablesEasy to avoid unwanted global variablesIt reduces the possibility of unwanted re-declarations⬆ Back to TopWhat are the benefits of initializing variablesIt is recommended to initialize variables because of the below benefits,It gives cleaner codeIt provides a single place to initialize variablesAvoid undefined values in the code⬆ Back to TopWhat are the recommendations to create new objectIt is recommended to avoid creating new objects using new Object(). Instead you can initialize values based on it's type to create the objects.Assign {} instead of new Object()Assign \""\"" instead of new String()Assign 0 instead of new Number()Assign false instead of new Boolean()Assign [] instead of new Array()Assign /()/ instead of new RegExp()Assign function (){} instead of new Function()You can define them as an example,var v1 = {};var v2 = \""\"";var v3 = 0;var v4 = false;var v5 = [];var v6 = /()/;var v7 = function () {};⬆ Back to TopHow do you define JSON arraysJSON arrays are written inside square brackets and arrays contain javascript objects. For example, the JSON array of users would be as below,\""users\"":[  {\""firstName\"":\""John\"", \""lastName\"":\""Abrahm\""},  {\""firstName\"":\""Anna\"", \""lastName\"":\""Smith\""},  {\""firstName\"":\""Shane\"", \""lastName\"":\""Warn\""}]⬆ Back to TopHow do you generate random integersYou can use Math.random() with Math.floor() to return random integers. For example, if you want generate random integers between 1 to 10, the multiplication factor should be 10,Math.floor(Math.random() * 10) + 1; // returns a random integer from 1 to 10Math.floor(Math.random() * 100) + 1; // returns a random integer from 1 to 100Note: Math.random() returns a random number between 0 (inclusive), and 1 (exclusive)⬆ Back to TopCan you write a random integers function to print integers with in a rangeYes, you can create a proper random function to return a random number between min and max (both included)function randomInteger(min, max) {  return Math.floor(Math.random() * (max - min + 1)) + min;}randomInteger(1, 100); // returns a random integer from 1 to 100randomInteger(1, 1000); // returns a random integer from 1 to 1000⬆ Back to TopWhat is tree shakingTree shaking is a form of dead code elimination. It means that unused modules will not be included in the bundle during the build process and for that it relies on the static structure of ES2015 module syntax,( i.e. import and export). Initially this has been popularized by the ES2015 module bundler rollup.⬆ Back to TopWhat is the need of tree shakingTree Shaking can significantly reduce the code size in any application. i.e, The less code we send over the wire the more performant the application will be. For example, if we just want to create a “Hello World” Application using SPA frameworks then it will take around a few MBs, but by tree shaking it can bring down the size to just a few hundred KBs. Tree shaking is implemented in Rollup and Webpack bundlers.⬆ Back to TopIs it recommended to use evalNo, it allows arbitrary code to be run which causes a security problem. As we know that the eval() function is used to run text as code. In most of the cases, it should not be necessary to use it.⬆ Back to TopWhat is a Regular ExpressionA regular expression is a sequence of characters that forms a search pattern. You can use this search pattern for searching data in a text. These can be used to perform all types of text search and text replace operations. Let's see the syntax format now,/pattern/modifiers;For example, the regular expression or search pattern with case-insensitive username would be,/John/i;⬆ Back to TopWhat are the string methods available in Regular expressionRegular Expressions has two string methods: search() and replace().The search() method uses an expression to search for a match, and returns the position of the match.var msg = \""Hello John\"";var n = msg.search(/John/i); // 6The replace() method is used to return a modified string where the pattern is replaced.var msg = \""Hello John\"";var n = msg.replace(/John/i, \""Buttler\""); // Hello Buttler⬆ Back to TopWhat are modifiers in regular expressionModifiers can be used to perform case-insensitive and global searches. Let's list down some of the modifiers,ModifierDescriptioniPerform case-insensitive matchinggPerform a global match rather than stops at first matchmPerform multiline matchingLet's take an example of global modifier,var text = \""Learn JS one by one\"";var pattern = /one/g;var result = text.match(pattern); // one,one⬆ Back to TopWhat are regular expression patternsRegular Expressions provide a group of patterns in order to match characters. Basically they are categorized into 3 types,Brackets: These are used to find a range of characters.For example, below are some use cases,[abc]: Used to find any of the characters between the brackets(a,b,c)[0-9]: Used to find any of the digits between the brackets(a|b): Used to find any of the alternatives separated with |Metacharacters: These are characters with a special meaningFor example, below are some use cases,\\d: Used to find a digit\\s: Used to find a whitespace character\\b: Used to find a match at the beginning or ending of a wordQuantifiers: These are useful to define quantitiesFor example, below are some use cases,n+: Used to find matches for any string that contains at least one nn*: Used to find matches for any string that contains zero or more occurrences of nn?: Used to find matches for any string that contains zero or one occurrences of n⬆ Back to TopWhat is a RegExp objectRegExp object is a regular expression object with predefined properties and methods. Let's see the simple usage of RegExp object,var regexp = new RegExp(\""\\\\w+\"");console.log(regexp);// expected output: /\\w+/⬆ Back to TopHow do you search a string for a patternYou can use the test() method of regular expression in order to search a string for a pattern, and return true or false depending on the result.var pattern = /you/;console.log(pattern.test(\""How are you?\"")); //true⬆ Back to TopWhat is the purpose of exec methodThe purpose of exec method is similar to test method but it executes a search for a match in a specified string and returns a result array, or null instead of returning true/false.var pattern = /you/;console.log(pattern.exec(\""How are you?\"")); //[\""you\"", index: 8, input: \""How are you?\"", groups: undefined]⬆ Back to TopHow do you change the style of a HTML elementYou can change inline style or classname of a HTML element using javascriptUsing style property: You can modify inline style using style propertydocument.getElementById(\""title\"").style.fontSize = \""30px\"";Using ClassName property: It is easy to modify element class using className propertydocument.getElementById(\""title\"").className = \""custom-title\"";⬆ Back to TopWhat would be the result of 1+2+'3'The output is going to be 33. Since 1 and 2 are numeric values, the result of the first two digits is going to be a numeric value 3. The next digit is a string type value because of that the addition of numeric value 3 and string type value 3 is just going to be a concatenation value 33.⬆ Back to TopWhat is a debugger statementThe debugger statement invokes any available debugging functionality, such as setting a breakpoint. If no debugging functionality is available, this statement has no effect.For example, in the below function a debugger statement has been inserted. Soexecution is paused at the debugger statement just like a breakpoint in the script source.function getProfile() {  // code goes here  debugger;  // code goes here}⬆ Back to TopWhat is the purpose of breakpoints in debuggingYou can set breakpoints in the javascript code once the debugger statement is executed and the debugger window pops up. At each breakpoint, javascript will stop executing, and let you examine the JavaScript values. After examining values, you can resume the execution of code using the play button.⬆ Back to TopCan I use reserved words as identifiersNo, you cannot use the reserved words as variables, labels, object or function names. Let's see one simple example,var else = \""hello\""; // Uncaught SyntaxError: Unexpected token else⬆ Back to TopHow do you detect a mobile browserYou can use regex which returns a true or false value depending on whether or not the user is browsing with a mobile.window.mobilecheck = function () {  var mobileCheck = false;  (function (a) {    if (      /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(        a      ) ||      /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(        a.substr(0, 4)      )    )      mobileCheck = true;  })(navigator.userAgent || navigator.vendor || window.opera);  return mobileCheck;};⬆ Back to TopHow do you detect a mobile browser without regexpYou can detect mobile browsers by simply running through a list of devices and checking if the useragent matches anything. This is an alternative solution for RegExp usage,function detectmob() {  if (    navigator.userAgent.match(/Android/i) ||    navigator.userAgent.match(/webOS/i) ||    navigator.userAgent.match(/iPhone/i) ||    navigator.userAgent.match(/iPad/i) ||    navigator.userAgent.match(/iPod/i) ||    navigator.userAgent.match(/BlackBerry/i) ||    navigator.userAgent.match(/Windows Phone/i)  ) {    return true;  } else {    return false;  }}⬆ Back to TopHow do you get the image width and height using JSYou can programmatically get the image and check the dimensions(width and height) using Javascript.var img = new Image();img.onload = function () {  console.log(this.width + \""x\"" + this.height);};img.src = \""http://www.google.com/intl/en_ALL/images/logo.gif\"";⬆ Back to TopHow do you make synchronous HTTP requestBrowsers provide an XMLHttpRequest object which can be used to make synchronous HTTP requests from JavaScriptfunction httpGet(theUrl) {  var xmlHttpReq = new XMLHttpRequest();  xmlHttpReq.open(\""GET\"", theUrl, false); // false for synchronous request  xmlHttpReq.send(null);  return xmlHttpReq.responseText;}⬆ Back to TopHow do you make asynchronous HTTP requestBrowsers provide an XMLHttpRequest object which can be used to make asynchronous HTTP requests from JavaScript by passing the 3rd parameter as true.function httpGetAsync(theUrl, callback) {  var xmlHttpReq = new XMLHttpRequest();  xmlHttpReq.onreadystatechange = function () {    if (xmlHttpReq.readyState == 4 && xmlHttpReq.status == 200)      callback(xmlHttpReq.responseText);  };  xmlHttp.open(\""GET\"", theUrl, true); // true for asynchronous  xmlHttp.send(null);}⬆ Back to TopHow do you convert date to another timezone in javascriptYou can use the toLocaleString() method to convert dates in one timezone to another. For example, let's convert current date to British English timezone as below,console.log(event.toLocaleString(\""en-GB\"", { timeZone: \""UTC\"" })); //29/06/2019, 09:56:00⬆ Back to TopWhat are the properties used to get size of windowYou can use innerWidth, innerHeight, clientWidth, clientHeight properties of windows, document element and document body objects to find the size of a window. Let's use them combination of these properties to calculate the size of a window or document,var width =  window.innerWidth ||  document.documentElement.clientWidth ||  document.body.clientWidth;var height =  window.innerHeight ||  document.documentElement.clientHeight ||  document.body.clientHeight;⬆ Back to TopWhat is a conditional operator in javascriptThe conditional (ternary) operator is the only JavaScript operator that takes three operands which acts as a shortcut for if statements.var isAuthenticated = false;console.log(  isAuthenticated ? \""Hello, welcome\"" : \""Sorry, you are not authenticated\""); //Sorry, you are not authenticated⬆ Back to TopCan you apply chaining on conditional operatorYes, you can apply chaining on conditional operators similar to if … else if … else if … else chain. The syntax is going to be as below,function traceValue(someParam) {  return condition1    ? value1    : condition2    ? value2    : condition3    ? value3    : value4;}// The above conditional operator is equivalent to:function traceValue(someParam) {  if (condition1) {    return value1;  } else if (condition2) {    return value2;  } else if (condition3) {    return value3;  } else {    return value4;  }}⬆ Back to TopWhat are the ways to execute javascript after page loadYou can execute javascript after page load in many different ways,window.onload:window.onload = function ...document.onload:document.onload = function ...body onload:<body onload=\""script();\"">⬆ Back to TopWhat is the difference between proto and prototypeThe __proto__ object is the actual object that is used in the lookup chain to resolve methods, etc. Whereas prototype is the object that is used to build __proto__ when you create an object with new.new Employee().__proto__ === Employee.prototype;new Employee().prototype === undefined;There are few more differences,featurePrototypeprotoAccessAll the function constructors have prototype properties.All the objects have __proto__ propertyPurposeUsed to reduce memory wastage with a single copy of functionUsed in lookup chain to resolve methods, constructors etc.ECMAScriptIntroduced in ES6Introduced in ES5UsageFrequently usedRarely used⬆ Back to TopGive an example where do you really need semicolonIt is recommended to use semicolons after every statement in JavaScript. For example, in the below case it throws an error \"".. is not a function\"" at runtime due to missing semicolon.// define a functionvar fn = (function () {  //...})(  // semicolon missing at this line  // then execute some code inside a closure  function () {    //...  })();and it will be interpreted asvar fn = (function () {  //...})(function () {  //...})();In this case, we are passing the second function as an argument to the first function and then trying to call the result of the first function call as a function. Hence, the second function will fail with a \""... is not a function\"" error at runtime.⬆ Back to TopWhat is a freeze methodThe freeze() method is used to freeze an object. Freezing an object does not allow adding new properties to an object,prevents from removing and prevents changing the enumerability, configurability, or writability of existing properties. i.e, It returns the passed object and does not create a frozen copy.const obj = {  prop: 100,};Object.freeze(obj);obj.prop = 200; // Throws an error in strict modeconsole.log(obj.prop); //100Remember freezing is only applied to the top-level properties in objects but not for nested objects.For example, let's try to freeze user object which has employment details as nested object and observe that details have been changed.const user = {  name: 'John',  employment: {    department: 'IT'  }};Object.freeze(user);user.employment.department = 'HR';Note: It causes a TypeError if the argument passed is not an object.⬆ Back to TopWhat is the purpose of freeze methodBelow are the main benefits of using freeze method,It is used for freezing objects and arrays.It is used to make an object immutable.⬆ Back to TopWhy do I need to use freeze methodIn the Object-oriented paradigm, an existing API contains certain elements that are not intended to be extended, modified, or re-used outside of their current context. Hence it works as the final keyword which is used in various languages.⬆ Back to TopHow do you detect a browser language preferenceYou can use navigator object to detect a browser language preference as below,var language =  (navigator.languages && navigator.languages[0]) || // Chrome / Firefox  navigator.language || // All browsers  navigator.userLanguage; // IE <= 10console.log(language);⬆ Back to TopHow to convert string to title case with javascriptTitle case means that the first letter of each word is capitalized. You can convert a string to title case using the below function,function toTitleCase(str) {  return str.replace(/\\w\\S*/g, function (txt) {    return txt.charAt(0).toUpperCase() + txt.substring(1).toLowerCase();  });}toTitleCase(\""good morning john\""); // Good Morning John⬆ Back to TopHow do you detect javascript disabled in the pageYou can use the <noscript> tag to detect javascript disabled or not. The code block inside <noscript> gets executed when JavaScript is disabled, and is typically used to display alternative content when the page generated in JavaScript.<script type=\""javascript\"">    // JS related code goes here</script><noscript>    <a href=\""next_page.html?noJS=true\"">JavaScript is disabled in the page. Please click Next Page</a></noscript>⬆ Back to TopWhat are various operators supported by javascriptAn operator is capable of manipulating(mathematical and logical computations) a certain value or operand. There are various operators supported by JavaScript as below,Arithmetic Operators: Includes + (Addition),– (Subtraction), * (Multiplication), / (Division), % (Modulus), + + (Increment) and – – (Decrement)Comparison Operators: Includes = =(Equal),!= (Not Equal), ===(Equal with type), > (Greater than),> = (Greater than or Equal to),< (Less than),<= (Less than or Equal to)Logical Operators: Includes &&(Logical AND),||(Logical OR),!(Logical NOT)Assignment Operators: Includes = (Assignment Operator), += (Add and Assignment Operator), – = (Subtract and Assignment Operator), *= (Multiply and Assignment), /= (Divide and Assignment), %= (Modules and Assignment)Ternary Operators: It includes conditional(: ?) Operatortypeof Operator: It uses to find type of variable. The syntax looks like typeof variable⬆ Back to TopWhat is a rest parameterRest parameter is an improved way to handle function parameters which allows us to represent an indefinite number of arguments as an array. The syntax would be as below,function f(a, b, ...theArgs) {  // ...}For example, let's take a sum example to calculate on dynamic number of parameters,function total(…args){let sum = 0;for(let i of args){sum+=i;}return sum;}console.log(fun(1,2)); //3console.log(fun(1,2,3)); //6console.log(fun(1,2,3,4)); //13console.log(fun(1,2,3,4,5)); //15Note: Rest parameter is added in ES2015 or ES6⬆ Back to TopWhat happens if you do not use rest parameter as a last argumentThe rest parameter should be the last argument, as its job is to collect all the remaining arguments into an array. For example, if you define a function like below it doesn’t make any sense and will throw an error.function someFunc(a,…b,c){//You code goes herereturn;}⬆ Back to TopWhat are the bitwise operators available in javascriptBelow are the list of bitwise logical operators used in JavaScriptBitwise AND ( & )Bitwise OR ( | )Bitwise XOR ( ^ )Bitwise NOT ( ~ )Left Shift ( << )Sign Propagating Right Shift ( >> )Zero fill Right Shift ( >>> )⬆ Back to TopWhat is a spread operatorSpread operator allows iterables( arrays / objects / strings ) to be expanded into single arguments/elements. Let's take an example to see this behavior,function calculateSum(x, y, z) {  return x + y + z;}const numbers = [1, 2, 3];console.log(calculateSum(...numbers)); // 6⬆ Back to TopHow do you determine whether object is frozen or notObject.isFrozen() method is used to determine if an object is frozen or not.An object is frozen if all of the below conditions hold true,If it is not extensible.If all of its properties are non-configurable.If all its data properties are non-writable.The usage is going to be as follows,const object = {  property: \""Welcome JS world\"",};Object.freeze(object);console.log(Object.isFrozen(object));⬆ Back to TopHow do you determine two values same or not using objectThe Object.is() method determines whether two values are the same value. For example, the usage with different types of values would be,Object.is(\""hello\"", \""hello\""); // trueObject.is(window, window); // trueObject.is([], []); // falseTwo values are the same if one of the following holds:both undefinedboth nullboth true or both falseboth strings of the same length with the same characters in the same orderboth the same object (means both object have same reference)both numbers andboth +0both -0both NaNboth non-zero and both not NaN and both have the same value.⬆ Back to TopWhat is the purpose of using object is methodSome of the applications of Object's is method are follows,It is used for comparison of two strings.It is used for comparison of two numbers.It is used for comparing the polarity of two numbers.It is used for comparison of two objects.⬆ Back to TopHow do you copy properties from one object to otherYou can use the Object.assign() method which is used to copy the values and properties from one or more source objects to a target object. It returns the target object which has properties and values copied from the source objects. The syntax would be as below,Object.assign(target, ...sources);Let's take example with one source and one target object,const target = { a: 1, b: 2 };const source = { b: 3, c: 4 };const returnedTarget = Object.assign(target, source);console.log(target); // { a: 1, b: 3, c: 4 }console.log(returnedTarget); // { a: 1, b: 3, c: 4 }As observed in the above code, there is a common property(b) from source to target so it's value has been overwritten.⬆ Back to TopWhat are the applications of assign methodBelow are the some of main applications of Object.assign() method,It is used for cloning an object.It is used to merge objects with the same properties.⬆ Back to TopWhat is a proxy objectThe Proxy object is used to define custom behavior for fundamental operations such as property lookup, assignment, enumeration, function invocation, etc. The syntax would be as follows,var p = new Proxy(target, handler);Let's take an example of proxy object,var handler = {  get: function (obj, prop) {    return prop in obj ? obj[prop] : 100;  },};var p = new Proxy({}, handler);p.a = 10;p.b = null;console.log(p.a, p.b); // 10, nullconsole.log(\""c\"" in p, p.c); // false, 100In the above code, it uses get handler which define the behavior of the proxy when an operation is performed on it⬆ Back to TopWhat is the purpose of seal methodThe Object.seal() method is used to seal an object, by preventing new properties from being added to it and marking all existing properties as non-configurable. But values of present properties can still be changed as long as they are writable. Let's see the below example to understand more about seal() methodconst object = {  property: \""Welcome JS world\"",};Object.seal(object);object.property = \""Welcome to object world\"";console.log(Object.isSealed(object)); // truedelete object.property; // You cannot delete when sealedconsole.log(object.property); //Welcome to object world⬆ Back to TopWhat are the applications of seal methodBelow are the main applications of Object.seal() method,It is used for sealing objects and arrays.It is used to make an object immutable.⬆ Back to TopWhat are the differences between freeze and seal methodsIf an object is frozen using the Object.freeze() method then its properties become immutable and no changes can be made in them whereas if an object is sealed using the Object.seal() method then the changes can be made in the existing properties of the object.⬆ Back to TopHow do you determine if an object is sealed or notThe Object.isSealed() method is used to determine if an object is sealed or not. An object is sealed if all of the below conditions hold trueIf it is not extensible.If all of its properties are non-configurable.If it is not removable (but not necessarily non-writable).Let's see it in the actionconst object = {  property: \""Hello, Good morning\"",};Object.seal(object); // Using seal() method to seal the objectconsole.log(Object.isSealed(object)); // checking whether the object is sealed or not⬆ Back to TopHow do you get enumerable key and value pairsThe Object.entries() method is used to return an array of a given object's own enumerable string-keyed property [key, value] pairs, in the same order as that provided by a for...in loop. Let's see the functionality of object.entries() method in an example,const object = {  a: \""Good morning\"",  b: 100,};for (let [key, value] of Object.entries(object)) {  console.log(`${key}: ${value}`); // a: 'Good morning'  // b: 100}Note: The order is not guaranteed as object defined.⬆ Back to TopWhat is the main difference between Object.values and Object.entries methodThe Object.values() method's behavior is similar to Object.entries() method but it returns an array of values instead [key,value] pairs.const object = {  a: \""Good morning\"",  b: 100,};for (let value of Object.values(object)) {  console.log(`${value}`); // 'Good morning'  100;}⬆ Back to TopHow can you get the list of keys of any objectYou can use the Object.keys() method which is used to return an array of a given object's own property names, in the same order as we get with a normal loop. For example, you can get the keys of a user object,const user = {  name: \""John\"",  gender: \""male\"",  age: 40,};console.log(Object.keys(user)); //['name', 'gender', 'age']⬆ Back to TopHow do you create an object with prototypeThe Object.create() method is used to create a new object with the specified prototype object and properties. i.e, It uses an existing object as the prototype of the newly created object. It returns a new object with the specified prototype object and properties.const user = {  name: \""John\"",  printInfo: function () {    console.log(`My name is ${this.name}.`);  },};const admin = Object.create(user);admin.name = \""Nick\""; // Remember that \""name\"" is a property set on \""admin\"" but not on \""user\"" objectadmin.printInfo(); // My name is Nick⬆ Back to TopWhat is a WeakSetWeakSet is used to store a collection of weakly(weak references) held objects. The syntax would be as follows,new WeakSet([iterable]);Let's see the below example to explain it's behavior,var ws = new WeakSet();var user = {};ws.add(user);ws.has(user); // truews.delete(user); // removes user from the setws.has(user); // false, user has been removed⬆ Back to TopWhat are the differences between WeakSet and SetThe main difference is that references to objects in Set are strong while references to objects in WeakSet are weak. i.e, An object in WeakSet can be garbage collected if there is no other reference to it.Other differences are,Sets can store any value Whereas WeakSets can store only collections of objectsWeakSet does not have size property unlike SetWeakSet does not have methods such as clear, keys, values, entries, forEach.WeakSet is not iterable.⬆ Back to TopList down the collection of methods available on WeakSetBelow are the list of methods available on WeakSet,add(value): A new object is appended with the given value to the weaksetdelete(value): Deletes the value from the WeakSet collection.has(value): It returns true if the value is present in the WeakSet Collection, otherwise it returns false.Let's see the functionality of all the above methods in an example,var weakSetObject = new WeakSet();var firstObject = {};var secondObject = {};// add(value)weakSetObject.add(firstObject);weakSetObject.add(secondObject);console.log(weakSetObject.has(firstObject)); //trueweakSetObject.delete(secondObject);⬆ Back to TopWhat is a WeakMapThe WeakMap object is a collection of key/value pairs in which the keys are weakly referenced. In this case, keys must be objects and the values can be arbitrary values. The syntax is looking like as below,new WeakMap([iterable]);Let's see the below example to explain it's behavior,var ws = new WeakMap();var user = {};ws.set(user);ws.has(user); // truews.delete(user); // removes user from the mapws.has(user); // false, user has been removed⬆ Back to TopWhat are the differences between WeakMap and MapThe main difference is that references to key objects in Map are strong while references to key objects in WeakMap are weak. i.e, A key object in WeakMap can be garbage collected if there is no other reference to it.Other differences are,Maps can store any key type Whereas WeakMaps can store only collections of key objectsWeakMap does not have size property unlike MapWeakMap does not have methods such as clear, keys, values, entries, forEach.WeakMap is not iterable.⬆ Back to TopList down the collection of methods available on WeakMapBelow are the list of methods available on WeakMap,set(key, value): Sets the value for the key in the WeakMap object. Returns the WeakMap object.delete(key): Removes any value associated to the key.has(key): Returns a Boolean asserting whether a value has been associated to the key in the WeakMap object or not.get(key): Returns the value associated to the key, or undefined if there is none.Let's see the functionality of all the above methods in an example,var weakMapObject = new WeakMap();var firstObject = {};var secondObject = {};// set(key, value)weakMapObject.set(firstObject, \""John\"");weakMapObject.set(secondObject, 100);console.log(weakMapObject.has(firstObject)); //trueconsole.log(weakMapObject.get(firstObject)); // JohnweakMapObject.delete(secondObject);⬆ Back to TopWhat is the purpose of unevalThe uneval() is an inbuilt function which is used to create a string representation of the source code of an Object. It is a top-level function and is not associated with any object. Let's see the below example to know more about it's functionality,var a = 1;uneval(a); // returns a String containing 1uneval(function user() {}); // returns \""(function user(){})\""⬆ Back to TopHow do you encode an URLThe encodeURI() function is used to encode complete URI which has special characters except (, / ? : @ & = + $ #) characters.var uri = \""https://mozilla.org/?x=шеллы\"";var encoded = encodeURI(uri);console.log(encoded); // https://mozilla.org/?x=%D1%88%D0%B5%D0%BB%D0%BB%D1%8B⬆ Back to TopHow do you decode an URLThe decodeURI() function is used to decode a Uniform Resource Identifier (URI) previously created by encodeURI().var uri = \""https://mozilla.org/?x=шеллы\"";var encoded = encodeURI(uri);console.log(encoded); // https://mozilla.org/?x=%D1%88%D0%B5%D0%BB%D0%BB%D1%8Btry {  console.log(decodeURI(encoded)); // \""https://mozilla.org/?x=шеллы\""} catch (e) {  // catches a malformed URI  console.error(e);}⬆ Back to TopHow do you print the contents of web pageThe window object provided a print() method which is used to print the contents of the current window. It opens a Print dialog box which lets you choose between various printing options. Let's see the usage of print method in an example,<input type=\""button\"" value=\""Print\"" onclick=\""window.print()\"" />Note: In most browsers, it will block while the print dialog is open.⬆ Back to TopWhat is the difference between uneval and evalThe uneval function returns the source of a given object; whereas the eval function does the opposite, by evaluating that source code in a different memory area. Let's see an example to clarify the difference,var msg = uneval(function greeting() {  return \""Hello, Good morning\"";});var greeting = eval(msg);greeting(); // returns \""Hello, Good morning\""⬆ Back to TopWhat is an anonymous functionAn anonymous function is a function without a name! Anonymous functions are commonly assigned to a variable name or used as a callback function. The syntax would be as below,function (optionalParameters) {  //do something}const myFunction = function(){ //Anonymous function assigned to a variable  //do something};[1, 2, 3].map(function(element){ //Anonymous function used as a callback function  //do something});Let's see the above anonymous function in an example,var x = function (a, b) {  return a * b;};var z = x(5, 10);console.log(z); // 50⬆ Back to TopWhat is the precedence order between local and global variablesA local variable takes precedence over a global variable with the same name. Let's see this behavior in an example.var msg = \""Good morning\"";function greeting() {  msg = \""Good Evening\"";  console.log(msg); // Good Evening}greeting();⬆ Back to TopWhat are javascript accessorsECMAScript 5 introduced javascript object accessors or computed properties through getters and setters. Getters uses the get keyword whereas Setters uses the set keyword.var user = {  firstName: \""John\"",  lastName : \""Abraham\"",  language : \""en\"",  get lang() {    return this.language;  },  set lang(lang) {  this.language = lang;  }};console.log(user.lang); // getter access lang as enuser.lang = 'fr';console.log(user.lang); // setter used to set lang as fr⬆ Back to TopHow do you define property on Object constructorThe Object.defineProperty() static method is used to define a new property directly on an object, or modify an existing property on an object, and returns the object. Let's see an example to know how to define property,const newObject = {};Object.defineProperty(newObject, \""newProperty\"", {  value: 100,  writable: false,});console.log(newObject.newProperty); // 100newObject.newProperty = 200; // It throws an error in strict mode due to writable setting⬆ Back to TopWhat is the difference between get and definePropertyBoth have similar results until unless you use classes. If you use get the property will be defined on the prototype of the object whereas using Object.defineProperty() the property will be defined on the instance it is applied to.⬆ Back to TopWhat are the advantages of Getters and SettersBelow are the list of benefits of Getters and Setters,They provide simpler syntaxThey are used for defining computed properties, or accessors in JS.Useful to provide equivalence relation between properties and methodsThey can provide better data qualityUseful for doing things behind the scenes with the encapsulated logic.⬆ Back to TopCan I add getters and setters using defineProperty methodYes, You can use the Object.defineProperty() method to add Getters and Setters. For example, the below counter object uses increment, decrement, add and subtract properties,var obj = { counter: 0 };// Define gettersObject.defineProperty(obj, \""increment\"", {  get: function () {    this.counter++;  },});Object.defineProperty(obj, \""decrement\"", {  get: function () {    this.counter--;  },});// Define settersObject.defineProperty(obj, \""add\"", {  set: function (value) {    this.counter += value;  },});Object.defineProperty(obj, \""subtract\"", {  set: function (value) {    this.counter -= value;  },});obj.add = 10;obj.subtract = 5;console.log(obj.increment); //6console.log(obj.decrement); //5⬆ Back to TopWhat is the purpose of switch-caseThe switch case statement in JavaScript is used for decision making purposes. In a few cases, using the switch case statement is going to be more convenient than if-else statements. The syntax would be as below,switch (expression){    case value1:        statement1;        break;    case value2:        statement2;        break;    .    .    case valueN:        statementN;        break;    default:        statementDefault;}The above multi-way branch statement provides an easy way to dispatch execution to different parts of code based on the value of the expression.⬆ Back to TopWhat are the conventions to be followed for the usage of switch caseBelow are the list of conventions should be taken care,The expression can be of type either number or string.Duplicate values are not allowed for the expression.The default statement is optional. If the expression passed to switch does not match with any case value then the statement within default case will be executed.The break statement is used inside the switch to terminate a statement sequence.The break statement is optional. But if it is omitted, the execution will continue on into the next case.⬆ Back to TopWhat are primitive data typesA primitive data type is data that has a primitive value (which has no properties or methods). There are 7 types of primitive data types.stringnumberbooleannullundefinedbigintsymbol⬆ Back to TopWhat are the different ways to access object propertiesThere are 3 possible ways for accessing the property of an object.Dot notation: It uses dot for accessing the propertiesobjectName.property;Square brackets notation: It uses square brackets for property accessobjectName[\""property\""];Expression notation: It uses expression in the square bracketsobjectName[expression];⬆ Back to TopWhat are the function parameter rulesJavaScript functions follow below rules for parameters,The function definitions do not specify data types for parameters.Do not perform type checking on the passed arguments.Do not check the number of arguments received.i.e, The below function follows the above rules,function functionName(parameter1, parameter2, parameter3) {  console.log(parameter1); // 1}functionName(1);⬆ Back to TopWhat is an error objectAn error object is a built in error object that provides error information when an error occurs. It has two properties: name and message. For example, the below function logs error details,try {  greeting(\""Welcome\"");} catch (err) {  console.log(err.name + \""<br>\"" + err.message);}⬆ Back to TopWhen you get a syntax errorA SyntaxError is thrown if you try to evaluate code with a syntax error. For example, the below missing quote for the function parameter throws a syntax errortry {  eval(\""greeting('welcome)\""); // Missing ' will produce an error} catch (err) {  console.log(err.name);}⬆ Back to TopWhat are the different error names from error objectThere are 6 different types of error names returned from error object,Error NameDescriptionEvalErrorAn error has occurred in the eval() functionRangeErrorAn error has occurred with a number \""out of range\""ReferenceErrorAn error due to an illegal referenceSyntaxErrorAn error due to a syntax errorTypeErrorAn error due to a type errorURIErrorAn error due to encodeURI()⬆ Back to TopWhat are the various statements in error handlingBelow are the list of statements used in an error handling,try: This statement is used to test a block of code for errorscatch: This statement is used to handle the errorthrow: This statement is used to create custom errors.finally: This statement is used to execute code after try and catch regardless of the result.⬆ Back to TopWhat are the two types of loops in javascriptEntry Controlled loops: In this kind of loop type, the test condition is tested before entering the loop body. For example, For Loop and While Loop comes under this category.Exit Controlled Loops: In this kind of loop type, the test condition is tested or evaluated at the end of the loop body. i.e, the loop body will execute at least once irrespective of test condition true or false. For example, do-while loop comes under this category.⬆ Back to TopWhat is nodejsNode.js is a server-side platform built on Chrome's JavaScript runtime for easily building fast and scalable network applications. It is an event-based, non-blocking, asynchronous I/O runtime that uses Google's V8 JavaScript engine and libuv library.⬆ Back to TopWhat is an Intl objectThe Intl object is the namespace for the ECMAScript Internationalization API, which provides language sensitive string comparison, number formatting, and date and time formatting. It provides access to several constructors and language sensitive functions.⬆ Back to TopHow do you perform language specific date and time formattingYou can use the Intl.DateTimeFormat object which is a constructor for objects that enable language-sensitive date and time formatting. Let's see this behavior with an example,var date = new Date(Date.UTC(2019, 07, 07, 3, 0, 0));console.log(new Intl.DateTimeFormat(\""en-GB\"").format(date)); // 07/08/2019console.log(new Intl.DateTimeFormat(\""en-AU\"").format(date)); // 07/08/2019⬆ Back to TopWhat is an IteratorAn iterator is an object which defines a sequence and a return value upon its termination. It implements the Iterator protocol with a next() method which returns an object with two properties: value (the next value in the sequence) and done (which is true if the last value in the sequence has been consumed).⬆ Back to TopHow does synchronous iteration worksSynchronous iteration was introduced in ES6 and it works with below set of components,Iterable: It is an object which can be iterated over via a method whose key is Symbol.iterator.Iterator: It is an object returned by invoking [Symbol.iterator]() on an iterable. This iterator object wraps each iterated element in an object and returns it via next() method one by one.IteratorResult: It is an object returned by next() method. The object contains two properties; the value property contains an iterated element and the done property determines whether the element is the last element or not.Let's demonstrate synchronous iteration with an array as below,const iterable = [\""one\"", \""two\"", \""three\""];const iterator = iterable[Symbol.iterator]();console.log(iterator.next()); // { value: 'one', done: false }console.log(iterator.next()); // { value: 'two', done: false }console.log(iterator.next()); // { value: 'three', done: false }console.log(iterator.next()); // { value: 'undefined, done: true }⬆ Back to TopWhat is an event loopThe event loop is a process that continuously monitors both the call stack and the event queue and checks whether or not the call stack is empty. If the call stack is empty and there are pending events in the event queue, the event loop dequeues the event from the event queue and pushes it to the call stack. The call stack executes the event, and any additional events generated during the execution are added to the end of the event queue.Note: The event loop allows Node.js to perform non-blocking I/O operations, even though JavaScript is single-threaded, by offloading operations to the system kernel whenever possible. Since most modern kernels are multi-threaded, they can handle multiple operations executing in the background.⬆ Back to TopWhat is call stackCall Stack is a data structure for javascript interpreters to keep track of function calls(creates execution context) in the program. It has two major actions,Whenever you call a function for its execution, you are pushing it to the stack.Whenever the execution is completed, the function is popped out of the stack.Let's take an example and it's state representation in a diagram formatfunction hungry() {  eatFruits();}function eatFruits() {  return \""I'm eating fruits\"";}// Invoke the `hungry` functionhungry();The above code processed in a call stack as below,Add the hungry() function to the call stack list and execute the code.Add the eatFruits() function to the call stack list and execute the code.Delete the eatFruits() function from our call stack list.Delete the hungry() function from the call stack list since there are no items anymore.⬆ Back to TopWhat is an event queueThe event queue follows the queue data structure. It stores async callbacks to be added to the call stack. It is also known as the Callback Queue or Macrotask Queue.Whenever the call stack receives an async function, it is moved into the Web API. Based on the function, Web API executes it and awaits the result. Once it is finished, it moves the callback into the event queue (the callback of the promise is moved into the microtask queue).The event queue constantly checks whether or not the call stack is empty. Once the call stack is empty and there is a callback in the event queue, the event queue moves the callback into the call stack. If there is a callback in the microtask queue as well, it is moved first. The microtask queue has a higher priority than the event queue.⬆ Back to TopWhat is a decoratorA decorator is an expression that evaluates to a function and that takes the target, name, and decorator descriptor as arguments. Also, it optionally returns a decorator descriptor to install on the target object. Let's define admin decorator for user class at design time,function admin(isAdmin) {   return function(target) {       target.isAdmin = isAdmin;   }}@admin(true)class User() {}console.log(User.isAdmin); //true @admin(false) class User() { } console.log(User.isAdmin); //false⬆ Back to TopWhat are the properties of Intl objectBelow are the list of properties available on Intl object,Collator: These are the objects that enable language-sensitive string comparison.DateTimeFormat: These are the objects that enable language-sensitive date and time formatting.ListFormat: These are the objects that enable language-sensitive list formatting.NumberFormat: Objects that enable language-sensitive number formatting.PluralRules: Objects that enable plural-sensitive formatting and language-specific rules for plurals.RelativeTimeFormat: Objects that enable language-sensitive relative time formatting.⬆ Back to TopWhat is an Unary operatorThe unary(+) operator is used to convert a variable to a number.If the variable cannot be converted, it will still become a number but with the value NaN. Let's see this behavior in an action.var x = \""100\"";var y = +x;console.log(typeof x, typeof y); // string, numbervar a = \""Hello\"";var b = +a;console.log(typeof a, typeof b, b); // string, number, NaN⬆ Back to TopHow do you sort elements in an arrayThe sort() method is used to sort the elements of an array in place and returns the sorted array. The example usage would be as below,var months = [\""Aug\"", \""Sep\"", \""Jan\"", \""June\""];months.sort();console.log(months); //  [\""Aug\"", \""Jan\"", \""June\"", \""Sep\""]⬆ Back to TopWhat is the purpose of compareFunction while sorting arraysThe compareFunction is used to define the sort order. If omitted, the array elements are converted to strings, then sorted according to each character's Unicode code point value. Let's take an example to see the usage of compareFunction,let numbers = [1, 2, 5, 3, 4];numbers.sort((a, b) => b - a);console.log(numbers); // [5, 4, 3, 2, 1]⬆ Back to TopHow do you reversing an arrayYou can use the reverse() method to reverse the elements in an array. This method is useful to sort an array in descending order. Let's see the usage of reverse() method in an example,let numbers = [1, 2, 5, 3, 4];numbers.sort((a, b) => b - a);numbers.reverse();console.log(numbers); // [1, 2, 3, 4 ,5]⬆ Back to TopHow do you find min and max value in an arrayYou can use Math.min and Math.max methods on array variables to find the minimum and maximum elements within an array. Let's create two functions to find the min and max value with in an array,var marks = [50, 20, 70, 60, 45, 30];function findMin(arr) {  return Math.min.apply(null, arr);}function findMax(arr) {  return Math.max.apply(null, arr);}console.log(findMin(marks));console.log(findMax(marks));⬆ Back to TopHow do you find min and max values without Math functionsYou can write functions which loop through an array comparing each value with the lowest value or highest value to find the min and max values. Let's create those functions to find min and max values,var marks = [50, 20, 70, 60, 45, 30];function findMin(arr) {  var length = arr.length;  var min = Infinity;  while (length--) {    if (arr[length] < min) {      min = arr[length];    }  }  return min;}function findMax(arr) {  var length = arr.length;  var max = -Infinity;  while (length--) {    if (arr[length] > max) {      max = arr[length];    }  }  return max;}console.log(findMin(marks));console.log(findMax(marks));⬆ Back to TopWhat is an empty statement and purpose of itThe empty statement is a semicolon (;) indicating that no statement will be executed, even if JavaScript syntax requires one. Since there is no action with an empty statement you might think that it's usage is quite less, but the empty statement is occasionally useful when you want to create a loop that has an empty body. For example, you can initialize an array with zero values as below,// Initialize an array afor(let i=0; i < a.length; a[i++] = 0) ;⬆ Back to TopHow do you get metadata of a moduleYou can use the import.meta object which is a meta-property exposing context-specific meta data to a JavaScript module. It contains information about the current module, such as the module's URL. In browsers, you might get different meta data than NodeJS.<script type=\""module\"" src=\""welcome-module.js\""></script>;console.log(import.meta); // { url: \""file:///home/user/welcome-module.js\"" }⬆ Back to TopWhat is a comma operatorThe comma operator is used to evaluate each of its operands from left to right and returns the value of the last operand. This is totally different from comma usage within arrays, objects, and function arguments and parameters. For example, the usage for numeric expressions would be as below,var x = 1;x = (x++, x);console.log(x); // 2⬆ Back to TopWhat is the advantage of a comma operatorIt is normally used to include multiple expressions in a location that requires a single expression. One of the common usages of this comma operator is to supply multiple parameters in a for loop. For example, the below for loop uses multiple expressions in a single location using comma operator,for (var a = 0, b =10; a <= 10; a++, b--)You can also use the comma operator in a return statement where it processes before returning.function myFunction() {  var a = 1;  return (a += 10), a; // 11}⬆ Back to TopWhat is typescriptTypeScript is a typed superset of JavaScript created by Microsoft that adds optional types, classes, async/await, and many other features, and compiles to plain JavaScript. Angular built entirely in TypeScript and used as a primary language. You can install it globally asnpm install -g typescriptLet's see a simple example of TypeScript usage,function greeting(name: string): string {  return \""Hello, \"" + name;}let user = \""Sudheer\"";console.log(greeting(user));The greeting method allows only string type as argument.⬆ Back to TopWhat are the differences between javascript and typescriptBelow are the list of differences between javascript and typescript,featuretypescriptjavascriptLanguage paradigmObject oriented programming languageScripting languageTyping supportSupports static typingIt has dynamic typingModulesSupportedNot supportedInterfaceIt has interfaces conceptDoesn't support interfacesOptional parametersFunctions support optional parametersNo support of optional parameters for functions⬆ Back to TopWhat are the advantages of typescript over javascriptBelow are some of the advantages of typescript over javascript,TypeScript is able to find compile time errors at the development time only and it makes sures less runtime errors. Whereas javascript is an interpreted language.TypeScript is strongly-typed or supports static typing which allows for checking type correctness at compile time. This is not available in javascript.TypeScript compiler can compile the .ts files into ES3,ES4 and ES5 unlike ES6 features of javascript which may not be supported in some browsers.⬆ Back to TopWhat is an object initializerAn object initializer is an expression that describes the initialization of an Object. The syntax for this expression is represented as a comma-delimited list of zero or more pairs of property names and associated values of an object, enclosed in curly braces ({}). This is also known as literal notation. It is one of the ways to create an object.var initObject = { a: \""John\"", b: 50, c: {} };console.log(initObject.a); // John⬆ Back to TopWhat is a constructor methodThe constructor method is a special method for creating and initializing an object created within a class. If you do not specify a constructor method, a default constructor is used. The example usage of constructor would be as below,class Employee {  constructor() {    this.name = \""John\"";  }}var employeeObject = new Employee();console.log(employeeObject.name); // John⬆ Back to TopWhat happens if you write constructor more than once in a classThe \""constructor\"" in a class is a special method and it should be defined only once in a class. i.e, If you write a constructor method more than once in a class it will throw a SyntaxError error. class Employee {   constructor() {     this.name = \""John\"";   }   constructor() {   //  Uncaught SyntaxError: A class may only have one constructor     this.age = 30;   } } var employeeObject = new Employee(); console.log(employeeObject.name);⬆ Back to TopHow do you call the constructor of a parent classYou can use the super keyword to call the constructor of a parent class. Remember that super() must be called before using 'this' reference. Otherwise it will cause a reference error. Let's the usage of it,class Square extends Rectangle {  constructor(length) {    super(length, length);    this.name = \""Square\"";  }  get area() {    return this.width * this.height;  }  set area(value) {    this.area = value;  }}⬆ Back to TopHow do you get the prototype of an objectYou can use the Object.getPrototypeOf(obj) method to return the prototype of the specified object. i.e. The value of the internal prototype property. If there are no inherited properties then null value is returned.const newPrototype = {};const newObject = Object.create(newPrototype);console.log(Object.getPrototypeOf(newObject) === newPrototype); // true⬆ Back to TopWhat happens If I pass string type for getPrototype methodIn ES5, it will throw a TypeError exception if the obj parameter isn't an object. Whereas in ES2015, the parameter will be coerced to an Object.// ES5Object.getPrototypeOf(\""James\""); // TypeError: \""James\"" is not an object// ES2015Object.getPrototypeOf(\""James\""); // String.prototype⬆ Back to TopHow do you set prototype of one object to anotherYou can use the Object.setPrototypeOf() method that sets the prototype (i.e., the internal Prototype property) of a specified object to another object or null. For example, if you want to set prototype of a square object to rectangle object would be as follows,Object.setPrototypeOf(Square.prototype, Rectangle.prototype);Object.setPrototypeOf({}, null);⬆ Back to TopHow do you check whether an object can be extendable or notThe Object.isExtensible() method is used to determine if an object is extendable or not. i.e, Whether it can have new properties added to it or not.const newObject = {};console.log(Object.isExtensible(newObject)); //trueNote: By default, all the objects are extendable. i.e, The new properties can be added or modified.⬆ Back to TopHow do you prevent an object to extendThe Object.preventExtensions() method is used to prevent new properties from ever being added to an object. In other words, it prevents future extensions to the object. Let's see the usage of this property,const newObject = {};Object.preventExtensions(newObject); // NOT extendabletry {  Object.defineProperty(newObject, \""newProperty\"", {    // Adding new property    value: 100,  });} catch (e) {  console.log(e); // TypeError: Cannot define property newProperty, object is not extensible}⬆ Back to TopWhat are the different ways to make an object non-extensibleYou can mark an object non-extensible in 3 ways,Object.preventExtensionsObject.sealObject.freezevar newObject = {};Object.preventExtensions(newObject); // Prevent objects are non-extensibleObject.isExtensible(newObject); // falsevar sealedObject = Object.seal({}); // Sealed objects are non-extensibleObject.isExtensible(sealedObject); // falsevar frozenObject = Object.freeze({}); // Frozen objects are non-extensibleObject.isExtensible(frozenObject); // false⬆ Back to TopHow do you define multiple properties on an objectThe Object.defineProperties() method is used to define new or modify existing properties directly on an object and returning the object. Let's define multiple properties on an empty object,const newObject = {};Object.defineProperties(newObject, {  newProperty1: {    value: \""John\"",    writable: true,  },  newProperty2: {},});⬆ Back to TopWhat is MEAN in javascriptThe MEAN (MongoDB, Express, AngularJS, and Node.js) stack is the most popular open-source JavaScript software tech stack available for building dynamic web apps where you can write both the server-side and client-side halves of the web project entirely in JavaScript.⬆ Back to TopWhat Is Obfuscation in javascriptObfuscation is the deliberate act of creating obfuscated javascript code(i.e, source or machine code) that is difficult for humans to understand. It is something similar to encryption, but a machine can understand the code and execute it.Let's see the below function before Obfuscation,function greeting() {  console.log(\""Hello, welcome to JS world\"");}And after the code Obfuscation, it would be appeared as below,eval(  (function (p, a, c, k, e, d) {    e = function (c) {      return c;    };    if (!\""\"".replace(/^/, String)) {      while (c--) {        d[c] = k[c] || c;      }      k = [        function (e) {          return d[e];        },      ];      e = function () {        return \""\\\\w+\"";      };      c = 1;    }    while (c--) {      if (k[c]) {        p = p.replace(new RegExp(\""\\\\b\"" + e(c) + \""\\\\b\"", \""g\""), k[c]);      }    }    return p;  })(    \""2 1(){0.3('4, 7 6 5 8')}\"",    9,    9,    \""console|greeting|function|log|Hello|JS|to|welcome|world\"".split(\""|\""),    0,    {}  ));⬆ Back to TopWhy do you need ObfuscationBelow are the few reasons for Obfuscation,The Code size will be reduced. So data transfers between server and client will be fast.It hides the business logic from outside world and protects the code from othersReverse engineering is highly difficultThe download time will be reduced⬆ Back to TopWhat is MinificationMinification is the process of removing all unnecessary characters(empty spaces are removed) and variables will be renamed without changing it's functionality. It is also a type of obfuscation .⬆ Back to TopWhat are the advantages of minificationNormally it is recommended to use minification for heavy traffic and intensive requirements of resources. It reduces file sizes with below benefits,Decreases loading times of a web pageSaves bandwidth usages⬆ Back to TopWhat are the differences between Obfuscation and EncryptionBelow are the main differences between Obfuscation and Encryption,FeatureObfuscationEncryptionDefinitionChanging the form of any data in any other formChanging the form of information to an unreadable format by using a keyA key to decodeIt can be decoded without any keyIt is requiredTarget data formatIt will be converted to a complex formConverted into an unreadable format⬆ Back to TopWhat are the common tools used for minificationThere are many online/offline tools to minify the javascript files,Google's Closure CompilerUglifyJS2jsminjavascript-minifier.com/prettydiff.com⬆ Back to TopHow do you perform form validation using javascriptJavaScript can be used to perform HTML form validation. For example, if the form field is empty, the function needs to notify, and return false, to prevent the form being submitted.Lets' perform user login in an html form,<form name=\""myForm\"" onsubmit=\""return validateForm()\"" method=\""post\"">  User name: <input type=\""text\"" name=\""uname\"" />  <input type=\""submit\"" value=\""Submit\"" /></form>And the validation on user login is below,function validateForm() {  var x = document.forms[\""myForm\""][\""uname\""].value;  if (x == \""\"") {    alert(\""The username shouldn't be empty\"");    return false;  }}⬆ Back to TopHow do you perform form validation without javascriptYou can perform HTML form validation automatically without using javascript. The validation enabled by applying the required attribute to prevent form submission when the input is empty.<form method=\""post\"">  <input type=\""text\"" name=\""uname\"" required />  <input type=\""submit\"" value=\""Submit\"" /></form>Note: Automatic form validation does not work in Internet Explorer 9 or earlier.⬆ Back to TopWhat are the DOM methods available for constraint validationThe below DOM methods are available for constraint validation on an invalid input,checkValidity(): It returns true if an input element contains valid data.setCustomValidity(): It is used to set the validationMessage property of an input element.Let's take an user login form with DOM validationsfunction myFunction() {  var userName = document.getElementById(\""uname\"");  if (!userName.checkValidity()) {    document.getElementById(\""message\"").innerHTML =      userName.validationMessage;  } else {    document.getElementById(\""message\"").innerHTML =      \""Entered a valid username\"";  }}⬆ Back to TopWhat are the available constraint validation DOM propertiesBelow are the list of some of the constraint validation DOM properties available,validity: It provides a list of boolean properties related to the validity of an input element.validationMessage: It displays the message when the validity is false.willValidate: It indicates if an input element will be validated or not.⬆ Back to TopWhat are the list of validity propertiesThe validity property of an input element provides a set of properties related to the validity of data.customError: It returns true, if a custom validity message is set.patternMismatch: It returns true, if an element's value does not match its pattern attribute.rangeOverflow: It returns true, if an element's value is greater than its max attribute.rangeUnderflow: It returns true, if an element's value is less than its min attribute.stepMismatch: It returns true, if an element's value is invalid according to step attribute.tooLong: It returns true, if an element's value exceeds its maxLength attribute.typeMismatch: It returns true, if an element's value is invalid according to type attribute.valueMissing: It returns true, if an element with a required attribute has no value.valid: It returns true, if an element's value is valid.⬆ Back to TopGive an example usage of rangeOverflow propertyIf an element's value is greater than its max attribute then rangeOverflow property returns true. For example, the below form submission throws an error if the value is more than 100,<input id=\""age\"" type=\""number\"" max=\""100\"" /><button onclick=\""myOverflowFunction()\"">OK</button>function myOverflowFunction() {  if (document.getElementById(\""age\"").validity.rangeOverflow) {    alert(\""The mentioned age is not allowed\"");  }}⬆ Back to TopIs enums feature available in javascriptNo, javascript does not natively support enums. But there are different kinds of solutions to simulate them even though they may not provide exact equivalents. For example, you can use freeze or seal on object,var DaysEnum = Object.freeze({\""monday\"":1, \""tuesday\"":2, \""wednesday\"":3, ...})⬆ Back to TopWhat is an enumAn enum is a type restricting variables to one value from a predefined set of constants. JavaScript has no enums but typescript provides built-in enum support.enum Color { RED, GREEN, BLUE}⬆ Back to TopHow do you list all properties of an objectYou can use the Object.getOwnPropertyNames() method which returns an array of all properties found directly in a given object. Let's the usage of it in an example,const newObject = {  a: 1,  b: 2,  c: 3,};console.log(Object.getOwnPropertyNames(newObject));[\""a\"", \""b\"", \""c\""];⬆ Back to TopHow do you get property descriptors of an objectYou can use the Object.getOwnPropertyDescriptors() method which returns all own property descriptors of a given object. The example usage of this method is below,const newObject = {  a: 1,  b: 2,  c: 3,};const descriptorsObject = Object.getOwnPropertyDescriptors(newObject);console.log(descriptorsObject.a.writable); //trueconsole.log(descriptorsObject.a.configurable); //trueconsole.log(descriptorsObject.a.enumerable); //trueconsole.log(descriptorsObject.a.value); // 1⬆ Back to TopWhat are the attributes provided by a property descriptorA property descriptor is a record which has the following attributesvalue: The value associated with the propertywritable: Determines whether the value associated with the property can be changed or notconfigurable: Returns true if the type of this property descriptor can be changed and if the property can be deleted from the corresponding object.enumerable: Determines whether the property appears during enumeration of the properties on the corresponding object or not.set: A function which serves as a setter for the propertyget: A function which serves as a getter for the property⬆ Back to TopHow do you extend classesThe extends keyword is used in class declarations/expressions to create a class which is a child of another class. It can be used to subclass custom classes as well as built-in objects. The syntax would be as below,class ChildClass extends ParentClass { ... }Let's take an example of Square subclass from Polygon parent class,class Square extends Rectangle {  constructor(length) {    super(length, length);    this.name = \""Square\"";  }  get area() {    return this.width * this.height;  }  set area(value) {    this.area = value;  }}⬆ Back to TopHow do I modify the url without reloading the pageThe window.location.href property will be helpful to modify the url but it reloads the page. HTML5 introduced the history.pushState() and history.replaceState() methods, which allow you to add and modify history entries, respectively. For example, you can use pushState as below,window.history.pushState(\""page2\"", \""Title\"", \""/page2.html\"");⬆ Back to TopHow do you check whether an array includes a particular value or notThe Array#includes() method is used to determine whether an array includes a particular value among its entries by returning either true or false. Let's see an example to find an element(numeric and string) within an array.var numericArray = [1, 2, 3, 4];console.log(numericArray.includes(3)); // truevar stringArray = [\""green\"", \""yellow\"", \""blue\""];console.log(stringArray.includes(\""blue\"")); //true⬆ Back to TopHow do you compare scalar arraysYou can use length and every method of arrays to compare two scalar(compared directly using ===) arrays. The combination of these expressions can give the expected result,const arrayFirst = [1, 2, 3, 4, 5];const arraySecond = [1, 2, 3, 4, 5];console.log(  arrayFirst.length === arraySecond.length &&    arrayFirst.every((value, index) => value === arraySecond[index])); // trueIf you would like to compare arrays irrespective of order then you should sort them before,const arrayFirst = [2, 3, 1, 4, 5];const arraySecond = [1, 2, 3, 4, 5];console.log(  arrayFirst.length === arraySecond.length &&    arrayFirst.sort().every((value, index) => value === arraySecond[index])); //true⬆ Back to TopHow to get the value from get parametersThe new URL() object accepts the url string and searchParams property of this object can be used to access the get parameters. Remember that you may need to use polyfill or window.location to access the URL in older browsers(including IE).let urlString = \""http://www.some-domain.com/about.html?x=1&y=2&z=3\""; //window.location.hreflet url = new URL(urlString);let parameterZ = url.searchParams.get(\""z\"");console.log(parameterZ); // 3⬆ Back to TopHow do you print numbers with commas as thousand separatorsYou can use the Number.prototype.toLocaleString() method which returns a string with a language-sensitive representation such as thousand separator,currency etc of this number.function convertToThousandFormat(x) {  return x.toLocaleString(); // 12,345.679}console.log(convertToThousandFormat(12345.6789));⬆ Back to TopWhat is the difference between java and javascriptBoth are totally unrelated programming languages and no relation between them. Java is statically typed, compiled, runs on its own VM. Whereas Javascript is dynamically typed, interpreted, and runs in a browser and nodejs environments. Let's see the major differences in a tabular format,FeatureJavaJavaScriptTypedIt's a strongly typed languageIt's a dynamic typed languageParadigmObject oriented programmingPrototype based programmingScopingBlock scopedFunction-scopedConcurrencyThread basedevent basedMemoryUses more memoryUses less memory. Hence it will be used for web pages⬆ Back to TopDoes JavaScript supports namespaceJavaScript doesn’t support namespace by default. So if you create any element(function, method, object, variable) then it becomes global and pollutes the global namespace. Let's take an example of defining two functions without any namespace,function func1() {  console.log(\""This is a first definition\"");}function func1() {  console.log(\""This is a second definition\"");}func1(); // This is a second definitionIt always calls the second function definition. In this case, namespace will solve the name collision problem.⬆ Back to TopHow do you declare namespaceEven though JavaScript lacks namespaces, we can use Objects , IIFE to create namespaces.Using Object Literal Notation: Let's wrap variables and functions inside an Object literal which acts as a namespace. After that you can access them using object notationvar namespaceOne = {   function func1() {       console.log(\""This is a first definition\"");   }}var namespaceTwo = {     function func1() {         console.log(\""This is a second definition\"");     } }namespaceOne.func1(); // This is a first definitionnamespaceTwo.func1(); // This is a second definitionUsing IIFE (Immediately invoked function expression): The outer pair of parentheses of IIFE creates a local scope for all the code inside of it and makes the anonymous function a function expression. Due to that, you can create the same function in two different function expressions to act as a namespace.(function () {  function fun1() {    console.log(\""This is a first definition\"");  }  fun1();})();(function () {  function fun1() {    console.log(\""This is a second definition\"");  }  fun1();})();Using a block and a let/const declaration: In ECMAScript 6, you can simply use a block and a let declaration to restrict the scope of a variable to a block.{  let myFunction = function fun1() {    console.log(\""This is a first definition\"");  };  myFunction();}//myFunction(): ReferenceError: myFunction is not defined.{  let myFunction = function fun1() {    console.log(\""This is a second definition\"");  };  myFunction();}//myFunction(): ReferenceError: myFunction is not defined.⬆ Back to TopHow do you invoke javascript code in an iframe from parent pageInitially iFrame needs to be accessed using either document.getElementBy or window.frames. After that contentWindow property of iFrame gives the access for targetFunctiondocument.getElementById(\""targetFrame\"").contentWindow.targetFunction();window.frames[0].frameElement.contentWindow.targetFunction(); // Accessing iframe this way may not work in latest versions chrome and firefox⬆ Back to TopHow do get the timezone offset from dateYou can use the getTimezoneOffset method of the date object. This method returns the time zone difference, in minutes, from current locale (host system settings) to UTCvar offset = new Date().getTimezoneOffset();console.log(offset); // -480⬆ Back to TopHow do you load CSS and JS files dynamicallyYou can create both link and script elements in the DOM and append them as child to head tag. Let's create a function to add script and style resources as below,function loadAssets(filename, filetype) {  if (filetype == \""css\"") {    // External CSS file    var fileReference = document.createElement(\""link\"");    fileReference.setAttribute(\""rel\"", \""stylesheet\"");    fileReference.setAttribute(\""type\"", \""text/css\"");    fileReference.setAttribute(\""href\"", filename);  } else if (filetype == \""js\"") {    // External JavaScript file    var fileReference = document.createElement(\""script\"");    fileReference.setAttribute(\""type\"", \""text/javascript\"");    fileReference.setAttribute(\""src\"", filename);  }  if (typeof fileReference != \""undefined\"")    document.getElementsByTagName(\""head\"")[0].appendChild(fileReference);}⬆ Back to TopWhat are the different methods to find HTML elements in DOMIf you want to access any element in an HTML page, you need to start with accessing the document object. Later you can use any of the below methods to find the HTML element,document.getElementById(id): It finds an element by Iddocument.getElementsByTagName(name): It finds an element by tag namedocument.getElementsByClassName(name): It finds an element by class name⬆ Back to TopWhat is jQueryjQuery is a popular cross-browser JavaScript library that provides Document Object Model (DOM) traversal, event handling, animations and AJAX interactions by minimizing the discrepancies across browsers. It is widely famous with its philosophy of “Write less, do more”. For example, you can display welcome message on the page load using jQuery as below,$(document).ready(function () {  // It selects the document and apply the function on page load  alert(\""Welcome to jQuery world\"");});Note: You can download it from jquery's official site or install it from CDNs, like google.⬆ Back to TopWhat is V8 JavaScript engineV8 is an open source high-performance JavaScript engine used by the Google Chrome browser, written in C++. It is also being used in the node.js project. It implements ECMAScript and WebAssembly, and runs on Windows 7 or later, macOS 10.12+, and Linux systems that use x64, IA-32, ARM, or MIPS processors.Note: It can run standalone, or can be embedded into any C++ application.⬆ Back to TopWhy do we call javascript as dynamic languageJavaScript is a loosely typed or a dynamic language because variables in JavaScript are not directly associated with any particular value type, and any variable can be assigned/reassigned with values of all types.let age = 50; // age is a number nowage = \""old\""; // age is a string nowage = true; // age is a boolean⬆ Back to TopWhat is a void operatorThe void operator evaluates the given expression and then returns undefined(i.e, without returning value). The syntax would be as below,void expression;void expression;Let's display a message without any redirection or reload<a href=\""javascript:void(alert('Welcome to JS world'))\"">  Click here to see a message</a>Note: This operator is often used to obtain the undefined primitive value, using \""void(0)\"".⬆ Back to TopHow to set the cursor to waitThe cursor can be set to wait in JavaScript by using the property \""cursor\"". Let's perform this behavior on page load using the below function.function myFunction() {  window.document.body.style.cursor = \""wait\"";}and this function invoked on page load<body onload=\""myFunction()\""></body>⬆ Back to TopHow do you create an infinite loopYou can create infinite loops using for and while loops without using any expressions. The for loop construct or syntax is better approach in terms of ESLint and code optimizer tools,for (;;) {}while (true) {}⬆ Back to TopWhy do you need to avoid with statementJavaScript's with statement was intended to provide a shorthand for writing recurring accesses to objects. So it can help reduce file size by reducing the need to repeat a lengthy object reference without performance penalty. Let's take an example where it is used to avoid redundancy when accessing an object several times.a.b.c.greeting = \""welcome\"";a.b.c.age = 32;Using with it turns this into:with (a.b.c) {  greeting = \""welcome\"";  age = 32;}But this with statement creates performance problems since one cannot predict whether an argument will refer to a real variable or to a property inside the with argument.⬆ Back to TopWhat is the output of below for loopsfor (var i = 0; i < 4; i++) {  // global scope  setTimeout(() => console.log(i));}for (let i = 0; i < 4; i++) {  // block scope  setTimeout(() => console.log(i));}The output of the above for loops is 4 4 4 4 and 0 1 2 3Explanation: Due to the event queue/loop of javascript, the setTimeout callback function is called after the loop has been executed. Since the variable i is declared with the var keyword it became a global variable and the value was equal to 4 using iteration when the time setTimeout function is invoked. Hence, the output of the first loop is 4 4 4 4.Whereas in the second loop, the variable i is declared as the let keyword it becomes a block scoped variable and it holds a new value(0, 1 ,2 3) for each iteration. Hence, the output of the first loop is 0 1 2 3.⬆ Back to TopList down some of the features of ES6Below are the list of some new features of ES6,Support for constants or immutable variablesBlock-scope support for variables, constants and functionsArrow functionsDefault parametersRest and Spread ParametersTemplate LiteralsMulti-line StringsDestructuring AssignmentEnhanced Object LiteralsPromisesClassesModules⬆ Back to TopWhat is ES6ES6 is the sixth edition of the javascript language and it was released in June 2015. It was initially known as ECMAScript 6 (ES6) and later renamed to ECMAScript 2015. Almost all the modern browsers support ES6 but for the old browsers there are many transpilers, like Babel.js etc.⬆ Back to TopCan I redeclare let and const variablesNo, you cannot redeclare let and const variables. If you do, it throws below errorUncaught SyntaxError: Identifier 'someVariable' has already been declaredExplanation: The variable declaration with var keyword refers to a function scope and the variable is treated as if it were declared at the top of the enclosing scope due to hoisting feature. So all the multiple declarations contributing to the same hoisted variable without any error. Let's take an example of re-declaring variables in the same scope for both var and let/const variables.var name = \""John\"";function myFunc() {  var name = \""Nick\"";  var name = \""Abraham\""; // Re-assigned in the same function block  alert(name); // Abraham}myFunc();alert(name); // JohnThe block-scoped multi-declaration throws syntax error,let name = \""John\"";function myFunc() {  let name = \""Nick\"";  let name = \""Abraham\""; // Uncaught SyntaxError: Identifier 'name' has already been declared  alert(name);}myFunc();alert(name);⬆ Back to TopIs const variable makes the value immutableNo, the const variable doesn't make the value immutable. But it disallows subsequent assignments(i.e, You can declare with assignment but can't assign another value later)const userList = [];userList.push(\""John\""); // Can mutate even though it can't re-assignconsole.log(userList); // ['John']⬆ Back to TopWhat are default parametersIn ES5, we need to depend on logical OR operators to handle default values of function parameters. Whereas in ES6, Default function parameters feature allows parameters to be initialized with default values if no value or undefined is passed. Let's compare the behavior with an examples,//ES5var calculateArea = function (height, width) {  height = height || 50;  width = width || 60;  return width * height;};console.log(calculateArea()); //300The default parameters makes the initialization more simpler,//ES6var calculateArea = function (height = 50, width = 60) {  return width * height;};console.log(calculateArea()); //300⬆ Back to TopWhat are template literalsTemplate literals or template strings are string literals allowing embedded expressions. These are enclosed by the back-tick (`) character instead of double or single quotes.In ES6, this feature enables using dynamic expressions as below,var greeting = `Welcome to JS World, Mr. ${firstName} ${lastName}.`;In ES5, you need break string like below,var greeting = 'Welcome to JS World, Mr. ' + firstName + ' ' + lastName.`Note: You can use multi-line strings and string interpolation features with template literals.⬆ Back to TopHow do you write multi-line strings in template literalsIn ES5, you would have to use newline escape characters('\') and concatenation symbols(+) in order to get multi-line strings.console.log(\""This is string sentence 1\\"" + \""This is string sentence 2\"");Whereas in ES6, You don't need to mention any newline sequence character,console.log(`This is string sentence'This is string sentence 2`);⬆ Back to TopWhat are nesting templatesThe nesting template is a feature supported within template literals syntax to allow inner backticks inside a placeholder ${ } within the template. For example, the below nesting template is used to display the icons based on user permissions whereas outer template checks for platform type,const iconStyles = `icon ${  isMobilePlatform()    ? \""\""    : `icon-${user.isAuthorized ? \""submit\"" : \""disabled\""}`}`;You can write the above use case without nesting template features as well. However, the nesting template feature is more compact and readable.//Without nesting templates const iconStyles = `icon ${ isMobilePlatform() ? '' :   user.isAuthorized ? 'icon-submit' : 'icon-disabled'}`;⬆ Back to TopWhat are tagged templatesTagged templates are the advanced form of templates in which tags allow you to parse template literals with a function. The tag function accepts the first parameter as an array of strings and remaining parameters as expressions. This function can also return manipulated strings based on parameters. Let's see the usage of this tagged template behavior of an IT professional skill set in an organization,var user1 = \""John\"";var skill1 = \""JavaScript\"";var experience1 = 15;var user2 = \""Kane\"";var skill2 = \""JavaScript\"";var experience2 = 5;function myInfoTag(strings, userExp, experienceExp, skillExp) {  var str0 = strings[0]; // \""Mr/Ms. \""  var str1 = strings[1]; // \"" is a/an \""  var str2 = strings[2]; // \""in\""  var expertiseStr;  if (experienceExp > 10) {    expertiseStr = \""expert developer\"";  } else if (skillExp > 5 && skillExp <= 10) {    expertiseStr = \""senior developer\"";  } else {    expertiseStr = \""junior developer\"";  }  return `${str0}${userExp}${str1}${expertiseStr}${str2}${skillExp}`;}var output1 = myInfoTag`Mr/Ms. ${user1} is a/an ${experience1} in ${skill1}`;var output2 = myInfoTag`Mr/Ms. ${user2} is a/an ${experience2} in ${skill2}`;console.log(output1); // Mr/Ms. John is a/an expert developer in JavaScriptconsole.log(output2); // Mr/Ms. Kane is a/an junior developer in JavaScript⬆ Back to TopWhat are raw stringsES6 provides a raw strings feature using the String.raw() method which is used to get the raw string form of template strings. This feature allows you to access the raw strings as they were entered, without processing escape sequences. For example, the usage would be as below,var calculationString = String.raw`The sum of numbers is \${  1 + 2 + 3 + 4}!`;console.log(calculationString); // The sum of numbers is 10If you don't use raw strings, the newline character sequence will be processed by displaying the output in multiple linesvar calculationString = `The sum of numbers is \${1 + 2 + 3 + 4}!`;console.log(calculationString);// The sum of numbers is// 10Also, the raw property is available on the first argument to the tag functionfunction tag(strings) {  console.log(strings.raw[0]);}⬆ Back to TopWhat is destructuring assignmentThe destructuring assignment is a JavaScript expression that makes it possible to unpack values from arrays or properties from objects into distinct variables.Let's get the month values from an array using destructuring assignmentvar [one, two, three] = [\""JAN\"", \""FEB\"", \""MARCH\""];console.log(one); // \""JAN\""console.log(two); // \""FEB\""console.log(three); // \""MARCH\""and you can get user properties of an object using destructuring assignment,var { name, age } = { name: \""John\"", age: 32 };console.log(name); // Johnconsole.log(age); // 32⬆ Back to TopWhat are default values in destructuring assignmentA variable can be assigned a default value when the value unpacked from the array or object is undefined during destructuring assignment. It helps to avoid setting default values separately for each assignment. Let's take an example for both arrays and object use cases,Arrays destructuring:var x, y, z;[x = 2, y = 4, z = 6] = [10];console.log(x); // 10console.log(y); // 4console.log(z); // 6Objects destructuring:var { x = 2, y = 4, z = 6 } = { x: 10 };console.log(x); // 10console.log(y); // 4console.log(z); // 6⬆ Back to TopHow do you swap variables in destructuring assignmentIf you don't use destructuring assignment, swapping two values requires a temporary variable. Whereas using a destructuring feature, two variable values can be swapped in one destructuring expression. Let's swap two number variables in array destructuring assignment,var x = 10,  y = 20;[x, y] = [y, x];console.log(x); // 20console.log(y); // 10⬆ Back to TopWhat are enhanced object literalsObject literals make it easy to quickly create objects with properties inside the curly braces. For example, it provides shorter syntax for common object property definition as below.//ES6var x = 10,  y = 20;obj = { x, y };console.log(obj); // {x: 10, y:20}//ES5var x = 10,  y = 20;obj = { x: x, y: y };console.log(obj); // {x: 10, y:20}⬆ Back to TopWhat are dynamic importsThe dynamic imports using import() function syntax allows us to load modules on demand by using promises or the async/await syntax. Currently this feature is in stage4 proposal. The main advantage of dynamic imports is reduction of our bundle's sizes, the size/payload response of our requests and overall improvements in the user experience.The syntax of dynamic imports would be as below,import(\""./Module\"").then((Module) => Module.method());⬆ Back to TopWhat are the use cases for dynamic importsBelow are some of the use cases of using dynamic imports over static imports,Import a module on-demand or conditionally. For example, if you want to load a polyfill on legacy browserif (isLegacyBrowser()) {    import(···)    .then(···);}Compute the module specifier at runtime. For example, you can use it for internationalization.import(`messages_${getLocale()}.js`).then(···);Import a module from within a regular script instead a module.⬆ Back to TopWhat are typed arraysTyped arrays are array-like objects from ECMAScript 6 API for handling binary data. JavaScript provides 8 Typed array types,Int8Array: An array of 8-bit signed integersInt16Array: An array of 16-bit signed integersInt32Array: An array of 32-bit signed integersUint8Array: An array of 8-bit unsigned integersUint16Array: An array of 16-bit unsigned integersUint32Array: An array of 32-bit unsigned integersFloat32Array: An array of 32-bit floating point numbersFloat64Array: An array of 64-bit floating point numbersFor example, you can create an array of 8-bit signed integers as belowconst a = new Int8Array();// You can pre-allocate n bytesconst bytes = 1024;const a = new Int8Array(bytes);⬆ Back to TopWhat are the advantages of module loadersThe module loaders provides the below features,Dynamic loadingState isolationGlobal namespace isolationCompilation hooksNested virtualization⬆ Back to TopWhat is collationCollation is used for sorting a set of strings and searching within a set of strings. It is parameterized by locale and aware of Unicode. Let's take comparison and sorting features,Comparison:var list = [\""ä\"", \""a\"", \""z\""]; // In German,  \""ä\"" sorts with \""a\"" Whereas in Swedish, \""ä\"" sorts after \""z\""var l10nDE = new Intl.Collator(\""de\"");var l10nSV = new Intl.Collator(\""sv\"");console.log(l10nDE.compare(\""ä\"", \""z\"") === -1); // trueconsole.log(l10nSV.compare(\""ä\"", \""z\"") === +1); // trueSorting:var list = [\""ä\"", \""a\"", \""z\""]; // In German,  \""ä\"" sorts with \""a\"" Whereas in Swedish, \""ä\"" sorts after \""z\""var l10nDE = new Intl.Collator(\""de\"");var l10nSV = new Intl.Collator(\""sv\"");console.log(list.sort(l10nDE.compare)); // [ \""a\"", \""ä\"", \""z\"" ]console.log(list.sort(l10nSV.compare)); // [ \""a\"", \""z\"", \""ä\"" ]⬆ Back to TopWhat is for...of statementThe for...of statement creates a loop iterating over iterable objects or elements such as built-in String, Array, Array-like objects (like arguments or NodeList), TypedArray, Map, Set, and user-defined iterables. The basic usage of for...of statement on arrays would be as below,let arrayIterable = [10, 20, 30, 40, 50];for (let value of arrayIterable) {  value++;  console.log(value); // 11 21 31 41 51}⬆ Back to TopWhat is the output of below spread operator array[...\""John Resig\""];The output of the array is ['J', 'o', 'h', 'n', '', 'R', 'e', 's', 'i', 'g']Explanation: The string is an iterable type and the spread operator within an array maps every character of an iterable to one element. Hence, each character of a string becomes an element within an Array.⬆ Back to TopIs PostMessage secureYes, postMessages can be considered very secure as long as the programmer/developer is careful about checking the origin and source of an arriving message. But if you try to send/receive a message without verifying its source will create cross-site scripting attacks.⬆ Back to TopWhat are the problems with postmessage target origin as wildcardThe second argument of postMessage method specifies which origin is allowed to receive the message. If you use the wildcard “*” as an argument then any origin is allowed to receive the message. In this case, there is no way for the sender window to know if the target window is at the target origin when sending the message. If the target window has been navigated to another origin, the other origin would receive the data. Hence, this may lead to XSS vulnerabilities.targetWindow.postMessage(message, \""*\"");⬆ Back to TopHow do you avoid receiving postMessages from attackersSince the listener listens for any message, an attacker can trick the application by sending a message from the attacker’s origin, which gives an impression that the receiver received the message from the actual sender’s window. You can avoid this issue by validating the origin of the message on the receiver's end using the “message.origin” attribute. For examples, let's check the sender's origin http://www.some-sender.com on receiver side www.some-receiver.com,//Listener on http://www.some-receiver.com/window.addEventListener(\""message\"", function(message){    if(/^http://www\\.some-sender\\.com$/.test(message.origin)){         console.log('You received the data from valid sender', message.data);   }});⬆ Back to TopCan I avoid using postMessages completelyYou cannot avoid using postMessages completely(or 100%). Even though your application doesn’t use postMessage considering the risks, a lot of third party scripts use postMessage to communicate with the third party service. So your application might be using postMessage without your knowledge.⬆ Back to TopIs postMessages synchronousThe postMessages are synchronous in IE8 browser but they are asynchronous in IE9 and all other modern browsers (i.e, IE9+, Firefox, Chrome, Safari).Due to this asynchronous behaviour, we use a callback mechanism when the postMessage is returned.⬆ Back to TopWhat paradigm is JavascriptJavaScript is a multi-paradigm language, supporting imperative/procedural programming, Object-Oriented Programming and functional programming. JavaScript supports Object-Oriented Programming with prototypical inheritance.⬆ Back to TopWhat is the difference between internal and external javascriptInternal JavaScript: It is the source code within the script tag.External JavaScript: The source code is stored in an external file(stored with .js extension) and referred with in the tag.⬆ Back to TopIs JavaScript faster than server side scriptYes, JavaScript is faster than server side scripts. Because JavaScript is a client-side script it does not require any web server’s help for its computation or calculation. So JavaScript is always faster than any server-side script like ASP, PHP, etc.⬆ Back to TopHow do you get the status of a checkboxYou can apply the checked property on the selected checkbox in the DOM. If the value is true it means the checkbox is checked, otherwise it is unchecked. For example, the below HTML checkbox element can be access using javascript as below:<input type=\""checkbox\"" id=\""checkboxname\"" value=\""Agree\"" /> Agree theconditions<br />console.log(document.getElementById(‘checkboxname’).checked); // true or false⬆ Back to TopWhat is the purpose of double tilde operatorThe double tilde operator(~~) is known as double NOT bitwise operator. This operator is a slightly quicker substitute for Math.floor().⬆ Back to TopHow do you convert character to ASCII codeYou can use the String.prototype.charCodeAt() method to convert string characters to ASCII numbers. For example, let's find ASCII code for the first letter of 'ABC' string,\""ABC\"".charCodeAt(0); // returns 65Whereas String.fromCharCode() method converts numbers to equal ASCII characters.String.fromCharCode(65, 66, 67); // returns 'ABC'⬆ Back to TopWhat is ArrayBufferAn ArrayBuffer object is used to represent a generic, fixed-length raw binary data buffer. You can create it as below,let buffer = new ArrayBuffer(16); // create a buffer of length 16alert(buffer.byteLength); // 16To manipulate an ArrayBuffer, we need to use a “view” object.//Create a DataView referring to the bufferlet view = new DataView(buffer);⬆ Back to TopWhat is the output of below string expressionconsole.log(\""Welcome to JS world\""[0]);The output of the above expression is \""W\"".Explanation: The bracket notation with specific index on a string returns the character at a specific location. Hence, it returns the character \""W\"" of the string. Since this is not supported in IE7 and below versions, you may need to use the .charAt() method to get the desired result.⬆ Back to TopWhat is the purpose of Error objectThe Error constructor creates an error object and the instances of error objects are thrown when runtime errors occur. The Error object can also be used as a base object for user-defined exceptions. The syntax of error object would be as below,new Error([message[, fileName[, lineNumber]]])You can throw user defined exceptions or errors using Error object in try...catch block as below,try {  if (withdraw > balance)    throw new Error(\""Oops! You don't have enough balance\"");} catch (e) {  console.log(e.name + \"": \"" + e.message);}⬆ Back to TopWhat is the purpose of EvalError objectThe EvalError object indicates an error regarding the global eval() function. Even though this exception is not thrown by JavaScript anymore, the EvalError object remains for compatibility. The syntax of this expression would be as below,new EvalError([message[, fileName[, lineNumber]]])You can throw EvalError with in try...catch block as below,try {  throw new EvalError('Eval function error', 'someFile.js', 100);} catch (e) {  console.log(e.message, e.name, e.fileName);              // \""Eval function error\"", \""EvalError\"", \""someFile.js\""⬆ Back to TopWhat are the list of cases error thrown from non-strict mode to strict modeWhen you apply 'use strict'; syntax, some of the below cases will throw a SyntaxError before executing the scriptWhen you use Octal syntaxvar n = 022;Using with statementWhen you use delete operator on a variable nameUsing eval or arguments as variable or function argument nameWhen you use newly reserved keywordsWhen you declare a function in a blockif (someCondition) {  function f() {}}Hence, the errors from above cases are helpful to avoid errors in development/production environments.⬆ Back to TopDo all objects have prototypesNo. All objects have prototypes except for the base object which is created by the user, or an object that is created using the new keyword.⬆ Back to TopWhat is the difference between a parameter and an argumentParameter is the variable name of a function definition whereas an argument represents the value given to a function when it is invoked. Let's explain this with a simple functionfunction myFunction(parameter1, parameter2, parameter3) {  console.log(arguments[0]); // \""argument1\""  console.log(arguments[1]); // \""argument2\""  console.log(arguments[2]); // \""argument3\""}myFunction(\""argument1\"", \""argument2\"", \""argument3\"");⬆ Back to TopWhat is the purpose of some method in arraysThe some() method is used to test whether at least one element in the array passes the test implemented by the provided function. The method returns a boolean value. Let's take an example to test for any odd elements,var array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];var odd = (element) => element % 2 !== 0;console.log(array.some(odd)); // true (the odd element exists)⬆ Back to TopHow do you combine two or more arraysThe concat() method is used to join two or more arrays by returning a new array containing all the elements. The syntax would be as below,array1.concat(array2, array3, ..., arrayX)Let's take an example of array's concatenation with veggies and fruits arrays,var veggies = [\""Tomato\"", \""Carrot\"", \""Cabbage\""];var fruits = [\""Apple\"", \""Orange\"", \""Pears\""];var veggiesAndFruits = veggies.concat(fruits);console.log(veggiesAndFruits); // Tomato, Carrot, Cabbage, Apple, Orange, Pears⬆ Back to TopWhat is the difference between Shallow and Deep copyThere are two ways to copy an object,Shallow Copy:Shallow copy is a bitwise copy of an object. A new object is created that has an exact copy of the values in the original object. If any of the fields of the object are references to other objects, just the reference addresses are copied i.e., only the memory address is copied.Examplevar empDetails = {  name: \""John\"",  age: 25,  expertise: \""Software Developer\"",};to create a duplicatevar empDetailsShallowCopy = empDetails; //Shallow copying!if we change some property value in the duplicate one like this:empDetailsShallowCopy.name = \""Johnson\"";The above statement will also change the name of empDetails, since we have a shallow copy. That means we're losing the original data as well.Deep copy:A deep copy copies all fields, and makes copies of dynamically allocated memory pointed to by the fields. A deep copy occurs when an object is copied along with the objects to which it refers.Examplevar empDetails = {  name: \""John\"",  age: 25,  expertise: \""Software Developer\"",};Create a deep copy by using the properties from the original object into new variablevar empDetailsDeepCopy = {  name: empDetails.name,  age: empDetails.age,  expertise: empDetails.expertise,};Now if you change empDetailsDeepCopy.name, it will only affect empDetailsDeepCopy & not empDetails⬆ Back to TopHow do you create specific number of copies of a stringThe repeat() method is used to construct and return a new string which contains the specified number of copies of the string on which it was called, concatenated together. Remember that this method has been added to the ECMAScript 2015 specification.Let's take an example of Hello string to repeat it 4 times,\""Hello\"".repeat(4); // 'HelloHelloHelloHello'How do you return all matching strings against a regular expressionThe matchAll() method can be used to return an iterator of all results matching a string against a regular expression. For example, the below example returns an array of matching string results against a regular expression,let regexp = /Hello(\\d?))/g;let greeting = \""Hello1Hello2Hello3\"";let greetingList = [...greeting.matchAll(regexp)];console.log(greetingList[0]); //Hello1console.log(greetingList[1]); //Hello2console.log(greetingList[2]); //Hello3⬆ Back to TopHow do you trim a string at the beginning or endingThe trim method of string prototype is used to trim on both sides of a string. But if you want to trim especially at the beginning or ending of the string then you can use trimStart/trimLeft and trimEnd/trimRight methods. Let's see an example of these methods on a greeting message,var greeting = \""   Hello, Goodmorning!   \"";console.log(greeting); // \""   Hello, Goodmorning!   \""console.log(greeting.trimStart()); // \""Hello, Goodmorning!   \""console.log(greeting.trimLeft()); // \""Hello, Goodmorning!   \""console.log(greeting.trimEnd()); // \""   Hello, Goodmorning!\""console.log(greeting.trimRight()); // \""   Hello, Goodmorning!\""⬆ Back to TopWhat is the output of below console statement with unary operatorLet's take console statement with unary operator as given below,console.log(+\""Hello\"");The output of the above console log statement returns NaN. Because the element is prefixed by the unary operator and the JavaScript interpreter will try to convert that element into a number type. Since the conversion fails, the value of the statement results in NaN value.⬆ Back to TopDoes javascript uses mixinsMixin is a generic object-oriented programming term - is a class containing methods that can be used by other classes without a need to inherit from it. In JavaScript we can only inherit from a single object. ie. There can be only one [[prototype]] for an object.But sometimes we require to extend more than one, to overcome this we can use Mixin which helps to copy methods to the prototype of another class.Say for instance, we've two classes User and CleanRoom. Suppose we need to add CleanRoom functionality to User, so that user can clean the room at demand. Here's where concept called mixins comes into picture.// mixinlet cleanRoomMixin = {  cleanRoom() {    alert(`Hello ${this.name}, your room is clean now`);  },  sayBye() {    alert(`Bye ${this.name}`);  },};// usage:class User {  constructor(name) {    this.name = name;  }}// copy the methodsObject.assign(User.prototype, cleanRoomMixin);// now User can clean the roomnew User(\""Dude\"").cleanRoom(); // Hello Dude, your room is clean now!⬆ Back to TopWhat is a thunk functionA thunk is just a function which delays the evaluation of the value. It doesn’t take any arguments but gives the value whenever you invoke the thunk. i.e, It is used not to execute now but it will be sometime in the future. Let's take a synchronous example,const add = (x, y) => x + y;const thunk = () => add(2, 3);thunk(); // 5⬆ Back to TopWhat are asynchronous thunksThe asynchronous thunks are useful to make network requests. Let's see an example of network requests,function fetchData(fn) {  fetch(\""https://jsonplaceholder.typicode.com/todos/1\"")    .then((response) => response.json())    .then((json) => fn(json));}const asyncThunk = function () {  return fetchData(function getData(data) {    console.log(data);  });};asyncThunk();The getData function won't be called immediately but it will be invoked only when the data is available from API endpoint. The setTimeout function is also used to make our code asynchronous. The best real time example is redux state management library which uses the asynchronous thunks to delay the actions to dispatch.⬆ Back to TopWhat is the output of below function callsCode snippet:const circle = {  radius: 20,  diameter() {    return this.radius * 2;  },  perimeter: () => 2 * Math.PI * this.radius,};console.log(circle.diameter());console.log(circle.perimeter());Output:The output is 40 and NaN. Remember that diameter is a regular function, whereas the value of perimeter is an arrow function. The this keyword of a regular function(i.e, diameter) refers to the surrounding scope which is a class(i.e, Shape object). Whereas this keyword of perimeter function refers to the surrounding scope which is a window object. Since there is no radius property on window objects it returns an undefined value and the multiple of number value returns NaN value.⬆ Back to TopHow to remove all line breaks from a stringThe easiest approach is using regular expressions to detect and replace newlines in the string. In this case, we use replace function along with string to replace with, which in our case is an empty string.function remove_linebreaks( var message ) {    return message.replace( /[\\r\]+/gm, \""\"" );}In the above expression, g and m are for global and multiline flags.⬆ Back to TopWhat is the difference between reflow and repaintA repaint occurs when changes are made which affect the visibility of an element, but not its layout. Examples of this include outline, visibility, or background color. A reflow involves changes that affect the layout of a portion of the page (or the whole page). Resizing the browser window, changing the font, content changing (such as user typing text), using JavaScript methods involving computed styles, adding or removing elements from the DOM, and changing an element's classes are a few of the things that can trigger reflow. Reflow of an element causes the subsequent reflow of all child and ancestor elements as well as any elements following it in the DOM.⬆ Back to TopWhat happens with negating an arrayNegating an array with ! character will coerce the array into a boolean. Since Arrays are considered to be truthy So negating it will return false.console.log(![]); // false⬆ Back to TopWhat happens if we add two arraysIf you add two arrays together, it will convert them both to strings and concatenate them. For example, the result of adding arrays would be as below,console.log([\""a\""] + [\""b\""]); // \""ab\""console.log([] + []); // \""\""console.log(![] + []); // \""false\"", because ![] returns false.⬆ Back to TopWhat is the output of prepend additive operator on falsy valuesIf you prepend the additive(+) operator on falsy values(null, undefined, NaN, false, \""\""), the falsy value converts to a number value zero. Let's display them on browser console as below,console.log(+null); // 0console.log(+undefined); // NaNconsole.log(+false); // 0console.log(+NaN); // NaNconsole.log(+\""\""); // 0⬆ Back to TopHow do you create self string using special charactersThe self string can be formed with the combination of []()!+ characters. You need to remember the below conventions to achieve this pattern.Since Arrays are truthful values, negating the arrays will produce false: ![] === falseAs per JavaScript coercion rules, the addition of arrays together will toString them: [] + [] === \""\""Prepend an array with + operator will convert an array to false, the negation will make it true and finally converting the result will produce value '1': +(!(+[])) === 1By applying the above rules, we can derive below conditions(![] + [] === \""false\"" + !+[]) === 1;Now the character pattern would be created as below,      s               e               l               f ^^^^^^^^^^^^^   ^^^^^^^^^^^^^   ^^^^^^^^^^^^^   ^^^^^^^^^^^^^ (![] + [])[3] + (![] + [])[4] + (![] + [])[2] + (![] + [])[0] ^^^^^^^^^^^^^   ^^^^^^^^^^^^^   ^^^^^^^^^^^^^   ^^^^^^^^^^^^^(![] + [])[+!+[]+!+[]+!+[]] +(![] + [])[+!+[]+!+[]+!+[]+!+[]] +(![] + [])[+!+[]+!+[]] +(![] + [])[+[]]^^^^^^^^^^^^^^^^^^^^^^^^^^^^^(![]+[])[+!+[]+!+[]+!+[]]+(![]+[])[+!+[]+!+[]+!+[]+!+[]]+(![]+[])[+!+[]+!+[]]+(![]+[])[+[]]⬆ Back to TopHow do you remove falsy values from an arrayYou can apply the filter method on the array by passing Boolean as a parameter. This way it removes all falsy values(0, undefined, null, false and \""\"") from the array.const myArray = [false, null, 1, 5, undefined];myArray.filter(Boolean); // [1, 5] // is same as myArray.filter(x => x);⬆ Back to TopHow do you get unique values of an arrayYou can get unique values of an array with the combination of Set and rest expression/spread(...) syntax.console.log([...new Set([1, 2, 4, 4, 3])]); // [1, 2, 4, 3]⬆ Back to TopWhat is destructuring aliasesSometimes you would like to have a destructured variable with a different name than the property name. In that case, you'll use a : newName to specify a name for the variable. This process is called destructuring aliases.const obj = { x: 1 };// Grabs obj.x as as { otherName }const { x: otherName } = obj;⬆ Back to TopHow do you map the array values without using map methodYou can map the array values without using the map method by just using the from method of Array. Let's map city names from Countries array,const countries = [  { name: \""India\"", capital: \""Delhi\"" },  { name: \""US\"", capital: \""Washington\"" },  { name: \""Russia\"", capital: \""Moscow\"" },  { name: \""Singapore\"", capital: \""Singapore\"" },  { name: \""China\"", capital: \""Beijing\"" },  { name: \""France\"", capital: \""Paris\"" },];const cityNames = Array.from(countries, ({ capital }) => capital);console.log(cityNames); // ['Delhi, 'Washington', 'Moscow', 'Singapore', 'Beijing', 'Paris']⬆ Back to TopHow do you empty an arrayYou can empty an array quickly by setting the array length to zero.let cities = [\""Singapore\"", \""Delhi\"", \""London\""];cities.length = 0; // cities becomes []⬆ Back to TopHow do you rounding numbers to certain decimalsYou can round numbers to a certain number of decimals using toFixed method from native javascript.let pie = 3.141592653;pie = pie.toFixed(3); // 3.142⬆ Back to TopWhat is the easiest way to convert an array to an objectYou can convert an array to an object with the same data using spread(...) operator.var fruits = [\""banana\"", \""apple\"", \""orange\"", \""watermelon\""];var fruitsObject = { ...fruits };console.log(fruitsObject); // {0: \""banana\"", 1: \""apple\"", 2: \""orange\"", 3: \""watermelon\""}⬆ Back to TopHow do you create an array with some dataYou can create an array with some data or an array with the same values using fill method.var newArray = new Array(5).fill(\""0\"");console.log(newArray); // [\""0\"", \""0\"", \""0\"", \""0\"", \""0\""]⬆ Back to TopWhat are the placeholders from console objectBelow are the list of placeholders available from console object,%o — It takes an object,%s — It takes a string,%d — It is used for a decimal or integerThese placeholders can be represented in the console.log as belowconst user = { name: \""John\"", id: 1, city: \""Delhi\"" };console.log(  \""Hello %s, your details %o are available in the object form\"",  \""John\"",  user); // Hello John, your details {name: \""John\"", id: 1, city: \""Delhi\""} are available in object⬆ Back to TopIs it possible to add CSS to console messagesYes, you can apply CSS styles to console messages similar to html text on the web page.console.log(  \""%c The text has blue color, with large font and red background\"",  \""color: blue; font-size: x-large; background: red\"");The text will be displayed as below,Note: All CSS styles can be applied to console messages.⬆ Back to TopWhat is the purpose of dir method of console objectThe console.dir() is used to display an interactive list of the properties of the specified JavaScript object as JSON.const user = { name: \""John\"", id: 1, city: \""Delhi\"" };console.dir(user);The user object displayed in JSON representation⬆ Back to TopIs it possible to debug HTML elements in consoleYes, it is possible to get and debug HTML elements in the console just like inspecting elements.const element = document.getElementsByTagName(\""body\"")[0];console.log(element);It prints the HTML element in the console,⬆ Back to TopHow do you display data in a tabular format using console objectThe console.table() is used to display data in the console in a tabular format to visualize complex arrays or objects.const users = [  { name: \""John\"", id: 1, city: \""Delhi\"" },  { name: \""Max\"", id: 2, city: \""London\"" },  { name: \""Rod\"", id: 3, city: \""Paris\"" },];console.table(users);The data visualized in a table format,Not: Remember that console.table() is not supported in IE.⬆ Back to TopHow do you verify that an argument is a Number or notThe combination of IsNaN and isFinite methods are used to confirm whether an argument is a number or not.function isNumber(n) {  return !isNaN(parseFloat(n)) && isFinite(n);}⬆ Back to TopHow do you create copy to clipboard buttonYou need to select the content(using .select() method) of the input element and execute the copy command with execCommand (i.e, execCommand('copy')). You can also execute other system commands like cut and paste.document.querySelector(\""#copy-button\"").onclick = function () {  // Select the content  document.querySelector(\""#copy-input\"").select();  // Copy to the clipboard  document.execCommand(\""copy\"");};⬆ Back to TopWhat is the shortcut to get timestampYou can use new Date().getTime() to get the current timestamp. There is an alternative shortcut to get the value.console.log(+new Date());console.log(Date.now());⬆ Back to TopHow do you flattening multi dimensional arraysFlattening bi-dimensional arrays is trivial with Spread operator.const biDimensionalArr = [11, [22, 33], [44, 55], [66, 77], 88, 99];const flattenArr = [].concat(...biDimensionalArr); // [11, 22, 33, 44, 55, 66, 77, 88, 99]But you can make it work with multi-dimensional arrays by recursive calls,function flattenMultiArray(arr) {  const flattened = [].concat(...arr);  return flattened.some((item) => Array.isArray(item))    ? flattenMultiArray(flattened)    : flattened;}const multiDimensionalArr = [11, [22, 33], [44, [55, 66, [77, [88]], 99]]];const flatArr = flattenMultiArray(multiDimensionalArr); // [11, 22, 33, 44, 55, 66, 77, 88, 99]Also you can use the flat method of Array.const arr = [1, [2,3], 4, 5, [6,7]];const fllattenArr = arr.flat(); // [1, 2, 3, 4, 5, 6, 7]// And for multiDemensional arraysconst multiDimensionalArr = [11, [22, 33], [44, [55, 66, [77, [88]], 99]]];const oneStepFlat = multiDimensionalArr.flat(1); // [11, 22, 33, 44, [55, 66, [77, [88]], 99]]const towStep = multiDimensionalArr.flat(2); // [11, 22, 33, 44, 55, 66, [77, [88]], 99]const fullyFlatArray = multiDimensionalArr.flat(Infinity); // [11, 22, 33, 44, 55, 66, 77, 88, 99]⬆ Back to TopWhat is the easiest multi condition checkingYou can use indexOf to compare input with multiple values instead of checking each value as one condition.// Verbose approachif (  input === \""first\"" ||  input === 1 ||  input === \""second\"" ||  input === 2) {  someFunction();}// Shortcutif ([\""first\"", 1, \""second\"", 2].indexOf(input) !== -1) {  someFunction();}⬆ Back to TopHow do you capture browser back buttonThe window.onbeforeunload method is used to capture browser back button events. This is helpful to warn users about losing the current data.window.onbeforeunload = function () {  alert(\""You work will be lost\"");};⬆ Back to TopHow do you disable right click in the web pageThe right click on the page can be disabled by returning false from the oncontextmenu attribute on the body element.<body oncontextmenu=\""return false;\""></body>⬆ Back to TopWhat are wrapper objectsPrimitive Values like string,number and boolean don't have properties and methods but they are temporarily converted or coerced to an object(Wrapper object) when you try to perform actions on them. For example, if you apply toUpperCase() method on a primitive string value, it does not throw an error but returns uppercase of the string.let name = \""john\"";console.log(name.toUpperCase()); // Behind the scenes treated as console.log(new String(name).toUpperCase());i.e, Every primitive except null and undefined have Wrapper Objects and the list of wrapper objects are String,Number,Boolean,Symbol and BigInt.⬆ Back to TopWhat is AJAXAJAX stands for Asynchronous JavaScript and XML and it is a group of related technologies(HTML, CSS, JavaScript, XMLHttpRequest API etc) used to display data asynchronously. i.e. We can send data to the server and get data from the server without reloading the web page.⬆ Back to TopWhat are the different ways to deal with Asynchronous CodeBelow are the list of different ways to deal with Asynchronous code.CallbacksPromisesAsync/awaitThird-party libraries such as async.js,bluebird etc⬆ Back to TopHow to cancel a fetch requestUntil a few days back, One shortcoming of native promises is no direct way to cancel a fetch request. But the new AbortController from js specification allows you to use a signal to abort one or multiple fetch calls.The basic flow of cancelling a fetch request would be as below,Create an AbortController instanceGet the signal property of an instance and pass the signal as a fetch option for signalCall the AbortController's abort property to cancel all fetches that use that signalFor example, let's pass the same signal to multiple fetch calls will cancel all requests with that signal,const controller = new AbortController();const { signal } = controller;fetch(\""http://localhost:8000\"", { signal })  .then((response) => {    console.log(`Request 1 is complete!`);  })  .catch((e) => {    if (e.name === \""AbortError\"") {      // We know it's been canceled!    }  });fetch(\""http://localhost:8000\"", { signal })  .then((response) => {    console.log(`Request 2 is complete!`);  })  .catch((e) => {    if (e.name === \""AbortError\"") {      // We know it's been canceled!    }  });// Wait 2 seconds to abort both requestssetTimeout(() => controller.abort(), 2000);⬆ Back to TopWhat is web speech APIWeb speech API is used to enable modern browsers recognize and synthesize speech(i.e, voice data into web apps). This API has been introduced by W3C Community in the year 2012. It has two main parts,SpeechRecognition (Asynchronous Speech Recognition or Speech-to-Text): It provides the ability to recognize voice context from an audio input and respond accordingly. This is accessed by the SpeechRecognition interface.The below example shows on how to use this API to get text from speech,window.SpeechRecognition =  window.webkitSpeechRecognition || window.SpeechRecognition; // webkitSpeechRecognition for Chrome and SpeechRecognition for FFconst recognition = new window.SpeechRecognition();recognition.onresult = (event) => {  // SpeechRecognitionEvent type  const speechToText = event.results[0][0].transcript;  console.log(speechToText);};recognition.start();In this API, browser is going to ask you for permission to use your microphoneSpeechSynthesis (Text-to-Speech): It provides the ability to recognize voice context from an audio input and respond. This is accessed by the SpeechSynthesis interface.For example, the below code is used to get voice/speech from text,if (\""speechSynthesis\"" in window) {  var speech = new SpeechSynthesisUtterance(\""Hello World!\"");  speech.lang = \""en-US\"";  window.speechSynthesis.speak(speech);}The above examples can be tested on chrome(33+) browser's developer console.Note: This API is still a working draft and only available in Chrome and Firefox browsers(ofcourse Chrome only implemented the specification)⬆ Back to TopWhat is minimum timeout throttlingBoth browser and NodeJS javascript environments throttles with a minimum delay that is greater than 0ms. That means even though setting a delay of 0ms will not happen instantaneously.Browsers: They have a minimum delay of 4ms. This throttle occurs when successive calls are triggered due to callback nesting(certain depth) or after a certain number of successive intervals.Note: The older browsers have a minimum delay of 10ms.Nodejs: They have a minimum delay of 1ms. This throttle happens when the delay is larger than 2147483647 or less than 1.The best example to explain this timeout throttling behavior is the order of below code snippet.function runMeFirst() {  console.log(\""My script is initialized\"");}setTimeout(runMeFirst, 0);console.log(\""Script loaded\"");and the output would be inScript loadedMy script is initializedIf you don't use setTimeout, the order of logs will be sequential.function runMeFirst() {  console.log(\""My script is initialized\"");}runMeFirst();console.log(\""Script loaded\"");and the output is,My script is initializedScript loaded⬆ Back to TopHow do you implement zero timeout in modern browsersYou can't use setTimeout(fn, 0) to execute the code immediately due to minimum delay of greater than 0ms. But you can use window.postMessage() to achieve this behavior.⬆ Back to TopWhat are tasks in event loopA task is any javascript code/program which is scheduled to be run by the standard mechanisms such as initially starting to run a program, run an event callback, or an interval or timeout being fired. All these tasks are scheduled on a task queue.Below are the list of use cases to add tasks to the task queue,When a new javascript program is executed directly from console or running by the <script> element, the task will be added to the task queue.When an event fires, the event callback added to task queueWhen a setTimeout or setInterval is reached, the corresponding callback added to task queue⬆ Back to TopWhat is microtaskMicrotask is the javascript code which needs to be executed immediately after the currently executing task/microtask is completed. They are kind of blocking in nature. i.e, The main thread will be blocked until the microtask queue is empty.The main sources of microtasks are Promise.resolve, Promise.reject, MutationObservers, IntersectionObservers etcNote: All of these microtasks are processed in the same turn of the event loop.⬆ Back to TopWhat are different event loopsIn JavaScript, there are multiple event loops that can be used depending on the context of your application. The most common event loops are:1. The Browser Event Loop2. The Node.js Event Loop- Browser Event Loop: The Browser Event Loop is used in client-side JavaScript applications and is responsible for handling events that occur within the browser environment, such as user interactions (clicks, keypresses, etc.), HTTP requests, and other asynchronous actions.- The Node.js Event Loop is used in server-side JavaScript applications and is responsible for handling events that occur within the Node.js runtime environment, such as file I/O, network I/O, and other asynchronous actions. **[⬆ Back to Top](#table-of-contents)**What is the purpose of queueMicrotaskThe queueMicrotask function is used to schedule a microtask, which is a function that will be executed asynchronously in the microtask queue. The purpose of queueMicrotask is to ensure that a function is executed after the current task has finished, but before the browser performs any rendering or handles user events.Example:console.log('Start'); //1queueMicrotask(() => {  console.log('Inside microtask'); // 3});console.log('End'); //2By using queueMicrotask, you can ensure that certain tasks or callbacks are executed at the earliest opportunity during the JavaScript event loop, making it useful for performing work that needs to be done asynchronously but with higher priority than regular setTimeout or setInterval callbacks.⬆ Back to TopHow do you use javascript libraries in typescript fileIt is known that not all JavaScript libraries or frameworks have TypeScript declaration files. But if you still want to use libraries or frameworks in our TypeScript files without getting compilation errors, the only solution is declare keyword along with a variable declaration. For example, let's imagine you have a library called customLibrary that doesn’t have a TypeScript declaration and have a namespace called customLibrary in the global namespace. You can use this library in typescript code as below,declare var customLibrary;In the runtime, typescript will provide the type to the customLibrary variable as any type. The another alternative without using declare keyword is belowvar customLibrary: any;⬆ Back to TopWhat are the differences between promises and observablesSome of the major difference in a tabular formPromisesObservablesEmits only a single value at a timeEmits multiple values over a period of time(stream of values ranging from 0 to multiple)Eager in nature; they are going to be called immediatelyLazy in nature; they require subscription to be invokedPromise is always asynchronous even though it resolved immediatelyObservable can be either synchronous or asynchronousDoesn't provide any operatorsProvides operators such as map, forEach, filter, reduce, retry, and retryWhen etcCannot be canceledCanceled by using unsubscribe() method⬆ Back to TopWhat is heapHeap(Or memory heap) is the memory location where objects are stored when we define variables. i.e, This is the place where all the memory allocations and de-allocation take place. Both heap and call-stack are two containers of JS runtime.Whenever runtime comes across variables and function declarations in the code it stores them in the Heap.⬆ Back to TopWhat is an event tableEvent Table is a data structure that stores and keeps track of all the events which will be executed asynchronously like after some time interval or after the resolution of some API requests. i.e Whenever you call a setTimeout function or invoke async operation, it is added to the Event Table.It doesn't not execute functions on it’s own. The main purpose of the event table is to keep track of events and send them to the Event Queue as shown in the below diagram.⬆ Back to TopWhat is a microTask queueMicrotask Queue is the new queue where all the tasks initiated by promise objects get processed before the callback queue.The microtasks queue are processed before the next rendering and painting jobs. But if these microtasks are running for a long time then it leads to visual degradation.⬆ Back to TopWhat is the difference between shim and polyfillA shim is a library that brings a new API to an older environment, using only the means of that environment. It isn't necessarily restricted to a web application. For example, es5-shim.js is used to emulate ES5 features on older browsers (mainly pre IE9).Whereas polyfill is a piece of code (or plugin) that provides the technology that you, the developer, expect the browser to provide natively.In a simple sentence, A polyfill is a shim for a browser API.⬆ Back to TopHow do you detect primitive or non primitive value typeIn JavaScript, primitive types include boolean, string, number, BigInt, null, Symbol and undefined. Whereas non-primitive types include the Objects. But you can easily identify them with the below function,var myPrimitive = 30;var myNonPrimitive = {};function isPrimitive(val) {  return Object(val) !== val;}isPrimitive(myPrimitive);isPrimitive(myNonPrimitive);If the value is a primitive data type, the Object constructor creates a new wrapper object for the value. But If the value is a non-primitive data type (an object), the Object constructor will give the same object.⬆ Back to TopWhat is babelBabel is a JavaScript transpiler to convert ECMAScript 2015+ code into a backwards compatible version of JavaScript in current and older browsers or environments. Some of the main features are listed below,Transform syntaxPolyfill features that are missing in your target environment (using @babel/polyfill)Source code transformations (or codemods)⬆ Back to TopIs Node.js completely single threadedNode is a single thread, but some of the functions included in the Node.js standard library(e.g, fs module functions) are not single threaded. i.e, Their logic runs outside of the Node.js single thread to improve the speed and performance of a program.⬆ Back to TopWhat are the common use cases of observablesSome of the most common use cases of observables are web sockets with push notifications, user input changes, repeating intervals, etc⬆ Back to TopWhat is RxJSRxJS (Reactive Extensions for JavaScript) is a library for implementing reactive programming using observables that makes it easier to compose asynchronous or callback-based code. It also provides utility functions for creating and working with observables.⬆ Back to TopWhat is the difference between Function constructor and function declarationThe functions which are created with Function constructor do not create closures to their creation contexts but they are always created in the global scope. i.e, the function can access its own local variables and global scope variables only. Whereas function declarations can access outer function variables(closures) too.Let's see this difference with an example,Function Constructor:var a = 100;function createFunction() {  var a = 200;  return new Function(\""return a;\"");}console.log(createFunction()()); // 100Function declaration:var a = 100;function createFunction() {  var a = 200;  return function func() {    return a;  };}console.log(createFunction()()); // 200⬆ Back to TopWhat is a Short circuit conditionShort circuit conditions are meant for condensed way of writing simple if statements. Let's demonstrate the scenario using an example. If you would like to login to a portal with an authentication condition, the expression would be as below,if (authenticate) {  loginToPorta();}Since the javascript logical operators evaluated from left to right, the above expression can be simplified using && logical operatorauthenticate && loginToPorta();⬆ Back to TopWhat is the easiest way to resize an arrayThe length property of an array is useful to resize or empty an array quickly. Let's apply length property on number array to resize the number of elements from 5 to 2,var array = [1, 2, 3, 4, 5];console.log(array.length); // 5array.length = 2;console.log(array.length); // 2console.log(array); // [1,2]and the array can be emptied toovar array = [1, 2, 3, 4, 5];array.length = 0;console.log(array.length); // 0console.log(array); // []⬆ Back to TopWhat is an observableAn Observable is basically a function that can return a stream of values either synchronously or asynchronously to an observer over time. The consumer can get the value by calling subscribe() method.Let's look at a simple example of an Observableimport { Observable } from \""rxjs\"";const observable = new Observable((observer) => {  setTimeout(() => {    observer.next(\""Message from a Observable!\"");  }, 3000);});observable.subscribe((value) => console.log(value));Note: Observables are not part of the JavaScript language yet but they are being proposed to be added to the language⬆ Back to TopWhat is the difference between function and class declarationsThe main difference between function declarations and class declarations is hoisting. The function declarations are hoisted but not class declarations.Classes:const user = new User(); // ReferenceErrorclass User {}Constructor Function:const user = new User(); // No errorfunction User() {}⬆ Back to TopWhat is an async functionAn async function is a function declared with the async keyword which enables asynchronous, promise-based behavior to be written in a cleaner style by avoiding promise chains. These functions can contain zero or more await expressions.Let's take a below async function example,async function logger() {  let data = await fetch(\""http://someapi.com/users\""); // pause until fetch returns  console.log(data);}logger();It is basically syntax sugar over ES2015 promises and generators.⬆ Back to TopHow do you prevent promises swallowing errorsWhile using asynchronous code, JavaScript’s ES6 promises can make your life a lot easier without having callback pyramids and error handling on every second line. But Promises have some pitfalls and the biggest one is swallowing errors by default.Let's say you expect to print an error to the console for all the below cases,Promise.resolve(\""promised value\"").then(function () {  throw new Error(\""error\"");});Promise.reject(\""error value\"").catch(function () {  throw new Error(\""error\"");});new Promise(function (resolve, reject) {  throw new Error(\""error\"");});But there are many modern JavaScript environments that won't print any errors. You can fix this problem in different ways,Add catch block at the end of each chain: You can add catch block to the end of each of your promise chainsPromise.resolve(\""promised value\"")  .then(function () {    throw new Error(\""error\"");  })  .catch(function (error) {    console.error(error.stack);  });But it is quite difficult to type for each promise chain and verbose too.Add done method: You can replace first solution's then and catch blocks with done methodPromise.resolve(\""promised value\"").done(function () {  throw new Error(\""error\"");});Let's say you want to fetch data using HTTP and later perform processing on the resulting data asynchronously. You can write done block as below,getDataFromHttp()  .then(function (result) {    return processDataAsync(result);  })  .done(function (processed) {    displayData(processed);  });In future, if the processing library API changed to synchronous then you can remove done block as below,getDataFromHttp().then(function (result) {  return displayData(processDataAsync(result));});and then you forgot to add done block to then block leads to silent errors.Extend ES6 Promises by Bluebird:Bluebird extends the ES6 Promises API to avoid the issue in the second solution. This library has a “default” onRejection handler which will print all errors from rejected Promises to stderr. After installation, you can process unhandled rejectionsPromise.onPossiblyUnhandledRejection(function (error) {  throw error;});and discard a rejection, just handle it with an empty catchPromise.reject(\""error value\"").catch(function () {});⬆ Back to TopWhat is denoDeno is a simple, modern and secure runtime for JavaScript and TypeScript that uses V8 JavaScript engine and the Rust programming language.⬆ Back to TopHow do you make an object iterable in javascriptBy default, plain objects are not iterable. But you can make the object iterable by defining a Symbol.iterator property on it.Let's demonstrate this with an example,const collection = {  one: 1,  two: 2,  three: 3,  [Symbol.iterator]() {    const values = Object.keys(this);    let i = 0;    return {      next: () => {        return {          value: this[values[i++]],          done: i > values.length,        };      },    };  },};const iterator = collection[Symbol.iterator]();console.log(iterator.next()); // → {value: 1, done: false}console.log(iterator.next()); // → {value: 2, done: false}console.log(iterator.next()); // → {value: 3, done: false}console.log(iterator.next()); // → {value: undefined, done: true}The above process can be simplified using a generator function,const collection = {  one: 1,  two: 2,  three: 3,  [Symbol.iterator]: function* () {    for (let key in this) {      yield this[key];    }  },};const iterator = collection[Symbol.iterator]();console.log(iterator.next()); // {value: 1, done: false}console.log(iterator.next()); // {value: 2, done: false}console.log(iterator.next()); // {value: 3, done: false}console.log(iterator.next()); // {value: undefined, done: true}⬆ Back to TopWhat is a Proper Tail CallFirst, we should know about tail call before talking about \""Proper Tail Call\"". A tail call is a subroutine or function call performed as the final action of a calling function. Whereas Proper tail call(PTC) is a technique where the program or code will not create additional stack frames for a recursion when the function call is a tail call.For example, the below classic or head recursion of factorial function relies on stack for each step. Each step need to be processed upto n * factorial(n - 1)function factorial(n) {  if (n === 0) {    return 1;  }  return n * factorial(n - 1);}console.log(factorial(5)); //120But if you use Tail recursion functions, they keep passing all the necessary data it needs down the recursion without relying on the stack.function factorial(n, acc = 1) {  if (n === 0) {    return acc;  }  return factorial(n - 1, n * acc);}console.log(factorial(5)); //120The above pattern returns the same output as the first one. But the accumulator keeps track of total as an argument without using stack memory on recursive calls.⬆ Back to TopHow do you check an object is a promise or notIf you don't know if a value is a promise or not, wrapping the value as Promise.resolve(value) which returns a promisefunction isPromise(object) {  if (Promise && Promise.resolve) {    return Promise.resolve(object) == object;  } else {    throw \""Promise not supported in your environment\"";  }}var i = 1;var promise = new Promise(function (resolve, reject) {  resolve();});console.log(isPromise(i)); // falseconsole.log(isPromise(promise)); // trueAnother way is to check for .then() handler typefunction isPromise(value) {  return Boolean(value && typeof value.then === \""function\"");}var i = 1;var promise = new Promise(function (resolve, reject) {  resolve();});console.log(isPromise(i)); // falseconsole.log(isPromise(promise)); // true⬆ Back to TopHow to detect if a function is called as constructorYou can use new.target pseudo-property to detect whether a function was called as a constructor(using the new operator) or as a regular function call.If a constructor or function invoked using the new operator, new.target returns a reference to the constructor or function.For function calls, new.target is undefined.function Myfunc() {   if (new.target) {      console.log('called with new');   } else {      console.log('not called with new');   }}new Myfunc(); // called with newMyfunc(); // not called with newMyfunc.call({}); // not called with new⬆ Back to TopWhat are the differences between arguments object and rest parameterThere are three main differences between arguments object and rest parametersThe arguments object is an array-like but not an array. Whereas the rest parameters are array instances.The arguments object does not support methods such as sort, map, forEach, or pop. Whereas these methods can be used in rest parameters.The rest parameters are only the ones that haven’t been given a separate name, while the arguments object contains all arguments passed to the function⬆ Back to TopWhat are the differences between spread operator and rest parameterRest parameter collects all remaining elements into an array. Whereas Spread operator allows iterables( arrays / objects / strings ) to be expanded into single arguments/elements. i.e, Rest parameter is opposite to the spread operator.⬆ Back to TopWhat are the different kinds of generatorsThere are five kinds of generators,Generator function declaration:function* myGenFunc() {  yield 1;  yield 2;  yield 3;}const genObj = myGenFunc();Generator function expressions:const myGenFunc = function* () {  yield 1;  yield 2;  yield 3;};const genObj = myGenFunc();Generator method definitions in object literals:const myObj = {  *myGeneratorMethod() {    yield 1;    yield 2;    yield 3;  },};const genObj = myObj.myGeneratorMethod();Generator method definitions in class:class MyClass {  *myGeneratorMethod() {    yield 1;    yield 2;    yield 3;  }}const myObject = new MyClass();const genObj = myObject.myGeneratorMethod();Generator as a computed property:const SomeObj = {  *[Symbol.iterator]() {    yield 1;    yield 2;    yield 3;  },};console.log(Array.from(SomeObj)); // [ 1, 2, 3 ]⬆ Back to TopWhat are the built-in iterablesBelow are the list of built-in iterables in javascript,Arrays and TypedArraysStrings: Iterate over each character or Unicode code-pointsMaps: iterate over its key-value pairsSets: iterates over their elementsarguments: An array-like special variable in functionsDOM collection such as NodeList⬆ Back to TopWhat are the differences between for...of and for...in statementsBoth for...in and for...of statements iterate over js data structures. The only difference is over what they iterate:for..in iterates over all enumerable property keys of an objectfor..of iterates over the values of an iterable object.Let's explain this difference with an example,let arr = [\""a\"", \""b\"", \""c\""];arr.newProp = \""newVlue\"";// key are the property keysfor (let key in arr) {  console.log(key); // 0, 1, 2 & newValue}// value are the property valuesfor (let value of arr) {  console.log(value); // a, b, c}Since for..in loop iterates over the keys of the object, the first loop logs 0, 1, 2 and newProp while iterating over the array object. The for..of loop iterates over the values of a arr data structure and logs a, b, c in the console.⬆ Back to TopHow do you define instance and non-instance propertiesThe Instance properties must be defined inside of class methods. For example, name and age properties defined inside constructor as below,class Person {  constructor(name, age) {    this.name = name;    this.age = age;  }}But Static(class) and prototype data properties must be defined outside of the ClassBody declaration. Let's assign the age value for Person class as below,Person.staticAge = 30;Person.prototype.prototypeAge = 40;⬆ Back to TopWhat is the difference between isNaN and Number.isNaN?isNaN: The global function isNaN converts the argument to a Number and returns true if the resulting value is NaN.Number.isNaN: This method does not convert the argument. But it returns true when the type is a Number and value is NaN.Let's see the difference with an example,isNaN(‘hello’);   // trueNumber.isNaN('hello'); // false⬆ Back to TopHow to invoke an IIFE without any extra brackets?Immediately Invoked Function Expressions(IIFE) requires a pair of parenthesis to wrap the function which contains set of statements.(function (dt) {  console.log(dt.toLocaleTimeString());})(new Date());Since both IIFE and void operator discard the result of an expression, you can avoid the extra brackets using void operator for IIFE as below,void function (dt) {  console.log(dt.toLocaleTimeString());}(new Date());⬆ Back to TopIs that possible to use expressions in switch cases?You might have seen expressions used in switch condition but it is also possible to use for switch cases by assigning true value for the switch condition. Let's see the weather condition based on temparature as an example,const weather = (function getWeather(temp) {  switch (true) {    case temp < 0:      return \""freezing\"";    case temp < 10:      return \""cold\"";    case temp < 24:      return \""cool\"";    default:      return \""unknown\"";  }})(10);⬆ Back to TopWhat is the easiest way to ignore promise errors?The easiest and safest way to ignore promise errors is void that error. This approach is ESLint friendly too.await promise.catch((e) => void e);⬆ Back to TopHow do style the console output using CSS?You can add CSS styling to the console output using the CSS format content specifier %c. The console string message can be appended after the specifier and CSS style in another argument. Let's print the red the color text using console.log and CSS specifier as below,console.log(\""%cThis is a red text\"", \""color:red\"");It is also possible to add more styles for the content. For example, the font-size can be modified for the above textconsole.log(  \""%cThis is a red text with bigger font\"",  \""color:red; font-size:20px\"");⬆ Back to TopWhat is nullish coalescing operator (??)?It is a logical operator that returns its right-hand side operand when its left-hand side operand is null or undefined, and otherwise returns its left-hand side operand. This can be contrasted with the logical OR (||) operator, which returns the right-hand side operand if the left operand is any falsy value, not only null or undefined.console.log(null ?? true); // trueconsole.log(false ?? true); // falseconsole.log(undefined ?? true); // true⬆ Back to TopHow do you group and nest console output?The console.group() can be used to group related log messages to be able to easily read the logs and use console.groupEnd()to close the group. Along with this, you can also nest groups which allows to output message in hierarchical manner.For example, if you’re logging a user’s details:console.group(\""User Details\"");console.log(\""name: Sudheer Jonna\"");console.log(\""job: Software Developer\"");// Nested Groupconsole.group(\""Address\"");console.log(\""Street: Commonwealth\"");console.log(\""City: Los Angeles\"");console.log(\""State: California\"");// Close nested groupconsole.groupEnd();// Close outer groupconsole.groupEnd()You can also use console.groupCollapsed() instead of console.group() if you want the groups to be collapsed by default.⬆ Back to TopWhat is the difference between dense and sparse arrays?An array contains items at each index starting from first(0) to last(array.length - 1) is called as Dense array. Whereas if at least one item is missing at any index, the array is called as sparse.Let's see the below two kind of arrays,const avengers = [\""Ironman\"", \""Hulk\"", \""CaptainAmerica\""];console.log(avengers[0]); // 'Ironman'console.log(avengers[1]); // 'Hulk'console.log(avengers[2]); // 'CaptainAmerica'console.log(avengers.length); // 3const justiceLeague = [\""Superman\"", \""Aquaman\"", , \""Batman\""];console.log(justiceLeague[0]); // 'Superman'console.log(justiceLeague[1]); // 'Aquaman'console.log(justiceLeague[2]); // undefinedconsole.log(justiceLeague[3]); // 'Batman'console.log(justiceLeague.length); // 4⬆ Back to TopWhat are the different ways to create sparse arrays?There are 4 different ways to create sparse arrays in JavaScriptArray literal: Omit a value when using the array literalconst justiceLeague = [\""Superman\"", \""Aquaman\"", , \""Batman\""];console.log(justiceLeague); // ['Superman', 'Aquaman', empty ,'Batman']Array() constructor: Invoking Array(length) or new Array(length)const array = Array(3);console.log(array); // [empty, empty ,empty]Delete operator: Using delete array[index] operator on the arrayconst justiceLeague = [\""Superman\"", \""Aquaman\"", \""Batman\""];delete justiceLeague[1];console.log(justiceLeague); // ['Superman', empty, ,'Batman']Increase length property: Increasing length property of an arrayconst justiceLeague = ['Superman', 'Aquaman', 'Batman'];justiceLeague.length = 5;console.log(justiceLeague); // ['Superman', 'Aquaman', 'Batman', empty, empty]⬆ Back to TopWhat is the difference between setTimeout, setImmediate and process.nextTick?Set Timeout: setTimeout() is to schedule execution of a one-time callback after delay milliseconds.Set Immediate: The setImmediate function is used to execute a function right after the current event loop finishes.Process NextTick: If process.nextTick() is called in a given phase, all the callbacks passed to process.nextTick() will be resolved before the event loop continues. This will block the event loop and create I/O Starvation if process.nextTick() is called recursively.⬆ Back to TopHow do you reverse an array without modifying original array?The reverse() method reverses the order of the elements in an array but it mutates the original array. Let's take a simple example to demonistrate this case,const originalArray = [1, 2, 3, 4, 5];const newArray = originalArray.reverse();console.log(newArray); // [ 5, 4, 3, 2, 1]console.log(originalArray); // [ 5, 4, 3, 2, 1]There are few solutions that won't mutate the original array. Let's take a look.Using slice and reverse methods:In this case, just invoke the slice() method on the array to create a shallow copy followed by reverse() method call on the copy.const originalArray = [1, 2, 3, 4, 5];const newArray = originalArray.slice().reverse(); //Slice an array gives a new copyconsole.log(originalArray); // [1, 2, 3, 4, 5]console.log(newArray); // [ 5, 4, 3, 2, 1]Using spread and reverse methods:In this case, let's use the spread syntax (...) to create a copy of the array followed by reverse() method call on the copy.const originalArray = [1, 2, 3, 4, 5];const newArray = [...originalArray].reverse();console.log(originalArray); // [1, 2, 3, 4, 5]console.log(newArray); // [ 5, 4, 3, 2, 1]Using reduce and spread methods:Here execute a reducer function on an array elements and append the accumulated array on right side using spread syntaxconst originalArray = [1, 2, 3, 4, 5];const newArray = originalArray.reduce((accumulator, value) => {  return [value, ...accumulator];}, []);console.log(originalArray); // [1, 2, 3, 4, 5]console.log(newArray); // [ 5, 4, 3, 2, 1]Using reduceRight and spread methods:Here execute a right reducer function(i.e. opposite direction of reduce method) on an array elements and append the accumulated array on left side using spread syntaxconst originalArray = [1, 2, 3, 4, 5];const newArray = originalArray.reduceRight((accumulator, value) => {  return [...accumulator, value];}, []);console.log(originalArray); // [1, 2, 3, 4, 5]console.log(newArray); // [ 5, 4, 3, 2, 1]Using reduceRight and push methods:Here execute a right reducer function(i.e. opposite direction of reduce method) on an array elements and push the iterated value to the accumulatorconst originalArray = [1, 2, 3, 4, 5];const newArray = originalArray.reduceRight((accumulator, value) => {  accumulator.push(value);  return accumulator;}, []);console.log(originalArray); // [1, 2, 3, 4, 5]console.log(newArray); // [ 5, 4, 3, 2, 1]⬆ Back to TopHow do you create custom HTML element?The creation of custom HTML elements involves two main steps,Define your custom HTML element: First you need to define some custom class by extending HTMLElement class.After that define your component properties (styles,text etc) using connectedCallback method.Note: The browser exposes a function called customElements.define inorder to reuse the element.class CustomElement extends HTMLElement {  connectedCallback() {    this.innerHTML = \""This is a custom element\"";  }}customElements.define(\""custom-element\"", CustomElement);Use custome element just like other HTML element: Declare your custom element as a HTML tag.   <body>        <custom-element>   </body>⬆ Back to TopWhat is global execution context?The global execution context is the default or first execution context that is created by the JavaScript engine before any code is executed(i.e, when the file first loads in the browser). All the global code that is not inside a function or object will be executed inside this global execution context. Since JS engine is single threaded there will be only one global environment and there will be only one global execution context.For example, the below code other than code inside any function or object is executed inside the global execution context.var x = 10;function A() {  console.log(\""Start function A\"");  function B() {    console.log(\""In function B\"");  }  B();}A();console.log(\""GlobalContext\"");⬆ Back to TopWhat is function execution context?Whenever a function is invoked, the JavaScript engine creates a different type of Execution Context known as a Function Execution Context (FEC) within the Global Execution Context (GEC) to evaluate and execute the code within that function.⬆ Back to TopWhat is debouncing?Debouncing is a programming pattern that allows delaying execution of some piece of code until a specified time to avoid unnecessary CPU cycles, API calls and improve performance. The debounce function make sure that your code is only triggered once per user input. The common usecases are Search box suggestions, text-field auto-saves, and eliminating double-button clicks.Let's say you want to show suggestions for a search query, but only after a visitor has finished typing it. So here you write a debounce function where the user keeps writing the characters with in 500ms then previous timer cleared out using clearTimeout and reschedule API call/DB query for a new time—300 ms in the future.function debounce(func, timeout = 500) {  let timer;  return (...args) => {    clearTimeout(timer);    timer = setTimeout(() => {      func.apply(this, args);    }, timeout);  };}function fetchResults() {  console.log(\""Fetching input suggestions\"");}const processChange = debounce(() => fetchResults());The debounce() function can be used on input, button and window eventsInput:<input type=\""text\"" onkeyup=\""processChange()\"" />Button:<button onclick=\""processChange()\"">Click me</button>Windows event:window.addEventListener(\""scroll\"", processChange);⬆ Back to TopWhat is throttling?Throttling is a technique used to limit the execution of an event handler function, even when this event triggers continuously due to user actions. The common use cases are browser resizing, window scrolling etc.The below example creates a throttle function to reduce the number of events for each pixel change and trigger scroll event for each 100ms except for the first event.const throttle = (func, limit) => {  let inThrottle;  return (...args) => {    if (!inThrottle) {      func.apply(this, args);      inThrottle = true;      setTimeout(() => (inThrottle = false), limit);    }  };};window.addEventListener(\""scroll\"", () => {  throttle(handleScrollAnimation, 100);});⬆ Back to TopWhat is optional chaining?According to MDN official docs, the optional chaining operator (?.) permits reading the value of a property located deep within a chain of connected objects without having to expressly validate that each reference in the chain is valid.The ?. operator is like the . chaining operator, except that instead of causing an error if a reference is nullish (null or undefined), the expression short-circuits with a return value of undefined. When used with function calls, it returns undefined if the given function does not exist. const adventurer = {   name: 'Alice',   cat: {     name: 'Dinah'   } }; const dogName = adventurer.dog?.name; console.log(dogName); // expected output: undefined console.log(adventurer.someNonExistentMethod?.()); // expected output: undefined⬆ Back to TopWhat is an environment record?According to ECMAScript specification 262 (9.1):Environment Record is a specification type used to define the association of Identifiers to specific variables and functions, based upon the lexical nesting structure of ECMAScript code.Usually an Environment Record is associated with some specific syntactic structure of ECMAScript code such as a FunctionDeclaration, a BlockStatement, or a Catch clause of a TryStatement.Each time such code is evaluated, a new Environment Record is created to record the identifier bindings that are created by that code.⬆ Back to TopHow to verify if a variable is an array?It is possible to check if a variable is an array instance using 3 different ways,Array.isArray() method:The Array.isArray(value) utility function is used to determine whether value is an array or not. This function returns a true boolean value if the variable is an array and a false value if it is not.const numbers = [1, 2, 3];const user = { name: 'John' };Array.isArray(numbers);  // trueArray.isArray(user); //falseinstanceof operator:The instanceof operator is used to check the type of an array at run time. It returns true if the type of a variable is an Array other false for other type.const numbers = [1, 2, 3];const user = { name: 'John' };console.log(numbers instanceof Array);  // trueconsole.log(user instanceof Array);  // falseChecking constructor type:The constructor property of the variable is used to determine whether the variable Array type or not.const numbers = [1, 2, 3];const user = { name: 'John' };console.log(numbers.constructor === Array);  // trueconsole.log(user.constructor === Array);  // false⬆ Back to TopWhat is pass by value and pass by reference?Pass-by-value creates a new space in memory and makes a copy of a value. Primitives such as string, number, boolean etc will actually create a new copy. Hence, updating one value doesn't impact the other value. i.e, The values are independent of each other.let a = 5;let b = a;b++;console.log(a, b); //5, 6In the above code snippet, the value of a is assigned to b and the variable b has been incremented. Since there is a new space created for variable b, any update on this variable doesn't impact the variable a.Pass by reference doesn't create a new space in memory but the new variable adopts a memory address of an initial variable. Non-primitives such as objects, arrays and functions gets the reference of the initiable variable. i.e, updating one value will impact the other variable.let user1 = {   name: 'John',   age: 27};let user2 = user1;user2.age = 30;console.log(user1.age, user2.age); // 30, 30In the above code snippet, updating the age property of one object will impact the other property due to the same reference.⬆ Back to TopWhat are the differences between primitives and non-primitives?JavaScript language has both primitives and non-primitives but there are few differences between them as below,PrimitivesNon-primitivesThese types are predefinedCreated by developerThese are immutableMutableCompare by valueCompare by referenceStored in StackStored in heapContain certain valueCan contain NULL too⬆ Back to TopHow do you create your own bind method using either call or apply method?The custom bind function needs to be created on Function prototype inorder to use it as other builtin functions. This custom function should return a function similar to original bind method and the implementation of inner function needs to use apply method call.The function which is going to bind using custom myOwnBind method act as the attached function(boundTargetFunction) and argument as the object for apply method call. Function.prototype.myOwnBind = function(whoIsCallingMe) {   if (typeof this !== \""function\"") {     throw new Error(this + \""cannot be bound as it's not callable\"");   }   const boundTargetFunction = this;   return function() {     boundTargetFunction.apply(whoIsCallingMe, arguments);   } }⬆ Back to TopWhat are the differences between pure and impure functions?Some of the major differences between pure and impure function are as below,Pure functionImpure functionIt has no side effectsIt causes side effectsIt is always return the same resultIt returns different result on each callEasy to read and debugDifficult to read and debug because they are affected by extenal code⬆ Back to TopWhat is referential transparency?An expression in javascript that can be replaced by its value without affecting the behaviour of the program is called referential transparency. Pure functions are referentially transparent.const add = (x,y) => x + y;const multiplyBy2 = (x) => x * 2;//Now add (2, 3) can be replaced by 5.multiplyBy2(add(2, 3)); ⬆ Back to TopWhat are the possible side-effects in javascript?A side effect is the modification of state through the invocation of a function or expression. These side effects makes our function impure by default. Below are some side effects which makes function impure,Making an HTTP request. Asynchronous functions such as fetch and promise are impure.DOM manipulationsMutating the input dataPrinting to a screen or console: For example, console.log() and alert()Fetching the current timeMath.random() calls: Modifies the internal state of Math object⬆ Back to TopWhat are compose and pipe functions?The \""compose\"" and \""pipe\"" are two techniques commonly used in functional programming to simplify complex operations and make code more readable. They are not native to JavaScript and higher-order functions. the compose() applies right to left any number of functions to the output of the previous function.⬆ Back to TopWhat is module pattern?Module pattern is a designed pattern used to wrap a set of variables and functions together in a single scope returned as an object. JavaScript doesn't have access specifiers similar to other languages(Java, Python, etc) to provide private scope. It uses IIFE (Immediately invoked function expression) to allow for private scopes. i.e., a closure that protect variables and methods.The module pattern looks like below, (function() { // Private variables or functions goes here. return {     // Return public variables or functions here. } })();Let's see an example of a module pattern for an employee with private and public access,const createEmployee = (function () {   // Private   const name = \""John\"";   const department = \""Sales\"";   const getEmployeeName = () => name;   const getDepartmentName = () => department;   // Public   return {     name,     department,     getName: () => getEmployeeName(),     getDepartment: () => getDepartmentName(),   }; })(); console.log(createEmployee.name); console.log(createEmployee.department); console.log(createEmployee.getName()); console.log(createEmployee.getDepartment());Note: It mimic the concepts of classes with private variables and methods.⬆ Back to TopWhat is Function Composition?It is an approach where the result of one function is passed on to the next function, which is passed to another until the final function is executed for the final result. //example const double = x => x * 2 const square = x => x * x var output1 = double(2); var output2 = square(output1); console.log(output2); var output_final = square(double(2)); console.log(output_final);⬆ Back to TopHow to use await outside of async function prior to ES2022?Prior to ES2022, if you attempted to use an await outside of an async function resulted in a SyntaxError.await Promise.resolve(console.log('Hello await')); // SyntaxError: await is only valid in async functionBut you can fix this issue with an alternative IIFE (Immediately Invoked Function Expression) to get access to the feature. (async function() {   await Promise.resolve(console.log('Hello await')); // Hello await }());In ES2022, you can write top-level await without writing any hacks.await Promise.resolve(console.log('Hello await')); //Hello await⬆ Back to TopCoding Exercise1. What is the output of below codevar car = new Vehicle(\""Honda\"", \""white\"", \""2010\"", \""UK\"");console.log(car);function Vehicle(model, color, year, country) {  this.model = model;  this.color = color;  this.year = year;  this.country = country;}1: Undefined2: ReferenceError3: null4: {model: \""Honda\"", color: \""white\"", year: \""2010\"", country: \""UK\""}AnswerAnswer: 4The function declarations are hoisted similar to any variables. So the placement for Vehicle function declaration doesn't make any difference.⬆ Back to Top2. What is the output of below codefunction foo() {  let x = (y = 0);  x++;  y++;  return x;}console.log(foo(), typeof x, typeof y);1: 1, undefined and undefined2: ReferenceError: X is not defined3: 1, undefined and number4: 1, number and numberAnswerAnswer: 3Of course the return value of foo() is 1 due to the increment operator. But the statement let x = y = 0 declares a local variable x. Whereas y declared as a global variable accidentally. This statement is equivalent to,let x;window.y = 0;x = window.y;Since the block scoped variable x is undefined outside of the function, the type will be undefined too. Whereas the global variable y is available outside the function, the value is 0 and type is number.⬆ Back to Top3. What is the output of below codefunction main() {  console.log(\""A\"");  setTimeout(function print() {    console.log(\""B\"");  }, 0);  console.log(\""C\"");}main();1: A, B and C2: B, A and C3: A and C4: A, C and BAnswerAnswer: 4The statements order is based on the event loop mechanism. The order of statements follows the below order,At first, the main function is pushed to the stack.Then the browser pushes the first statement of the main function( i.e, A's console.log) to the stack, executing and popping out immediately.But setTimeout statement moved to Browser API to apply the delay for callback.In the meantime, C's console.log added to stack, executed and popped out.The callback of setTimeout moved from Browser API to message queue.The main function popped out from stack because there are no statements to executeThe callback moved from message queue to the stack since the stack is empty.The console.log for B is added to the stack and display on the console.⬆ Back to Top4. What is the output of below equality checkconsole.log(0.1 + 0.2 === 0.3);1: false2: trueAnswerAnswer: 1This is due to the float point math problem. Since the floating point numbers are encoded in binary format, the addition operations on them lead to rounding errors. Hence, the comparison of floating points doesn't give expected results.You can find more details about the explanation here 0.30000000000000004.com/⬆ Back to Top5. What is the output of below codevar y = 1;if (function f() {}) {  y += typeof f;}console.log(y);1: 1function2: 1object3: ReferenceError4: 1undefinedAnswerAnswer: 4The main points in the above code snippets are,You can see function expression instead function declaration inside if statement. So it always returns true.Since it is not declared(or assigned) anywhere, f is undefined and typeof f is undefined too.In other words, it is same asvar y = 1;if (\""foo\"") {  y += typeof f;}console.log(y);Note: It returns 1object for MS Edge browser⬆ Back to Top6. What is the output of below codefunction foo() {  return;  {    message: \""Hello World\"";  }}console.log(foo());1: Hello World2: Object {message: \""Hello World\""}3: Undefined4: SyntaxErrorAnswerAnswer: 3This is a semicolon issue. Normally semicolons are optional in JavaScript. So if there are any statements(in this case, return) missing semicolon, it is automatically inserted immediately. Hence, the function returned as undefined.Whereas if the opening curly brace is along with the return keyword then the function is going to be returned as expected.function foo() {  return {    message: \""Hello World\"",  };}console.log(foo()); // {message: \""Hello World\""}⬆ Back to Top7. What is the output of below codevar myChars = [\""a\"", \""b\"", \""c\"", \""d\""];delete myChars[0];console.log(myChars);console.log(myChars[0]);console.log(myChars.length);1: [empty, 'b', 'c', 'd'], empty, 32: [null, 'b', 'c', 'd'], empty, 33: [empty, 'b', 'c', 'd'], undefined, 44: [null, 'b', 'c', 'd'], undefined, 4AnswerAnswer: 3The delete operator will delete the object property but it will not reindex the array or change its length. So the number or elements or length of the array won't be changed.If you try to print myChars then you can observe that it doesn't set an undefined value, rather the property is removed from the array. The newer versions of Chrome use empty instead of undefined to make the difference a bit clearer.⬆ Back to Top8. What is the output of below code in latest Chromevar array1 = new Array(3);console.log(array1);var array2 = [];array2[2] = 100;console.log(array2);var array3 = [, , ,];console.log(array3);1: [undefined × 3], [undefined × 2, 100], [undefined × 3]2: [empty × 3], [empty × 2, 100], [empty × 3]3: [null × 3], [null × 2, 100], [null × 3]4: [], [100], []AnswerAnswer: 2The latest chrome versions display sparse array(they are filled with holes) using this empty x n notation. Whereas the older versions have undefined x n notation.Note: The latest version of FF displays n empty slots notation.⬆ Back to Top9. What is the output of below codeconst obj = {  prop1: function () {    return 0;  },  prop2() {    return 1;  },  [\""prop\"" + 3]() {    return 2;  },};console.log(obj.prop1());console.log(obj.prop2());console.log(obj.prop3());1: 0, 1, 22: 0, { return 1 }, 23: 0, { return 1 }, { return 2 }4: 0, 1, undefinedAnswerAnswer: 1ES6 provides method definitions and property shorthands for objects. So both prop2 and prop3 are treated as regular function values.⬆ Back to Top10. What is the output of below codeconsole.log(1 < 2 < 3);console.log(3 > 2 > 1);1: true, true2: true, false3: SyntaxError, SyntaxError,4: false, falseAnswerAnswer: 2The important point is that if the statement contains the same operators(e.g, < or >) then it can be evaluated from left to right.The first statement follows the below order,console.log(1 < 2 < 3);console.log(true < 3);console.log(1 < 3); // True converted as 1 during comparisonTrueWhereas the second statement follows the below order,console.log(3 > 2 > 1);console.log(true > 1);console.log(1 > 1); // False converted as 0 during comparisonFalse⬆ Back to Top11. What is the output of below code in non-strict modefunction printNumbers(first, second, first) {  console.log(first, second, first);}printNumbers(1, 2, 3);1: 1, 2, 32: 3, 2, 33: SyntaxError: Duplicate parameter name not allowed in this context4: 1, 2, 1AnswerAnswer: 2In non-strict mode, the regular JavaScript functions allow duplicate named parameters. The above code snippet has duplicate parameters on 1st and 3rd parameters.The value of the first parameter is mapped to the third argument which is passed to the function. Hence, the 3rd argument overrides the first parameter.Note: In strict mode, duplicate parameters will throw a Syntax Error.⬆ Back to Top12. What is the output of below codeconst printNumbersArrow = (first, second, first) => {  console.log(first, second, first);};printNumbersArrow(1, 2, 3);1: 1, 2, 32: 3, 2, 33: SyntaxError: Duplicate parameter name not allowed in this context4: 1, 2, 1AnswerAnswer: 3Unlike regular functions, the arrow functions doesn't not allow duplicate parameters in either strict or non-strict mode. So you can see SyntaxError in the console.⬆ Back to Top13. What is the output of below codeconst arrowFunc = () => arguments.length;console.log(arrowFunc(1, 2, 3));1: ReferenceError: arguments is not defined2: 33: undefined4: nullAnswerAnswer: 1Arrow functions do not have an arguments, super, this, or new.target bindings. So any reference to arguments variable tries to resolve to a binding in a lexically enclosing environment. In this case, the arguments variable is not defined outside of the arrow function. Hence, you will receive a reference error.Where as the normal function provides the number of arguments passed to the functionconst func = function () {  return arguments.length;};console.log(func(1, 2, 3));But If you still want to use an arrow function then rest operator on arguments provides the expected argumentsconst arrowFunc = (...args) => args.length;console.log(arrowFunc(1, 2, 3));⬆ Back to Top14. What is the output of below codeconsole.log(String.prototype.trimLeft.name === \""trimLeft\"");console.log(String.prototype.trimLeft.name === \""trimStart\"");1: True, False2: False, TrueAnswerAnswer: 2In order to be consistent with functions like String.prototype.padStart, the standard method name for trimming the whitespaces is considered as trimStart. Due to web web compatibility reasons, the old method name 'trimLeft' still acts as an alias for 'trimStart'. Hence, the prototype for 'trimLeft' is always 'trimStart'⬆ Back to Top15. What is the output of below codeconsole.log(Math.max());1: undefined2: Infinity3: 04: -InfinityAnswerAnswer: 4-Infinity is the initial comparant because almost every other value is bigger. So when no arguments are provided, -Infinity is going to be returned.Note: Zero number of arguments is a valid case.⬆ Back to Top16. What is the output of below codeconsole.log(10 == [10]);console.log(10 == [[[[[[[10]]]]]]]);1: True, True2: True, False3: False, False4: False, TrueAnswerAnswer: 1As per the comparison algorithm in the ECMAScript specification(ECMA-262), the above expression converted into JS as below10 === Number([10].valueOf().toString()); // 10So it doesn't matter about number brackets([]) around the number, it is always converted to a number in the expression.⬆ Back to Top17. What is the output of below codeconsole.log(10 + \""10\"");console.log(10 - \""10\"");1: 20, 02: 1010, 03: 1010, 10-104: NaN, NaNAnswerAnswer: 2The concatenation operator(+) is applicable for both number and string types. So if any operand is string type then both operands concatenated as strings. Whereas subtract(-) operator tries to convert the operands as number type.⬆ Back to Top18. What is the output of below codeconsole.log([0] == false);if ([0]) {  console.log(\""I'm True\"");} else {  console.log(\""I'm False\"");}1: True, I'm True2: True, I'm False3: False, I'm True4: False, I'm FalseAnswerAnswer: 1In comparison operators, the expression [0] converted to Number([0].valueOf().toString()) which is resolved to false. Whereas [0] just becomes a truthy value without any conversion because there is no comparison operator.19. What is the output of below codeconsole.log([1, 2] + [3, 4]);1: [1,2,3,4]2: [1,2][3,4]3: SyntaxError4: 1,23,4AnswerAnswer: 4The + operator is not meant or defined for arrays. So it converts arrays into strings and concatenates them.⬆ Back to Top20. What is the output of below codeconst numbers = new Set([1, 1, 2, 3, 4]);console.log(numbers);const browser = new Set(\""Firefox\"");console.log(browser);1: {1, 2, 3, 4}, {\""F\"", \""i\"", \""r\"", \""e\"", \""f\"", \""o\"", \""x\""}2: {1, 2, 3, 4}, {\""F\"", \""i\"", \""r\"", \""e\"", \""o\"", \""x\""}3: [1, 2, 3, 4], [\""F\"", \""i\"", \""r\"", \""e\"", \""o\"", \""x\""]4: {1, 1, 2, 3, 4}, {\""F\"", \""i\"", \""r\"", \""e\"", \""f\"", \""o\"", \""x\""}AnswerAnswer: 1Since Set object is a collection of unique values, it won't allow duplicate values in the collection. At the same time, it is case sensitive data structure.⬆ Back to Top21. What is the output of below codeconsole.log(NaN === NaN);1: True2: FalseAnswerAnswer: 2JavaScript follows IEEE 754 spec standards. As per this spec, NaNs are never equal for floating-point numbers.⬆ Back to Top22. What is the output of below codelet numbers = [1, 2, 3, 4, NaN];console.log(numbers.indexOf(NaN));1: 42: NaN3: SyntaxError4: -1AnswerAnswer: 4The indexOf uses strict equality operator(===) internally and NaN === NaN evaluates to false. Since indexOf won't be able to find NaN inside an array, it returns -1 always.But you can use Array.prototype.findIndex method to find out the index of NaN in an array or You can use Array.prototype.includes to check if NaN is present in an array or not.let numbers = [1, 2, 3, 4, NaN];console.log(numbers.findIndex(Number.isNaN)); // 4console.log(numbers.includes(NaN)); // true⬆ Back to Top23. What is the output of below codelet [a, ...b,] = [1, 2, 3, 4, 5];console.log(a, b);1: 1, [2, 3, 4, 5]2: 1, {2, 3, 4, 5}3: SyntaxError4: 1, [2, 3, 4]AnswerAnswer: 3When using rest parameters, trailing commas are not allowed and will throw a SyntaxError.If you remove the trailing comma then it displays 1st answerlet [a, ...b] = [1, 2, 3, 4, 5];console.log(a, b); // 1, [2, 3, 4, 5]⬆ Back to Top25. What is the output of below codeasync function func() {  return 10;}console.log(func());1: Promise {<fulfilled>: 10}2: 103: SyntaxError4: Promise {<rejected>: 10}AnswerAnswer: 1Async functions always return a promise. But even if the return value of an async function is not explicitly a promise, it will be implicitly wrapped in a promise. The above async function is equivalent to below expression,function func() {  return Promise.resolve(10);}⬆ Back to Top26. What is the output of below codeasync function func() {  await 10;}console.log(func());1: Promise {<fulfilled>: 10}2: 103: SyntaxError4: Promise {<resolved>: undefined}AnswerAnswer: 4The await expression returns value 10 with promise resolution and the code after each await expression can be treated as existing in a .then callback. In this case, there is no return expression at the end of the function. Hence, the default return value of undefined is returned as the resolution of the promise. The above async function is equivalent to below expression,function func() {  return Promise.resolve(10).then(() => undefined);}⬆ Back to Top27. What is the output of below codefunction delay() {  return new Promise(resolve => setTimeout(resolve, 2000));}async function delayedLog(item) {  await delay();  console.log(item);}async function processArray(array) {  array.forEach(item => {    await delayedLog(item);  })}processArray([1, 2, 3, 4]);1: SyntaxError2: 1, 2, 3, 43: 4, 4, 4, 44: 4, 3, 2, 1AnswerAnswer: 1Even though “processArray” is an async function, the anonymous function that we use for forEach is synchronous. If you use await inside a synchronous function then it throws a syntax error.⬆ Back to Top28. What is the output of below codefunction delay() {  return new Promise((resolve) => setTimeout(resolve, 2000));}async function delayedLog(item) {  await delay();  console.log(item);}async function process(array) {  array.forEach(async (item) => {    await delayedLog(item);  });  console.log(\""Process completed!\"");}process([1, 2, 3, 5]);1: 1 2 3 5 and Process completed!2: 5 5 5 5 and Process completed!3: Process completed! and 5 5 5 54: Process completed! and 1 2 3 5AnswerAnswer: 4The forEach method will not wait until all items are finished but it just runs the tasks and goes next. Hence, the last statement is displayed first followed by a sequence of promise resolutions.But you control the array sequence using for..of loop,async function processArray(array) {  for (const item of array) {    await delayedLog(item);  }  console.log(\""Process completed!\"");}⬆ Back to Top29. What is the output of below codevar set = new Set();set.add(\""+0\"").add(\""-0\"").add(NaN).add(undefined).add(NaN);console.log(set);1: Set(4) {\""+0\"", \""-0\"", NaN, undefined}2: Set(3) {\""+0\"", NaN, undefined}3: Set(5) {\""+0\"", \""-0\"", NaN, undefined, NaN}4: Set(4) {\""+0\"", NaN, undefined, NaN}AnswerAnswer: 1Set has few exceptions from equality check,All NaN values are equalBoth +0 and -0 considered as different values⬆ Back to Top30. What is the output of below codeconst sym1 = Symbol(\""one\"");const sym2 = Symbol(\""one\"");const sym3 = Symbol.for(\""two\"");const sym4 = Symbol.for(\""two\"");console.log(sym1 === sym2, sym3 === sym4);1: true, true2: true, false3: false, true4: false, falseAnswerAnswer: 3Symbol follows below conventions,Every symbol value returned from Symbol() is unique irrespective of the optional string.Symbol.for() function creates a symbol in a global symbol registry list. But it doesn't necessarily create a new symbol on every call, it checks first if a symbol with the given key is already present in the registry and returns the symbol if it is found. Otherwise a new symbol created in the registry.Note: The symbol description is just useful for debugging purposes.⬆ Back to Top31. What is the output of below codeconst sym1 = new Symbol(\""one\"");console.log(sym1);1: SyntaxError2: one3: Symbol('one')4: SymbolAnswerAnswer: 1Symbol is a just a standard function and not an object constructor(unlike other primitives new Boolean, new String and new Number). So if you try to call it with the new operator will result in a TypeError⬆ Back to Top32. What is the output of below codelet myNumber = 100;let myString = \""100\"";if (!typeof myNumber === \""string\"") {  console.log(\""It is not a string!\"");} else {  console.log(\""It is a string!\"");}if (!typeof myString === \""number\"") {  console.log(\""It is not a number!\"");} else {  console.log(\""It is a number!\"");}1: SyntaxError2: It is not a string!, It is not a number!3: It is not a string!, It is a number!4: It is a string!, It is a number!AnswerAnswer: 4The return value of typeof myNumber or typeof myString is always a truthy value (either \""number\"" or \""string\""). The ! operator operates on either typeof myNumber or typeof myString, converting them to boolean values. Since the value of both !typeof myNumber and !typeof myString is false, the if condition fails, and control goes to else block.To make the ! operator operate on the equality expression, one needs to add parentheses:if (!(typeof myNumber === \""string\""))Or simply use the inequality operator:if (typeof myNumber !== \""string\"")⬆ Back to Top33. What is the output of below codeconsole.log(  JSON.stringify({ myArray: [\""one\"", undefined, function () {}, Symbol(\""\"")] }));console.log(  JSON.stringify({ [Symbol.for(\""one\"")]: \""one\"" }, [Symbol.for(\""one\"")]));1: {\""myArray\"":['one', undefined, {}, Symbol]}, {}2: {\""myArray\"":['one', null,null,null]}, {}3: {\""myArray\"":['one', null,null,null]}, \""{ [Symbol.for('one')]: 'one' }, [Symbol.for('one')]\""4: {\""myArray\"":['one', undefined, function(){}, Symbol('')]}, {}AnswerAnswer: 2The symbols has below constraints,The undefined, Functions, and Symbols are not valid JSON values. So those values are either omitted (in an object) or changed to null (in an array). Hence, it returns null values for the value array.All Symbol-keyed properties will be completely ignored. Hence it returns an empty object({}).⬆ Back to Top34. What is the output of below codeclass A {  constructor() {    console.log(new.target.name);  }}class B extends A {  constructor() {    super();  }}new A();new B();1: A, A2: A, BAnswerAnswer: 2Using constructors, new.target refers to the constructor (points to the class definition of class which is initialized) that was directly invoked by new. This also applies to the case if the constructor is in a parent class and was delegated from a child constructor.⬆ Back to Top35. What is the output of below codeconst [x, ...y, z] = [1, 2, 3, 4];console.log(x, y, z);1: 1, [2, 3], 42: 1, [2, 3, 4], undefined3: 1, [2], 34: SyntaxErrorAnswerAnswer: 4It throws a syntax error because the rest element should not have a trailing comma. You should always consider using a rest operator as the last element.⬆ Back to Top36. What is the output of below codeconst { a: x = 10, b: y = 20 } = { a: 30 };console.log(x);console.log(y);1: 30, 202: 10, 203: 10, undefined4: 30, undefinedAnswerAnswer: 1The object property follows below rules,The object properties can be retrieved and assigned to a variable with a different nameThe property assigned a default value when the retrieved value is undefined⬆ Back to Top37. What is the output of below codefunction area({ length = 10, width = 20 }) {  console.log(length * width);}area();1: 2002: Error3: undefined4: 0AnswerAnswer: 2If you leave out the right-hand side assignment for the destructuring object, the function will look for at least one argument to be supplied when invoked. Otherwise you will receive an error Error: Cannot read property 'length' of undefined as mentioned above.You can avoid the error with either of the below changes,Pass at least an empty object:function area({ length = 10, width = 20 }) {  console.log(length * width);}area({});Assign default empty object:function area({ length = 10, width = 20 } = {}) {  console.log(length * width);}area();⬆ Back to Top38. What is the output of below codeconst props = [  { id: 1, name: \""John\"" },  { id: 2, name: \""Jack\"" },  { id: 3, name: \""Tom\"" },];const [, , { name }] = props;console.log(name);1: Tom2: Error3: undefined4: JohnAnswerAnswer: 1It is possible to combine Array and Object destructuring. In this case, the third element in the array props accessed first followed by name property in the object.⬆ Back to Top39. What is the output of below codefunction checkType(num = 1) {  console.log(typeof num);}checkType();checkType(undefined);checkType(\""\"");checkType(null);1: number, undefined, string, object2: undefined, undefined, string, object3: number, number, string, object4: number, number, number, numberAnswerAnswer: 3If the function argument is set implicitly(not passing argument) or explicitly to undefined, the value of the argument is the default parameter. Whereas for other falsy values('' or null), the value of the argument is passed as a parameter.Hence, the result of function calls categorized as below,The first two function calls logs number type since the type of default value is numberThe type of '' and null values are string and object type respectively.⬆ Back to Top40. What is the output of below codefunction add(item, items = []) {  items.push(item);  return items;}console.log(add(\""Orange\""));console.log(add(\""Apple\""));1: ['Orange'], ['Orange', 'Apple']2: ['Orange'], ['Apple']AnswerAnswer: 2Since the default argument is evaluated at call time, a new object is created each time the function is called. So in this case, the new array is created and an element pushed to the default empty array.⬆ Back to Top41. What is the output of below codefunction greet(greeting, name, message = greeting + \"" \"" + name) {  console.log([greeting, name, message]);}greet(\""Hello\"", \""John\"");greet(\""Hello\"", \""John\"", \""Good morning!\"");1: SyntaxError2: ['Hello', 'John', 'Hello John'], ['Hello', 'John', 'Good morning!']AnswerAnswer: 2Since parameters defined earlier are available to later default parameters, this code snippet doesn't throw any error.⬆ Back to Top42. What is the output of below codefunction outer(f = inner()) {  function inner() {    return \""Inner\"";  }}outer();1: ReferenceError2: InnerAnswerAnswer: 1The functions and variables declared in the function body cannot be referred from default value parameter initializers. If you still try to access, it throws a run-time ReferenceError(i.e, inner is not defined).⬆ Back to Top43. What is the output of below codefunction myFun(x, y, ...manyMoreArgs) {  console.log(manyMoreArgs);}myFun(1, 2, 3, 4, 5);myFun(1, 2);1: [3, 4, 5], undefined2: SyntaxError3: [3, 4, 5], []4: [3, 4, 5], [undefined]AnswerAnswer: 3The rest parameter is used to hold the remaining parameters of a function and it becomes an empty array if the argument is not provided.⬆ Back to Top44. What is the output of below codeconst obj = { key: \""value\"" };const array = [...obj];console.log(array);1: ['key', 'value']2: TypeError3: []4: ['key']AnswerAnswer: 2Spread syntax can be applied only to iterable objects. By default, Objects are not iterable, but they become iterable when used in an Array, or with iterating functions such as map(), reduce(), and assign(). If you still try to do it, it still throws TypeError: obj is not iterable.⬆ Back to Top45. What is the output of below codefunction* myGenFunc() {  yield 1;  yield 2;  yield 3;}var myGenObj = new myGenFunc();console.log(myGenObj.next().value);1: 12: undefined3: SyntaxError4: TypeErrorAnswerAnswer: 4Generators are not constructible type. But if you still proceed to do, there will be an error saying \""TypeError: myGenFunc is not a constructor\""⬆ Back to Top46. What is the output of below codefunction* yieldAndReturn() {  yield 1;  return 2;  yield 3;}var myGenObj = yieldAndReturn();console.log(myGenObj.next());console.log(myGenObj.next());console.log(myGenObj.next());1: { value: 1, done: false }, { value: 2, done: true }, { value: undefined, done: true }2: { value: 1, done: false }, { value: 2, done: false }, { value: undefined, done: true }3: { value: 1, done: false }, { value: 2, done: true }, { value: 3, done: true }4: { value: 1, done: false }, { value: 2, done: false }, { value: 3, done: true }AnswerAnswer: 1A return statement in a generator function will make the generator finish. If a value is returned, it will be set as the value property of the object and done property to true. When a generator is finished, subsequent next() calls return an object of this form: {value: undefined, done: true}.⬆ Back to Top47. What is the output of below codeconst myGenerator = (function* () {  yield 1;  yield 2;  yield 3;})();for (const value of myGenerator) {  console.log(value);  break;}for (const value of myGenerator) {  console.log(value);}1: 1,2,3 and 1,2,32: 1,2,3 and 4,5,63: 1 and 14: 1AnswerAnswer: 4The generator should not be re-used once the iterator is closed. i.e, Upon exiting a loop(on completion or using break & return), the generator is closed and trying to iterate over it again does not yield any more results. Hence, the second loop doesn't print any value.⬆ Back to Top48. What is the output of below codeconst num = 0o38;console.log(num);1: SyntaxError2: 38AnswerAnswer: 1If you use an invalid number(outside of 0-7 range) in the octal literal, JavaScript will throw a SyntaxError. In ES5, it treats the octal literal as a decimal number.⬆ Back to Top49. What is the output of below codeconst squareObj = new Square(10);console.log(squareObj.area);class Square {  constructor(length) {    this.length = length;  }  get area() {    return this.length * this.length;  }  set area(value) {    this.area = value;  }}1: 1002: ReferenceErrorAnswerAnswer: 2Unlike function declarations, class declarations are not hoisted. i.e, First You need to declare your class and then access it, otherwise it will throw a ReferenceError \""Uncaught ReferenceError: Square is not defined\"".Note: Class expressions also applies to the same hoisting restrictions of class declarations.⬆ Back to Top50. What is the output of below codefunction Person() {}Person.prototype.walk = function () {  return this;};Person.run = function () {  return this;};let user = new Person();let walk = user.walk;console.log(walk());let run = Person.run;console.log(run());1: undefined, undefined2: Person, Person3: SyntaxError4: Window, WindowAnswerAnswer: 4When a regular or prototype method is called without a value for this, the methods return an initial this value if the value is not undefined. Otherwise global window object will be returned. In our case, the initial this value is undefined so both methods return window objects.⬆ Back to Top51. What is the output of below codeclass Vehicle {  constructor(name) {    this.name = name;  }  start() {    console.log(`${this.name} vehicle started`);  }}class Car extends Vehicle {  start() {    console.log(`${this.name} car started`);    super.start();  }}const car = new Car(\""BMW\"");console.log(car.start());1: SyntaxError2: BMW vehicle started, BMW car started3: BMW car started, BMW vehicle started4: BMW car started, BMW car startedAnswerAnswer: 3The super keyword is used to call methods of a superclass. Unlike other languages the super invocation doesn't need to be a first statement. i.e, The statements will be executed in the same order of code.⬆ Back to Top52. What is the output of below codeconst USER = { age: 30 };USER.age = 25;console.log(USER.age);1: 302: 253: Uncaught TypeError4: SyntaxErrorAnswerAnswer: 2Even though we used constant variables, the content of it is an object and the object's contents (e.g properties) can be altered. Hence, the change is going to be valid in this case.⬆ Back to Top53. What is the output of below codeconsole.log(\""🙂\"" === \""🙂\"");1: false2: trueAnswerAnswer: 2Emojis are unicodes and the unicode for smile symbol is \""U+1F642\"". The unicode comparision of same emojies is equivalent to string comparison. Hence, the output is always true.⬆ Back to Top54. What is the output of below code?console.log(typeof typeof typeof true);1: string2: boolean3: NaN4: numberAnswerAnswer: 1The typeof operator on any primitive returns a string value. So even if you apply the chain of typeof operators on the return value, it is always string.⬆ Back to Top55. What is the output of below code?let zero = new Number(0);if (zero) {  console.log(\""If\"");} else {  console.log(\""Else\"");}1: If2: Else3: NaN4: SyntaxErrorAnswerAnswer: 1The type of operator on new Number always returns object. i.e, typeof new Number(0) --> object.Objects are always truthy in if blockHence the above code block always goes to if section.⬆ Back to Top55. What is the output of below code in non strict mode?let msg = \""Good morning!!\"";msg.name = \""John\"";console.log(msg.name);1: \""\""2: Error3: John4: UndefinedAnswerAnswer: 4It returns undefined for non-strict mode and returns Error for strict mode. In non-strict mode, the wrapper object is going to be created and get the mentioned property. But the object get disappeared after accessing the property in next line.⬆ Back to Top56. What is the output of below code?let count = 10;(function innerFunc() {  if (count === 10) {    let count = 11;    console.log(count);  }  console.log(count);})();1: 11, 102: 11, 113: 10, 114: 10, 10AnswerAnswer: 111 and 10 is logged to the console.The innerFunc is a closure which captures the count variable from the outerscope. i.e, 10. But the conditional has another local variable count which overwrites the ourter count variable. So the first console.log displays value 11.Whereas the second console.log logs 10 by capturing the count variable from outerscope.⬆ Back to Top57. What is the output of below code ?1: console.log(true && 'hi');2: console.log(true && 'hi' && 1);3: console.log(true && '' && 0);Answer1: hi2: 13: ''Reason : The operator returns the value of the first falsy operand encountered when evaluating from left to right, or the value of the last operand if they are all truthy.Note: Below these values are consider as falsy value1: 02: ''3: null4: undefined5: NAN⬆ Back to Top58. What is the output of below code ?let arr = [1, 2, 3];let str = \""1,2,3\"";console.log(arr == str);1: false2: Error3: trueAnswerAnswer: 3Arrays have their own implementation of toString method that returns a comma-separated list of elements. So the above code snippet returns true. In order to avoid conversion of array type, we should use === for comparison.⬆ Back to Top59. What is the output of below code?getMessage();var getMessage = () => {  console.log(\""Good morning\"");};1: Good morning2: getMessage is not a function3: getMessage is not defined4: UndefinedAnswerAnswer: 2Hoisting will move variables and functions to be the top of scope. Even though getMessage is an arrow function the above function will considered as a varible due to it's variable declaration or assignment. So the variables will have undefined value in memory phase and throws an error 'getMessage is not a function' at the code execution phase.⬆ Back to Top60. What is the output of below code?let quickPromise = Promise.resolve();quickPromise.then(() => console.log(\""promise finished\""));console.log(\""program finished\""); 1: program finished2: Cannot predict the order3: program finished, promise finished4: promise finished, program finishedAnswerAnswer: 3Even though a promise is resolved immediately, it won't be executed immediately because its .then/catch/finally handlers or callbacks(aka task) are pushed into the queue. Whenever the JavaScript engine becomes free from the current program, it pulls a task from the queue and executes it. This is the reason why last statement is printed first before the log of promise handler.Note: We call the above queue as \""MicroTask Queue\""⬆ Back to Top61. What is the output of below code?console.log('First line')['a', 'b', 'c'].forEach((element) => console.log(element))console.log('Third line')1: First line, then print a, b, c in a new line, and finally print Third line as next line2: First line, then print a, b, c in a first line, and  print Third line as next line3:  Missing semi-colon error4:  Cannot read properties of undefinedAnswerAnswer: 4When JavaScript encounters a line break without a semicolon, the JavaScript parser will automatically add a semicolon based on a set of rules called Automatic Semicolon Insertion which determines whether line break as end of statement or not to insert semicolon. But it does not assume a semicolon before square brackets [...]. So the first two lines considered as a single statement as below.console.log('First line')['a', 'b', 'c'].forEach((element) => console.log(element))Hence, there will be cannot read properties of undefined error while applying the array square bracket on log function.⬆ Back to Top62. Write a function that returns a random HEX colorSolution 1 (Iterative generation)const HEX_ALPHABET = [\""0\"", \""1\"", \""2\"", \""3\"", \""4\"", \""5\"", \""6\"", \""7\"", \""8\"", \""9\"", \""a\"", \""b\"", \""c\"", \""d\"", \""e\"", \""f\""];const HEX_PREFIX = \""#\"";const HEX_LENGTH = 6;function generateRandomHex() {\tlet randomHex = \""\"";\tfor(let i = 0; i < HEX_LENGTH; i++) {\t\tconst randomIndex = Math.floor(Math.random() * HEX_ALPHABET.length);\t\trandomHex += HEX_ALPHABET[randomIndex];\t}\treturn HEX_PREFIX + randomHex;}Solution 2 (One-liner)const HEX_PREFIX = \""#\"";const HEX_RADIX = 16;const HEX_LENGTH = 6;function generateRandomHex() {\treturn HEX_PREFIX + Math.floor(Math.random() * 0xffffff).toString(HEX_RADIX).padStart(HEX_LENGTH, \""0\"");} ⬆ Back to Top63. What is the output of below code?var of = ['of'];for(var of of of) {  console.log(of);}1:  of2:  SyntaxError: Unexpected token of3:  SyntaxError: Identifier 'of' has already been declared4:  ReferenceError: of is not definedAnswerAnswer: 1In JavaScript, of is not considered as a reserved keyword. So the variable declaration with of is accepted and prints the array value of using for..of loop.But if you use reserved keyword such as in then there will be a syntax error saying SyntaxError: Unexpected token in,var in = ['in'];for(var in in in) {  console.log(in[in]);}⬆ Back to Top64. What is the output of below code?const numbers = [11, 25, 31, 23, 33, 18, 200];numbers.sort();console.log(numbers);1:  [11, 18, 23, 25, 31, 33, 200]2:  [11, 18, 200, 23, 25, 31, 33]3:  [11, 25, 31, 23, 33, 18, 200]4:  Cannot sort numbersAnswerAnswer: 2By default, the sort method sorts elements alphabetically. This is because elemented converted to strings and strings compared in UTF-16 code units order. Hence, you will see the above numbers not sorted as expected. In order to sort numerically just supply a comparator function which handles numeric sorts.const numbers = [11, 25, 31, 23, 33, 18, 200];numbers.sort((a, b) => a - b);console.log(numbers);Note: Sort() method changes the original array.⬆ Back to Top65. What is the output order of below code?setTimeout(() => {console.log('1')}, 0);Promise.resolve('hello').then(() => console.log('2'));console.log('3');1:  1, 2, 32:  1, 3, 23:  3, 1, 24:  3, 2, 1AnswerAnswer: 4When the JavaScript engine parses the above code, the first two statements are asynchronous which will be executed later and third statement is synchronous statement which will be moved to callstack, executed and prints the number 3 in the console. Next, Promise is native in ES6 and it will be moved to Job queue which has high priority than callback queue in the execution order. At last, since setTimeout is part of WebAPI the callback function moved to callback queue and executed. Hence, you will see number 2 printed first followed by 1.⬆ Back to Top66. What is the output of below code?console.log(name);console.log(message());var name = 'John';(function message() {   console.log('Hello John: Welcome');});1:  John, Hello John: Welcome2:  undefined, Hello John, Welcome3:  Reference error: name is not defined, Reference error: message is not defined4:  undefined, Reference error: message is not definedAnswerAnswer: 4IIFE(Immediately Invoked Function Expression) is just like any other function expression which won't be hoisted. Hence, there will be a reference error for message call.The behavior would be the same with below function expression of message1,console.log(name);console.log(message());var name = 'John';var message = function () {   console.log('Hello John: Welcome');});⬆ Back to Top67. What is the output of below code?message()function message() {  console.log(\""Hello\"");}function message() {  console.log(\""Bye\"");}1:  Reference error: message is not defined2:  Hello3:  Bye4:  Compile time errorAnswerAnswer: 3As part of hoisting, initially JavaScript Engine or compiler will store first function in heap memory but later rewrite or replaces with redefined function content.⬆ Back to Top68. What is the output of below code?var currentCity = \""NewYork\"";var changeCurrentCity = function() {  console.log('Current City:', currentCity);  var currentCity = \""Singapore\"";  console.log('Current City:', currentCity);}changeCurrentCity();1:  NewYork, Singapore2:  NewYork, NewYork3:  undefined, Singapore4:  Singapore, SingaporeAnswerAnswer: 3Due to hositing feature, the variables declared with var will have undefined value in the creation phase so the outer variable currentCity will get same undefined value. But after few lines of code JavaScript engine found a new function call(changeCurrentCity()) to update the current city with var re-declaration. Since each function call will create a new execution context, the same variable will have undefined value before the declaration and new value(Singapore) after the declarion. Hence, the value undefined print first followed by new value Singapore in the execution phase.⬆ Back to Top69. What is the output of below code in an order?function second() {\tvar message;  console.log(message);}function first() {\tvar message=\""first\"";  second();  console.log(message);}var message = \""default\"";first();console.log(message);1:  undefined, first, default2:  default, default, default3:  first, first, default4:  undefined, undefined, undefinedAnswerAnswer: 1Each context(global or functional) has it's own variable environment and the callstack of variables in a LIFO order. So you can see the message variable value from second, first functions in an order followed by global context message variable value at the end.⬆ Back to Top70. What is the output of below code?var expressionOne = function functionOne() {  console.log(\""functionOne\"");}functionOne();1:  functionOne is not defined2:  functionOne3:  console.log(\""functionOne\"")4:  undefinedAnswerAnswer: 1The function call functionOne is not going to be part of scope chain and it has it's own execution context with the enclosed variable environment. i.e, It won't be accessed from global context. Hence, there will be an error while invoking the function as functionOne is not defined.⬆ Back to Top71. What is the output of below code?const user = {  name: 'John',  eat() {    console.log(this);    var eatFruit = function() {      console.log(this);    }    eatFruit()  }}user.eat();1:  {name: \""John\"", eat: f}, {name: \""John\"", eat: f}2:  Window {...}, Window {...}3:  {name: \""John\"", eat: f}, undefined4:  {name: \""John\"", eat: f}, Window {...}AnswerAnswer: 4this keyword is dynamic scoped but not lexically scoped . In other words, it doesn't matter where this has been written but how it has been invoked really matter. In the above code snippet, the user object invokes eat function so this keyword refers to user object but eatFruit has been invoked by eat function and this will have default Window object.The above pit fall fixed by three ways,In ES6, the arrow function will make this keyword as lexically scoped. Since the surrounding object of this object is user object, the eatFruit function will contain user object for this object.const user = {  name: 'John',  eat() {    console.log(this);    var eatFruit = () => {      console.log(this);    }    eatFruit()  }}user.eat();The next two solutions have been used before ES6 introduced.It is possible create a reference of this into a separate variable and use that new variable inplace of this keyword inside eatFruit function. This is a common practice in jQuery and AngularJS before ES6 introduced.const user = {  name: 'John',  eat() {    console.log(this);    var self = this;    var eatFruit = () => {      console.log(self);    }    eatFruit()  }}user.eat();The eatFruit function can bind explicitly with this keyword where it refers Window object.const user = {  name: 'John',  eat() {    console.log(this);    var eatFruit = function() {      console.log(this);    }    return eatFruit.bind(this)  }}user.eat()();⬆ Back to Top72. What is the output of below code?let message = 'Hello World!';message[0] = 'J';console.log(message)let name = 'John';name = name + ' Smith';console.log(name);1:  Jello World!, John Smith2:  Jello World!, John3:  Hello World!, John Smith4:  Hello World!, JohnAnswerAnswer: 3In JavaScript, primitives are immutable i.e. there is no way to change a primitive value once it gets created. So when you try to update the string's first character, there is no change in the string value and prints the same initial value Hello World!. Whereas in the later example, the concatenated value is re-assigned to the same variable which will result into creation of new memory block with the reference pointing to John Smith value and the old memory block value(John) will be garbage collected.⬆ Back to Top73. What is the output of below code?let user1 = {       name : 'Jacob',      age : 28    };    let user2 = {          name : 'Jacob',      age : 28    };    console.log(user1 === user2);1:  True2:  False3:  Compile time errorAnswerAnswer: 2In JavaScript, the variables such as objects, arrays and functions comes under pass by reference. When you try to compare two objects with same content, it is going to compare memory address or reference of those variables. These variables always create separate memory blocks hence the comparison is always going to return false value.⬆ Back to Top74. What is the output of below code?function greeting() {  setTimeout(function() {    console.log(message);  }, 5000);  const message = \""Hello, Good morning\"";}greeting();1:  Undefined2:  Reference error:3:  Hello, Good morning4:  nullAnswerAnswer: 3The variable message is still treated as closure(since it has been used in inner function) eventhough it has been declared after setTimeout function. The function with in setTimeout function will be sent to WebAPI and the variable declaration executed with in 5 seconds with the assigned value. Hence, the text declared for the variable will be displayed.⬆ Back to Top75. What is the output of below code?const a = new Number(10);const b = 10;console.log(a === b);1:  False2:  TrueAnswerAnswer: 1Eventhough both variables a and b refer a number value, the first declaration is based on constructor function and the type of the variable is going to be object type. Whereas the second declaration is primitive assignment with a number and the type is number type. Hence, the equality operator === will output false value.⬆ Back to Top76. What is the type of below function?function add(a, b) {  console.log(\""The input arguments are: \"", a, b);  return a + b;}1:  Pure function2:  Impure functionAnswerAnswer: 2Eventhough the above function returns the same result for the same arguments(input) that are passed in the function, the console.log() statement causes a function to have side effects because it affects the state of an external code. i.e, the console object's state and depends on it to perform the job. Hence, the above function considered as impure function.⬆ Back to Top77. What is the output of below code?const promiseOne = new Promise((resolve, reject) => setTimeout(resolve, 4000));const promiseTwo = new Promise((resolve, reject) => setTimeout(reject, 4000));Promise.all([promiseOne, promiseTwo]).then(data => console.log(data));1:  [{status: \""fullfilled\"", value: undefined}, {status: \""rejected\"", reason: undefined}]2:  [{status: \""fullfilled\"", value: undefined}, Uncaught(in promise)]3:  Uncaught (in promise)4:  [Uncaught(in promise), Uncaught(in promise)]AnswerAnswer: 3The above promises settled at the same time but one of them resolved and other one rejected. When you use .all method on these promises, the result will be short circuted by throwing an error due to rejection in second promise. But If you use .allSettled method then result of both the promises will be returned irrespective of resolved or rejected promise status without throwing any error.Promise.allSettled([promiseOne, promiseTwo]).then(data => console.log(data)); ⬆ Back to Top78. What is the output of below code?try {  setTimeout(() => {    console.log('try block');    throw new Error(`An exception is thrown`)  }, 1000);} catch(err) {  console.log('Error: ', err);}1:  try block, Error: An exception is thrown2:  Error: An exception is thrown3:  try block, Uncaught Error: Exception is thrown4:  Uncaught Error: Exception is thrownAnswerAnswer: 3If you put setTimeout and setInterval methods inside the try clause and an exception is thrown, the catch clause will not catch any of them. This is because the try...catch statement works synchronously, and the function in the above code is executed asynchronously after a certain period of time. Hence, you will see runtime exception without catching the error. To resolve this issue, you have to put the try...catch block inside the function as below,setTimeout(() => {   try {      console.log('try block');      throw new Error(`An exception is thrown`)   } catch(err) {      console.log('Error: ', err);   }    }, 1000);You can use .catch() function in promises to avoid these issues with asynchronous code. ⬆ Back to Top79. What is the output of below code?let a = 10;if(true){  let a = 20;  console.log(a, \""inside\"");}console.log(a, \""outside\"");1:  20, \""inside\"" and 20, \""outside\""2:  20, \""inside\"" and 10, \""outside\""3:  10, \""inside\"" and 10, \""outside\""4:  10, \""inside\"" and 20, \""outside\""AnswerAnswer: 2The variable \""a\"" declared inside \""if\"" has block scope and does not affect the value of the outer \""a\"" variable. ⬆ Back to Top80. What is the output of below code?let arr = [1,2,3,4,5,-6,7];arr.length = 0;console.log(arr);1:  02:  Undefined3:  null4:  [ ]AnswerAnswer: 4The length of the array 'arr' has been set to 0, so the array becomes empty. ⬆ Back to TopDisclaimerThe questions provided in this repository are the summary of frequently asked questions across numerous companies. We cannot guarantee that these questions will actually be asked during your interview process, nor should you focus on memorizing all of them. The primary purpose is for you to get a sense of what some companies might ask — do not get discouraged if you don't know the answer to all of them ⁠— that is ok!Good luck with your interview 😊"
54,54,BlackAmda/QueenAmdi,https://github.com/BlackAmda/QueenAmdi/blob/master/README.md,JavaScript,"QUEEN AMDI💃🏻❤️ - A Javascript WhatsApp User BotA WhatsApp based third party application that provide many services with a real-time automated conversational experience.Queen Amdi is an user bot for WhatsApp that allowing you to get done so many tasks. This project mainly focusing on make user's work easy. This project coded with Javascript and Docker. And using Baileys as the WA Web API. Developer or Team members are not responsible for your usage mistakes and not using wisely. Also, you have no authorities do any modifications to this project. Enjoy!🎈Visit our official Queen Amdi 4.0v [Multi-Device] website for deploy instructions» Official WebsiteYou can join our Beta Testing WhatsApp Group by this invite link» Join beta test groupFor heroku deployers: » See heroku deploy instructions» See other deploy methods» Queen Amdi announcement group🐝 Queen Amdi Team - A.N.Tech [ Since 2016 ]Achintha BandaraFounder & Developer[Black Amda]Sasmitha AshinsanaCo-Admin/DeveloperLil LuziUser SupporterKapayaGroup ManagementMr.DinaGraphic DesignerJokaTamahBug TesterZeusGroup ManagementLicenseThis project is protected by the GNU General Public License v3.0.Do not edit copyright messages!DisclaimerWhatsApp name, its variations and logo are registered trademarks on Facebook. We have nothing to do with the registered trademark."
55,55,bloominstituteoftechnology/DOM-II,https://github.com/bloominstituteoftechnology/DOM-II/blob/main/README.md,JavaScript,"DOM IIProject DescriptionFun Bus wants you to make their site more interactive. They are relying on you to provide 10 unique events to enhance their site. Explore the many events available to you by using the MDN events reference.Git Setup Create a forked copy of this project. Clone your OWN version of the repository. Implement the project on the main branch, committing changes regularly. Push commits: git push origin main.Running the projectThis project uses Webpack and Babel. Inside src/index.html you will notice there is no script tag linking the JavaScript, nor a link tag linking the styles. When the project starts, Webpack transcompiles the LESS into CSS, and injects the JavaScript and the styles into the HTML.Do not move or rename any files in this project. The website's source files live inside the src folder. Do not make changes to any files outside of the src folder, unless it's new dependecies declared in the package.json due to installing NPM libraries (E.G. npm i lodash). Run npm install to download the project's dependencies. Run npm start to launch the website on http://localhost:3000.MVPCreate listeners of 10 types of events Using your index.js file, create event listeners of at least 10 different types. You must Use your creativity to make the Fun Bus site more interactive. For example you could change colors, animate objects, add DOM elements, remove them, etc. Here are some event types you could try to use: mouseover keydown wheel load focus resize scroll select dblclick drag / dropNote: Drag and drop is a bit more advanced than the others. It's not actually a single type of event but several types that need to work together.Use preventDefault Find a usecase for preventDefault. For example, you could prevent a link from navigating when clicked, or to navigate somewhere surprising.Submission Format Submit project using Codegrade, as per the instructions in the learning platform."
56,56,learn-co-curriculum/phase-1-javascript-variables-lab,https://github.com/learn-co-curriculum/phase-1-javascript-variables-lab/blob/master/README.md,JavaScript,"Review: Variables LabLearning GoalsPractice using const and let to declare variables in JavaScriptInstructionsIn this lab we'll practice declaring and assigning values to variables. We'llalso go over how to read the test document. Understanding how to read the testscan be a valuable tool in figuring out exactly what you'll need to do tocomplete the lab.TestsWhen we want to run an experiment, we need to develop a hypothesis and we needto test it. In programming, we run tests to verify that programs behave the waywe think they do. Tests help us identify bugs and judge how healthy ourapplications are.We use tests to describe the program's behavior, just as you would in aprofessional coding environment, and we also use them as teaching tools. You arein charge of getting the tests to pass.StructureThe structure of this lab — where its files and folders are located— looks roughly like the following:├── CONTRIBUTING.md├── LICENSE.md├── README.md├── index.js├── node_modules/├── package.json└── test    └── indexTest.jsAll labs will more or less have the same structure. (And non-lab lessons, forthat matter, will still have CONTRIBUTING.md, LICENSE.md, and README.md files.)Code AlongThis lesson is set up as a code-along, so you'll first need to fork andclone it to your local environment.Quick Review:1. Click the Octocat icon in the upper right of this page. This willbring you to GitHub. Click the Fork button. Verify that your GitHub usernameis showing in the Owner dropdown, then click the Createfork button.2. Once your fork is created, click the Code button in GitHub, make sureSSH is selected, and copy the provided git URL info.3. Make sure you're in Development/code/phase-1 (or wherever you'restoring your code for the course) and clone the repo to your local machine withgit clone followed by the git URL you copied.$ git clone git@github.com:your-github-username/phase-1-javascript-variables-lab.git4. The previous command will create a folder in the phase-1 foldercontaining your fork of this lab's repository. cd into the repository that youjust cloned down in the terminal, then run code . to open the files in VisualStudio Code.$ cd phase-1-javascript-variables-lab$ code .Open up index.js in your code editor; you should see, well, nothing. We'll fixthat soon.Now open up test/indexTest.js. Hey, there's something! What's all of thisstuff doing?Note: The test/indexTest.js has great info that we want to look at, but donot edit this file otherwise you may have extra difficulty passing this lab.A few lines down in the test/indexTest.js file you will see:describe('index.js', function () {  // there's stuff in here, too});describe is a function provided by our test library, Mocha, and it's used tohold our tests. After the word describe is information about our tests. Testsare used as a way to document the behavior of a function to developers. Forexample, the next word describe is followed by the word companyName. Herethe test is telling us that the tests that come afterwards will be aboutcompanyName. Then comes the word it, where you see the following:it('is set as Scuber', function () {  // tests are here});This is telling us that the companyName should be set to Scuber. Finally,filling in the missing part of the it code, we see:it('is set as Scuber', function () {  expect(companyName).to.equal('Scuber');});This example shows that the test expects companyName to equal Scuber. Thatexpect and to.equal are essentially doing the same thing as companyName == 'Scuber'. In other words, expect(companyName).to.equal('Scuber') is runningcode that will have this first test pass if companyName equals Scuber andfail if it does not.Don't worry too much yet if it's hard to understand what is happening inside ofthe test/indexTest.js file. But it's a good idea to open up the file, andgather the information that you can. We will also provide instructions in theREADME.md file that will allow you to complete the lab.Running the TestsStart by installing the test dependencies by running npm install in theterminal, then run npm test to run the tests. You should now see the currentstatus of the tests in the terminal. For the moment, all of the tests fail.Let's figure out how to get one of them passing! (The rest will be up to you.)To get our first test to pass, we can open up our index.js file, and write thefollowing:let companyName = 'Scuber';If you run npm test again, you'll see that our first test is now passing.However, the second test, which is also about companyName, is not yet passing.It's not passing because it expects companyName to be declared using adifferent keyword than the let keyword — it needs a keyword that is used forvariables that can't be changed...Continue to work through the problems below. Keep in mind the general workflowfor a lab:Run npm test.Read the errors; vocalize what they're asking you to do.Write code; repeat steps 1 and 2 often until a test passes.Repeat as needed until all the tests are passing.Working Through the ProblemsIf you open up test/indexTest.js, you will see the tasks in front of you:companyName — Inside the test/indexTest.js file, look at thedescribe function call for the companyName variable. The two it functioncalls inside this describe tell us the features of companyName we need tocreate. To review, in the first it function call, it says that it(companyName) is set as Scuber. In the next line, you can see that the testchecks to make sure this occurs by seeing if companyName equals Scuber. Sothis means that you need to go to your index.js file and declare a variablenamed companyName and set it equal to Scuber.In the second it function call for companyName, it says it is defined as a const. The next line of code tests this. So you need to make sure that youare using the correct type of variable declaration such that attempting toreassign the variable throws an error.mostProfitableNeighborhood and companyCeo — Here we are getting morepractice with declaring variables. Read the tests to see how you need to codethese two variables to get the remaining tests passing.Submitting Your Work to CanvasOnce you've got all the tests passing, it's time to push your completed code upto GitHub and submit it to Canvas using CodeGrade. We'll do a quick review ofhow to do that below, but you may want to review the full process in theCompleting and Submitting Assignments with CodeGradelesson. You'll be going through this process for every lab you do in thisprogram!Let's review the process. First, you need to \""stage\"" your changes using the git add command:$ git add index.jsor$ git add .Recall that the . shortcut will stage all files that have changes. In thiscase there's only one so either command will work.Next, you need to \""commit\"" your changes, which basically saves a record of thechanges you've made. Don't forget to use the -m flag and include a commitmessage! Use the message shown below or choose your own:$ git commit -m \""complete lab\""Finally, push your changes up to your GitHub account (your fork of this lab):$ git pushIf you go back to your repo in GitHub and refresh the page, you should now see anew commit with your commit message.The final step is to submit your work to Canvas:Scroll to the bottom of this lesson page in Canvas and click the buttonlabeled \""Load Review: Variables Lab in a new window\"".In the CodeGrade window that opens, click \""Create Submission\"". You should nowsee a list of your repositories.Find the repo for this lab and click Connect.When you get the message that your repo has been connected, click on theembedded link, then the \""AutoTest\"" tab to watch your progress. Once the testshave finished running, you should see the green checkmark in the \""Pass\""column, indicating that you've successfully completed the lab.ResourcesMDN: LetMDN: Const"
57,57,mermaid-js/mermaid,https://github.com/mermaid-js/mermaid/blob/develop/README.md,JavaScript,"MermaidGenerate diagrams from markdown-like text.  Live Editor! 📖 Documentation | 🚀 Getting Started | 🌐 CDN | 🙌 Join Us简体中文🏆 Mermaid was nominated and won the JS Open Source Awards (2019) in the category \""The most exciting use of technology\""!!!Thanks to all involved, people committing pull requests, people answering questions! 🙏AboutMermaid is a JavaScript-based diagramming and charting tool that uses Markdown-inspired text definitions and a renderer to create and modify complex diagrams. The main purpose of Mermaid is to help documentation catch up with development.Doc-Rot is a Catch-22 that Mermaid helps to solve.Diagramming and documentation costs precious developer time and gets outdated quickly.But not having diagrams or docs ruins productivity and hurts organizational learning.Mermaid addresses this problem by enabling users to create easily modifiable diagrams. It can also be made part of production scripts (and other pieces of code).Mermaid allows even non-programmers to easily create detailed diagrams through the Mermaid Live Editor.Tutorials has video tutorials.Use Mermaid with your favorite applications, check out the list of Integrations and Usages of Mermaid.You can also use Mermaid within GitHub as well many of your other favorite applications—check out the list of Integrations and Usages of Mermaid.For a more detailed introduction to Mermaid and some of its more basic uses, look to the Beginner's Guide, Usage and Tutorials.In our release process we rely heavily on visual regression tests using applitools. Applitools is a great service which has been easy to use and integrate with our tests.ExamplesThe following are some examples of the diagrams, charts and graphs that can be made using Mermaid. Click here to jump into the text syntax.Flowchart [docs - live editor]flowchart LRA[Hard] -->|Text| B(Round)B --> C{Decision}C -->|One| D[Result 1]C -->|Two| E[Result 2]            flowchart LRA[Hard] -->|Text| B(Round)B --> C{Decision}C -->|One| D[Result 1]C -->|Two| E[Result 2]                  Sequence diagram [docs - live editor]sequenceDiagramAlice->>John: Hello John, how are you?loop Healthcheck    John->>John: Fight against hypochondriaendNote right of John: Rational thoughts!John-->>Alice: Great!John->>Bob: How about you?Bob-->>John: Jolly good!            sequenceDiagramAlice->>John: Hello John, how are you?loop Healthcheck    John->>John: Fight against hypochondriaendNote right of John: Rational thoughts!John-->>Alice: Great!John->>Bob: How about you?Bob-->>John: Jolly good!                  Gantt chart [docs - live editor]gantt    section Section    Completed :done,    des1, 2014-01-06,2014-01-08    Active        :active,  des2, 2014-01-07, 3d    Parallel 1   :         des3, after des1, 1d    Parallel 2   :         des4, after des1, 1d    Parallel 3   :         des5, after des3, 1d    Parallel 4   :         des6, after des4, 1d            gantt    section Section    Completed :done,    des1, 2014-01-06,2014-01-08    Active        :active,  des2, 2014-01-07, 3d    Parallel 1   :         des3, after des1, 1d    Parallel 2   :         des4, after des1, 1d    Parallel 3   :         des5, after des3, 1d    Parallel 4   :         des6, after des4, 1d                  Class diagram [docs - live editor]classDiagramClass01 <|-- AveryLongClass : Cool<<Interface>> Class01Class09 --> C2 : Where am I?Class09 --* C3Class09 --|> Class07Class07 : equals()Class07 : Object[] elementDataClass01 : size()Class01 : int chimpClass01 : int gorillaclass Class10 {  <<service>>  int id  size()}namespace Namespace01 {  class Class11  class Class12 {    int id    size()  }}            classDiagramClass01 <|-- AveryLongClass : Cool<<Interface>> Class01Class09 --> C2 : Where am I?Class09 --* C3Class09 --|> Class07Class07 : equals()Class07 : Object[] elementDataClass01 : size()Class01 : int chimpClass01 : int gorillaclass Class10 {  <<service>>  int id  size()}namespace Namespace01 {  class Class11  class Class12 {    int id    size()  }}                  State diagram [docs - live editor]stateDiagram-v2[*] --> StillStill --> [*]Still --> MovingMoving --> StillMoving --> CrashCrash --> [*]            stateDiagram-v2[*] --> StillStill --> [*]Still --> MovingMoving --> StillMoving --> CrashCrash --> [*]                  Pie chart [docs - live editor]pie\""Dogs\"" : 386\""Cats\"" : 85.9\""Rats\"" : 15            pie\""Dogs\"" : 386\""Cats\"" : 85.9\""Rats\"" : 15                  Git graph [experimental - live editor]Bar chart (using gantt chart) [docs - live editor]gantt    title Git Issues - days since last update    dateFormat  X    axisFormat %s    section Issue19062    71   : 0, 71    section Issue19401    36   : 0, 36    section Issue193    34   : 0, 34    section Issue7441    9    : 0, 9    section Issue1300    5    : 0, 5            gantt    title Git Issues - days since last update    dateFormat  X    axisFormat %s    section Issue19062    71   : 0, 71    section Issue19401    36   : 0, 36    section Issue193    34   : 0, 34    section Issue7441    9    : 0, 9    section Issue1300    5    : 0, 5                  User Journey diagram [docs - live editor]  journey    title My working day    section Go to work      Make tea: 5: Me      Go upstairs: 3: Me      Do work: 1: Me, Cat    section Go home      Go downstairs: 5: Me      Sit down: 3: Me              journey    title My working day    section Go to work      Make tea: 5: Me      Go upstairs: 3: Me      Do work: 1: Me, Cat    section Go home      Go downstairs: 5: Me      Sit down: 3: Me                  C4 diagram [docs]C4Contexttitle System Context diagram for Internet Banking SystemPerson(customerA, \""Banking Customer A\"", \""A customer of the bank, with personal bank accounts.\"")Person(customerB, \""Banking Customer B\"")Person_Ext(customerC, \""Banking Customer C\"")System(SystemAA, \""Internet Banking System\"", \""Allows customers to view information about their bank accounts, and make payments.\"")Person(customerD, \""Banking Customer D\"", \""A customer of the bank, <br/> with personal bank accounts.\"")Enterprise_Boundary(b1, \""BankBoundary\"") {  SystemDb_Ext(SystemE, \""Mainframe Banking System\"", \""Stores all of the core banking information about customers, accounts, transactions, etc.\"")  System_Boundary(b2, \""BankBoundary2\"") {    System(SystemA, \""Banking System A\"")    System(SystemB, \""Banking System B\"", \""A system of the bank, with personal bank accounts.\"")  }  System_Ext(SystemC, \""E-mail system\"", \""The internal Microsoft Exchange e-mail system.\"")  SystemDb(SystemD, \""Banking System D Database\"", \""A system of the bank, with personal bank accounts.\"")  Boundary(b3, \""BankBoundary3\"", \""boundary\"") {    SystemQueue(SystemF, \""Banking System F Queue\"", \""A system of the bank, with personal bank accounts.\"")    SystemQueue_Ext(SystemG, \""Banking System G Queue\"", \""A system of the bank, with personal bank accounts.\"")  }}BiRel(customerA, SystemAA, \""Uses\"")BiRel(SystemAA, SystemE, \""Uses\"")Rel(SystemAA, SystemC, \""Sends e-mails\"", \""SMTP\"")Rel(SystemC, customerA, \""Sends e-mails to\"")            C4Contexttitle System Context diagram for Internet Banking SystemPerson(customerA, \""Banking Customer A\"", \""A customer of the bank, with personal bank accounts.\"")Person(customerB, \""Banking Customer B\"")Person_Ext(customerC, \""Banking Customer C\"")System(SystemAA, \""Internet Banking System\"", \""Allows customers to view information about their bank accounts, and make payments.\"")Person(customerD, \""Banking Customer D\"", \""A customer of the bank, <br/> with personal bank accounts.\"")Enterprise_Boundary(b1, \""BankBoundary\"") {  SystemDb_Ext(SystemE, \""Mainframe Banking System\"", \""Stores all of the core banking information about customers, accounts, transactions, etc.\"")  System_Boundary(b2, \""BankBoundary2\"") {    System(SystemA, \""Banking System A\"")    System(SystemB, \""Banking System B\"", \""A system of the bank, with personal bank accounts.\"")  }  System_Ext(SystemC, \""E-mail system\"", \""The internal Microsoft Exchange e-mail system.\"")  SystemDb(SystemD, \""Banking System D Database\"", \""A system of the bank, with personal bank accounts.\"")  Boundary(b3, \""BankBoundary3\"", \""boundary\"") {    SystemQueue(SystemF, \""Banking System F Queue\"", \""A system of the bank, with personal bank accounts.\"")    SystemQueue_Ext(SystemG, \""Banking System G Queue\"", \""A system of the bank, with personal bank accounts.\"")  }}BiRel(customerA, SystemAA, \""Uses\"")BiRel(SystemAA, SystemE, \""Uses\"")Rel(SystemAA, SystemC, \""Sends e-mails\"", \""SMTP\"")Rel(SystemC, customerA, \""Sends e-mails to\"")                  ReleaseFor those who have the permission to do so:Update version number in package.json.npm publishThe above command generates files into the dist folder and publishes them to https://www.npmjs.com.Related projectsCommand Line InterfaceLive EditorHTTP ServerContributors   Mermaid is a growing community and is always accepting new contributors. There's a lot of different ways to help out and we're always looking for extra hands! Look at this issue if you want to know where to start helping out.Detailed information about how to contribute can be found in the contribution guideSecurity and safe diagramsFor public sites, it can be precarious to retrieve text from users on the internet, storing that content for presentation in a browser at a later stage. The reason is that the user content can contain embedded malicious scripts that will run when the data is presented. For Mermaid this is a risk, specially as mermaid diagrams contain many characters that are used in html which makes the standard sanitation unusable as it also breaks the diagrams. We still make an effort to sanitize the incoming code and keep refining the process but it is hard to guarantee that there are no loop holes.As an extra level of security for sites with external users we are happy to introduce a new security level in which the diagram is rendered in a sandboxed iframe preventing javascript in the code from being executed. This is a great step forward for better security.Unfortunately you can not have a cake and eat it at the same time which in this case means that some of the interactive functionality gets blocked along with the possible malicious code.Reporting vulnerabilitiesTo report a vulnerability, please e-mail security@mermaid.live with a description of the issue, the steps you took to create the issue, affected versions, and if known, mitigations for the issue.AppreciationA quick note from Knut Sveidqvist:Many thanks to the d3 and dagre-d3 projects for providing the graphical layout and drawing libraries!Thanks also to the js-sequence-diagram project for usage of the grammar for the sequence diagrams. Thanks to Jessica Peter for inspiration and starting point for gantt rendering.Thank you to Tyler Long who has been a collaborator since April 2017.Thank you to the ever-growing list of contributors that brought the project this far!Mermaid was created by Knut Sveidqvist for easier documentation."
58,58,JS-Challenges/recursion-prompts,https://github.com/JS-Challenges/recursion-prompts/blob/master/README.md,JavaScript,"Recursion PromptsWhat is this?This is a repository of toy problems to be solved using recursion and JavaScript. While the concept of recursion may not be difficult to grasp, the only way to improve at thinking recursively is by practice. If you need practice, then maybe this repo is for you.A few guidelines:Please refrain from sharing solutions. As crazy as it sounds, giving someone the answer doesn't help them. Instead, give them a question that encourages them to think differently.Q: Why does my function keep exceeding the call stack?A: What's your base case?Don't be afraid to pseudocode your algorithm before writing actual code.Pseudocode helps you focus on the algorithm instead of getting distracted by syntax.This repo requires each function call itself recursively and pays no attention to whether inner recursive functions are defined and called.While both are valid uses of recursion, there are important lessons to learn by following the method this repo enforces. Defining inner functions and calling them recursively relies on side effects, while following the more pure approach requires an understanding of how values are passed through the call stack.This repo restricts expanding the number of parameters a function accepts.Expanding the number of parameters is a valid approach, but has been restricted here to emphasize certain lessons while learning recursion.An attempt was made to order prompts by difficulty, but they don't have to be solved in any particular order.Feel free to make pull requests or open issues regarding bugs or suggestions.Watch, Star, and Fork this repo. You know you want to.How to use this repo:Fork this repo and clone it to your local machineOpen SpecRunner.html in your web browserCode your solutions in recursion.jsReview the tests in spec/part1.js and spec/part2.js as necessarySave your work and refresh your browser to check for passing/failing testsWhat is recursion?Recursion is when a function calls itself until it doesn't. --not helpful personIs it a true definition? Mostly. Recursion is when a function calls itself. A recursive function can call itself forever, but that's generally not preferred. It's often a good idea to include a condition in the function definition that allows it to stop calling itself. This condition is referred to as a base case. As a general rule, recursion shouldn't be utilized without an accompanying base case unless an infinite operation is desired. This leaves us with two fundamental conditions every recursive function should include:A base caseA recursive caseWhat does this all mean? Let's consider a silly example:function stepsToZero(n) {  if (n === 0) { /* base case */    return 'Reached zero';  } else { /* recursive case */    console.log(n + ' is not zero');    return stepsToZero(n-1);  }}This function doesn't do anything meaningful, but hopefully it demonstrates the fundamental idea behind recursion. Simply put, recursion provides us a looping or repeating mechanism. It repeats an operation until a base condition is met. Let's step through an invocation of the above function to see how it evaluates.Invoke stepsToZero(n) where n is the number 2Is 2 zero?No, print message to console that 2 is not zeroInvoke stepsToZero(n-1) where n-1 evaluates to 1Every recursive call adds a new invocation to the stack on top of the previous invocationIs 1 zero?No, print message that 1 is not zeroInvoke stepsToZero(n-1) where n-1 evaluates to 0Is 0 zero?Yes, return message that reached zeroThe above return pops the current invocation off the stackResume the invocation from step 4 where it left off (in-between steps 6 and 7)Return out of the invocation from step 4Resume the initial invocation from step 1 where it left off (in-between steps 3 and 4)Return out of the initial invocationNote that the value returned from the base case (step 9) gets returned to the previous invocation (step 4) on the stack. Step 4's invocation takes that value and returns it to the invocation that preceded it (step 1). Once the initial invocation is reached, it returns the value to whatever invoked it. Through these steps, you can watch the call stack build up and once the base case is reached, the return value is passed back down as each invocation pops off the stack.Due to the way the execution stack operates, it's as if each function invocation pauses in time when a recursive call is made. The function that pauses before a recursive call will resume once the recursive call completes. If you've seen the movie Inception, this model may sound reminiscent to when the characters enter a person's dreams and time slowed. The difference is time doesn't actually slow with recursive invocations; rather, it's a matter of order of operations. If a new invocation enters the execution stack, that invocation must complete before the previous can continue and complete.Why use recursion?Recursion can be elegant, but it can also be dangerous. In some cases, recursion feels like a more natural and readable solution; in others, it ends up being contrived. In most cases, recursion can be avoided entirely and sometimes should in order to minimize the possibility of exceeding the call stack and crashing your app. But keep in mind that code readability is important. If a recursive solution reads more naturally, then it may be the best solution for the given problem.Recursion isn't unique to any one programming language. As a software engineer, you will encounter recursion and it's important to understand what's happening and how to work with it. It's also important to understand why someone might use it. Recursion is often used when the depth of a thing is unknown or every element of a thing needs to be touched. For example, you might use recursion if you want to find all DOM elements with a specific class name. You may not know how deep the DOM goes and need to touch every element so that none are missed. The same can be said for traversing any structure where all possible paths need to be considered and investigated.Divide and ConquerRecursion is often used in divide and conquer algorithms where problems can be divided into similar subproblems and conquered individually. Consider traversing a tree structure. Each branch may have its own \""children\"" branches. Every branch is essentially just another tree which means, as long as child trees are found, we can recurse on each child."
59,59,whitehatjr/Monkey-Chunky,https://github.com/whitehatjr/Monkey-Chunky/blob/master/README.md,JavaScript,Monkey Chunky AppMonkey Chunky App is designed to help early stage readers practice reading words. The user can enter any word and the app will break it down into phonic chunks. User can tap on the phonic chunks to hear the corresponding sound of the phones that make the word.
60,60,learn-co-curriculum/phase-1-scope-lab,https://github.com/learn-co-curriculum/phase-1-scope-lab/blob/master/README.md,JavaScript,"Scope LabLearning GoalsUnderstand how functions determine scope in JavaScriptIntroductionScuber's drivers are beginning to take down some notes about their customers.Use your knowledge of scope to access and change some of these variables.InstructionsA word of warning. In this lab, you will practice doing some bad things. Forexample, we'll ask you to declare variables in global scope, and write functionsthat break down. You'll also need to use var to declare all variables exceptwhen specifically instructed otherwise. We do this because, by testing thelimits and exposing the underbelly of a language, you can better understand itand know what to avoid in the future.Fork and clone this lab into your local environment. Navigate into itsdirectory in the terminal, then run code . to open the files in Visual StudioCode.Ok, these are your tasks:customerName: Declare a variable in global scope called customerName usingthe var keyword and assign it the value 'bob'.upperCaseCustomerName(): Write a function that accesses that globalcustomerName variable, and uppercases it.setBestCustomer(): Write a function that when called, declares a variablecalled bestCustomer in global scope and assigns it to be 'not bob'. (PoorBob.) Also, poor us, declaring a global variable from inside a function isone of those things we would never want to do normally, but is good for us toexplore right now.overwriteBestCustomer(): See the consequences of declaring a variable inglobal scope, by writing a new function called overwriteBestCustomer() thatchanges that bestCustomer variable to 'maybe bob'.leastFavoriteCustomer and changeLeastFavoriteCustomer(): Now declare aconstant (using the const keyword) in global scope calledleastFavoriteCustomer; be sure to assign it some initial value. Finally,write a function called changeLeastFavoriteCustomer() that attempts tochange that constant - notice what JavaScript does when you try to change theconstant.When you're done, remember to commit and push your changes up to GitHub, thensubmit your work to Canvas using CodeGrade."
61,61,ironhack-labs/lab-mongoose-recipes,https://github.com/ironhack-labs/lab-mongoose-recipes/blob/master/README.md,JavaScript,"Mongoose RecipesIntroductionWe've learned how to use Mongoose to create Schemas and then interact with our MongoDB database. In the following exercise, we will practice how to implement this by creating awesome recipes.RequirementsFork this repoClone this repoSubmissionUpon completion, run the following commands:git add .git commit -m \""Completed lab\""git push origin masterCreate Pull Request so your TAs can check up your work.InstructionsIteration 0: Initial setupTo run the application, the first thing you have to do is install all of its dependencies. Run the following command:npm installIteration 1 - Recipe SchemaCreate a Recipe model inside of the file /models/Recipe.model.js. The schema should have the following fields:title - Type String. It should be required and unique.level - Type String. Can be one of the following values: Easy Peasy - Amateur Chef - UltraPro Chef (remember the enum validator 😉).ingredients - Type Array of Strings (represented as [ String ]).cuisine - Type String. Should be required.dishType - Type String. Possible values: breakfast, main_course, soup, snack, drink, dessert or other.image - Type String. Default value: \""https://images.media-allrecipes.com/images/75131.jpg\"".duration - Type Number. The minimum value should be 0.creator - Type String.created - Type Date. By default, today.Iteration 2 - Create a recipeIn the index.js, we first connect to the database using mongoose.connect() and following the connection we call the method Recipe.deleteMany() to remove any existing documents from the recipes collection:// ...mongoose  .connect(MONGODB_URI)  .then(x => {    console.log(`Connected to the database: \""${x.connection.name}\""`);    // Before adding any recipes to the database, let's remove all existing ones    return Recipe.deleteMany();  })// ...Then, you should add a new recipe document to the database by calling the Model.create method and passing it the recipe details as an object. After inserting the recipe, you should console.log the title of the recipe.You can use MongoDB Compass to double-check that everything is working as intended.To run your code, remember you should use:node index.jsIteration 3 - Insert multiple recipesWe are importing an array of recipes from the data.json file. Using the Model.insertMany method, you should add the entire array to the database. After inserting the documents, print the title of each recipe to the console.Tip: Follow the same tip as in the previous step.Iteration 4 - Update recipeNow you should have six different recipes in the database, but there was a mistake in one of them. The Rigatoni alla Genovese does not take that long. You should update the duration field and set it to 100. You might want to use the Model.findOneAndUpdate method. After updating it, print a success message!Iteration 5 - Remove a recipeOh oh! The Carrot Cake is no longer available, so we need to remove it from the database. Using the Model.deleteOne method, remove that recipe from the database and display a success message after doing it!Iteration 6 - Close the DatabaseAs the last step, you need to close the database. Otherwise, the connection will stay open until the Node.js process dies. Pay attention to the asynchronicity of the operation. You should only close the connection after everything is done! 😉Happy coding! ❤️FAQs  I am stuck and don't know how to solve the problem or where to start. What should I do?  If you are stuck in your code and don't know how to solve the problem or where to start, you should take a step back and try to form a clear question about the specific issue you are facing. This will help you narrow down the problem and come up with potential solutions.For example, is it a concept that you don't understand, or are you receiving an error message that you don't know how to fix? It is usually helpful to try to state the problem as clearly as possible, including any error messages you are receiving. This can help you communicate the issue to others and potentially get help from classmates or online resources.Once you have a clear understanding of the problem, you will be able to start working toward the solution.  Back to top  How to use then() and catch() with Promises?  When working with Promises or a function that returns a promise, you can attach the .then() method to handle the resolved value and a catch() method to handle the possible rejection value.Here is an example of how to use .then() and .catch() to handle a simple promise:myPromise  .then((result) => {    console.log(result);  })  .catch((error) => {    console.log(error);  })Here is an example of using .then() and .catch() to handle a promise returned by a function/method:someAPI.getData()  .then((result) => {    console.log(result);  })  .catch((error) => {    console.log(error);  })  If you are trying to execute multiple promises in a sequence, you can do so by returning a promise from a .then() block. Example:someAPI.getData()    .then((result1) => {        console.log(result1        return someAPI.getData( // Return another pending promise    .then((result2) => { // Handle the returned promise        console.log(result2    })    .catch((error) => {        console.log(error    })The first line someAPI.getData() initiates an asynchronous operation, which returns a promise. The .then() method is then called on the promise to handle the resolved value.The first then() returns another promise with another call to someAPI.getData(), which allows to chain another then() function that handles the second resolved value, logging it to the console.  Back to top  How to use async function and await?  You create an asynchronous function by using the async keyword before the function definition.An async function allows you to use the await keyword inside the function body to wait for a promise to resolve.When using an async function to handle asynchronous code (e.g. API call) that may potentially throw an error, we have to add a try/catch block to be able to handle any potential errors.Syntaxasync function doSomething() {  try {    // Code that will be executed asynchronously    // that might throw an error  }  catch (error) {    // Handle the error  }}  Using await inside an async functionHere is an example of using await inside of an async function to await for a promise to resolve:async function getData() {  try {    let response = await fetch('https://api.github.com/search/repositories?q=js');    let data = await response.json();    console.log(data);  }  catch (error) {    // error handling  } }In the above example, the first await is used to wait for the promise returned by fetch() to resolve. The value of the resolved promise is then assigned to the variable response.The second await is used to parse the response as json object, and is used to wait for the promise returned by response.json(). The resolved value is then assigned to the variable data.The function uses the return keyword to return the data to allow consuming the value outside of the function.  An async function always returns a PromiseThe difference between a regular function and an async function is that the async function always returns a Promise.Once defined, you can invoke an async function just like a regular function and handle the Promise it returns using .then() and .catch() or await.  Here's an example of using then and catch to handle a Promise returned by an async function:async function greeting() {  // An `async` function always returns a promise  // This value will be returned as a Promise  return \""HELLO IRONHACKERS!\"";}greeting()  .then((result) => {    console.log(result);  })  .catch((error) => {    console.log(\""Error:\"", error);  })  Here's an example of handling the same async function but this time using await:async function greeting() {  // Async function always returns a promise  // This value will be returned as a Promise  return \""HELLO IRONHACKERS!\"";}// We need another wrapper `async` function so that we can use `await`async function wrapperFunction() {  try {    const result = await greeting()    console.log(result);  }  catch (error) {    console.log(\""Error:\"", error);  }}Note that we needed another wrapper async function to be able to use await.  Back to top  How to use try / catch block?  The try/catch  block is used to handle errors that occur during the execution of a program.The try block contains the code that might throw an error, and the catch block contains the code that will handle the error.Here is an example of using a try/catch block:try {  // Code that might throw an error} catch (error) {  // Handle the error}The try/catch block is typically used in async functions when handling asynchronous code that may potentially throw an error.Here is an example of using a try/catch block in an async function when handling a promise:async function doSomething() {  try {    // Code that might throw an error    const result = await someAsyncFunction();  }  catch (error) {    // Handle the error    console.error(error);  }  }In the above example, the try block contains an asynchronous operation that might throw an error:  await someAsyncFunction(). If an error is thrown, execution will automatically jump to the catch block.  Back to top  I got the error: \""Cannot find module\"" Node.js\"". How can I resolve it?  The error \""Cannot find module\"" in a Node.js application means that the module you are trying to import or use does not exist in your project or cannot be found by Node.js.There are a few things you can try to resolve the issue:Dependencies are not installed: Make sure that all dependencies are installed.To do this, run the command npm install in the root folder of your project.This will install all of the dependencies listed in the project's package.json file, and ensure that all of the modules that your Node'js application requires are available.Module is not installed: Make sure that the package you are trying to use is listed in the project's package.json and that it is installed.To do this, run the command npm install <package_name>, replacing the <package_name> with the name of the package.This will add the package to the list of dependencies in the package.json file, and install it in the project.Module is not imported: Make sure that you've imported the module/package correctly and that the require statement is spelled correctly and available in the correct place in your code.Wrong file path: If you are importing another file as a module, make sure that the file you are trying to require is located in the correct folder and that you are using the correct file path.Wrong module/package name: Check the spelling of the package name you are trying to import.  Back to top  I got the error \""Error: listen EADDRINUSE: Address already in use\"". How do I fix it?  This error means that the port is taken by another process that is still running on that port.To fix the issue, you need to kill the process using the port and then run the command again. Here's how to do it:On Mac/LinuxTo kill the process running on port 3000, run the following command in the terminal:sudo kill -9 $(lsof -t -i:3000)   Important: Replace the above example port 3000 with the port number of the process you are trying to kill.  On Windows1. Using the Task ManagerTo kill the running process on Windows using the Task Manager do the following:Open the Task Manager by pressing: Ctrl + Shift + EscFind the Node process you want to terminate.Right-click and select End Task  2. Using Command PromptTo kill the running process on Windows using the Command Prompt do the following:Open the windows Start menuSearch for CMD in the search barIn the search results, right-click on Command Prompt and select Run as administrator. This will open the Command Prompt terminal.In the Command Prompt terminal, run the following command to find the process ID:netstat -ano|findstr \""PID :3000\""If the process happens to be running on another port, simply replace 3000 with the number the port number the process is running on.This will return the process id (PID). You should then run the following command using the process id (PID) you got in the previous step to terminate the process:taskkill /PID 12345 /fImportant: Replace the above example PID 12345, with the process id (PID) you got in the previous step.  Back to top  I got the error \""Port is already in use\"". How do I fix it?  This error means that the port is taken by another process that is still running on that port.To fix the issue, you need to kill the process using the port and then run the command again. Here's how to do it:On Mac/LinuxTo kill the process running on port 3000, run the following command in the terminal:sudo kill -9 $(lsof -t -i:3000)   Important: Replace the above example port 3000 with the port number of the process you are trying to kill.  On Windows1. Using the Task ManagerTo kill the running process on Windows using the Task Manager do the following:Open the Task Manager by pressing: Ctrl + Shift + EscFind the Node process you want to terminate.Right-click and select End Task  2. Using Command PromptTo kill the running process on Windows using the Command Prompt do the following:Open the windows Start menuSearch for CMD in the search barIn the search results, right-click on Command Prompt and select Run as administrator. This will open the Command Prompt terminal.In the Command Prompt terminal, run the following command to find the process ID:netstat -ano|findstr \""PID :3000\""If the process happens to be running on another port, simply replace 3000 with the number the port number the process is running on.This will return the process id (PID). You should then run the following command using the process id (PID) you got in the previous step to terminate the process:taskkill /PID 12345 /fImportant: Replace the above example PID 12345, with the process id (PID) you got in the previous step.  Back to top  I got the error: \""Error: connect ECONNREFUSED ::1:27017\"". What should I do?  This error means that the Node.js application is unable to connect to a MongoDB instance running on the local (same) machine.There are a few things you should look at to troubleshoot this:Check the database connection string: Check that the connection string is correct. The database connection string should be in the format:mongodb://127.0.0.1:27017/databaseNameVerify that MongoDB is running on your machine: Check that MongoDB is running on your machine. If it is not running, restart the service according to the following instructions:On Mac:Check if MongoDB is running on your machine, by running the command:brew services listYou should see the service mongodb-community listed as started. If not, run the following command to start it:brew services start mongodb-community   On Ubuntu:You can start the mongod process by issuing the following command:sudo systemctl start mongodIf you receive an error similar to the following when starting mongod:Failed to start mongod.service: Unit mongod.service not found.Run the following command first:sudo systemctl daemon-reloadThen run the start command above again.   On Windows:To open the MongoDB process on Windows, you will need to do these steps:Go to your Program Files in your C: drive - the local diskIn Program Files go to the MongoDB folderInside the MongoDB folder, follow this path Server/4.4/bin. The version number on your system (4.4) may be slightly different for the newer installations.Double-click on the file named mongod.exe.  Check the image inside    Back to top  Why is my database empty even though I am able to connect?  It is normal for the database to be empty if you have not inserted any data into it. If you want to confirm that your connection to the database is working correctly, you can try inserting a simple document into a collection and then querying the collection or checking the database to see if the document was added.  Back to top  I get the error \""MongoDB is not running on the provided host and port\"" when trying to connect with MongoDB Compass. What should I do?  If you are trying to connect to a MongoDB instance running locally, you should first check that MongoDB is running on your machine. If it is not running, restart the service according to the following instructions:On Mac:Check if MongoDB is running on your machine, by running the command:brew services listYou should see the service mongodb-community listed as started. If not, run the following command to start it:brew services start mongodb-community   On Ubuntu:You can start the mongod process by issuing the following command:sudo systemctl start mongodIf you receive an error similar to the following when starting mongod:Failed to start mongod.service: Unit mongod.service not found.Run the following command first:sudo systemctl daemon-reloadThen run the start command above again.   On Windows:To open the MongoDB process on Windows, you will need to do these steps:Go to your Program Files in your C: drive - the local diskIn Program Files go to the MongoDB folderInside the MongoDB folder, follow this path Server/4.4/bin. The version number on your system (4.4) may be slightly different for the newer installations.Double-click on the file named mongod.exe.  Check the image inside    Back to top  How to create a Mongoose model?  The mongoose model serves as a blueprint for creating and managing documents within MongoDB collections. The mongoose model is an overlay on top of one MongoDB collection, that we use to query and interact with that database collection.Here is an example of creating a User model to manage documents in the users collection:// IMPORT MONGOOSEconst mongoose = require(\""mongoose\"");// CREATE A SCHEMA - defines the shape of the documentsconst userSchema = new mongoose.Schema({   firstName: String,  lastName: String });// CREATE THE MODELconst User = mongoose.model(\""User\"", schema);// EXPORT THE MODELmodule.exports = User;  In the above example, we created and exported a User model, so that it can be imported and used anywhere in the application for managing the database collection users.Let's break down the above example and the steps in creating a mongoose model:Import mongoose: The first step is to import the mongoose library.Create a schema:  The next step is to create a schema, which defines the shape of the documents that will be stored in the users collection. In the above example, the schema has two fields firstName and lastName which are both strings.Create the model: The last step is to create the model. This is doe using the method mongoose.model() , which takes two arguments: the name of the model, in this case 'User' and the schema it should use.Mongoose automatically pluralizes and converts to lowercase the provided model name and uses it as the name of the collection. In this case, the string 'User' is automatically converted into a collection name -> users.Export the model: After the model is created, it needs to be exported so it can be used in other parts of the application.  Back to top  How do I resolve the Mongoose error \""ValidationError: Path ... is required.\""?  This error occurs when you try to save a document to the database without a value for a field that is marked as required in the model.To fix this error, make sure that you are providing a value for all required fields when creating or updating a document. You can verify that you are providing the correct values by using the console.log to inspect the data before saving it to the database.  Back to top  I am getting an error: \""not defined\"". How do I fix it?  The \""ReferenceError: variable is not defined\"" error in JavaScript occurs when you try to access a variable or a function that has not been defined yet or is out of scope.To fix the issue, check that you have defined the variable or function that you are trying to use and double-check the spelling to make sure you are using the correct name.In case the variable or a function is defined in another file, make sure that the file has been imported or loaded correctly.  Back to top  When I try to run the app, I get an error \""command not found: nodemon\""  Make sure you have nodemon installed globally:npm install -g nodemonThis will install nodemon globally on your system, making it available to all of your projects.  Back to top  I am unable to push changes to the repository. What should I do?  There are a couple of possible reasons why you may be unable to push changes to a Git repository:You have not committed your changes: Before you can push your changes to the repository, you need to commit them using the git commit command. Make sure you have committed your changes and try pushing again. To do this, run the following terminal commands from the project folder:git add .git commit -m \""Your commit message\""git pushYou do not have permission to push to the repository: If you have cloned the repository directly from the main Ironhack repository without making a Fork first, you do not have write access to the repository.To check which remote repository you have cloned, run the following terminal command from the project folder:git remote -vIf the link shown is the same as the main Ironhack repository, you will need to fork the repository to your GitHub account first, and then clone your fork to your local machine to be able to push the changes.Note: You may want to make a copy of the code you have locally, to avoid losing it in the process.  Back to top"
62,62,learn-co-students/javascript-arrays-lab-bootcamp-prep-000,https://github.com/learn-co-students/javascript-arrays-lab-bootcamp-prep-000/blob/master/README.md,JavaScript,"JavaScript Arrays LabObjectivesPractice writing arraysPractice manipulating arraysExplain how to manipulate arrays in a non-destructive wayIntroductionPreviously, we've learned about how arrays work. We know that push() pusheselements onto the ends of arrays, and pop() pops them off; similarly,unshift() adds elements to the beginnings of arrays, and shift() pulls themoff.Now it's time to put what we've learned to the test.What's with all this destruction?You might have noticed that our tests are looking for functions likedestructivelyAppendKitten() — what's up with that? (Rest assured, no kittenswill be harmed.)We want to distinguish between actions that mutate (\""change\"") their underlyingstructures (like pop(), push(), shift(), and unshift()) and thosefunctions that leave those structures untouched.In general, it's good practice to avoid mutating a program's state wheneverpossible. So we want to call out these methods as destructive, since mutatingstate means we don't always know what we're dealing with. Indeed, thesemutations mean that we need to refresh the test environment after every test tomake sure that we're not working with mutated data!By contrast, we also have methods like appendKitten(), which simply adds akitten to the end of the kittens array and returns the new array, leavingthe existing array untouched. This flow is preferable to mutating state becausewe have complete control over what's going into and coming out of the function.Try to use methods like slice() or concat() to return a newarray when keeping the original array intact.concat()slice()Think of it this way: you're making a peanut butter and jelly sandwich. Wouldyou rather work with a sandwich where someone had put an unspecified amount ofpeanut butter or jelly on the bread before you start making it (or, worse, wheresomeone had taken a bite out of the bread), or would you rather start fresh?Regardless of your feelings about stale peanut butter and jelly, we're going tostate unequivocally that fresh sandwiches are preferable — and fresh functions(ones that don't mutate shared state) are preferable, too.Run those tests!You'll notice that the first test asks for an array called kittens, set to aninitial value of [\""Milo\"", \""Otis\"", \""Garfield\""].In our test file, we're going to reset this array to your initial value afterevery test. Some of our tests manipulate arrays in place, and we want to be surethat we can get back to a blank slate between tests.Why is a blank slate important? We want our programs to be predictable: thismakes them more robust, easier to maintain, and less prone to bugs. One way toachieve predictability is by isolating our tests from one another, meaning thatno test should depend on the outcome or process of any other test. That way,tests can run in any order and test known inputs and environments, rather thandepending on other tests running first and modifying the entire environment.Remember the workflow:Run learn test.Read the errors; vocalize what they're asking you to do.Write code, save, and repeat steps 1 and 2 often until a test passes.Repeat as needed for further tests.Run learn submit when finished!Normally, resetting the array and the array itself would be decoupled — thatis, independent. But because of the nature of this lab, we need to be a bitprescriptive and give you some initial values so that we can focus on whatreally matters — understanding how to manipulate arrays in JavaScript.Resourcesnpm"
63,63,learn-co-curriculum/phase-1-domcontentloaded,https://github.com/learn-co-curriculum/phase-1-domcontentloaded/blob/master/README.md,JavaScript,"The JavaScript DOMContentLoaded EventLearning GoalsUnderstand why DOMContentLoaded is importantSet up an event on DOMContentLoadedIntroductionAn important part of working with JavaScript is ensuring that your code runs atthe right time. Every now and then, you may have to add some extra code toensure your code doesn't run before the page is ready. Many factors go intodetermining the \""right time,\"" but there are two events that represent twoparticularly important milestones in terms of page load:The DOMContentLoaded event fires when your page's DOM is fully parsed fromthe underlying htmlThe load event fires when a resource and all its dependent resources(including CSS and JavaScript) have finished loadingIn this lesson, we'll be focusing on DOMContentLoaded.Why is DOMContentLoaded Important?The DOMContentLoaded event is the browser's built-in way to indicate when apage's html is loaded into the DOM. It isn't possible to manipulate HTMLelements that haven't rendered yet, so trying to manipulate the DOM before thepage fully loads can potentially lead to problems.We need to make sure to wait until after the DOMContentLoaded event istriggered to safely execute our code. By creating an event listener, we can keepour code from immediately firing when index.js is loaded.Set Up an Event Listener for DOMContentLoadedAs always, addEventListener takes a String with the name of theevent and a callback function.document.addEventListener(\""DOMContentLoaded\"", function() {  console.log(\""The DOM has loaded\"");});If you put the above code in index.js, 'The DOM has loaded' will not be loggedimmediately. In fact, you can confirm this yourself by putting a secondconsole.log() outside of the event listener callback:document.addEventListener(\""DOMContentLoaded\"", function() {  console.log(\""The DOM has loaded\"");});console.log(  \""This console.log() fires when index.js loads - before DOMContentLoaded is triggered\"");InstructionsCode your solution in index.js. First, set up a DOMContentLoaded eventlistener to detect when the HTML page has loaded and the document is ready to bemanipulated. Use the event's callback function to target the paragraph elementwith id=\""text\"" and replace the text with \""This is really cool!\""Note: Using the innerText property to modify DOM elementcontent will not work for this lab. Use textContent orinnerHTML instead.Test your event in the browser to confirm that it is working.DOMContentLoaded Does Not Wait For Stylesheets and Images to LoadIt is important to note that the DOMContentLoaded event fires once theinitial HTML document finishes loading, but does not wait for CSS stylesheets orimages to load. In situations where you need everything to completely load,use the load event instead.While both will work, it is often the case that we only need the HTML content tofully load in order to execute our JavaScript. Since images can take some timeto load, using the load event means visitors of a webpage may see your webpagein its original state for a couple of seconds before any JavaScript fires andupdates the DOM.For a comparison of the difference between DOMContentLoaded and loadedevents, check out this example.ConclusionJavaScript provides us the powerful ability to update webpage content withoutrefreshing. We can, for instance, have a page with some basic HTML structure anduse JavaScript to fill in the content, enabling the possibility of dynamicwebpages.This sort of action, however, will only work if the HTML content is loaded onthe page before the JavaScript is executed. The DOMContentLoaded event ensuresthat our JavaScript code is being executed immediately after the HTML isfinished loading.AddendumThe DOMContentLoaded event is now a widely accepted standard. Modern webdevelopment, however, provides us with additional choices for setting up when wewant our JavaScript to execute. For example, HTML5 now has a deferattribute for use in <script> tags:<script src=\""index.js\"" defer></script>This functions in a similar way to DOMContentLoaded: the JavaScript codestored in index.js will be loaded up but won't execute until the HTML pagecompletely loads.ResourcesDOMContentLoadedRunning Your Code at the Right Time"
64,64,parallax/jsPDF,https://github.com/parallax/jsPDF/blob/master/HOTFIX_README.md,JavaScript,"HotfixesWe sometimes bake-in solutions (A.K.A. hotfixes) to solve issues for specific use cases.When we deem a hotfix will not break existing code,will make it default behaviour and mark the hotfix as accepted,At that point the define can be removed.To enable a hotfix, pass the hotfixes option to the jsPDF constructor:new jsPDF({  hotfixes: [\""px_scaling\""]});Active Hotfixespx_scalingApplies TojsPDF CoreDescriptionWhen supplying 'px' as the unit for the PDF, the internal scaling factor was being miscalculated making drawn componentslarger than they should be. Enabling this hotfix will correct this scaling calculation and items will be drawn to thecorrect scale.To EnableTo enable this hotfix, supply a 'hotfixes' array to the options object in the jsPDF constructor function, and add thestring 'px_scaling' to this array.#Accepted Hotfixesscale_textApplies Tocontext2d pluginAffectsDrawing and Filling Text when a scale transformation is active.DescriptionjsPDF currently has no way to draw scaled text.This hotfix scales the current font size by the x-axis scale factor.fill_closeApplies Tocontext2d pluginAffectsFilling pathsDescriptionIn certain cases, closing a fill would result in a path resolving to an incorrect point.The was most likely fixed when we refactored matrix logic. Enabling this hotfix will ignore a most-likely unneeded workaround."
65,65,tangly1024/NotionNext,https://github.com/tangly1024/NotionNext/blob/main/README.md,JavaScript,"NotionNext                                中文文档 | README in English一个使用 NextJS + Notion API 实现的，部署在 Vercel 上的静态博客系统。为Notion和所有创作者设计。预览效果在线演示：https://preview.tangly1024.com/ ，项目支持多主题切换，没找到喜欢的主题？贡献一个吧~NextMediumHexoFukasawa 预览NEXT 预览MEDIUM 预览HEXO 预览FUKASAWA我要如何开始？只需几分钟即可搭建您的个人站点：部署教程 (支持多方案)配置手册 - (自定义插件)二次开发 - (开发手册)更新指南 - (升级您的代码)版本汇总 - (查询变动功能)致谢感谢Craig Hart发起的Nobelium项目  Craig Hart贡献者      tangly1024🎫 🔧 🐛         uWayLu🔧 🐛        txs🔧 🐛        yuzhanglong🔧 🐛         Hscpro🔧 🐛         JensonMiao🔧 🐛         haixin1225🔧 🐛        mouyase🔧 🐛        qfdk🔧 🐛        ifyz🔧 🐛        Liqun Zhao🔧 🐛        Ylarod🔧 🐛        Etherrreal.🔧 🐛      Joshua Astray🔧 🐛        Vixcity🔧 🐛        ipatpat🔧 🐛        xloong🔧 🐛        expoli🔧 🐛        bUBBLE🔧 🐛        派了个萌 🔧 🐛        Simon Shi🔧 🐛        S.Y. Lee🔧 🐛        fighting-buf🔧 🐛        cliouo🔧 🐛        Sude Akgün🔧 🐛        Ray🔧 🐛        Hongzzz🔧 🐛        RedhairHambagu🔧 🐛        Allen🔧 🐛        zdf🔧 🐛        emengweb🔧 🐛        kitety🔧 🐛        Jiaxin Peng🔧 🐛  引用技术框架: Next.js样式: Tailwind CSS渲染: React-notion-x评论: Twikoo, Giscus, Gitalk, Cusdis, Utterances图标: FontawesomeLicenseThe MIT License."
66,66,eligrey/FileSaver.js,https://github.com/eligrey/FileSaver.js/blob/master/README.md,JavaScript,"If you need to save really large files bigger than the blob's size limitation or don't haveenough RAM, then have a look at the more advanced StreamSaver.jsthat can save data directly to the hard drive asynchronously with the power of the new streams API. That will havesupport for progress, cancelation and knowing when it's done writingFileSaver.jsFileSaver.js is the solution to saving files on the client-side, and is perfect forweb apps that generates files on the client, However if the file is coming from theserver we recommend you to first try to use Content-Disposition attachment response header as it has more cross-browser compatiblity.Looking for canvas.toBlob() for saving canvases? Check outcanvas-toBlob.js for a cross-browser implementation.Supported BrowsersBrowserConstructs asFilenamesMax Blob SizeDependenciesFirefox 20+BlobYes800 MiBNoneFirefox < 20data: URINon/aBlob.jsChromeBlobYes2GBNoneChrome for AndroidBlobYesRAM/5NoneEdgeBlobYes?NoneIE 10+BlobYes600 MiBNoneOpera 15+BlobYes500 MiBNoneOpera < 15data: URINon/aBlob.jsSafari 6.1+*BlobNo?NoneSafari < 6data: URINon/aBlob.jsSafari 10.1+  Blob        Yes        n/a          NoneFeature detection is possible:try {    var isFileSaverSupported = !!new Blob;} catch (e) {}IE < 10It is possible to save text files in IE < 10 without Flash-based polyfills.See ChenWenBrian and koffsyrup's saveTextAs() for more details.Safari 6.1+Blobs may be opened instead of saved sometimes—you may have to direct your Safari users to manuallypress ⌘+S to save the file after it is opened. Using the application/octet-stream MIME type to force downloads can cause issues in Safari.iOSsaveAs must be run within a user interaction event such as onTouchDown or onClick; setTimeout will prevent saveAs from triggering. Due to restrictions in iOS saveAs opens in a new window instead of downloading, if you want this fixed please tell Apple how this WebKit bug is affecting you.SyntaxImport saveAs() from file-saverimport { saveAs } from 'file-saver';FileSaver saveAs(Blob/File/Url, optional DOMString filename, optional Object { autoBom })Pass { autoBom: true } if you want FileSaver.js to automatically provide Unicode text encoding hints (see: byte order mark). Note that this is only done if your blob type has charset=utf-8 set.ExamplesSaving text using require()var FileSaver = require('file-saver');var blob = new Blob([\""Hello, world!\""], {type: \""text/plain;charset=utf-8\""});FileSaver.saveAs(blob, \""hello world.txt\"");Saving textvar blob = new Blob([\""Hello, world!\""], {type: \""text/plain;charset=utf-8\""});FileSaver.saveAs(blob, \""hello world.txt\"");Saving URLsFileSaver.saveAs(\""https://httpbin.org/image\"", \""image.jpg\"");Using URLs within the same origin will just use a[download].Otherwise, it will first check if it supports cors header with a synchronous head request.If it does, it will download the data and save using blob URLs.If not, it will try to download it using a[download].The standard W3C File API Blob interface is not available in all browsers.Blob.js is a cross-browser Blob implementation that solves this.Saving a canvasvar canvas = document.getElementById(\""my-canvas\"");canvas.toBlob(function(blob) {    saveAs(blob, \""pretty image.png\"");});Note: The standard HTML5 canvas.toBlob() method is not available in all browsers.canvas-toBlob.js is a cross-browser canvas.toBlob() that polyfills this.Saving FileYou can save a File constructor without specifying a filename. If thefile itself already contains a name, there is a hand full of ways to get a fileinstance (from storage, file input, new constructor, clipboard event).If you still want to change the name, then you can change it in the 2nd argument.// Note: Ie and Edge don't support the new File constructor,// so it's better to construct blobs and use saveAs(blob, filename)var file = new File([\""Hello, world!\""], \""hello world.txt\"", {type: \""text/plain;charset=utf-8\""});FileSaver.saveAs(file);Installation# Basic Node.JS installationnpm install file-saver --savebower install file-saverAdditionally, TypeScript definitions can be installed via:# Additional typescript definitionsnpm install @types/file-saver --save-dev"
67,67,gulpjs/gulp,https://github.com/gulpjs/gulp/blob/master/README.md,JavaScript,"          The streaming build system        What is gulp?Automation - gulp is a toolkit that helps you automate painful or time-consuming tasks in your development workflow.Platform-agnostic - Integrations are built into all major IDEs and people are using gulp with PHP, .NET, Node.js, Java, and other platforms.Strong Ecosystem - Use npm modules to do anything you want + over 3000 curated plugins for streaming file transformations.Simple - By providing only a minimal API surface, gulp is easy to learn and simple to use.What's new in 4.0?!The task system was rewritten from the ground-up, allowing task composition using series() and parallel() methods.The watcher was updated, now using chokidar (no more need for gulp-watch!), with feature parity to our task system.First-class support was added for incremental builds using lastRun().A symlink() method was exposed to create symlinks instead of copying files.Built-in support for sourcemaps was added - the gulp-sourcemaps plugin is no longer necessary!Task registration of exported functions - using node or ES exports - is now recommended.Custom registries were designed, allowing for shared tasks or augmented functionality.Stream implementations were improved, allowing for better conditional and phased builds.gulp for enterpriseAvailable as part of the Tidelift SubscriptionThe maintainers of gulp and thousands of other packages are working with Tidelift to deliver commercial support and maintenance for the open source dependencies you use to build your applications. Save time, reduce risk, and improve code health, while paying the maintainers of the exact dependencies you use. Learn more.InstallationFollow our Quick Start guide.RoadmapFind out about all our work-in-progress and outstanding issues at https://github.com/orgs/gulpjs/projects.DocumentationCheck out the Getting Started guide and API docs on our website!Excuse our dust! All other docs will be behind until we get everything updated. Please open an issue if something isn't working.Sample gulpfile.jsThis file will give you a taste of what gulp does.var gulp = require('gulp');var less = require('gulp-less');var babel = require('gulp-babel');var concat = require('gulp-concat');var uglify = require('gulp-uglify');var rename = require('gulp-rename');var cleanCSS = require('gulp-clean-css');var del = require('del');var paths = {  styles: {    src: 'src/styles/**/*.less',    dest: 'assets/styles/'  },  scripts: {    src: 'src/scripts/**/*.js',    dest: 'assets/scripts/'  }};/* Not all tasks need to use streams, a gulpfile is just another node program * and you can use all packages available on npm, but it must return either a * Promise, a Stream or take a callback and call it */function clean() {  // You can use multiple globbing patterns as you would with `gulp.src`,  // for example if you are using del 2.0 or above, return its promise  return del([ 'assets' ]);}/* * Define our tasks using plain functions */function styles() {  return gulp.src(paths.styles.src)    .pipe(less())    .pipe(cleanCSS())    // pass in options to the stream    .pipe(rename({      basename: 'main',      suffix: '.min'    }))    .pipe(gulp.dest(paths.styles.dest));}function scripts() {  return gulp.src(paths.scripts.src, { sourcemaps: true })    .pipe(babel())    .pipe(uglify())    .pipe(concat('main.min.js'))    .pipe(gulp.dest(paths.scripts.dest));}function watch() {  gulp.watch(paths.scripts.src, scripts);  gulp.watch(paths.styles.src, styles);}/* * Specify if tasks run in series or parallel using `gulp.series` and `gulp.parallel` */var build = gulp.series(clean, gulp.parallel(styles, scripts));/* * You can use CommonJS `exports` module notation to declare tasks */exports.clean = clean;exports.styles = styles;exports.scripts = scripts;exports.watch = watch;exports.build = build;/* * Define default task that can be called by just running `gulp` from cli */exports.default = build;Use latest JavaScript version in your gulpfileMost new versions of node support most features that Babel provides, except the import/export syntax. When only that syntax is desired, rename to gulpfile.esm.js, install the esm module, and skip the Babel portion below.Node already supports a lot of ES2015+ features, but to avoid compatibility problems we suggest to install Babel and rename your gulpfile.js to gulpfile.babel.js.npm install --save-dev @babel/register @babel/core @babel/preset-envThen create a .babelrc file with the preset configuration.{  \""presets\"": [ \""@babel/preset-env\"" ]}And here's the same sample from above written in ES2015+.import gulp from 'gulp';import less from 'gulp-less';import babel from 'gulp-babel';import concat from 'gulp-concat';import uglify from 'gulp-uglify';import rename from 'gulp-rename';import cleanCSS from 'gulp-clean-css';import del from 'del';const paths = {  styles: {    src: 'src/styles/**/*.less',    dest: 'assets/styles/'  },  scripts: {    src: 'src/scripts/**/*.js',    dest: 'assets/scripts/'  }};/* * For small tasks you can export arrow functions */export const clean = () => del([ 'assets' ]);/* * You can also declare named functions and export them as tasks */export function styles() {  return gulp.src(paths.styles.src)    .pipe(less())    .pipe(cleanCSS())    // pass in options to the stream    .pipe(rename({      basename: 'main',      suffix: '.min'    }))    .pipe(gulp.dest(paths.styles.dest));}export function scripts() {  return gulp.src(paths.scripts.src, { sourcemaps: true })    .pipe(babel())    .pipe(uglify())    .pipe(concat('main.min.js'))    .pipe(gulp.dest(paths.scripts.dest));} /*  * You could even use `export as` to rename exported tasks  */function watchFiles() {  gulp.watch(paths.scripts.src, scripts);  gulp.watch(paths.styles.src, styles);}export { watchFiles as watch };const build = gulp.series(clean, gulp.parallel(styles, scripts));/* * Export a default task */export default build;Incremental BuildsYou can filter out unchanged files between runs of a task usingthe gulp.src function's since option and gulp.lastRun:const paths = {  ...  images: {    src: 'src/images/**/*.{jpg,jpeg,png}',    dest: 'build/img/'  }}function images() {  return gulp.src(paths.images.src, {since: gulp.lastRun(images)})    .pipe(imagemin())    .pipe(gulp.dest(paths.images.dest));}function watch() {  gulp.watch(paths.images.src, images);}Task run times are saved in memory and are lost when gulp exits. It will onlysave time during the watch task when running the images taskfor a second time.Want to contribute?Anyone can help make this project better - check out our Contributing guide!BackersSupport us with a monthly donation and help us continue our activities.SponsorsBecome a sponsor to get your logo on our README on Github."
68,68,lyfe00011/whatsapp-bot,https://github.com/lyfe00011/whatsapp-bot/blob/master/README.md,JavaScript,"WhatsApp User BotThis is a Userbot based on WhatsAsena written by Yusuf UstaWhat is WhatsAsena?WhatsAsena, is a WhatsApp bot written by Yusuf Usta. Does not log into your account It is written on WhatsApp Web API.SetupClick SCAN and scan QR through Whatsapp Linked Devices Option in Your whatsapp App.You will get a long text that needs after 4th step (ASENA_SESSION).If You don't have a account in Heroku, Create a account.Click FORKNow DEPLOYPluginsActiveGroup commands✔️Kick✔️Tag✔️Add✔️Warn✔️Vote✔️Invite✔️Revoke✔️Demote✔️Promote✔️Banbye✔️Goodbye✔️Welcome✔️Schedule✔️Auto-mute✔️Mute/Unmute✔️Common/DiffActiveDowloader commands✔️Saavn✔️Upload✔️Yta/Ytv✔️Unsplash✔️Mediafire✔️Pinterest✔️SoundCloud✔️TikTok video✔️Twitter video✔️Facebook video✔️Instagram story✔️YouTube audio/video✔️Instagram video/imageActiveMisc CommandsUsage✔️QrReads QR code✔️SsScreenshot of web✔️UrlGets url of media✔️TrtTranslates messages✔️Mp3Video to mp3✔️TxtImage to text✔️AfkAway from keyboard✔️CutCuts mp3✔️PdfImages to pdf✔️Mp4Sticker to video✔️TakeChange sticker pack info✔️WikiWikipedia search✔️MemeText on photos✔️TrimTrims video✔️FindIt finds song✔️AttpColoured text sticker✔️AliveTo check alive or not✔️WhoisGroup or individual data✔️MovieShows Movie Info✔️MergeIt merge a videos✔️VoiceVoice to mp3✔️TopdfDocumnet ot pdf✔️EmojiEmoji to sticker✔️LydiaAuto AI chat✔️StickerPhoto/video to sticker✔️ReverseReverse audio/video✔️UnvoiceAudio to voices✔️WastedWasted logo✔️TriggedTriggered effect✔️ForwardForwarding msg using jid✔️CompressCompresses video✔️GoogleGoogle reverse image search✔️UploadDownload from Url✔️WeatherShows weather✔️GetjidsGets jids of chats✔️RemovebgRemoves background✔️SetaboutSets bio✔️SetstatusSets status✔️Pitch/low/bassAudio effects✔️Histo/vector/avesAudio to video✔️Block/unblockBlocks/unblocks members✔️BroadcastCustom Broadcasting MessagesThanks ToYusuf Usta for WhatsAsena@adiwajshing for Baileys"
69,69,learn-co-students/javascript-logging-lab-bootcamp-prep-000,https://github.com/learn-co-students/javascript-logging-lab-bootcamp-prep-000/blob/master/README.md,JavaScript,"JavaScript Logging LabObjectivesPractice using console.log()Practice using console.error()Practice using console.warn()IntroductionWelcome to your first JavaScript lab! You'll notice a few new things in this lesson that we haven't encountered before. Don't worry, we'll walk you through them.Tests...The first new thing you'll notice is tests.  When we want to run an experiment, we need to develop a hypothesis and we need to test it. So if we want to experiment with whether adding salt to ice water makes it hotter or colder, we need to design an experiment that controls for all of the other variables: we need to isolate our experiment from parts of its environment that aren't relevant to what we hope to test.In programming, tests place the scientific method into computer science. We run tests to verify that our programs behave the way we think they do. Tests help us identify bugs, and they give us a sense of the health of our applications.On Learn, we use tests as teaching tools. Just like in a normal coding environment, we use tests to describe the program's behavior. Unlike in a normal coding environment, you, not we, are in charge of getting the tests to pass — that is, making the app behave like we expect it to.StructureThe structure of this lab — where its files and folders are located — looks roughly like the following:├── CONTRIBUTING.md├── LICENSE.md├── README.md├── index.js├── node_modules/├── package.json└── test    └── index-test.jsAll labs will more or less have the same structure. (And READMEs, for that matter, will still have CONTRIBUTING.md, LICENSE.md, and README.md files.)index.js might be called something else (something more descriptive) in other labs, and so test/index-test.js would be renamed accordingly. But index.js is also descriptive in its own right, defining something of an entry point for finding one's way around the app. This is often the file where you will write your code. (Later on, we'll introduce index.html and index.css — you'll have to update or refer to these files sometimes, too!)Code-alongFor now, open up index.js in your text editor. If you're using the Learn IDE, click the \""Open\"" button on this lessonyour IDE should open up. You'll see a sidebar like this:If you open up that \""javascript-logging-lab...\"" folder, you'll see a list of files (along with a test/ directory). Click index.js, and it will open in the editor.In index.js, you should see, well, nothing. We'll fix that soon.Now open up test/index-test.js. Hey, there's something! What's all of this stuff doing?At the very top of the file, you'll seeconst expect = require('expect')const fs = require('fs')const jsdom = require('mocha-jsdom')const path = require('path')This might be a bit bewildering, but at this point, we don't need to be able to write any of this code, or even understand every line perfectly.  All we need is to understand enough so that we can get a sense of what the test is asking us to accomplish, so that we can make the test pass.  Let's go through it.In these first lines, all we're doing is referencing different libraries that help us run your tests. A library is code that someone else (usually multiple someone elses) wrote for our use. Note that require won't work out of the box in the browser. We're actually running our tests in a different environment. (Remember the sandbox analogy from earlier? It's just like that.)A little farther down the page, you'll seedescribe('index', () => {  // there's stuff in here, too})describe is a function provided by our test runner (in this case, we're using Mocha) — it's basically a container for our tests.Then we have a few chunks likeit('calls console.error()', () => {  // this is where the tests are!})Each of these chunks describes a behavior that we expect the main program to implement. As you can see, they describe that behavior pretty carefully — in this example, we know that our main file should call console.error() — pretty simple, right?Don't worry too much yet about what's happening inside these chunks. Sometimes we'll need to do some pretty fancy footwork to test some pretty basic things; other times, and as time goes on, you'll be able to read and understand basically what our tests are expecting.And that'll be great! These aren't like tests that we all took in school: they're testing behavior, not information. Tests are meant to be as transparent as possible about what they're doing, and as you grow as a programmer, it's important to understand more and more what the aims of tests are.In some of our tests, you'll see lines like the following:jsdom({  src: fs.readFileSync(path.resolve(__dirname, '..', 'index.js'), 'utf-8')})This line reads index.js (remember how we said we'd modify that?) and adds its code to the execution environment. The \""execution environment\"" is simply where our code runs.Running the TestsTo run the tests, simply type learn test in the terminal part of the Learn IDE. (The terminal is the part below where you've been coding.) You should see something likeFor the moment, all of the tests fail. Let's figure out how to get one of them passing! (The rest will be up to you.)Let's take the first one. The test description says, \""index calls console.error()\"". So it sounds like, pretty straight-forwardly, like we should call console.error() somewhere in index.js. \""Calling\"" a function means invoking it, causing it to act. We call functions with parentheses: console.error is a function, but console.error() is a call to the function.In index.js, add a call to console.error() — you can call it with anything you like (as long as the syntax is valid). We're going to go withconsole.error(\""HALP!\"")Because it seems sufficiently dire. Remember to save your file.Anyway, let's run the tests again. In the Learn IDE's terminal, runlearn testWe should now see:Nice! We got the first one to pass!A note about spiesYou might often see errors like the ones above: \""Uncaught error: spy was not called\"". Spies are little bits of code that keep track of whether or not theywere called. We use them to make sure that a function is called when we expectit to be called.We'll try to rewrite these error messages when possible to be more descriptiveabout what kinds of calls we expected; but know that sometimes, especially lateron, we leave the errors intentionally ambiguous for you to work out.Your turnNow it's your turn — can you follow a flow similar to the one we followedtogether above to get the remaining to tests to pass?Imagine that you're building the user interface for a fancy ATM machine.Because the developers are hip with the latest trends, they're usingJavaScript for the user-facing parts.We need a way to send messages to the user: some messages are just updates,some are warnings (the user should not continue doing what they just did),and some are errors (something broke, and we need to recover).Your job is to identify a way of sending each kind of message. Hint: inJavaScript, you'll probably find ways of telling users things with console.And again, remember to save your files before you re-run your tests.When all of your tests pass, be sure to run learn submit to move on to thenext lesson.Feeling stuck?In the above, when we ran our tests and saw the message \""index callsconsole.error()\"", we wrote,console.error(\""HALP!\"")Now when we run the tests again and see \""index calls console.log()\"", we shouldlook at what is the same and what is different between this message and theprevious one. It looks like they're basically the same except for one tellsus to call console.error() and the other tells us to call console.log().So if we got back to index.js and write something like,console.log(\""I would be a logger.\"") // get it?we're now calling console.log() with a different string. Similarly, when wesee the message \""index calls console.warn()\"", we know that we can go back to ourcode and write something with console.warn(). You've got this!ResourcesnpmView JavaScript Logging Lab on Learn.co and start learning to code for free."
70,70,progedu/fibonacci,https://github.com/learn-co-students/javascript-logging-lab-bootcamp-prep-000/blob/master/README.md,JavaScript,"JavaScript Logging LabObjectivesPractice using console.log()Practice using console.error()Practice using console.warn()IntroductionWelcome to your first JavaScript lab! You'll notice a few new things in this lesson that we haven't encountered before. Don't worry, we'll walk you through them.Tests...The first new thing you'll notice is tests.  When we want to run an experiment, we need to develop a hypothesis and we need to test it. So if we want to experiment with whether adding salt to ice water makes it hotter or colder, we need to design an experiment that controls for all of the other variables: we need to isolate our experiment from parts of its environment that aren't relevant to what we hope to test.In programming, tests place the scientific method into computer science. We run tests to verify that our programs behave the way we think they do. Tests help us identify bugs, and they give us a sense of the health of our applications.On Learn, we use tests as teaching tools. Just like in a normal coding environment, we use tests to describe the program's behavior. Unlike in a normal coding environment, you, not we, are in charge of getting the tests to pass — that is, making the app behave like we expect it to.StructureThe structure of this lab — where its files and folders are located — looks roughly like the following:├── CONTRIBUTING.md├── LICENSE.md├── README.md├── index.js├── node_modules/├── package.json└── test    └── index-test.jsAll labs will more or less have the same structure. (And READMEs, for that matter, will still have CONTRIBUTING.md, LICENSE.md, and README.md files.)index.js might be called something else (something more descriptive) in other labs, and so test/index-test.js would be renamed accordingly. But index.js is also descriptive in its own right, defining something of an entry point for finding one's way around the app. This is often the file where you will write your code. (Later on, we'll introduce index.html and index.css — you'll have to update or refer to these files sometimes, too!)Code-alongFor now, open up index.js in your text editor. If you're using the Learn IDE, click the \""Open\"" button on this lessonyour IDE should open up. You'll see a sidebar like this:If you open up that \""javascript-logging-lab...\"" folder, you'll see a list of files (along with a test/ directory). Click index.js, and it will open in the editor.In index.js, you should see, well, nothing. We'll fix that soon.Now open up test/index-test.js. Hey, there's something! What's all of this stuff doing?At the very top of the file, you'll seeconst expect = require('expect')const fs = require('fs')const jsdom = require('mocha-jsdom')const path = require('path')This might be a bit bewildering, but at this point, we don't need to be able to write any of this code, or even understand every line perfectly.  All we need is to understand enough so that we can get a sense of what the test is asking us to accomplish, so that we can make the test pass.  Let's go through it.In these first lines, all we're doing is referencing different libraries that help us run your tests. A library is code that someone else (usually multiple someone elses) wrote for our use. Note that require won't work out of the box in the browser. We're actually running our tests in a different environment. (Remember the sandbox analogy from earlier? It's just like that.)A little farther down the page, you'll seedescribe('index', () => {  // there's stuff in here, too})describe is a function provided by our test runner (in this case, we're using Mocha) — it's basically a container for our tests.Then we have a few chunks likeit('calls console.error()', () => {  // this is where the tests are!})Each of these chunks describes a behavior that we expect the main program to implement. As you can see, they describe that behavior pretty carefully — in this example, we know that our main file should call console.error() — pretty simple, right?Don't worry too much yet about what's happening inside these chunks. Sometimes we'll need to do some pretty fancy footwork to test some pretty basic things; other times, and as time goes on, you'll be able to read and understand basically what our tests are expecting.And that'll be great! These aren't like tests that we all took in school: they're testing behavior, not information. Tests are meant to be as transparent as possible about what they're doing, and as you grow as a programmer, it's important to understand more and more what the aims of tests are.In some of our tests, you'll see lines like the following:jsdom({  src: fs.readFileSync(path.resolve(__dirname, '..', 'index.js'), 'utf-8')})This line reads index.js (remember how we said we'd modify that?) and adds its code to the execution environment. The \""execution environment\"" is simply where our code runs.Running the TestsTo run the tests, simply type learn test in the terminal part of the Learn IDE. (The terminal is the part below where you've been coding.) You should see something likeFor the moment, all of the tests fail. Let's figure out how to get one of them passing! (The rest will be up to you.)Let's take the first one. The test description says, \""index calls console.error()\"". So it sounds like, pretty straight-forwardly, like we should call console.error() somewhere in index.js. \""Calling\"" a function means invoking it, causing it to act. We call functions with parentheses: console.error is a function, but console.error() is a call to the function.In index.js, add a call to console.error() — you can call it with anything you like (as long as the syntax is valid). We're going to go withconsole.error(\""HALP!\"")Because it seems sufficiently dire. Remember to save your file.Anyway, let's run the tests again. In the Learn IDE's terminal, runlearn testWe should now see:Nice! We got the first one to pass!A note about spiesYou might often see errors like the ones above: \""Uncaught error: spy was not called\"". Spies are little bits of code that keep track of whether or not theywere called. We use them to make sure that a function is called when we expectit to be called.We'll try to rewrite these error messages when possible to be more descriptiveabout what kinds of calls we expected; but know that sometimes, especially lateron, we leave the errors intentionally ambiguous for you to work out.Your turnNow it's your turn — can you follow a flow similar to the one we followedtogether above to get the remaining to tests to pass?Imagine that you're building the user interface for a fancy ATM machine.Because the developers are hip with the latest trends, they're usingJavaScript for the user-facing parts.We need a way to send messages to the user: some messages are just updates,some are warnings (the user should not continue doing what they just did),and some are errors (something broke, and we need to recover).Your job is to identify a way of sending each kind of message. Hint: inJavaScript, you'll probably find ways of telling users things with console.And again, remember to save your files before you re-run your tests.When all of your tests pass, be sure to run learn submit to move on to thenext lesson.Feeling stuck?In the above, when we ran our tests and saw the message \""index callsconsole.error()\"", we wrote,console.error(\""HALP!\"")Now when we run the tests again and see \""index calls console.log()\"", we shouldlook at what is the same and what is different between this message and theprevious one. It looks like they're basically the same except for one tellsus to call console.error() and the other tells us to call console.log().So if we got back to index.js and write something like,console.log(\""I would be a logger.\"") // get it?we're now calling console.log() with a different string. Similarly, when wesee the message \""index calls console.warn()\"", we know that we can go back to ourcode and write something with console.warn(). You've got this!ResourcesnpmView JavaScript Logging Lab on Learn.co and start learning to code for free."
71,71,learn-co-curriculum/phase-1-sending-data-with-fetch,https://github.com/learn-co-curriculum/phase-1-sending-data-with-fetch/blob/master/README.md,JavaScript,"Sending Data with FetchLearning GoalsUse fetch() to send data to a remote hostHandle the response from a successful requestHandle errors from an unsuccessful requestIntroductionIf you think about it, fetch() is a little browser in your browser. You tellfetch() to go to a URL by passing it an argument, e.g.fetch(\""https://flatironschool.com\""), and it makes a network request. You chaincalls to fetch() with then(). Each then() call takes a callback functionas its argument. Based on actions in the callback function, we can display orupdate content in the DOM.This is a lot like browsing the web: you change the URL in the URL bar, or youfollow a link, and those actions tell the browser to go somewhere else and getthe data. A technical way to describe that is: \""The browser implements an HTTPGET to retrieve the content at a URL.\"" It's also 100% technically correct tosay \""fetch() uses an HTTP GET to retrieve the content specified by a URL.\""The browser also provides a helpful model for understanding what sending datafrom the browser looks like. We know this as an HTML form. Technicallyspeaking, HTML forms \""use an HTTP POST to send content gathered in <input>elements to a specified URL.\"" It's also 100% technically correct to say\""fetch() uses an HTTP POST to send content gathered in a JavaScriptObject.\""HTML forms are still widely used, but with fetch(), we have more detailedcontrol of the request. Using fetch(), we can actually override the normalbehavior of an HTML form, capture any user input, package it up with theappropriate request information and send it out.Our focus in this lesson will be learning how to send data using fetch().Using JSON Server to Mimic a Backend DatabaseTo start up JSON Server, run json-server --watch db.json in your terminal.Note: Running this command will instruct json-server to use a db.jsonfile in your terminal's current directory, so make sure to run this command fromthe same directory as this lab.Once the server is running, you'll see a list of available resource paths in theterminal:Resources  http://localhost:3000/dogs  http://localhost:3000/cats  http://localhost:3000/users  http://localhost:3000/robotsThese endpoints each provide different sets of data. Since it is mimicking aRESTful API, sending a request to 'http://localhost:3000/dogs' will return allrecords in the database for dogs, while 'http://localhost:3000/dogs/1' willreturn the dog with the id of 1.Some example data is already present, stored in db.json. If the JSON server isrunning, you can also visit any of the above resources in a browser to see thedata.The tests in this lab do not need JSON Server to be running, but if you wouldlike to run tests while also running the server, open a second tab in yourterminal.Note: For users of the Live Server VSCode extension, if thepage is reloading when you initiate a fetch request, you'll need toset up some additional configuration for Live Server to play nicely withjson-server. Follow the steps in this gist (you'llonly need to do this once), then come back to this lesson.Analyze Data Sent in an HTML FormLet's take a look at an HTML <form> (see sample_form.html in this repo):<form action=\""http://localhost:3000/dogs\"" method=\""POST\"">  <label> Dog Name: <input type=\""text\"" name=\""dogName\"" id=\""dogName\"" /></label  ><br />  <label> Dog Breed: <input type=\""text\"" name=\""dogBreed\"" id=\""dogBreed\"" /></label  ><br />  <input type=\""submit\"" id=\""submit\"" value=\""Submit\"" /></form>When we use the <form> element's default POST behavior in combination with abackend server, the key components for sending the submitted data to the serverare:The destination URL as defined in the action attribute of the <form> tagThe HTTP verb to use as defined in the method attribute of the <form> tagThe key / value data obtained from the inputs in the fields dogName anddogBreedWe should expect that our \""mini-browser,\"" fetch(), will need those same bitsof information in order to send a Post request to the server.Note: with JSON Server and our HTML form, we already have what we need tosubmit our form the conventional way, without using JavaScript. To try thisout, make sure the JSON server is running and open sample_form.html in thebrowser. If you enter a dog name and breed in the input fields and click\""Submit,\"" your information should successfully POST to the JSON serverdatabase, db.json.Construct a POST Request Using fetch()Sending a POST request with fetch() is more complicated than what we've seenup to this point. It still takes a String representing the destination URL asthe first argument, as always. But as we will see below, fetch() can also takea JavaScript Object as the second argument. This Object can be givencertain properties that can be used to change fetch()'s default behavior.fetch(destinationURL, configurationObject);The configurationObject contains three core components that are needed forstandard POST requests: the HTTP verb, the headers, and the body.Add the HTTP VerbSo far, comparing to an HTML form, we've only got the destination URL('http://localhost:3000/dogs' in this case). The next thing we need to includeis the HTTP verb. By default, the verb is GET, which is why we can send simpleGET requests with only a destination URL. To tell fetch() that this is aPOST request, we need to add a method property to our configurationObject:const configurationObject = {  method: \""POST\"",};Add HeadersThe second piece we need to include is some metadata about the actual data wewant to send. This metadata is in the form of headers. Headers aresent just ahead of the actual data payload of our POST request. They containinformation about the data being sent.One very common header is \""Content-Type\"". \""Content-Type\"" isused to indicate what format the data being sent is in. With JavaScript'sfetch(), JSON is the most common format we will be using. We want tomake sure that the destination of our POST request knows this. To do this, we'llinclude the \""Content-Type\"" header:const configurationObject = {  method: \""POST\"",  headers: {    \""Content-Type\"": \""application/json\"",  },};Each individual header is stored as a key/value pair inside an object. Thisobject is assigned as the value of the headers property as seen above.When sending data, the server at the destination URL will send back a response,often including data that the sender of the fetch() request might find useful.Just like \""Content-Type\"" tells the destination server what type of data we'resending, it is also good practice to tell the server what data format weaccept in return.To do this, we add a second header, \""Accept\"", and assign it to\""application/json\"" as well:const configurationObject = {  method: \""POST\"",  headers: {    \""Content-Type\"": \""application/json\"",    \""Accept\"": \""application/json\"",  },};There are many other headers available for particular uses. Some areused to send credentials or user authentication keys. Others are used to sendcookies containing user info. \""Content-Type\"" and \""Accept\"" are two that we'llsee the most throughout the remainder of this course.A server that expects requests with specific headers may reject requests thatdon't include those headers.Add DataWe now have the destination URL, our HTTP verb, and headers that includeinformation about the data we're sending. The last thing to add is the dataitself.Data being sent in fetch() must be stored in the body of theconfigurationObject:const configurationObject = {  method: \""POST\"",  headers: {    \""Content-Type\"": \""application/json\"",    \""Accept\"": \""application/json\""  },  body: /* Your data goes here */};There is a catch here to be aware of — when data is exchanged between a client(your browser, for instance), and a server, the data is sent as text. Whateverdata we're assigning to the body of our request needs to be a string.Use JSON.stringify() to Convert Objects to StringsWhen sending data using fetch(), we often send multiple pieces of informationin one request. In our code, we often organize this information usingobjects. Consider the following object, for instance:{  dogName: \""Byron\"",  dogBreed: \""Poodle\""}This object contains two related pieces of information, a dog's name and breed.Let's say we want to send the data in this object to a server. We can't simplyassign it to body, as it isn't a string. Instead, we convert it to JSON.The object above, converted to JSON would look like this:\""{\""dogName\"":\""Byron\"",\""dogBreed\"":\""Poodle\""}\""Here, using JSON has enabled us to preserve the key/value pairs of our objectwithin the string. When sent to a server, the server will be able to take thisstring and convert it back into key/value pairs in whatever language the serveris written in.Fortunately, JavaScript comes with a built-in method for converting objects tostrings, JSON.stringify(). By passing an object in, JSON.stringify() willreturn a string, formatted and ready to send in our request:const configurationObject = {  method: \""POST\"",  headers: {    \""Content-Type\"": \""application/json\"",    \""Accept\"": \""application/json\"",  },  body: JSON.stringify({    dogName: \""Byron\"",    dogBreed: \""Poodle\"",  }),};Send the POST RequestWe've got all the pieces we need. Putting it all together, we get:const configurationObject = {  method: \""POST\"",  headers: {    \""Content-Type\"": \""application/json\"",    \""Accept\"": \""application/json\"",  },  body: JSON.stringify({    dogName: \""Byron\"",    dogBreed: \""Poodle\"",  }),};fetch(\""http://localhost:3000/dogs\"", configurationObject);With the JSON server running, if you open up sample_form.html or index.html,you can test out the code above in the console. Try it and take a look indb.json: you should see that Byron the Poodle has been successfully persistedto our database.We can make our code a bit more general by splitting out the body of our requestinto a variable:const formData = {  dogName: \""Byron\"",  dogBreed: \""Poodle\"",};const configurationObject = {  method: \""POST\"",  headers: {    \""Content-Type\"": \""application/json\"",    \""Accept\"": \""application/json\"",  },  body: JSON.stringify(formData),};fetch(\""http://localhost:3000/dogs\"", configurationObject);Using the formData and configurationObject variables helps make our codemore readable and flexible, but, of course, we could instead just pass ananonymous object as the second argument to fetch():fetch(\""http://localhost:3000/dogs\"", {  method: \""POST\"",  headers: {    \""Content-Type\"": \""application/json\"",    \""Accept\"": \""application/json\"",  },  body: JSON.stringify({    dogName: \""Byron\"",    dogBreed: \""Poodle\"",  }),});All three approaches yield the same results!Note: As a security precaution, most modern websites block the ability touse fetch() in console while on their website, so if you are testing out codein the browser, make sure to be on a page like index.html orsample_form.html.Handling What Happens AfterJust like when we use fetch() to send GET requests, we have to handleresponses to fetch(). As mentioned before, servers will send aResponse that might include useful information. To access thisinformation, we use a series of calls to then() which aregiven function callbacks.Building on the previous implementation we might write the following:const formData = {  dogName: \""Byron\"",  dogBreed: \""Poodle\"",};const configurationObject = {  method: \""POST\"",  headers: {    \""Content-Type\"": \""application/json\"",    \""Accept\"": \""application/json\"",  },  body: JSON.stringify(formData),};fetch(\""http://localhost:3000/dogs\"", configurationObject)  .then(function (response) {    return response.json();  })  .then(function (object) {    console.log(object);  });Notice that the first then() is passed a callback function that takes inresponse as an argument. This is a Response object, representingwhat the destination server sent back to us. This object has a built-in method,json(), that converts the body of the response from JSON to a plain oldJavaScript object. The result of json() is returned and made available in thesecond then(). In this example, whatever response.json() returns will belogged in console.log(object).Let's go ahead and send the example above to our JSON server in the console;once the request is successfully resolved, you should see the following log:{dogName: \""Byron\"", dogBreed: \""Poodle\"", id: 6} // Your ID value may be differentThe JSON server is sending back the data we sent, along with a new piece ofdata, an id, created by the server.When Things Go Wrong: Using catch()When something goes wrong in a fetch() request, JavaScript will look down thechain of .then() calls for something very similar to a then() called acatch() and, if it exists, execute it. This allows us to write code to \""handle\""the error. Say for instance, we forgot to add the HTTP verb to our POST request,and the fetch() defaults to GET. By including a catch() statement,JavaScript doesn't fail silently:const formData = {  dogName: \""Byron\"",  dogBreed: \""Poodle\"",};// method: \""POST\"" is missing from the object belowconst configurationObject = {  headers: {    \""Content-Type\"": \""application/json\"",    \""Accept\"": \""application/json\"",  },  body: JSON.stringify(formData),};fetch(\""http://localhost:3000/dogs\"", configurationObject)  .then(function (response) {    return response.json();  })  .then(function (object) {    console.log(object);  })  .catch(function (error) {    alert(\""Bad things! Ragnarők!\"");    console.log(error.message);  });If you try the code above in the console from index.html orsample_form.html, you should receive an alert window pop-up and a loggedmessage:Failed to execute 'fetch' on 'Window': Request with GET/HEAD method cannot have body.While catch() may not stop all silent errors, it is useful to have as a wayto gracefully handle unexpected results. We can use it, for instance, to displaya message in the DOM for a user, rather than leave them with nothing.ChallengeIt's time to practice writing your own POST request using fetch(). Inindex.js, write a function, submitData, that takes two strings as arguments,one representing a user's name and the other representing a user's email.The first two tests mirror the behavior of the JSON server. As you write yoursolution, keep the server running to test your code. Open index.html in abrowser to gain access to your submitData function in console.Note: The tests in this lab need access to the fetch() request insidesubmitData. In order to give them access, write your solution so thatsubmitData returns the fetch(). This will not change the behavior ofyour fetch().Test 1 - Send DataIn submitData, write a valid POST request to http://localhost:3000/usersusing fetch(). This request should include:The destination URLHeaders for 'Content-Type' and 'Accept', both set to 'application/json'A body with the name and email passed in as arguments to submitData. Theseshould be assigned to name and email keys within an object. This objectshould then be stringified.Test 2 - Handle the ResponseOn a successful POST request, expect the server to respond with aResponse object. Just like we saw earlier in the dog example, thebody property of this response will contain the data from the POST requestalong with a newly assigned id.Use a then() call to access the Response object and use its built-injson() method to parse the contents of the body property. Use a secondthen() to access this newly converted object. From this object, find the newid and append this value to the DOM.If JSON Server is running and index.html is open in the browser, you can testyour code in the console: calling submitData() in the console should cause anid number to appear on the page.Test 3 - Handle ErrorsFor this final test, after the two then() calls on your fetch() request,add a catch().When writing the callback function for your catch(), expect to receive anobject on error with a property, message, containing info about what wentwrong. Write code to append this message to the DOM when catch() is called.Test 4 - Return the Fetch ChainAn amazing feature of fetch() is that if you return it, other functionscan tack on their own then() and catch() calls. For this lab, you willneed to return the fetch() chain from our submitData function to ensure thatthe tests run correctly.ConclusionIn this lab, we learned how to use fetch requests to post data to a server.This allows us to override the default behavior of an HTML <form> element andhave greater control over the behavior of our form when it is submitted. It alsoenables us to improve our users' experience by rendering content without reloadingthe page.Specifically, we learned:In order to submit a POST request, we call fetch() and pass it twoarguments: the URL we're submitting the request to, and an object containingdetails about the request.This 'configuration' object needs to contain three properties: the method(\""POST\"" in this case), headers that provide some information about ourrequest, and the body of the request (i.e., the content we want to post).The body must be \""stringified\"" before it can be passed in the request.Just as with a GET request, the POST request returns a Response objectthat can be accessed and used to update the DOM using chained then calls.In addition to the thens, you can also chain a catch() function thatwill \""handle\"" unsuccessful requests.With this information, you can now use fetch() to send both GET and POSTrequests! This means we have the tools we need to stitch together server updates(reads and updates) with DOM updating and event handling. We're almost readyto build the \""Simple Liker\"" from scratch!"
72,72,learn-co-students/js-basics-online-shopping-lab-bootcamp-prep-000,https://github.com/learn-co-students/js-basics-online-shopping-lab-bootcamp-prep-000/blob/master/README.md,JavaScript,"Online ShoppingObjectivesModel a shopping cart full of items as an array of objects in JavaScript.Iterate over arrays with for loopsUse ES6 ${template literals} instead of \""regular, \"" + \""old \"" + string + \"" concatenation.\""Brush up on conditionals and control flow to make some Oxford comma magic happen.InstructionsWe've started you off with a cart variable that points at an empty array. There are five functions that you'll have to code in order to create a working shopping cart:The addToCart() function accepts one argument, the name of an item.Use that passed-in string to create a new object representing the item. The object should consist of two key-value pairs : { itemName: name of the item, itemPrice: price of the item, }. As more items are added, the cart should start to look something like this: [ {  itemName:\""bananas\"", itemPrice: 17 }, { itemName:\""pancake batter\"",itemPrice: 5 }, { itemName:\""eggs\"", itemPrice: 49 }].The price of each item should be a randomly-generated integer between 1 and 100.HINT: Look into Math.random() and Math.floor().Upon the successful addition of a new item to the cart, the function should return <itemName> has been added to your cart. .The viewCart() function does not accept any arguments. It should loop over every item in your cart, returning the contents as one long, coherent statement in this format: In your cart, you have bananas at $17, pancake batter at $5, and eggs at $49.If the cart is empty, the function should instead return Your shopping cart is empty.Note: Pay close attention to the syntax above. The returned statement should be a single sentence that begins with In your cart, you have , terminates in a period, and can assume the following shapes according to how many items the cart contains:1 item — In your cart, you have bananas at $17.2 items — In your cart, you have bananas at $17, and pancake batter at $5.3+ items — In your cart, you have bananas at $17, pancake batter at $5, and eggs at $49.The total() function accepts no arguments, iterates through the cart array, and returns the current total value of the items in the cart.The removeFromCart() function accepts one argument, the name of the item that should be removed.If the item is present in the cart, the function should remove the object from the cart and then return the updated cart.HINT: Check each object's itemName value key to see if it matches the parameter, then remove it if it matches. You might find Array.prototype.splice() to be useful.If the cart does not contain a matching item, the function should return That item is not in your cart.The placeOrder() function accepts one argument, a credit card number.If no argument is received, the function should print out Sorry, we don't have a credit card on file for you..If a card number is received, the function shouldempty the cart arrayreturn Your total cost is $71, which will be charged to the card 83296759. (where 71 is the value returned by total() and 83296759 is the credit card number passed to placeOrder())The final send-offThis lab is not easy! The methods, especially viewCart() require careful planning and a sharp eye. The cart array is a non-trivial nested data structure, and it would be a good idea to periodically check the value of your variables (think: console.log(), debugger, etc.) at different points within your functions, especially when attempting to iterate over the cart and its items.View Online Shopping Lab on Learn.co and start learning to code for free."
73,73,learn-co-curriculum/phase-0-git-basics-lab,https://github.com/learn-co-curriculum/phase-0-git-basics-lab/blob/master/README.md,JavaScript,"Git Basics LabLearning GoalsUnderstand how to complete assignmentsApply what you've learned about Git version controlInitialize a new Git repositoryStage and commit new contentCreate a remote repository on GitHubConnect the newly created local repository with the remote on GitHubIntroductionSo far lessons have only contained written content on specific topics. All youneeded to do was read through each lesson and continue on. This lesson, however,is considered an assignment. Assignments are exercises that have some writtencontent to guide you, but also ask you to complete some work of your own. Manyassignments, like this one, include tests that must be passed in order tocomplete the lesson. Assignments with tests are often referred to as a labs inour course.Now that you've learned about Git version control, in this lab, we're going togo through the entire process of creating a local Git repository, creating aninitial commit and pushing that work to a remote repo stored onGitHub.Getting StartedTo start work on this lab, you will first need to fork this assignment and cloneit to your local environment. Let's quickly review this process:StepsStep 1Click the Fork button at the top of this page in Canvas.Reminder: This button does the same thing as forking in GitHub(via the Octocat button). We recommend using the Fork button inCanvas.Step 2Choose to fork to your personal account if prompted. Once the forking processis complete, you should be looking at your personal copy of the assignment onGitHub.Step 3Click Code, choose SSH, then click the clipboard icon to copy theinformation we'll need about this repository.Step 4In your terminal, type git clone, and paste the info you copied fromGitHub. The command should look something like this (but with your personalaccount name):$ git clone git@github.com:<your-github-username>/phase-0-git-basics-lab.gitStep 5A folder will be created wherever you run this command. The folder name willbe the same as the repository, so in this case, phase-0-git-basics-lab.Navigate into this folder with cd phase-0-git-basics-lab.Once inside the folder, you are ready to work on the lab.Solving this LabOnce you're in your local clone of this lab, the first step is to run the lab'stests to get a sense of what you need to do. We do this with two terminalcommands. First, we run the following:$ npm installThis sets up the tools we'll use for testing. To run the tests, type the followingonce you regain control of the command line:$ npm testThis will run all the tests included for this lab. You should see a lot ofoutput, enough that you may need to scroll up in your terminal to see it all.Six failed tests should print out, starting with this:$ npm testthis lab  1) has a folder named my-repository  2) has a valid git repository initialized for the my-repository folder  3) has a README.md file in the my-repository folderthe local repository  4) has README.md as a tracked file  5) has at least one commit  6) has been pushed up to the remote repository0 passing (42ms)6 failing1) this lab     has a folder named my-repository:   AssertionError: no folder name \""my-repository\"" was found: value: expected './my-repository' to exist    at Function.<anonymous> (node_modules/chai-fs/lib/assertions/directory.js:21:53)    at Function.ctx.(anonymous function) [as directory] (node_modules/chai/lib/chai/utils/addMethod.js:41:25)    at Function.assert.isDirectory (node_modules/chai-fs/lib/assertions/directory.js:34:35)    at Context.it (test/index-test.js:11:19)    ...Each failed test includes an explanation.In the first test seen above, for instance, it saysthis lab has a folder named my-repository, followed byAssertionError: no folder name \""my-repository\"" was found.This first test is looking specifically for a folder, my-repository, to existinside this lab's main directory (or \""folder\""). You probably have a theory onhow to correct that test after seeing that error! We're going to use thesetests to let us know when we're all done.InstructionsIMPORTANT TIPS TO AVOID GETTING STUCKThe work you will do to set up the Git repository will be done in themy-repository directory (after you create it ;)). If you're doing gitcommands in the same directory as THIS README that you're reading right now,you're not going to get to working tests.When you run the tests, you will need to be in the top-level directory ofthis lab, (phase-0-git-basics-lab, the directory with the README you'rereading right now in it).Follow the steps provided below carefully to help ensure you are doing things inthe right location.StepsAs we saw above, there are six broken tests. Let's get them working.Step 1Create a new directory locally named my-repository. This directory should beside by side with the test directory of this lab. Use the Unix command tocreate this directory. From the top-level of this lab, the parent directory ofmy-repository, run npm test and verify there are only 5 broken tests left.Step 2Navigate into the new directory my-repository using cd on the command line.Step 3While inside my-repository, using the command line, initialize a new gitrepository. You'll know you've done it if you see 'Initialized empty Gitrepository in <...your local directory>/my-repository/.git/'>. Changeback-up to the parent directory and you should be back in the top-leveldirectory. Run npm test again and you should be down to four tests left.If that's true, change back into my-repository.Step 4Create a file (not a folder) called README.md inside my-repository.Step 5If you run git status at the command line, you should see that README.mdis now listed as an untracked file. Add README.md so that it is tracked byGit.Step 6Once the file is tracked, running git status again will show thatREADME.md is staged and ready to be committed. Go ahead and create a commit onthe command line (don't forget to add -m when committing to include amessage!).NOTE: If you forget to include -m when committing, you may find you'veopened vi, the built in terminal text editor. To escape out of this editor,press the 'esc' key once, then type :q! to close the editor and return tothe normal terminal.Step 7Change back to the top-level directory, run npm test, and you'll seethat the test output is looking pretty successful:$ npm test  this lab    ✓ has a folder named my-repository    ✓ has a valid git repository initialized for the my-repository folder    ✓ has a README.md file in the my-repository folder  the local repository    ✓ has README.md as a tracked file    ✓ has at least one commit    1) has been pushed up to the remote repository  5 passing (18ms)  1 failing  1) the local repository       has been pushed up to the remote repository:     AssertionError: no record of pushing to a remote was found. Follow the instructions on GitHub to connect and push to a new remote repository: value: expected './my-repository/.git/logs/refs/remotes' to existAlmost done! Change back into the my-repository directory.Step 8Create a remote repository on GitHub using your personal GitHubaccount and connect it to your newly created local repository.When we create a blank repository, we are given multiple options for how to getstarted. Since we have a local folder with Git initialized already, we'll usethe instructions for creating a new repository using the command line.If you've been following along, you may notice that the first commands listedare things you've already done - git init initialized the my-repositorydirectory as a local Git repository; git add README.md tracks the README.mdfile (you may have used git add ., which will work too);git commit -m \""first commit\"" commits the newly created README.md file with amessage.The remaining commands still need to be run. First we run the following:$ git branch -M mainIf you recall from the version control basics lesson, going forward main willbe used as the default name of the... main... branch in a repository. Dependingon your environment you may still have an older version of Git that defaults tomaster. If this is the case, the above command will change this masterbranch to main.After setting the branch, we need to add the newly created GitHub repo as theremote for your local my-repository repo. This command will include infospecific to your GitHub account and the name you gave your GitHub repo:$ git remote add origin git@github.com:<your-github-username>/<your-github-repository>.gitStep 9The last step listed pushes your local work up to the remote:$ git push -u origin mainStep 10Change back up to the top-level directory and run npm test oncemore, your tests should all be passing.Once you've passed all tests, if you visit the newly created remote repositoryon GitHub, you should see that the README.md file you created is now present.Additional PracticeWe recommend taking time to become familiar with Git commands since you'll berelying on them a lot. If you'd like to practice further, change directoryback into the my-repository folder and try the following:Create another file, then add, commit, and push to the remoteModify the contents of README.md, then add, commit, and push to the remoteRename README.md, then add, commit, and push to the remoteWrapping UpIf you would like to preserve the work you've done for this lab on GitHub,you'll need to push it up to your fork of this assignment. Change directory tothe top-level once again, then run the following:$ git add .$ git commit -m \""Done with assignment\""$ git push origin masterNote that this assignment was created with a master branch as the default, sothe push command is different than when you pushed my-repository.ConclusionAs you become more comfortable with the terminal and Git, you'll find yourselfusing the workflow of initializing, adding, committing and pushing your work ona regular basis. These commands are at the core of Git version control. Byknowing them, you now have the ability to create your own repositories andcontribute to repositories that already exist.In this lab you used tests to guide you in the basics of setting up a new localGit repository and binding it to a remote repository on GitHub. By pushing yourwork to a remote repository you've backed it up and made it available for theworld to see via GitHub. Professional developers use this process to share codewith each other, to document their code, and to earn interview slots by showingoff what they're capable of. You did this guided by tests. It's common fordevelopers to write tasks as tests that all fail and then slowly work to getthem all passing. It's like a to-do list that verifies you've actually done thework!"
74,74,learn-co-students/javascript-strings-lab-js-intro-000,https://github.com/learn-co-students/javascript-strings-lab-js-intro-000/blob/master/README.md,JavaScript,"JavaScript Strings LabOverviewIn this lab, we're going to work with strings. Strings in JavaScript are wrapped in single or double quotes, or in back ticks.ObjectivesManipulate strings in JavaScriptPractice interpolating with template literalsIntroductionImagine we're planning a birthday party for Bill Nye. There are going to be a lot of people there, so we're going to use JavaScript to help us keep everything straight.First, we need to practice greeting everyone. (I don't know about you, but I sometimes get nervous and say the dumbest things — but we don't want to embarrass ourselves in front of Bill Nye!)One might think that we could just typeHello, everybody!in our browser's console and be done with it. Give it a try. (If you're on a Mac, that would be Command + Option + J together.)You should see something likeUncaught ReferenceError: Hello is not defined(…)Well, that won't work. (This is why we practice!) In order to greet our guests, we need to tell JavaScript that we're using a string. A string is a collection of characters (letters, numbers, and symbols) wrapped in single or double quotes (or, as we'll see, in back ticks). So to greet everyone, we can write,'Hello, everybody!'or\""Hello, everybody!\""Single or double quotation marks can contain a string variable..What if we want to say hi to a special guest, like Neil deGrasse Tyson? When we wrap strings in single or double quotes, we can join them together using the + operator:var specialGuest = \""Neil deGrasse Tyson\""\""Hello, \"" + specialGuest + \""!\"" // \""Hello, Neil deGrasse Tyson!\""This is called concatenation. Notice that the value of the specialGuest variable is also a string!TOP TIP: Your console might be getting a little full at this point. If at any point you'd like to clear it out and start fresh, you can either click the button in the top left corner of the console — in Chrome, it looks like this:Alternatively, you can press ctrl + L or command + K. As long as you don't refresh the page, anything you've declared will stick around for you to reference — you'll just get a nice blank slate on which to code.When we wrap strings in back ticks, we can use placeholders (${}) and insert variables or evaluated JavaScript directly:var specialGuest = \""Neil deGrasse Tyson\"";`Hello, ${specialGuest}! High ${3 + 2}!` // \""Hello, Neil deGrasse Tyson! High 5!\""This is called interpolation.LabYou'll find a file called index.js in this directory. Your mission, should you choose to accept it, is to get its tests (in tests/index-test.js) to pass.You can run the tests using the learn command in your terminal or the Learn IDE. Give that a go now.All three tests have failed! This is okay, and it's expected — you haven't written any code yet, after all.In index.js, you'll see five lines of code:var greeting = \""\"";var specialGuest = \""Neil deGrasse Tyson\""var greetSpecialGuest = \""\"" + specialGuest + \""!\"";var topic = \""space\"";var conversation = `${topic}`;Each line has a test associated with it. When the tests fail, they show us what the expected value is — your job is to make that expectation a reality by modifying the code provided.When you first run learn, you should see something like this:Let's walk through that first error together. First, we see the test title:1) strings defines `greeting`:The title tells us what the test expects our code to do. In this case,\""strings\"" refers to the general problem space in which we're working —we're handling strings.Continuing on with the test output, we can now make better sense of the next few lines:AssertionError: '!' == 'Hello, everybody!'+ expected - actual- !+Hello, everybody!This is a lot to take in, so we'll go through it slowly.What could AssertionError mean? Well, it probably means that our test asserted (or expected) that something would be true, and that thing wasn't true.What is that thing? The test expected the empty string, '', to be equal to the string 'Hello, everybody!' — but, of course, these strings are not equal.+ expected - actual is a key for reading the statements below it. + expected tells us that the expected output shows up in that yellowish green; - actual tells us what actually happened.But reading on, we only see +Hello, everybody! — what's going on? Why isn't there any - actual output? Well, there was no actual output — it's just an empty string! That must be the problem!Next, the title tells us that index.js \""defines greeting.\"" Let's look in index.js — sure enough, we see, at the top of the file, var greeting = \""\"";. Seems like a reasonable place to start.What if, instead of assigning \""\"" to greeting, we assign \""Hello, everybody!\"", like the test expects. Go ahead and change that line in index.js so it readsvar greeting = \""Hello, everybody!\"";save the file, and rerun your tests. You should seeNice! You got the first test to pass.Now use the skills that you learned above to read through the rest of the test output and fix those errors, too! Always remember to save your file before re-running your tests.NOTE: Because we're dealing with some low-level language features, you might spot some easy ways to \""cheat\"" on this lab, or this lab might seem frustratingly easy. We've given you some starter code to point you in the right direction — try to solve the lab as intended! You can then compare your solution with ours (found in the solution branch of this repository).When your tests are passing, submit your answer by typing in learn submit in the command line or else create a pull request (use learn submit if \""pull request\"" sounds a bit terrifying).Good luck!View JavaScript Strings Lab on Learn.co and start learning to code for free."
75,75,ibm-developer-skills-network/qkfls-Movie-Reviews-Database,https://github.com/ibm-developer-skills-network/qkfls-Movie-Reviews-Database/blob/master/README.md,JavaScript,Movies Review Database
76,76,dangrossman/daterangepicker,https://github.com/dangrossman/daterangepicker/blob/master/README.md,JavaScript,"Date Range PickerThis date range picker component creates a dropdown menu from which a user canselect a range of dates. I created it while building the UI for Improvely,which needed a way to select date ranges for reports.Features include limiting the selectable date range, localizable strings and date formats,a single date picker mode, a time picker, and predefined date ranges.Documentation and Live Usage ExamplesSee It In a Live ApplicationLicenseThe MIT License (MIT)Copyright (c) 2012-2020 Dan GrossmanPermission is hereby granted, free of charge, to any person obtaining a copyof this software and associated documentation files (the \""Software\""), to dealin the Software without restriction, including without limitation the rightsto use, copy, modify, merge, publish, distribute, sublicense, and/or sellcopies of the Software, and to permit persons to whom the Software isfurnished to do so, subject to the following conditions:The above copyright notice and this permission notice shall be included inall copies or substantial portions of the Software.THE SOFTWARE IS PROVIDED \""AS IS\"", WITHOUT WARRANTY OF ANY KIND, EXPRESS ORIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THEAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHERLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS INTHE SOFTWARE."
77,77,fabricjs/fabric.js,https://github.com/fabricjs/fabric.js/blob/master/README.md,JavaScript,"Fabric.jsA simple and powerful Javascript HTML5 canvas library.WebsiteGOTCHASContributing, Developing and MoreFeaturesOut of the box interactions such as scale, move, rotate, skew, group...Built in shapes, controls, animations, image filters, gradients, patterns, brushes...JPG, PNG, JSON and SVG i/oTyped and modularUnit testedSupported Browsers/EnvironmentsContextSupported VersionNotesFirefox✔️modern version (tbd)Safari✔️version >= 10.1Opera✔️chromium basedChrome✔️modern version (tbd)Edge✔️chromium basedEdge Legacy❌IE11❌Node.js✔️Node.js installationFabric.js Does not use transpilation by default, the browser version we support is determined by the level of canvas api we want to use and some js syntax. While JS can be easily transpiled, canvas API can't.Migrating to v6v6 is a MAJOR effort including migrating to TS and es6, countless fixes, rewrites and features.Currently in beta, refer to #8299 for guidance.$ npm install fabric@beta --save// or$ yarn add fabric@betaInstallation$ npm install fabric --save// or$ yarn add fabricBrowserSee browser modules for using es6 imports in the browser or use a dedicated bundler.Node.jsFabric.js depends on node-canvas for a canvas implementation (HTMLCanvasElement replacement) and jsdom for a window implementation on node.This means that you may encounter node-canvas limitations and bugs.Follow these instructions to get node-canvas up and running.Quick Start// v6import { Canvas, Rect } from 'fabric'; // browserimport { StaticCanvas, Rect } from 'fabric/node'; // node// v5import { fabric } from 'fabric';Plain HTML<canvas id=\""canvas\"" width=\""300\"" height=\""300\""></canvas><script src=\""https://cdn.jsdelivr.net/npm/fabric\""></script><script>  const canvas = new fabric.Canvas('canvas');  const rect = new fabric.Rect({    top: 100,    left: 100,    width: 60,    height: 70,    fill: 'red',  });  canvas.add(rect);</script>ReactJSimport React, { useEffect, useRef } from 'react';import * as fabric from 'fabric'; // v6import { fabric } from 'fabric'; // v5export const FabricJSCanvas = () => {  const canvasEl = useRef<HTMLCanvasElement>(null);  useEffect(() => {    const options = { ... };    const canvas = new fabric.Canvas(canvasEl.current, options);    // make the fabric.Canvas instance available to your app    updateCanvasContext(canvas);    return () => {      updateCanvasContext(null);      canvas.dispose();    }  }, []);  return <canvas width=\""300\"" height=\""300\"" ref={canvasEl}/>;};Node.jsimport http from 'http';import * as fabric from 'fabric/node'; // v6import { fabric } from 'fabric'; // v5const port = 8080;http  .createServer((req, res) => {    const canvas = new fabric.Canvas(null, { width: 100, height: 100 });    const rect = new fabric.Rect({ width: 20, height: 50, fill: '#ff0000' });    const text = new fabric.Text('fabric.js', { fill: 'blue', fontSize: 24 });    canvas.add(rect, text);    canvas.renderAll();    if (req.url === '/download') {      res.setHeader('Content-Type', 'image/png');      res.setHeader('Content-Disposition', 'attachment; filename=\""fabric.png\""');      canvas.createPNGStream().pipe(res);    } else if (req.url === '/view') {      canvas.createPNGStream().pipe(res);    } else {      const imageData = canvas.toDataURL();      res.writeHead(200, '', { 'Content-Type': 'text/html' });      res.write(`<img src=\""${imageData}\"" />`);      res.end();    }  })  .listen(port, (err) => {    if (err) throw err;    console.log(      `> Ready on http://localhost:${port}, http://localhost:${port}/view, http://localhost:${port}/download`    );  });See our ready to use templates.Other SolutionsProjectDescriptionDemoThree.js3D graphicsPixiJSWebGL rendererKonvaSimilar features❌html-to-imageHTML to image/canvasMore ResourcesDemos on fabricjs.comFabric.js on TwitterFabric.js on CodeTriageFabric.js on Stack OverflowFabric.js on jsfiddleFabric.js on Codepen.ioCredits kangaxasturur on Twittermelchiar ShaMan123 Ernest Delgado for the original idea of manipulating images on canvasMaxim \""hakunin\"" Chernyak for ideas, and help with various parts of the library throughout its lifeSergey Nisnevich for help with geometry logicStefan Kienzle for help with bugs, features, documentation, GitHub issuesShutterstock for the time and resources invested in using and improving Fabric.jsand all the other contributors"
78,78,jklepatch/eattheblocks,https://github.com/jklepatch/eattheblocks/blob/master/README.md,JavaScript,EaTheBlocksBlockchain tutorials of EatTheBlocks. Learn how to build DecentralizedApplications (Dapps) on Ethereum and Solidity Smart contractsCovers:EthereumSolidityWeb3TruffleDeFi (Decentralized Finance)OrganizationYoutube: screencast folderCourses: other foldersCourses6-Figures Blockchain DevelopmentProfitable Flashloan
79,79,angular/quickstart,https://github.com/angular/quickstart/blob/master/README.md,JavaScript,"Angular QuickStart SourceThis repository is now deprecated. The Angular Quickstart project was a nice starting point for creating Angular applications. Now we recommend using the Angular CLI to create new Angular projects.Starting from 1 November 2017, all the Angular documentation, at angular.io, is based on the Angular CLI.Let's get startedThis repository holds the TypeScript source code of the angular.io quickstart,the foundation for most of the documentation samples and potentially a good starting point for your application.It's been extended with testing support so you can start writing tests immediately.This is not the perfect arrangement for your application. It is not designed for production.It exists primarily to get you started quickly with learning and prototyping in AngularWe are unlikely to accept suggestions about how to grow this QuickStart into something it is not.Please keep that in mind before posting issues and PRs.Updating to a newer version of the Quickstart RepoFrom time to time the QuickStart will be enhanced with support for new features or to reflectchanges to the official Style Guide.You can update your existing project to an up-to-date QuickStart by following these instructions:Create a new project using the instructions belowCopy the code you have in your project's main.ts file onto src/app/main.ts in the new projectCopy your old app folder into src/appDelete src/app/main.ts if you have one (we now use src/main.ts instead)Copy your old index.html, styles.css and tsconfig.json into src/Install all your third party dependenciesCopy your old e2e/ folder into e2e/Copy over any other files you added to your projectCopy your old .git folder into your new project's rootNow you can continue working on the new project.PrerequisitesNode.js and npm are essential to Angular development.Get it now if it's not already installed on your machine.Verify that you are running at least node v4.x.x and npm 3.x.xby running node -v and npm -v in a terminal/console window.Older versions produce errors.We recommend nvm for managing multiple versions of node and npm.Create a new project based on the QuickStartClone this repo into new project folder (e.g., my-proj).git clone https://github.com/angular/quickstart  my-projcd my-projWe have no intention of updating the source on angular/quickstart.Discard the .git folder..rm -rf .git  # OS/X (bash)rd .git /S/Q # windowsDelete non-essential files (optional)You can quickly delete the non-essential files that concern testing and QuickStart repository maintenance(including all git-related artifacts such as the .git folder and .gitignore!)by entering the following commands while in the project folder:OS/X (bash)xargs rm -rf < non-essential-files.osx.txtrm src/app/*.spec*.tsrm non-essential-files.osx.txtWindowsfor /f %i in (non-essential-files.txt) do del %i /F /S /Qrd .git /s /qrd e2e /s /qCreate a new git repoYou could start writing code now and throw it all away when you're done.If you'd rather preserve your work under source control, consider taking the following steps.Initialize this project as a local git repo and make the first commit:git initgit add .git commit -m \""Initial commit\""Recover the deleted .gitignore from the QuickStart repositoryif you lost it in the Delete non-essential files step.Create a remote repository for this project on the service of your choice.Grab its address (e.g. https://github.com/<my-org>/my-proj.git) and push the local repo to the remote.git remote add origin <repo-address>git push -u origin masterInstall npm packagesSee npm and nvm version notes aboveInstall the npm packages described in the package.json and verify that it works:npm installnpm startDoesn't work in Bash for Windows which does not support servers as of January, 2017.The npm start command first compiles the application,then simultaneously re-compiles and runs the lite-server.Both the compiler and the server watch for file changes.Shut it down manually with Ctrl-C.You're ready to write your application.npm scriptsWe've captured many of the most useful commands in npm scripts defined in the package.json:npm start - runs the compiler and a server at the same time, both in \""watch mode\"".npm run build - runs the TypeScript compiler once.npm run build:w - runs the TypeScript compiler in watch mode; the process keeps running, awaiting changes to TypeScript files and re-compiling when it sees them.npm run serve - runs the lite-server, a light-weight, static file server, written and maintained byJohn Papa andChristopher Martinwith excellent support for Angular apps that use routing.Here are the test related scripts:npm test - compiles, runs and watches the karma unit testsnpm run e2e - compiles and run protractor e2e tests, written in Typescript (*e2e-spec.ts)TestingThe QuickStart documentation doesn't discuss testing.This repo adds both karma/jasmine unit test and protractor end-to-end testing support.These tools are configured for specific conventions described below.It is unwise and rarely possible to run the application, the unit tests, and the e2e tests at the same time.We recommend that you shut down one before starting another.Unit TestsTypeScript unit-tests are usually in the src/app folder. Their filenames must end in .spec.ts.Look for the example src/app/app.component.spec.ts.Add more .spec.ts files as you wish; we configured karma to find them.Run it with npm testThat command first compiles the application, then simultaneously re-compiles and runs the karma test-runner.Both the compiler and the karma watch for (different) file changes.Shut it down manually with Ctrl-C.Test-runner output appears in the terminal window.We can update our app and our tests in real-time, keeping a weather eye on the console for broken tests.Karma is occasionally confused and it is often necessary to shut down its browser or even shut the command down (Ctrl-C) andrestart it. No worries; it's pretty quick.End-to-end (E2E) TestsE2E tests are in the e2e directory, side by side with the src folder.Their filenames must end in .e2e-spec.ts.Look for the example e2e/app.e2e-spec.ts.Add more .e2e-spec.js files as you wish (although one usually suffices for small projects);we configured Protractor to find them.Thereafter, run them with npm run e2e.That command first compiles, then simultaneously starts the lite-server at localhost:8080and launches Protractor.The pass/fail test results appear at the bottom of the terminal window.A custom reporter (see protractor.config.js) generates a  ./_test-output/protractor-results.txt filewhich is easier to read; this file is excluded from source control.Shut it down manually with Ctrl-C."
80,80,heroku/flow-demo,https://github.com/heroku/flow-demo/blob/master/README.md,JavaScript,"Heroku Flow DemoA barebones Node.js app using Express 4.Running LocallyMake sure you have Node.js and the Heroku Toolbelt installed.git clone git@github.com:heroku/button-sample.git # or clone your own forkcd button-samplenpm installnpm startYour app should now be running on localhost:5000.Deploying to Herokuheroku creategit push heroku masterheroku openAlternatively, you can deploy your own copy of the app using this button:DocumentationFor more information about using Heroku, check out https://devcenter.heroku.com/"
81,81,nexusNw/Gojo-Satoru,https://github.com/nexusNw/Gojo-Satoru/blob/master/README.md,JavaScript,"Gojo-SatoruAutomated Multi Device whatsapp bot created by nexusNwDont forget to give a star bro.🥲 IF Heroku Deploy seems Error, Fork This Repo And Try Deploy AgainIf The Api Of This Bot Run Empty You Can Change it To Your Own Api By Changing Here And Register here to get apikey RequirementsSome Text EditorNode JSGitFFMPEGAdd FFmpeg to PATH environment variableStart via HerokuScan QR In Your Whatsapp From HereFork This Repo By Clicking Herethen Deploy The Bot From HereWait 5-10 Min To DeployAfter Deploying On The Worker And Check The LogsInstallation on Termux> apt update> apt upgrade> pkg update && pkg upgrade> pkg install bash> pkg install libwebp> pkg install git -y> pkg install nodejs -y > pkg install ffmpeg -y > pkg install wget> pkg install imagemagick -y> git clone https://github.com/nexusNw/Gojo-Satoru> cd Gojo-Satoru> npm installEdit settings.jsglobal.APIKeys = {\t'https://zenzapis.xyz': 'YOURAPIKEY',}  global.owner = [\""9181XXXXXX\""]global.ownername = [\""YourName\""]For 24 Hours Activationnpm i -g pm2 && pm2 start index.js && pm2 save && pm2 logsAvailable FeaturesFeaturesAvailabilityConvert✅Database✅Owner✅Islami✅Downloader✅Webzone✅[Searching✅Textpro✅Ephoto✅Anime Web✅Stalker✅Random Text✅Random Image✅Nekos Life✅More Nsfw✅Creator✅ContactConnect With MeThanks To@adiwajshing/baileysAlien-AlfaDGXeonAflahXrdLicense: MIT"
82,82,bloominstituteoftechnology/web-module-challenge-prototypes,https://github.com/bloominstituteoftechnology/web-module-challenge-prototypes/blob/main/README.md,JavaScript,"Constructors, Prototypes and thisJavaScript FundamentalsObjectivesexplain the four principles of the 'this' keyword and demonstrate each explanation with an example of their usesdescribe, and use prototypes, constructor functions the new keyword, and pseudo-classical inheritance to build objectsIntroductionIn order to complete these tasks you will need your newly aquired knowledge of constructor functions, prototypes, and the this keyword.InstructionsTask 1: Set up ProjectUsing VSCode and Command Line:Fork the repoGo into canvas and connect your reop to codegradeClone your forked version of the repoDO NOT CREATE A BRANCH. You will be pushing your changes to the main/master todaycd into your repoopen the terminal in your vs code and type npm installnext type npm run test in your terminalComplete your work making regular commits to main/ master your codegrade score will update each time you make a push.Task 2 - MVPFind the file index.js and complete tasks 1, 2 and 3 until all of your tests pass.There is an additional task 4 which requires written explanations and has no tests.If you run into trouble while coding, fight the good fight for 20 minutes and then get on the help channel. Remember to formulate your help request in a professional manner - like you would at the job - by including error messages, screenshots, and any other pertinent information about the problem, as well as what things you have attempted already while trying to solve it.Testing & DebuggingOpen a second terminal inside of your project by clicking on the split terminal iconInside of your second terminal type npm startYou will be running your tests in one terminal and debugging in the other. As you work on your code you should make use of console.log to check your progress and debug.Task 3 - StretchThere are stretch goals found throughout index.js. Do not start work on these until you have finished MVP.ResourcesWhat the Beep is this in JavaScript?Submission formatPlease submit your project via codegrade by following these instructions See part 2, submitting an assignment with codegrade"
83,83,learn-co-students/javascript-strings-lab-js-apply-000,https://github.com/learn-co-students/javascript-strings-lab-js-apply-000/blob/master/README.md,JavaScript,"JavaScript Strings LabOverviewIn this lab, we're going to work with strings. Strings in JavaScript are wrapped in single or double quotes, or in back ticks.ObjectivesManipulate strings in JavaScriptPractice interpolating with template literalsIntroductionImagine we're planning a birthday party for Bill Nye. There are going to be a lot of people there, so we're going to use JavaScript to help us keep everything straight.First, we need to practice greeting everyone. (I don't know about you, but I sometimes get nervous and say the dumbest things — but we don't want to embarrass ourselves in front of Bill Nye!)One might think that we could just typeHello, everybody!in our browser's console and be done with it. Give it a try. (If you're on a Mac, that would be Command + Option + J together.)You should see something likeUncaught ReferenceError: Hello is not defined(…)Well, that won't work. (This is why we practice!) In order to greet our guests, we need to tell JavaScript that we're using a string. A string is a collection of characters (letters, numbers, and symbols) wrapped in single or double quotes (or, as we'll see, in back ticks). So to greet everyone, we can write,'Hello, everybody!'or\""Hello, everybody!\""Single or double quotation marks can contain a string variable..What if we want to say hi to a special guest, like Neil deGrasse Tyson? When we wrap strings in single or double quotes, we can join them together using the + operator:var specialGuest = \""Neil deGrasse Tyson\""\""Hello, \"" + specialGuest + \""!\"" // \""Hello, Neil deGrasse Tyson!\""This is called concatenation. Notice that the value of the specialGuest variable is also a string!TOP TIP: Your console might be getting a little full at this point. If at any point you'd like to clear it out and start fresh, you can either click the button in the top left corner of the console — in Chrome, it looks like this:Alternatively, you can press ctrl + L or command + K. As long as you don't refresh the page, anything you've declared will stick around for you to reference — you'll just get a nice blank slate on which to code.When we wrap strings in back ticks, we can use placeholders (${}) and insert variables or evaluated JavaScript directly:var specialGuest = \""Neil deGrasse Tyson\"";`Hello, ${specialGuest}! High ${3 + 2}!` // \""Hello, Neil deGrasse Tyson! High 5!\""This is called interpolation.LabYou'll find a file called index.js in this directory. Your mission, should you choose to accept it, is to get its tests (in tests/index-test.js) to pass.You can run the tests using the learn command in your terminal or the Learn IDE. Give that a go now.All three tests have failed! This is okay, and it's expected — you haven't written any code yet, after all.In index.js, you'll see five lines of code:var greeting = \""\"";var specialGuest = \""Neil deGrasse Tyson\""var greetSpecialGuest = \""\"" + specialGuest + \""!\"";var topic = \""space\"";var conversation = `${topic}`;Each line has a test associated with it. When the tests fail, they show us what the expected value is — your job is to make that expectation a reality by modifying the code provided.When you first run learn, you should see something like this:Let's walk through that first error together. First, we see the test title:1) strings defines `greeting`:The title tells us what the test expects our code to do. In this case,\""strings\"" refers to the general problem space in which we're working —we're handling strings.Continuing on with the test output, we can now make better sense of the next few lines:AssertionError: '!' == 'Hello, everybody!'+ expected - actual- !+Hello, everybody!This is a lot to take in, so we'll go through it slowly.What could AssertionError mean? Well, it probably means that our test asserted (or expected) that something would be true, and that thing wasn't true.What is that thing? The test expected the empty string, '', to be equal to the string 'Hello, everybody!' — but, of course, these strings are not equal.+ expected - actual is a key for reading the statements below it. + expected tells us that the expected output shows up in that yellowish green; - actual tells us what actually happened.But reading on, we only see +Hello, everybody! — what's going on? Why isn't there any - actual output? Well, there was no actual output — it's just an empty string! That must be the problem!Next, the title tells us that index.js \""defines greeting.\"" Let's look in index.js — sure enough, we see, at the top of the file, var greeting = \""\"";. Seems like a reasonable place to start.What if, instead of assigning \""\"" to greeting, we assign \""Hello, everybody!\"", like the test expects. Go ahead and change that line in index.js so it readsvar greeting = \""Hello, everybody!\"";save the file, and rerun your tests. You should seeNice! You got the first test to pass.Now use the skills that you learned above to read through the rest of the test output and fix those errors, too! Always remember to save your file before re-running your tests.NOTE: Because we're dealing with some low-level language features, you might spot some easy ways to \""cheat\"" on this lab, or this lab might seem frustratingly easy. We've given you some starter code to point you in the right direction — try to solve the lab as intended! You can then compare your solution with ours (found in the solution branch of this repository).When your tests are passing, submit your answer by typing in learn submit in the command line or else create a pull request (use learn submit if \""pull request\"" sounds a bit terrifying).Good luck!View JavaScript Strings Lab on Learn.co and start learning to code for free."
84,84,openlayers/openlayers,https://github.com/openlayers/openlayers/blob/main/README.md,JavaScript,"OpenLayersOpenLayers is a high-performance, feature-packed library for creating interactive maps on the web. It can display map tiles, vector data and markers loaded from any source on any web page. OpenLayers has been developed to further the use of geographic information of all kinds. It is completely free, Open Source JavaScript, released under the BSD 2-Clause License.Getting StartedInstall the ol package:npm install olImport just what you need for your application:import Map from 'ol/Map';import View from 'ol/View';import TileLayer from 'ol/layer/Tile';import XYZ from 'ol/source/XYZ';new Map({  target: 'map',  layers: [    new TileLayer({      source: new XYZ({        url: 'https://tile.openstreetmap.org/{z}/{x}/{y}.png'      })    })  ],  view: new View({    center: [0, 0],    zoom: 2  })});See the following examples for more detail on bundling OpenLayers with your application:Using ViteUsing RollupUsing webpackUsing ParcelFor more detail on quick prototyping without the use of a Node.js based setup, see the Skypack example.SponsorsOpenLayers appreciates contributions of all kinds.  We especially want to thank our fiscal sponsors who contribute to ongoing project maintenance.Pozi helps connect communities through spatial thinking.We love Openlayers and it forms a core part of our platform.https://pozi.com/ https://app.pozi.com/yey'maps is a scalable cloud GIS suite that is developed with thepowerful Openlayers API and the GDAL library.https://www.yeymaps.io/We develop leading Physical Security Information Management (PSIM) software.OpenLayers is the core of our map engine and we love it!https://ela.pl/We advance holistic utilization and availability of spatial information,for a better planned, built and managed society.https://www.ubigu.fi/Build custom maps and identify insights across real estate, engineering, research, business, exploration, construction, manufacturing - and so much more.https://www.scribblemaps.com/See our GitHub sponsors page or Open Collective if you too are interested in becoming a regular sponsor.TypeScript supportThe ol package includes auto-generated TypeScript declarations as *.d.ts files.Supported BrowsersOpenLayers runs on all modern browsers (with greater than 1% global usage).  This includes Chrome, Firefox, Safari and Edge. For older browsers, polyfills will likely need to be added.DocumentationCheck out the hosted examples, the workshop or the API documentation.BugsPlease use the GitHub issue tracker for all bugs and feature requests. Before creating a new issue, do a quick search to see if the problem has been reported already.ContributingPlease see our guide on contributing if you're interested in getting involved.CommunityNeed help? Find it on Stack Overflow using the tag 'openlayers'Follow @openlayers on Twitter"
85,85,learn-co-curriculum/phase-1-destructuring-assignment,https://github.com/learn-co-curriculum/phase-1-destructuring-assignment/blob/master/README.md,JavaScript,"Destructuring AssignmentLearning GoalsUse destructuring assignment to assign data to variablesIntroductionAs developers, sometimes we receive information in a collection (e.g., anObject) and we want to \""pick and choose\"" elements out of the collection. It'sa major pain to individually extract each property / value pair out of anObject and then assign it to a variable.Destructuring lets us type less and be more clear about what we want to pullout of an Object.  Not only does destructuring help when working with data inyour application, it's essential for understanding how to get JavaScript toinclude third-party code (like you find on npm).Use Destructuring Assignment to Assign Data to VariablesIn JavaScript, when we want to assign data from an object to single variables,we know how do it individually like so:const doggie = {  name: 'Buzz',  breed: 'Great Pyrenees',  furColor: 'black and white',  activityLevel: 'sloth-like',  favoriteFood: 'hot dogs'};const name = doggie.name;const breed = doggie.breed;name; // => \""Buzz\""breed; // => \""Great Pyrenees\""This is repetitive code. The process is:Declare a variable with a name (e.g. name or breed)Use that variable's name to point to an attribute in the Object whose namematches the name of the variable (e.g. doggie.breed or doggie.name)Assign the attribute's value to the created variableJavaScript gives us the ability to perform this task with one simple line ofcode.const doggie = {  name: 'Buzz',  breed: 'Great Pyrenees',  furColor: 'black and white',  activityLevel: 'sloth-like',  favoriteFood: 'hot dogs'};const { name, breed } = doggie;name; // => \""Buzz\""breed; // => \""Great Pyrenees\""The {} around the variable names tells the JavaScript engine that it's goingto be pulling values from an Object. The engine looks inside the doggieobject for the attributes name and breed and assigns the values associatedwith those keys to the corresponding variable names. This is known asdestructuring assignment.Note that because the engine is looking for the attributes by their keys, theorder inside the {} doesn't matter — this works as well:const { breed, name } = doggie;name; // => \""Buzz\""breed; // => \""Great Pyrenees\""We can also use destructuring assignment with a nested data structure:const doggie = {  name: 'Buzz',  breed: 'Great Pyrenees',  furColor: 'black and white',  activityLevel: 'sloth-like',  favoriteFoods: {    meats:{      ham: 'smoked',      hotDog: 'Oscar Meyer',    },    cheeses:{      american: 'kraft'    }  }};const { ham, hotDog } = doggie.favoriteFoods.meats;ham; // => \""smoked\""hotDog; // => \""Oscar Meyer\""We've simply \""drilled down\"" to the object we want to access by chaining thekeys: doggie.favoriteFoods.meats.Using Destructuring Assignment with ArraysDestructuring does not just work on objects — we can use the same syntaxwith Arrays.const dogs = ['Great Pyrenees', 'Pug', 'Bull Mastiff'];const [medium, small, giant] = dogs;console.log(medium, small, giant); // LOG: Great Pyrenees Pug Bull MastiffNote that, this time, we've wrapped the variables we're declaring in []instead, so the engine knows we're destructuring an Array. In this case, theorder does matter: the engine assigns the first element to medium, thesecond to small and the third to giant.The cool part is we can pick the parts of the Array that we want to assign!const dogs = ['Great Pyrenees', 'Pug', 'Bull Mastiff'];const [, small, giant] = dogs;console.log(small, giant); // LOG: Pug Bull MastiffThe initial comma tells the engine to skip the first element and start theassignments with the second element.Using Destructuring Assignment with StringsWe can also destructure with strings by using the String.prototype.split()method to turn the string into an array:const dogsName = 'Sir Woody BarksALot';const [title, firstName, lastName] = dogsName.split(' ');console.log(title, firstName, lastName); // LOG: Sir Woody BarksALotBecause the split() method returns an array, we can pick and choose just as wedid before:const dogsName = 'Sir Woody BarksALot';const [title, ,lastName] = dogsName.split(' ');console.log(title, lastName); // LOG: Sir BarksALotInstructionsTake a look in index.js. You'll see that we've given you several variablescontaining Strings, Arrays, and Objects. For this lab, you need to writeseveral destructuring assignments for each. Specific instructions are providedat the bottom of the index.js file. Let the test output guide you through theprocess.ConclusionDestructuring assignment is a fast, and efficient way to assign data tovariables from objects, arrays, and strings. It allows us to easily pick andchoose the pieces of data that we want to assign. With practice, you'll beproficient at it in no time.ResourcesDestructuring assignment"
86,86,airbnb/lottie-web,https://github.com/airbnb/lottie-web/blob/master/README.md,JavaScript,"Lottie for Web, Android, iOS, React Native, and WindowsLottie is a mobile library for Web,  and iOS that parses Adobe After Effects animations exported as json with Bodymovin and renders them natively on mobile!For the first time, designers can create and ship beautiful animations without an engineer painstakingly recreating it by hand. They say a picture is worth 1,000 words so here are 13,000:View documentation, FAQ, help, examples, and more at airbnb.io/lottiePlugin installationOption 1 (Recommended):Download it from from aescripts + aeplugins:https://aescripts.com/bodymovin/Option 2:Or get it from the adobe storehttps://exchange.adobe.com/creativecloud.details.12557.htmlCC 2014 and up.Other installation options:Option 3:download the ZIP from the repo.Extract content and get the .zxp file from '/build/extension'Use the ZXP installer from aescripts.com.Option 4:Close After EffectsExtract the zipped file on build/extension/bodymovin.zxp to the adobe CEP folder:WINDOWS:C:\\Program Files (x86)\\Common Files\\Adobe\\CEP\\extensions orC:\\<username>\\AppData\\Roaming\\Adobe\\CEP\\extensionsMAC:/Library/Application\\ Support/Adobe/CEP/extensions/bodymovin(you can open the terminal and type:$ cp -R YOURUNZIPEDFOLDERPATH/extension /Library/Application\\ Support/Adobe/CEP/extensions/bodymovinthen type:$ ls /Library/Application\\ Support/Adobe/CEP/extensions/bodymovinto make sure it was copied correctly type)Edit the registry key:WINDOWS:open the registry key HKEY_CURRENT_USER/Software/Adobe/CSXS.6 and add a key named PlayerDebugMode, of type String, and value 1.MAC:open the file ~/Library/Preferences/com.adobe.CSXS.6.plist and add a row with key PlayerDebugMode, of type String, and value 1.Option 5:Install the zxp manually following the instructions here:https://helpx.adobe.com/x-productkb/global/installingextensionsandaddons.htmlSkip directly to \""Install third-party extensions\""Option 6:Install with Homebrew-adobe:brew tap danielbayley/adobebrew cask install lottieAfter installingWindows: Go to Edit > Preferences > Scripting & Expressions... > and check on \""Allow Scripts to Write Files and Access Network\""Mac: Go to Adobe After Effects > Preferences > Scripting & Expressions... > and check on \""Allow Scripts to Write Files and Access Network\""Old VersionsWindows: Go to Edit > Preferences > General > and check on \""Allow Scripts to Write Files and Access Network\""Mac: Go to Adobe After Effects > Preferences > General > and check on \""Allow Scripts to Write Files and Access Network\""HTML player installation# with npmnpm install lottie-web# with bowerbower install bodymovinOr you can use the script file from here:https://cdnjs.com/libraries/bodymovinOr get it directly from the AE plugin clicking on Get PlayerDemoSee a basic implementation here. ExamplesSee examples on codepen. How it worksHere's a video tutorial explaining how to export a basic animation and load it in an html page After EffectsOpen your AE project and select the bodymovin extension on Window > Extensions > bodymovinA Panel will open with a Compositions tab listing all of your Project Compositions.Select the composition you want to export.Select a Destination Folder.Click Renderlook for the exported json file (if you had images or AI layers on your animation, there will be an images folder with the exported files)HTMLget the lottie.js file from the build/player/ folder for the latest buildinclude the .js file on your html (remember to gzip it for production)<script src=\""js/lottie.js\"" type=\""text/javascript\""></script>You can call lottie.loadAnimation() to start an animation.It takes an object as a unique param with:animationData: an Object with the exported animation data. Note: If your animation contains repeaters and you plan to call loadAnimation multiple times with the same animation, please deep clone the object before passing it (see #1159 and #2151.)path: the relative path to the animation object. (animationData and path are mutually exclusive)loop: true / false / numberautoplay: true / false it will start playing as soon as it is readyname: animation name for future referencerenderer: 'svg' / 'canvas' / 'html' to set the renderercontainer: the dom element on which to render the animationIt returns the animation instance you can control with play, pause, setSpeed, etc.lottie.loadAnimation({  container: element, // the dom element that will contain the animation  renderer: 'svg',  loop: true,  autoplay: true,  path: 'data.json' // the path to the animation json});Composition Settings:Check this wiki page for an explanation for each setting.https://github.com/airbnb/lottie-web/wiki/Composition-SettingsUsageAnimation instances have these main methods:playstoppausesetSpeed(speed)speed: 1 is normal speed.goToAndStop(value, isFrame)value: numeric value.isFrame: defines if first argument is a time based value or a frame based (default false).goToAndPlay(value, isFrame)value: numeric value.isFrame: defines if first argument is a time based value or a frame based (default false).setDirection(direction)direction: 1 is forward, -1 is reverse.playSegments(segments, forceFlag)segments: array. Can contain 2 numeric values that will be used as first and last frame of the animation. Or can contain a sequence of arrays each with 2 numeric values.forceFlag: boolean. If set to false, it will wait until the current segment is complete. If true, it will update values immediately.setSubframe(useSubFrames)useSubFrames:  If false, it will respect the original AE fps. If true, it will update on every requestAnimationFrame with intermediate values. Default is true.destroy()getDuration(inFrames)inFrames:  If true, returns duration in frames, if false, in seconds.Additional methods:updateDocumentData -- updates a text layer's dataMore InfoLottie has several global methods that will affect all animations:lottie.play() -- with 1 optional parameter name to target a specific animation lottie.stop() -- with 1 optional parameter name to target a specific animation lottie.goToAndStop(value, isFrame, name) -- Moves an animation with the specified name playback to the defined time. If name is omitted, moves all animation instances.lottie.setSpeed() -- first argument speed (1 is normal speed) -- with 1 optional parameter name to target a specific animation lottie.setDirection() -- first argument direction (1 is normal direction.) -- with 1 optional parameter name to target a specific animation lottie.searchAnimations() -- looks for elements with class \""lottie\"" or \""bodymovin\"" lottie.loadAnimation() -- Explained above. returns an animation instance to control individually. lottie.destroy(name) -- Destroys an animation with the specified name. If name is omitted, destroys all animation instances. The DOM element will be emptied.lottie.registerAnimation() -- you can register an element directly with registerAnimation. It must have the \""data-animation-path\"" attribute pointing at the data.json urllottie.getRegisteredAnimations() -- returns all animations instanceslottie.setQuality() -- default 'high', set 'high','medium','low', or a number > 1 to improve player performance. In some animations as low as 2 won't show any difference.lottie.setLocationHref() -- Sets the relative location from where svg elements with ids are referenced. It's useful when you experience mask issues in Safari.lottie.freeze() -- Freezes all playing animations or animations that will be loadedlottie.unfreeze() -- Unfreezes all animationslottie.inBrowser() -- true if the library is being run in a browserlottie.resize() -- Resizes all animation instancesEventsonCompleteonLoopCompleteonEnterFrameonSegmentStartyou can also use addEventListener with the following events:completeloopCompletedrawnFrameenterFramesegmentStartconfig_ready (when initial config is done)data_ready (when all parts of the animation have been loaded)data_failed (when part of the animation can not be loaded)loaded_images (when all image loads have either succeeded or errored)DOMLoaded (when elements have been added to the DOM)destroyOther loading optionsif you want to use an existing canvas to draw, you can pass an extra object: 'rendererSettings' with the following configuration:lottie.loadAnimation({  container: element, // the dom element  renderer: 'svg',  loop: true,  autoplay: true,  animationData: animationData, // the animation data  // ...or if your animation contains repeaters:  // animationData: cloneDeep(animationData), // e.g. lodash.clonedeep  rendererSettings: {    context: canvasContext, // the canvas context, only support \""2d\"" context    preserveAspectRatio: 'xMinYMin slice', // Supports the same options as the svg element's preserveAspectRatio property    title: 'Accessible Title', // Adds SVG title element for accessible animation title    description: 'Accessible description.', // Adds SVG desc element for accessible long description of animation    clearCanvas: false,    progressiveLoad: false, // Boolean, only svg renderer, loads dom elements when needed. Might speed up initialization for large number of elements.    hideOnTransparent: true, //Boolean, only svg renderer, hides elements when opacity reaches 0 (defaults to true)    className: 'some-css-class-name',    id: 'some-id',  }});Doing this you will have to handle the canvas clearing after each frameAnother way to load animations is adding specific attributes to a dom element.You have to include a div and set it's class to \""lottie\"".If you do it before page load, it will automatically search for all tags with the class \""lottie\"".Or you can call lottie.searchAnimations() after page load and it will search all elements with the class \""lottie\"".Add the data.json to a folder relative to the htmlCreate a div that will contain the animation.RequiredA class called \""lottie\""A \""data-animation-path\"" attribute with relative path to the data.jsonOptionalA \""data-anim-loop\"" attributeA \""data-name\"" attribute to specify a name to target play controls specificallyExample <div style=\""width:1067px;height:600px\""  class=\""lottie\"" data-animation-path=\""animation/\"" data-anim-loop=\""true\"" data-name=\""ninja\""></div>PreviewYou can preview or take an svg snapshot of the animation to use as poster. After you render your animation, you can take a snapshot of any frame in the animation and save it to your disk. I recommend to pass the svg through an svg optimizer like https://jakearchibald.github.io/svgomg/ and play around with their settings.RecommendationsFilesIf you have any images or AI layers that you haven't converted to shapes (I recommend that you convert them, so they get exported as vectors, right click each layer and do: \""Create shapes from Vector Layers\""), they will be saved to an images folder relative to the destination json folder.Beware not to overwrite an existing folder on that same location.PerformanceThis is real time rendering. Although it is pretty optimized, it always helps if you keep your AE project to what is necessaryMore optimizations are on their way, but try not to use huge shapes in AE only to mask a small part of it.Too many nodes will also affect performance.HelpIf you have any animations that don't work or want me to export them, don't hesitate to write. I'm really interested in seeing what kind of problems the plugin has. my email is hernantorrisi@gmail.comAE Feature SupportThe script supports precomps, shapes, solids, images, null objects, textsIt supports masks and inverted masks. Maybe other modes will come but it has a huge performance hit.It supports time remappingThe script supports shapes, rectangles, ellipses and stars.Expressions. Check the wiki page for more info.Not supported: image sequences, videos and audio are not supportedNo  negative layer stretching! No idea why, but stretching a layer messes with all the data.Developmentnpm install or bower install firstnpm startNotesIf you want to modify the parser or the player, there are some gulp commands that can simplify the tasklook at the great animations exported on codepen See examples on codepen.gzipping the animation jsons and the player have a huge reduction on the filesize. I recommend doing it if you use it for a project.IssuesFor missing mask in Safari browser, please call lottie.setLocationHref(locationHref) before animation is generated. It usually caused by usage of base tag in html. (see above for description of setLocationHref)ContributorsCode ContributorsThis project exists thanks to all the people who contribute. [Contribute].Financial ContributorsBecome a financial contributor and help us sustain our community. [Contribute]IndividualsOrganizationsSupport this project with your organization. Your logo will show up here with a link to your website. [Contribute]"
87,87,bloominstituteoftechnology/node-db3-project,https://github.com/bloominstituteoftechnology/node-db3-project/blob/main/README.md,JavaScript,"Node DB3 Project Starter CodeTask 1: Project Setup and SubmissionYour assignment page on Canvas should contain instructions for submitting this project. If you are still unsure, reach out to School Staff.Task 2: Project Minimum Viable ProductDatabaseOpen data/schemes.db3 using a graphical tool like SQLite Studio and study the data inside the schemes and steps tables. The data can be reset at any time by executing npm run seed.APIOpen api/schemes/scheme-router.js and study the specification for each endpoint. You do not need to make any changes to this file.[GET] /api/schemes[GET] /api/schemes/:scheme_id[GET] /api/schemes/:scheme_id/steps[POST] /api/schemes[POST] /api/schemes/:scheme_id/stepsMiddleware FunctionsWrite middleware functions in api/schemes/scheme-middleware.js following the instructions inside that file: checkSchemeId validateScheme validateStepDatabase FunctionsWrite db access functions in api/schemes/scheme-model.js following the instructions inside that file: find findById findSteps add addStepSchemes Schemafielddata typemetadatascheme_idunsigned integerprimary key, auto-increments, generated by dbscheme_namestringrequired, uniqueSteps Schemafielddata typemetadatastep_idunsigned integerprimary key, auto-increments, generated by dbscheme_idunsigned integerforeign key referencing scheme.scheme_id, requiredstep_numberunsigned integerrequiredinstructionsstringrequiredNotesRun tests locally executing npm test.You are welcome to create additional modules but do not move or rename existing files or folders.Do not change your package.json file except to install additional libraries or add additional scripts.In your solution it is essential that you follow best practices and produce clean and professional results.Schedule time to review, refine, and assess your work.Perform basic professional polishing including spell-checking and grammar-checking on your work.Task 3: Multi Table QueriesUse a graphical tool like SQLite Studio to open ./data/northwind.db3 and execute the following queries:(Write the queries inside ./queries.sql under the corresponding comment)Display the ProductName and CategoryName for all products in the database. Returns 77 records.Display the order Id and shipper CompanyName for all orders placed before August 9 2012. Returns 429 records.Display the name and quantity of the products ordered in order with Id 10251. Sort by ProductName. Returns 3 records.Display the OrderID, customer's Company Name and the employee's Last Name for every order. All columns should be labeled clearly. Returns 16,789 records.Task 4: Stretch ProblemsIn SQL Try Editor at W3Schools.com:Find the number of shipments by each shipper.Find the top 5 best performing employees measured in number of orders.Find the top 5 best performing employees measured in revenue.Find the category that brings in the least revenue.Find the customer country with the most orders.Find the shipper that moves the most cheese measured in units."
